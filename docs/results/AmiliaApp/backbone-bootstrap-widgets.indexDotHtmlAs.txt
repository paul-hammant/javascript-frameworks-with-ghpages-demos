b'<!DOCTYPE html>\n<html lang="en" xmlns="http://www.w3.org/1999/xhtml">\n <head>\n  <title>\n   Backbone Bootstrap Widgets\n  </title>\n  <meta charset="utf-8"/>\n  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>\n  <link href="favicon.ico" rel="shortcut icon" type="image/x-icon"/>\n  <script src="3rd/jquery.min.js" type="text/javascript">\n  </script>\n  <script src="3rd/bootstrap.min.js" type="text/javascript">\n  </script>\n  <link charset="utf-8" href="3rd/bootstrap.min.css" rel="stylesheet" type="text/css"/>\n  <script src="3rd/bootstrap-datepicker.js" type="text/javascript">\n  </script>\n  <link charset="utf-8" href="3rd/bootstrap-datepicker.css" rel="stylesheet" type="text/css"/>\n  <script src="3rd/underscore.js" type="text/javascript">\n  </script>\n  <script src="3rd/backbone.js" type="text/javascript">\n  </script>\n  <script src="src/backbone-form.js" type="text/javascript">\n  </script>\n  <script src="src/backbone-modal.js" type="text/javascript">\n  </script>\n  <script src="src/backbone-shiftable-collection.js" type="text/javascript">\n  </script>\n  <link charset="utf-8" href="src/backbone-shiftable-collection.css" rel="stylesheet" type="text/css"/>\n  <script src="example.js" type="text/javascript">\n  </script>\n  <style>\n   header.navbar-inverse {border-radius: 0;}\n      footer.navbar-default {border-radius: 0; margin-bottom: 0;}\n      .shiftable-collection-item {padding: 10px; text-align: center; height: 160px; border: 1px solid #999; margin-right: 10px;}\n      .shiftable-collection-item:hover, .shiftable-collection-item.selected {background-color: #ddd;}\n      .shiftable-collection img {max-width: 100%; max-height: 100px;}\n  </style>\n </head>\n <body>\n  <header class="navbar navbar-inverse">\n   <div class="navbar-header">\n    <button class="navbar-toggle" data-target="#navbar-collapse" data-toggle="collapse" type="button">\n     <span class="sr-only">\n      Toggle navigation\n     </span>\n     <span class="icon-bar">\n     </span>\n     <span class="icon-bar">\n     </span>\n     <span class="icon-bar">\n     </span>\n    </button>\n    <a class="navbar-brand" href="#">\n     Backbone Bootstrap Widgets\n    </a>\n   </div>\n   <div class="collapse navbar-collapse" id="navbar-collapse">\n    <ul class="nav navbar-nav">\n     <li>\n      <a href="#ModalView">\n       ModalView\n      </a>\n     </li>\n     <li>\n      <a href="#ShiftableCollectionView">\n       ShiftableCollectionView\n      </a>\n     </li>\n     <li>\n      <a href="#FormView">\n       FormView\n      </a>\n     </li>\n    </ul>\n   </div>\n  </header>\n  <div class="container">\n   <div class="row">\n    <div class="col-md-12">\n     <p>\n      Series of widgets implemented as\n      <a href="http://backbonejs.org" target="_blank">\n       Backbone\n      </a>\n      Views wrapping\n      <a href="http://getbootstrap.com/javascript" target="_blank">\n       Bootstrap plugins\n      </a>\n      .\n     </p>\n     <p>\n     </p>\n     <ul>\n      <li>\n       <a href="#ModalView">\n        ModalView\n       </a>\n       creates a\n       <a href="http://backbonejs.org/#View" target="_blank">\n        Backbone View\n       </a>\n       wrapping a\n       <a href="http://getbootstrap.com/javascript/#modals" target="_blank">\n        Bootstrap modal dialog\n       </a>\n       . You can fill in the moal body in the\n       <code>\n        render\n       </code>\n       function.\n      </li>\n      <li>\n       <a href="#ShiftableCollectionView">\n        ShiftableCollectionView\n       </a>\n       creates a\n       <a href="http://backbonejs.org/#View" target="_blank">\n        Backbone View\n       </a>\n       wrapping a\n       <a href="http://backbonejs.org/#Collection" target="_blank">\n        Backbone Collection\n       </a>\n       . Allows you to shift models left and right to reorder, and to remove models.\n      </li>\n      <li>\n       <a href="#FormView">\n        FormView\n       </a>\n       creates a\n       <a href="http://backbonejs.org/#View" target="_blank">\n        Backbone View\n       </a>\n       using\n       <a href="http://getbootstrap.com/css/#forms" target="_blank">\n        Bootstrap form\n       </a>\n       markup and styling. Implements bindings to update the\n       <a href="http://backbonejs.org/#Model" target="_blank">\n        Backbone Model\n       </a>\n       based on DOM changes made by the user.\n       <span class="label label-danger">\n        Deprecated\n       </span>\n       Replaced by\n       <a href="http://amiliaapp.github.io/backform/">\n        Backform\n       </a>\n      </li>\n     </ul>\n    </div>\n   </div>\n   <!-- Backbone Modal View -->\n   <div class="row">\n    <div class="col-md-12">\n     <h1 id="ModalView">\n      Backbone.ModalView\n     </h1>\n     <p>\n      A ModalView is a Backbone View which shows a Bootstrap modal dialog upon calling\n      <code>\n       render\n      </code>\n      .\n            After\n      <code>\n       render\n      </code>\n      , a\n      <code>\n       postRender\n      </code>\n      function is always called. You can pass\n      <code>\n       postRender\n      </code>\n      as option in the constructor to fill in the body.\n     </p>\n     <p>\n      Use Backbone View\n      <code>\n       events\n      </code>\n      to capture Bootstrap events and put callbacks on buttons. For example:\n     </p>\n     <pre>events: {\n  "click .modal-footer a": function(e) {console.log("Button " + $(e.target).text() + "cliked!");},\n  "hidden.bs.modal": function() {console.log("Bootstrap modal is hidden!")}\n}\n</pre>\n     <p>\n     </p>\n     <p>\n      Backbone ModalView supports these options:\n     </p>\n     <ul>\n      <li>\n       <strong>\n        title\n       </strong>\n       : Optional. Underscore template or plain HTML string to put in the modal header. Defaults to &lt;h3&gt;Info&lt;/h3&gt;.\n      </li>\n      <li>\n       <strong>\n        body\n       </strong>\n       : Optional. Underscore template or plain HTML string to put in the modal body. Defaults to an empty string.\n      </li>\n      <li>\n       <strong>\n        model\n       </strong>\n       : Optional. Backbone.Model to be passed to the title and body templates. By default it is undefined.\n      </li>\n      <li>\n       <strong>\n        buttons\n       </strong>\n       : Optional. List of buttons to show. Defaults to a Close button. A button is an anchor tag with Bootstrap class btn. Each button has these options:\n       <ul>\n        <li>\n         <strong>\n          className\n         </strong>\n         : Optional. CSS classes to add. Defaults to empty string.\n        </li>\n        <li>\n         <strong>\n          href\n         </strong>\n         : Optional. Anchor tag href. Defaults to #.\n        </li>\n        <li>\n         <strong>\n          label\n         </strong>\n         : Optional. Button text. Defaults to Close.\n        </li>\n        <li>\n         <strong>\n          close\n         </strong>\n         : Optional. Boolean indicating whether to close the dialog after the button is pressed. Defaults to false.\n        </li>\n       </ul>\n      </li>\n      <li>\n       <strong>\n        backdrop\n       </strong>\n       : Optional. Specify if backdrop is existing. backdrop option can be boolean or \'static\'. Defaults true. \'static\' option avoid closing the modal on the click on the backdrop.\n      </li>\n     </ul>\n    </div>\n   </div>\n   <div class="row">\n    <div class="col-md-12">\n     <h2>\n      Examples\n     </h2>\n     <button class="btn btn-primary" id="btn-1">\n      Basic modal dialog\n     </button>\n     <button class="btn btn-primary" id="btn-2">\n      Modal with postRender\n     </button>\n     <button class="btn btn-primary" id="btn-3">\n      Subclassed modal dialog\n     </button>\n     <button class="btn btn-primary" id="btn-4">\n      Static backdrop\n     </button>\n     <button class="btn btn-primary" id="btn-5">\n      Body and Title as templates\n     </button>\n    </div>\n   </div>\n   <div class="row">\n    <div class="col-md-12">\n     <h2>\n      Code\n     </h2>\n     <pre>// Basic modal dialog\n$("#btn-1").click(function(e) {\n  var modal = new Backbone.ModalView({\n    body: "Hello World!"\n  });\n  modal.render();\n});\n\n// Modal with postRender\n$("#btn-2").click(function(e) {\n  new Backbone.ModalView({\n    postRender: function() {\n      this.$body.append("&lt;h1&gt;Hello World!&lt;/h1&gt;");\n    }\n  }).render();\n});\n\n// Modal dialog with custom buttons, events and postRender function\nvar MyModal = Backbone.ModalView.extend({\n  title: "&lt;h3&gt;Modal with custom buttons&lt;/h3&gt;",\n  buttons: [{\n    className: "btn-primary ok",\n    label: "Ok"\n  }, {\n    className: "btn-default cancel",\n    label: "Cancel",\n    close: true\n  }],\n  events: {\n    "click .modal-footer a.ok": "onOk",\n    "click .modal-footer a.cancel": "onCancel",\n    "hidden.bs.modal": "onHidden"\n  },\n  postRender: function() {\n    var $h4 = $("&lt;h4&gt;").text("Events"),\n        $p = $("&lt;p&gt;").text("Use Backbone.View &lt;code&gt;events&lt;/code&gt; to bind buttons. Click on the buttons and look at the console.")\n    this.$body.append($h4).append($p);\n    return this;\n  },\n  onOk: function(e) {\n    e.preventDefault();\n    console.log("Ok clicked");\n  },\n  onCancel: function(e) {\n    console.log("Cancel clicked");\n  },\n  onHidden: function(e) {\n    console.log("Modal hidden");\n  }\n});\n$("#btn-3").click(function(e) {\n  new MyModal().render();\n});\n\n// Modal with static backdrop\n// Work with Bootstrap 2.3 and 3\n$("#btn-4").click(function(e) {\n  var modal = new Backbone.ModalView({\n    title: "Static backdrop",\n    body: "Hello World!",\n    backdrop: \'static\'\n  });\n  modal.render();\n});\n\n$("#btn-5").click(function(e) {\n  var modal = new Backbone.ModalView({\n    model: new Backbone.Model({title: "Hello", name: "Example"}),\n    title: "&lt;h3&gt;&lt;%=title%&gt;&lt;/h3&gt;",\n    body: "Hello, &lt;%=name%&gt;!",\n  });\n  modal.render();\n});\n\n</pre>\n    </div>\n   </div>\n   <div class="row">\n    <div class="col-md-12">\n     <h2>\n      Bootstrap 2.3\n     </h2>\n     <p>\n      Backbone ModalView is built for Bootstrap 3.\n            To use Backbone ModalView with Bootstrap 2.3, you must modify the HTML markups.\n            See\n      <a href="http://getbootstrap.com/2.3.2/javascript.html#modals">\n       Bootstrap 2.3 modals\n      </a>\n      for more information.\n            Use this code.\n     </p>\n     <pre>Backbone.ModalView.prototype.template = _.template([\n  \'&lt;div class="modal-header"&gt;\',\n  \'  &lt;a type="button" class="close" aria-hidden="true"&gt;\xc3\x97&lt;/a&gt;\',\n  \'  &lt;%=title%&gt;\',\n  \'&lt;/div&gt;\',\n  \'&lt;div class="modal-body"&gt;&lt;%=body%&gt;&lt;/div&gt;\',\n  \'&lt;div class="modal-footer"&gt;&lt;/div&gt;\'\n].join("\\n"));\nBackbone.ModalView.prototype.className = "modal hide backbone-modal";\n</pre>\n    </div>\n   </div>\n   <br/>\n   <!-- Backbone Shiftable Collection View -->\n   <div class="row">\n    <div class="col-md-12">\n     <h1 id="ShiftableCollectionView">\n      Backbone.ShiftableCollectionView\n     </h1>\n     <p>\n      A ShiftableCollectionView displays a collection of models. Adds buttons to shift models left and right (or top and bottom), and to remove a model. The view consists of a collection element with class\n      <code>\n       shiftable-collection\n      </code>\n      , containing item elements with class\n      <code>\n       shiftable-collection-item\n      </code>\n      . To use, subclass and define your own template see example below).\n     </p>\n     <p>\n      Included are optional styling files (CSS and LESS) to properly position the action buttons. These are:\n     </p>\n     <ul>\n      <li>\n       <strong>\n        CSS\n       </strong>\n       :\n       <code>\n        src/backbone-shiftable-collection.css\n       </code>\n      </li>\n      <li>\n       <strong>\n        LESS\n       </strong>\n       :\n       <code>\n        src/backbone-shiftable-collection.less\n       </code>\n      </li>\n     </ul>\n     <h2>\n      Example\n     </h2>\n     <div class="shiftable-collection row" id="shiftable-collection-example">\n      <div class="col-md-2 shiftable-collection-item">\n       <img alt="Mario" src="img/mario.png"/>\n       <br/>\n       <span>\n        Mario\n       </span>\n       <a class="action delete" href="#">\n        \xc3\x97\n       </a>\n       <a class="action move-left" href="#">\n        \xe2\x86\x90\n       </a>\n       <a class="action move-right" href="#">\n        \xe2\x86\x92\n       </a>\n      </div>\n      <div class="col-md-2 shiftable-collection-item">\n       <img alt="Luigi" src="img/luigi.png"/>\n       <br/>\n       <span>\n        Luigi\n       </span>\n       <a class="action delete" href="#">\n        \xc3\x97\n       </a>\n       <a class="action move-left" href="#">\n        \xe2\x86\x90\n       </a>\n       <a class="action move-right" href="#">\n        \xe2\x86\x92\n       </a>\n      </div>\n      <div class="col-md-2 shiftable-collection-item">\n       <img alt="Princess" src="img/princess.png"/>\n       <br/>\n       <span>\n        Princess\n       </span>\n       <a class="action delete" href="#">\n        \xc3\x97\n       </a>\n       <a class="action move-left" href="#">\n        \xe2\x86\x90\n       </a>\n       <a class="action move-right" href="#">\n        \xe2\x86\x92\n       </a>\n      </div>\n      <div class="col-md-2 shiftable-collection-item">\n       <img alt="Yoshi" src="img/yoshi.png"/>\n       <br/>\n       <span>\n        Yoshi\n       </span>\n       <a class="action delete" href="#">\n        \xc3\x97\n       </a>\n       <a class="action move-left" href="#">\n        \xe2\x86\x90\n       </a>\n       <a class="action move-right" href="#">\n        \xe2\x86\x92\n       </a>\n      </div>\n     </div>\n     <div class="row">\n      <div class="col-md-6">\n       <h2>\n        Code\n       </h2>\n       <pre>var ImageGallery = Backbone.ShiftableCollectionView.extend({\n  template: _.template([\n    \'&lt;div class="col-md-2 shiftable-collection-item"&gt;\',\n    \'  &lt;img src="&lt;%=image%&gt;" alt="&lt;%=name%&gt;" /&gt;\',\n    \'  &lt;br/&gt;\',\n    \'  &lt;span&gt;&lt;%=name%&gt;&lt;/span&gt;\',\n    \'  &lt;a href="#" class="action delete"&gt;\xc3\x97&lt;/a&gt;\',\n    \'  &lt;a href="#" class="action move-left"&gt;\xe2\x86\x90&lt;/a&gt;\',\n    \'  &lt;a href="#" class="action move-right"&gt;\xe2\x86\x92&lt;/a&gt;\',\n    \'&lt;/div&gt;\'\n  ].join("\\n"))\n});\nvar images = new Backbone.Collection([\n  {name: "Mario", image: "img/mario.png"},\n  {name: "Luigi", image: "img/luigi.png"},\n  {name: "Princess", image: "img/princess.png"},\n  {name: "Yoshi", image: "img/yoshi.png"}\n]);\nvar imageGallery = new ImageGallery({\n  collection: images,\n  el: $("#shiftable-collection-example")\n}).render();\n</pre>\n      </div>\n      <div class="col-md-6">\n       <h2>\n        CSS\n       </h2>\n       <pre>.shiftable-collection-item {\n  padding: 10px;\n  text-align: center;\n  height: 160px;\n  border: 1px solid #999;\n  margin-right: 10px;\n}\n.shiftable-collection-item:hover, .shiftable-collection-item.selected {\n  background-color: #ddd;\n}\n.shiftable-collection img {\n  max-width: 100%;\n  max-height: 100px;\n}\n</pre>\n      </div>\n     </div>\n    </div>\n    <!-- Backbone Form View -->\n    <div class="row">\n     <div class="col-md-12">\n      <h1 id="FormView">\n       Backbone.FormView\n      </h1>\n      <p>\n       <span class="label label-danger">\n        Deprecated\n       </span>\n       Backbone.FormView was replaced by\n       <a href="http://amiliaapp.github.io/backform/">\n        Backform\n       </a>\n       .\n      </p>\n      <p>\n       A FormView is a Backbone View which shows a form to edit the bound Backbone Model.\n            Changes made by the user are directly applied back to the Backbone Model.\n            FormView even supports nested objects.\n      </p>\n      <p>\n       The form markup is that of\n       <a href="http://getbootstrap.com/css/#forms" target="_blank">\n        Bootstrap form\n       </a>\n       .\n            The form uses the horizontal layout (class\n       <code>\n        form-horizontal\n       </code>\n       ).\n            Each model attribute is represented by a\n       <code>\n        form-group\n       </code>\n       DIV (\n       <code>\n        control-group\n       </code>\n       in Bootstrap 2.3).\n            Control types currently supported are text INPUT and SELECT.\n      </p>\n      <p>\n       FormView takes these options:\n      </p>\n      <ul>\n       <li>\n        <strong>\n         model\n        </strong>\n        : The model containing the form data, one per attribute.\n       </li>\n       <li>\n        <strong>\n         schema\n        </strong>\n        : Schema defining which attributes to edit, and what controls to use. See below.\n       </li>\n       <li>\n        <strong>\n         field\n        </strong>\n        : Optional. If set, will override default field options (see below).\n       </li>\n       <li>\n        <strong>\n         errorModel\n        </strong>\n        : Optional. If set, will be used to add inline error help blocks besides the erroneous form control.\n       </li>\n      </ul>\n      In addition, you can pass any other option supported by Backbone.View.\n      <p>\n      </p>\n      <p>\n       Option\n       <code>\n        schema\n       </code>\n       defines which model attributes will be edited. The schema is a list of field objects.\n            A field object consists of:\n      </p>\n      <ul>\n       <li>\n        <strong>\n         name\n        </strong>\n        : Model attribute to edit.\n       </li>\n       <li>\n        <strong>\n         nested\n        </strong>\n        : Optional. If the attribute is itslef an object, nested attribute name.\n       </li>\n       <li>\n        <strong>\n         label\n        </strong>\n        : Label of field.\n       </li>\n       <li>\n        <strong>\n         control\n        </strong>\n        : Type of input control. Supported controls are:\n        <ul>\n         <li>\n          <strong>\n           input\n          </strong>\n          : Text INPUT.\n         </li>\n         <li>\n          <strong>\n           booleanInput\n          </strong>\n          : Single checkbox INPUT for Boolean fields. When checked, will set model attribute to true, false otherwise.\n         </li>\n         <li>\n          <strong>\n           uneditableInput\n          </strong>\n          : An uneditable input.\n         </li>\n         <li>\n          <strong>\n           select\n          </strong>\n          : SELECT. Set\n          <strong>\n           options\n          </strong>\n          to specific OPTION elements.\n         </li>\n         <li>\n          <strong>\n           radioInput\n          </strong>\n          : INPUT[TYPE=RADIO]. Set\n          <strong>\n           options\n          </strong>\n          to specific input elements.\n         </li>\n         <li>\n          <strong>\n           spacer\n          </strong>\n          : An empty space.\n         </li>\n         <li>\n          <strong>\n           textarea\n          </strong>\n          : TEXTAREA.\n         </li>\n         <li>\n          <strong>\n           datepicker\n          </strong>\n          : INPUT bound with a\n          <a href="http://www.eyecon.ro/bootstrap-datepicker/?utm_source=twitterfeed&amp;utm_medium=twitter" target="_blank">\n           Bootstrap Datepicker\n          </a>\n          . Set\n          <strong>\n           options\n          </strong>\n          to pass datepicker options.\n         </li>\n        </ul>\n       </li>\n       <li>\n        <strong>\n         type\n        </strong>\n        : Optional. Input type. Defaults to\n        <code>\n         text\n        </code>\n        .\n       </li>\n       <li>\n        <strong>\n         disabled\n        </strong>\n        : Optional. Set to true to disabled the input or select.\n       </li>\n       <li>\n        <strong>\n         options\n        </strong>\n        : Optional. For controls\n        <strong>\n         select\n        </strong>\n        and\n        <strong>\n         radioInput\n        </strong>\n        , list of option objects in the form:\n        <code>\n         {label:&lt;label&gt;, value:&lt;value&gt;}\n        </code>\n        .\n       </li>\n       <li>\n        <strong>\n         placeholder\n        </strong>\n        : Optional. Placeholder for an input control.\n       </li>\n       <li>\n        <strong>\n         className\n        </strong>\n        : Optional. Class to set on the\n        <code>\n         form-group\n        </code>\n        DIV.\n       </li>\n       <li>\n        <strong>\n         labelClassName\n        </strong>\n        : Optional. Class to control the width of labels. Defaults to\n        <code>\n         col-sm-4\n        </code>\n        .\n       </li>\n       <li>\n        <strong>\n         controlsClassName\n        </strong>\n        : Optional. Class to control the width of form controls. Defaults to\n        <code>\n         col-sm-8\n        </code>\n        .\n       </li>\n       <li>\n        <strong>\n         controlClassName\n        </strong>\n        : Optional. Class to add to the input or select element.\n       </li>\n      </ul>\n      <p>\n      </p>\n      <h2>\n       Size of form\n      </h2>\n      <p>\n       Use Bootstrap column classes to control the size of the form labels and controls.\n            By default labels use\n       <code>\n        col-sm-4\n       </code>\n       and controls\n       <code>\n        col-sm-8\n       </code>\n       .\n            You can override this when you define the schma set setting\n       <code>\n        labelClassName\n       </code>\n       and\n       <code>\n        controlsClassName\n       </code>\n       .\n      </p>\n      <p>\n       You can also set these globally by extending the default field definition. For example:\n      </p>\n      <pre>var form = new Backbone.FormView({\n  field: {\n    labelClassName: "col-sm-2",\n    controlsClassName: "col-sm-4"\n  },\n  ...\n})\n</pre>\n      <p>\n      </p>\n      <h2>\n       Example\n      </h2>\n      <p>\n       Form to edit a person. The address is a nested object. Change to see the Backbone model updated (right).\n      </p>\n     </div>\n    </div>\n    <div class="row">\n     <div class="col-md-6">\n      <form class="form-horizontal" id="form">\n       <div class="form-group ">\n        <label class="control-label col-sm-4">\n         Id\n        </label>\n        <div class="col-sm-8">\n         <span class="form-control uneditable-input ">\n          101\n         </span>\n        </div>\n       </div>\n       <div class="form-group ">\n        <label class="control-label col-sm-4">\n         Salutation\n        </label>\n        <div class="checkbox col-sm-8">\n         <label class="checkbox-inline">\n          <input checked="checked" class="" data-nested="" name="salutation" type="radio" value="Mr"/>\n          Mr.\n         </label>\n         <label class="checkbox-inline">\n          <input class="" data-nested="" name="salutation" type="radio" value="Mrs"/>\n          Mrs.\n         </label>\n         <label class="checkbox-inline">\n          <input class="" data-nested="" name="salutation" type="radio" value="Mme"/>\n          Mme.\n         </label>\n        </div>\n       </div>\n       <div class="form-group ">\n        <label class="control-label col-sm-4">\n         First Name\n        </label>\n        <div class="col-sm-8">\n         <input class="form-control " data-nested="" name="firstName" placeholder="" type="text" value="Andre"/>\n        </div>\n       </div>\n       <div class="form-group ">\n        <label class="control-label col-sm-4">\n         Last Name\n        </label>\n        <div class="col-sm-8">\n         <input class="form-control " data-nested="" name="lastName" placeholder="" type="text" value="Jones"/>\n        </div>\n       </div>\n       <div class="form-group ">\n        <label class="control-label col-sm-4">\n        </label>\n        <div class="col-sm-8">\n         <div class="checkbox">\n          <label>\n           <input checked="checked" class="" data-nested="" name="adult" type="checkbox" value="true"/>\n           Adult\n          </label>\n         </div>\n        </div>\n       </div>\n       <div class="form-group ">\n        <label class="control-label col-sm-4">\n        </label>\n        <div class="col-sm-8">\n        </div>\n       </div>\n       <div class="form-group ">\n        <label class="control-label col-sm-4">\n         Address1\n        </label>\n        <div class="col-sm-8">\n         <input class="form-control " data-nested="address1" name="address" placeholder="" type="text" value="1751 rue Richardson"/>\n        </div>\n       </div>\n       <div class="form-group ">\n        <label class="control-label col-sm-4">\n         Address2\n        </label>\n        <div class="col-sm-8">\n         <input class="form-control " data-nested="address2" name="address" placeholder="" type="text" value="Suite 3.105"/>\n        </div>\n       </div>\n       <div class="form-group ">\n        <label class="control-label col-sm-4">\n         City\n        </label>\n        <div class="col-sm-8">\n         <input class="form-control " data-nested="city" name="address" placeholder="" type="text" value="Montr\xc3\xa9al"/>\n        </div>\n       </div>\n       <div class="form-group ">\n        <label class="control-label col-sm-4">\n         Postal Code\n        </label>\n        <div class="col-sm-8">\n         <input class="form-control " data-nested="postalCode" name="address" placeholder="" type="text" value="H3K 1G6"/>\n        </div>\n       </div>\n       <div class="form-group ">\n        <label class="control-label col-sm-4">\n         Province\n        </label>\n        <div class="col-sm-8">\n         <select class="form-control " data-nested="province" name="address" placeholder="" value="QC">\n          <option value="AB">\n           Alberta\n          </option>\n          <option value="BC">\n           British Columbia\n          </option>\n          <option value="MB">\n           Manitoba\n          </option>\n          <option value="NB">\n           New Brunswick\n          </option>\n          <option value="NL">\n           Newfoundland and Labrador\n          </option>\n          <option value="NT">\n           Northwest Territories\n          </option>\n          <option value="NS">\n           Nova Scotia\n          </option>\n          <option value="NU">\n           Nunavut\n          </option>\n          <option value="ON">\n           Ontario\n          </option>\n          <option value="PE">\n           Prince Edward Island\n          </option>\n          <option selected="selected" value="QC">\n           Qu\xc3\xa9bec\n          </option>\n          <option value="SK">\n           Saskatchewan\n          </option>\n          <option value="YT">\n           Yukon\n          </option>\n         </select>\n        </div>\n       </div>\n       <div class="form-group ">\n        <label class="control-label col-sm-4">\n         Date of birth\n        </label>\n        <div class="col-sm-8">\n         <input class="form-control datepicker " data-nested="" name="dateOfBirth" placeholder="" type="text" value="1990-10-10"/>\n        </div>\n       </div>\n       <div class="form-group ">\n        <label class="control-label col-sm-4">\n         Life goal\n        </label>\n        <div class="col-sm-8">\n         <textarea class="form-control " data-nested="" name="lifeGoal" placeholder="">To become the best basketball player there is. I want to dunk!</textarea>\n        </div>\n       </div>\n      </form>\n     </div>\n     <div class="col-md-6">\n      <pre id="object">{\n  "id": 101,\n  "salutation": "Mr",\n  "firstName": "Andre",\n  "lastName": "Jones",\n  "adult": true,\n  "address": {\n    "address1": "1751 rue Richardson",\n    "address2": "Suite 3.105",\n    "city": "Montr\xc3\xa9al",\n    "postalCode": "H3K 1G6",\n    "province": "QC"\n  },\n  "dateOfBirth": "1990-10-10",\n  "lifeGoal": "To become the best basketball player there is. I want to dunk!"\n}</pre>\n     </div>\n    </div>\n    <div class="row">\n     <div class="col-md-12">\n      <h2>\n       Code\n      </h2>\n      <pre>var person = {\n  id: 101,\n  salutation: "Mr",\n  firstName: "Andre",\n  lastName: "Jones",\n  adult: true,\n  address: {\n    address1: "1751 rue Richardson",\n    address2: "Suite 3.105",\n    city: "Montr\xc3\xa9al",\n    postalCode: "H3K 1G6",\n    province: "QC"\n  }\n};\nvar person = new Backbone.Model(person);\nvar form = new Backbone.FormView({\n  el: "#form",\n  model: person,\n  schema: [\n  {name: "id", label: "Id", control: "uneditableInput"},\n  {name: "firstName", label: "First Name", control: "input"},\n  {name: "lastName", label: "Last Name", control: "input"},\n  {name: "adult", label: "Adult", control: "booleanInput"},\n  {\n    name: "salutation",\n    label: "Salutation",\n    control: "radioInput",\n    options: [\n      {label: "Mr.", value: "Mr"},\n      {label: "Mrs.", value: "Mrs"},\n      {label: "Mme.", value: "Mme"}\n    ]\n  },\n  {control: "spacer"},\n  {name: "address", nested: "address1", label: "Address1", control: "input"},\n  {name: "address", nested: "address2", label: "Address2", control: "input"},\n  {name: "address", nested: "city", label: "City", control: "input"},\n  {name: "address", nested: "postalCode", label: "Postal Code", control: "input"},\n  {\n    name: "address",\n    nested: "province",\n    label: "Province",\n    control: "select",\n    options: [\n      {label: "Alberta", value: "AB"},\n      {label: "British Columbia", value: "BC"},\n      {label: "Manitoba", value: "MB"},\n      {label: "New Brunswick", value: "NB"},\n      {label: "Newfoundland and Labrador", value: "NL"},\n      {label: "Northwest Territories", value: "NT"},\n      {label: "Nova Scotia", value: "NS"},\n      {label: "Nunavut", value: "NU"},\n      {label: "Ontario", value: "ON"},\n      {label: "Prince Edward Island", value: "PE"},\n      {label: "Qu\xc3\xa9bec", value: "QC"},\n      {label: "Saskatchewan", value: "SK"},\n      {label: "Yukon", value: "YT"}\n    ]\n  },\n  {name: "lifeGoal", label: "Life goal", control: "textarea"}]\n});\nform.render();\n\nfunction updateObject() {\n  $("#object").text(JSON.stringify(person.toJSON(), null, 2));\n}\nperson.on("change", updateObject);\nupdateObject();\n</pre>\n     </div>\n    </div>\n    <div class="row">\n     <div class="col-md-12">\n      <h2>\n       Form Validation\n      </h2>\n      <p>\n       Backbone.FormView accepts an optional\n       <code>\n        errorModel\n       </code>\n       . It contains the same attributes as the original\n       <code>\n        model\n       </code>\n       but with error messages as values. Backbone.FormView will automatically listen for changes on the\n       <code>\n        errorModel\n       </code>\n       to display the errors. You need only set the invalid attribute with an appropriate error message and for it to be displayed.\n      </p>\n      <p>\n       This is useful for back-end validation. In the case of an error, your back-end need only return a hash of attributes and their errors to be set on the\n       <code>\n        errorModel\n       </code>\n       to inform the user what to correct.\n      </p>\n     </div>\n    </div>\n    <div class="row">\n     <div class="col-md-12">\n      <form class="form-horizontal" id="form2">\n       <div class="form-group">\n        <label class="control-label col-sm-4">\n         Choose a number between 10 and 20. Press Enter to submit the form.\n        </label>\n        <div class="col-sm-8">\n         <input class="form-control " data-nested="" name="a" placeholder="" type="text" value="101"/>\n        </div>\n       </div>\n      </form>\n     </div>\n    </div>\n    <div class="row">\n     <div class="col-md-12">\n      <h2>\n       Code\n      </h2>\n      <pre>var model = new Backbone.Model({a: 101}),\n    errorModel = new Backbone.Model();\n\nvar form2 = new Backbone.FormView({\n  el: "#form2",\n  model: model,\n  errorModel: errorModel,\n  schema: [{name: "a", label: "Choose a number between 10 and 20. Press Enter to submit the form.", control: "input"}]\n});\nform2.render()\n\n$("#form2").on("submit", function(e) {\n  e.preventDefault();\n\n  errorModel.clear();\n\n  var number = parseFloat(model.get("a"), 10);\n  if (isNaN(number))\n    errorModel.set({a: "Not a number!"});\n  else if (number &lt;= 10 || number &gt;= 20)\n    errorModel.set({a: "Must be between 10 and 20"})\n\n  return false;\n});\n</pre>\n     </div>\n    </div>\n    <div class="row">\n     <div class="col-md-12">\n      <h2>\n       Bootstrap 2.3\n      </h2>\n      <p>\n       Backbone FormView is built for Bootstrap 3.\n            To use Backbone FormView with Bootstrap 2.3, you must modify the HTML markups.\n            In addition, we declare a new field option\n       <code>\n        inputSize\n       </code>\n       to control the size of controls.\n            It takes possible values\n       <code>\n        min\n       </code>\n       ,\n       <code>\n        small\n       </code>\n       ,\n       <code>\n        medium\n       </code>\n       ,\n       <code>\n        large\n       </code>\n       ,\n       <code>\n        xlarge\n       </code>\n       or\n       <code>\n        xxlarge\n       </code>\n       . Defaults to\n       <code>\n        xlarge\n       </code>\n       .\n            See\n       <a href="http://getbootstrap.com/2.3.2/base-css.html#forms">\n        Bootstrap 2.3 forms\n       </a>\n       for more information.\n            Use this code.\n      </p>\n      <pre>Backbone.FormView.prototype.templates = {\n  input: _.template([\n    \'&lt;div class="control-group &lt;%=className%&gt;"&gt;\',\n    \'  &lt;label class="control-label &lt;%=labelClassName%&gt;"&gt;&lt;%-label%&gt;&lt;/label&gt;\',\n    \'  &lt;div class="controls &lt;%=controlsClassName%&gt;"&gt;\',\n    \'    &lt;input type="&lt;%=type%&gt;" class="input-&lt;%=inputSize%&gt; &lt;%=controlClassName%&gt;" name="&lt;%=name%&gt;" data-nested="&lt;%=nested%&gt;" value="&lt;%-value%&gt;" placeholder="&lt;%-placeholder%&gt;" /&gt;\',\n    \'  &lt;/div&gt;\',\n    \'&lt;/div&gt;\'\n  ].join("\\n")),\n  booleanInput: _.template([\n    \'&lt;div class="control-group &lt;%=className%&gt;"&gt;\',\n    \'  &lt;label class="control-label &lt;%=labelClassName%&gt;"&gt;&lt;/label&gt;\',\n    \'  &lt;div class="controls &lt;%=controlsClassName%&gt;"&gt;\',\n    \'    &lt;label class="checkbox inline"&gt;\',\n    \'      &lt;input type="checkbox" class="input-&lt;%=inputSize%&gt; &lt;%=controlClassName%&gt;" name="&lt;%=name%&gt;" data-nested="&lt;%=nested%&gt;" value="&lt;%-value%&gt;" /&gt; &lt;%-label%&gt;\',\n    \'    &lt;/label&gt;\',\n    \'  &lt;/div&gt;\',\n    \'&lt;/div&gt;\'\n  ].join("\\n")),\n  uneditableInput: _.template([\n    \'&lt;div class="control-group &lt;%=className%&gt;"&gt;\',\n    \'  &lt;label class="control-label &lt;%=labelClassName%&gt;"&gt;&lt;%-label%&gt;&lt;/label&gt;\',\n    \'  &lt;div class="controls &lt;%=controlsClassName%&gt;"&gt;\',\n    \'    &lt;span class="uneditable-input input-&lt;%=inputSize%&gt; &lt;%=controlClassName%&gt;"&gt;&lt;%-value%&gt;&lt;/span&gt;\',\n    \'  &lt;/div&gt;\',\n    \'&lt;/div&gt;\'\n  ].join("\\n")),\n  spacer: _.template([\n    \'&lt;div class="control-group &lt;%=className%&gt;"&gt;\',\n    \'  &lt;label class="control-label &lt;%=labelClassName%&gt;"&gt;\xc2\xa0&lt;/label&gt;\',\n    \'  &lt;div class="controls &lt;%=controlsClassName%&gt;"&gt;&lt;/div&gt;\',\n    \'&lt;/div&gt;\'\n  ].join("\\n")),\n  select: _.template([\n    \'&lt;div class="control-group &lt;%=className%&gt;"&gt;\',\n    \'  &lt;label class="control-label &lt;%=labelClassName%&gt;"&gt;&lt;%-label%&gt;&lt;/label&gt;\',\n    \'  &lt;div class="controls &lt;%=controlsClassName%&gt;"&gt;\',\n    \'    &lt;select class="input-&lt;%=inputSize%&gt; &lt;%=controlClassName%&gt;" name="&lt;%=name%&gt;" data-nested="&lt;%=nested%&gt;" value="&lt;%-value%&gt;" placeholder="&lt;%-placeholder%&gt;"&gt;\',\n    \'      &lt;% for (var i=0; i &lt; options.length; i++) { %&gt;\',\n    \'        &lt;% var option = options[i]; %&gt;\',\n    \'        &lt;option value="&lt;%-option.value%&gt;" &lt;%=option.value == value ? "selected=\\\'selected\\\'" : ""%&gt;&gt;&lt;%-option.label%&gt;&lt;/option&gt;\',\n    \'      &lt;% } %&gt;\',\n    \'    &lt;/select&gt;\',\n    \'  &lt;/div&gt;\',\n    \'&lt;/div&gt;\'\n  ].join("\\n")),\n  radioInput: _.template([\n    \'&lt;div class="control-group &lt;%=className%&gt;"&gt;\',\n    \'  &lt;label class="control-label &lt;%=labelClassName%&gt;"&gt;&lt;%-label%&gt;&lt;/label&gt;\',\n    \'  &lt;div class="controls &lt;%=controlsClassName%&gt;"&gt;\',\n    \'    &lt;% for (var i=0; i &lt; options.length; i++) { %&gt;\',\n    \'      &lt;% var option = options[i]; %&gt;\',\n    \'      &lt;label class="radio inline"&gt;\',\n    \'        &lt;input type="radio" class="form-control &lt;%=controlClassName%&gt;" name="&lt;%=name%&gt;" data-nested="&lt;%=nested%&gt;" value="&lt;%-option.value%&gt;" placeholder="&lt;%-placeholder%&gt;" /&gt;\',\n    \'        &lt;%=option.label%&gt;\',\n    \'      &lt;/label&gt;\',\n    \'    &lt;% } %&gt;\',\n    \'  &lt;/div&gt;\',\n    \'&lt;/div&gt;\'\n  ].join("\\n")),\n  textarea: _.template([\n    \'&lt;div class="control-group &lt;%=className%&gt;"&gt;\',\n    \'  &lt;label class="control-label &lt;%=labelClassName%&gt;"&gt;&lt;%-label%&gt;&lt;/label&gt;\',\n    \'  &lt;div class="controls &lt;%=controlsClassName%&gt;"&gt;\',\n    \'    &lt;textarea class="input-&lt;%=inputSize%&gt; &lt;%=controlClassName%&gt;" name="&lt;%=name%&gt;" data-nested="&lt;%=nested%&gt;" placeholder="&lt;%-placeholder%&gt;"&gt;&lt;%-value%&gt;&lt;/textarea&gt;\',\n    \'  &lt;/div&gt;\',\n    \'&lt;/div&gt;\'\n  ].join("\\n")),\n  datepicker: _.template([\n    \'&lt;div class="control-group &lt;%=className%&gt;"&gt;\',\n    \'  &lt;label class="control-label &lt;%=labelClassName%&gt;"&gt;&lt;%-label%&gt;&lt;/label&gt;\',\n    \'  &lt;div class="controls &lt;%=controlsClassName%&gt;"&gt;\',\n    \'    &lt;input type="&lt;%=type%&gt;" class="input-&lt;%=inputSize%&gt; datepicker &lt;%=controlClassName%&gt;" name="&lt;%=name%&gt;" data-nested="&lt;%=nested%&gt;" value="&lt;%-value%&gt;" placeholder="&lt;%-placeholder%&gt;" /&gt;\',\n    \'  &lt;/div&gt;\',\n    \'&lt;/div&gt;\'\n  ].join("\\n"))\n};\nBackbone.FormView.prototype.field.inputSize = "xlarge";\nBackbone.FormView.prototype.groupClassName = "control-group";\nBackbone.FormView.prototype.errorClassName = "error";\nBackbone.FormView.prototype.helpClassName = "help-inline";\n</pre>\n     </div>\n    </div>\n    <br/>\n   </div>\n   <br/>\n   <footer class="navbar navbar-default">\n    <p class="navbar-text navbar-left">\n     \xc2\xa9 2014\n     <a href="http://www.amilia.com/en">\n      Amilia Inc.\n     </a>\n     <a href="https://github.com/AmiliaApp/backgrid-object-cell/blob/gh-pages/LICENSE">\n      Licensed under MIT.\n     </a>\n    </p>\n    <p class="navbar-text navbar-right">\n     Written by\n     <a href="http://martindrapeau.tumblr.com/">\n      Martin Drapeau\n     </a>\n    </p>\n    <p class="navbar-text navbar-right">\n    </p>\n   </footer>\n   <a href="https://github.com/AmiliaApp/backbone-bootstrap-widgets">\n    <img alt="Fork me on GitHub" src="https://s3.amazonaws.com/github/ribbons/forkme_right_gray_6d6d6d.png" style="position: absolute; top: 0; right: 0; border: 0;"/>\n   </a>\n  </div>\n  <div class="datepicker dropdown-menu">\n   <div class="datepicker-days" style="display: block;">\n    <table class=" table-condensed">\n     <thead>\n      <tr>\n       <th class="prev">\n        \xe2\x80\xb9\n       </th>\n       <th class="switch" colspan="5">\n        October 1990\n       </th>\n       <th class="next">\n        \xe2\x80\xba\n       </th>\n      </tr>\n      <tr>\n       <th class="dow">\n        Su\n       </th>\n       <th class="dow">\n        Mo\n       </th>\n       <th class="dow">\n        Tu\n       </th>\n       <th class="dow">\n        We\n       </th>\n       <th class="dow">\n        Th\n       </th>\n       <th class="dow">\n        Fr\n       </th>\n       <th class="dow">\n        Sa\n       </th>\n      </tr>\n     </thead>\n     <tbody>\n      <tr>\n       <td class="day old">\n        30\n       </td>\n       <td class="day ">\n        1\n       </td>\n       <td class="day ">\n        2\n       </td>\n       <td class="day ">\n        3\n       </td>\n       <td class="day ">\n        4\n       </td>\n       <td class="day ">\n        5\n       </td>\n       <td class="day ">\n        6\n       </td>\n      </tr>\n      <tr>\n       <td class="day ">\n        7\n       </td>\n       <td class="day ">\n        8\n       </td>\n       <td class="day ">\n        9\n       </td>\n       <td class="day active">\n        10\n       </td>\n       <td class="day ">\n        11\n       </td>\n       <td class="day ">\n        12\n       </td>\n       <td class="day ">\n        13\n       </td>\n      </tr>\n      <tr>\n       <td class="day ">\n        14\n       </td>\n       <td class="day ">\n        15\n       </td>\n       <td class="day ">\n        16\n       </td>\n       <td class="day ">\n        17\n       </td>\n       <td class="day ">\n        18\n       </td>\n       <td class="day ">\n        19\n       </td>\n       <td class="day ">\n        20\n       </td>\n      </tr>\n      <tr>\n       <td class="day ">\n        21\n       </td>\n       <td class="day ">\n        22\n       </td>\n       <td class="day ">\n        23\n       </td>\n       <td class="day ">\n        24\n       </td>\n       <td class="day ">\n        25\n       </td>\n       <td class="day ">\n        26\n       </td>\n       <td class="day ">\n        27\n       </td>\n      </tr>\n      <tr>\n       <td class="day ">\n        28\n       </td>\n       <td class="day ">\n        29\n       </td>\n       <td class="day ">\n        30\n       </td>\n       <td class="day ">\n        31\n       </td>\n       <td class="day new">\n        1\n       </td>\n       <td class="day new">\n        2\n       </td>\n       <td class="day new">\n        3\n       </td>\n      </tr>\n      <tr>\n       <td class="day new">\n        4\n       </td>\n       <td class="day new">\n        5\n       </td>\n       <td class="day new">\n        6\n       </td>\n       <td class="day new">\n        7\n       </td>\n       <td class="day new">\n        8\n       </td>\n       <td class="day new">\n        9\n       </td>\n       <td class="day new">\n        10\n       </td>\n      </tr>\n     </tbody>\n    </table>\n   </div>\n   <div class="datepicker-months" style="display: none;">\n    <table class="table-condensed">\n     <thead>\n      <tr>\n       <th class="prev">\n        \xe2\x80\xb9\n       </th>\n       <th class="switch" colspan="5">\n        1990\n       </th>\n       <th class="next">\n        \xe2\x80\xba\n       </th>\n      </tr>\n     </thead>\n     <tbody>\n      <tr>\n       <td colspan="7">\n        <span class="month">\n         Jan\n        </span>\n        <span class="month">\n         Feb\n        </span>\n        <span class="month">\n         Mar\n        </span>\n        <span class="month">\n         Apr\n        </span>\n        <span class="month">\n         May\n        </span>\n        <span class="month">\n         Jun\n        </span>\n        <span class="month">\n         Jul\n        </span>\n        <span class="month">\n         Aug\n        </span>\n        <span class="month">\n         Sep\n        </span>\n        <span class="month active">\n         Oct\n        </span>\n        <span class="month">\n         Nov\n        </span>\n        <span class="month">\n         Dec\n        </span>\n       </td>\n      </tr>\n     </tbody>\n    </table>\n   </div>\n   <div class="datepicker-years" style="display: none;">\n    <table class="table-condensed">\n     <thead>\n      <tr>\n       <th class="prev">\n        \xe2\x80\xb9\n       </th>\n       <th class="switch" colspan="5">\n        1990-1999\n       </th>\n       <th class="next">\n        \xe2\x80\xba\n       </th>\n      </tr>\n     </thead>\n     <tbody>\n      <tr>\n       <td colspan="7">\n        <span class="year old">\n         1989\n        </span>\n        <span class="year active">\n         1990\n        </span>\n        <span class="year">\n         1991\n        </span>\n        <span class="year">\n         1992\n        </span>\n        <span class="year">\n         1993\n        </span>\n        <span class="year">\n         1994\n        </span>\n        <span class="year">\n         1995\n        </span>\n        <span class="year">\n         1996\n        </span>\n        <span class="year">\n         1997\n        </span>\n        <span class="year">\n         1998\n        </span>\n        <span class="year">\n         1999\n        </span>\n        <span class="year old">\n         2000\n        </span>\n       </td>\n      </tr>\n     </tbody>\n    </table>\n   </div>\n  </div>\n </body>\n</html>'b'<!DOCTYPE html>\n<html lang="en" xmlns="http://www.w3.org/1999/xhtml">\n <head>\n  <title>\n   Backbone Bootstrap Widgets\n  </title>\n  <meta charset="utf-8"/>\n  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>\n  <link href="favicon.ico" rel="shortcut icon" type="image/x-icon"/>\n  <script src="3rd/jquery.min.js" type="text/javascript">\n  </script>\n  <script src="3rd/bootstrap.min.js" type="text/javascript">\n  </script>\n  <link charset="utf-8" href="3rd/bootstrap.min.css" rel="stylesheet" type="text/css"/>\n  <script src="3rd/bootstrap-datepicker.js" type="text/javascript">\n  </script>\n  <link charset="utf-8" href="3rd/bootstrap-datepicker.css" rel="stylesheet" type="text/css"/>\n  <script src="3rd/underscore.js" type="text/javascript">\n  </script>\n  <script src="3rd/backbone.js" type="text/javascript">\n  </script>\n  <script src="src/backbone-form.js" type="text/javascript">\n  </script>\n  <script src="src/backbone-modal.js" type="text/javascript">\n  </script>\n  <script src="src/backbone-shiftable-collection.js" type="text/javascript">\n  </script>\n  <link charset="utf-8" href="src/backbone-shiftable-collection.css" rel="stylesheet" type="text/css"/>\n  <script src="example.js" type="text/javascript">\n  </script>\n  <style>\n   header.navbar-inverse {border-radius: 0;}\n      footer.navbar-default {border-radius: 0; margin-bottom: 0;}\n      .shiftable-collection-item {padding: 10px; text-align: center; height: 160px; border: 1px solid #999; margin-right: 10px;}\n      .shiftable-collection-item:hover, .shiftable-collection-item.selected {background-color: #ddd;}\n      .shiftable-collection img {max-width: 100%; max-height: 100px;}\n  </style>\n </head>\n <body>\n  <header class="navbar navbar-inverse">\n   <div class="navbar-header">\n    <button class="navbar-toggle" data-target="#navbar-collapse" data-toggle="collapse" type="button">\n     <span class="sr-only">\n      Toggle navigation\n     </span>\n     <span class="icon-bar">\n     </span>\n     <span class="icon-bar">\n     </span>\n     <span class="icon-bar">\n     </span>\n    </button>\n    <a class="navbar-brand" href="#">\n     Backbone Bootstrap Widgets\n    </a>\n   </div>\n   <div class="collapse navbar-collapse" id="navbar-collapse">\n    <ul class="nav navbar-nav">\n     <li>\n      <a href="#ModalView">\n       ModalView\n      </a>\n     </li>\n     <li>\n      <a href="#ShiftableCollectionView">\n       ShiftableCollectionView\n      </a>\n     </li>\n     <li>\n      <a href="#FormView">\n       FormView\n      </a>\n     </li>\n    </ul>\n   </div>\n  </header>\n  <div class="container">\n   <div class="row">\n    <div class="col-md-12">\n     <p>\n      Series of widgets implemented as\n      <a href="http://backbonejs.org" target="_blank">\n       Backbone\n      </a>\n      Views wrapping\n      <a href="http://getbootstrap.com/javascript" target="_blank">\n       Bootstrap plugins\n      </a>\n      .\n     </p>\n     <p>\n     </p>\n     <ul>\n      <li>\n       <a href="#ModalView">\n        ModalView\n       </a>\n       creates a\n       <a href="http://backbonejs.org/#View" target="_blank">\n        Backbone View\n       </a>\n       wrapping a\n       <a href="http://getbootstrap.com/javascript/#modals" target="_blank">\n        Bootstrap modal dialog\n       </a>\n       . You can fill in the moal body in the\n       <code>\n        render\n       </code>\n       function.\n      </li>\n      <li>\n       <a href="#ShiftableCollectionView">\n        ShiftableCollectionView\n       </a>\n       creates a\n       <a href="http://backbonejs.org/#View" target="_blank">\n        Backbone View\n       </a>\n       wrapping a\n       <a href="http://backbonejs.org/#Collection" target="_blank">\n        Backbone Collection\n       </a>\n       . Allows you to shift models left and right to reorder, and to remove models.\n      </li>\n      <li>\n       <a href="#FormView">\n        FormView\n       </a>\n       creates a\n       <a href="http://backbonejs.org/#View" target="_blank">\n        Backbone View\n       </a>\n       using\n       <a href="http://getbootstrap.com/css/#forms" target="_blank">\n        Bootstrap form\n       </a>\n       markup and styling. Implements bindings to update the\n       <a href="http://backbonejs.org/#Model" target="_blank">\n        Backbone Model\n       </a>\n       based on DOM changes made by the user.\n       <span class="label label-danger">\n        Deprecated\n       </span>\n       Replaced by\n       <a href="http://amiliaapp.github.io/backform/">\n        Backform\n       </a>\n      </li>\n     </ul>\n    </div>\n   </div>\n   <!-- Backbone Modal View -->\n   <div class="row">\n    <div class="col-md-12">\n     <h1 id="ModalView">\n      Backbone.ModalView\n     </h1>\n     <p>\n      A ModalView is a Backbone View which shows a Bootstrap modal dialog upon calling\n      <code>\n       render\n      </code>\n      .\n            After\n      <code>\n       render\n      </code>\n      , a\n      <code>\n       postRender\n      </code>\n      function is always called. You can pass\n      <code>\n       postRender\n      </code>\n      as option in the constructor to fill in the body.\n     </p>\n     <p>\n      Use Backbone View\n      <code>\n       events\n      </code>\n      to capture Bootstrap events and put callbacks on buttons. For example:\n     </p>\n     <pre>events: {\n  "click .modal-footer a": function(e) {console.log("Button " + $(e.target).text() + "cliked!");},\n  "hidden.bs.modal": function() {console.log("Bootstrap modal is hidden!")}\n}\n</pre>\n     <p>\n     </p>\n     <p>\n      Backbone ModalView supports these options:\n     </p>\n     <ul>\n      <li>\n       <strong>\n        title\n       </strong>\n       : Optional. Underscore template or plain HTML string to put in the modal header. Defaults to &lt;h3&gt;Info&lt;/h3&gt;.\n      </li>\n      <li>\n       <strong>\n        body\n       </strong>\n       : Optional. Underscore template or plain HTML string to put in the modal body. Defaults to an empty string.\n      </li>\n      <li>\n       <strong>\n        model\n       </strong>\n       : Optional. Backbone.Model to be passed to the title and body templates. By default it is undefined.\n      </li>\n      <li>\n       <strong>\n        buttons\n       </strong>\n       : Optional. List of buttons to show. Defaults to a Close button. A button is an anchor tag with Bootstrap class btn. Each button has these options:\n       <ul>\n        <li>\n         <strong>\n          className\n         </strong>\n         : Optional. CSS classes to add. Defaults to empty string.\n        </li>\n        <li>\n         <strong>\n          href\n         </strong>\n         : Optional. Anchor tag href. Defaults to #.\n        </li>\n        <li>\n         <strong>\n          label\n         </strong>\n         : Optional. Button text. Defaults to Close.\n        </li>\n        <li>\n         <strong>\n          close\n         </strong>\n         : Optional. Boolean indicating whether to close the dialog after the button is pressed. Defaults to false.\n        </li>\n       </ul>\n      </li>\n      <li>\n       <strong>\n        backdrop\n       </strong>\n       : Optional. Specify if backdrop is existing. backdrop option can be boolean or \'static\'. Defaults true. \'static\' option avoid closing the modal on the click on the backdrop.\n      </li>\n     </ul>\n    </div>\n   </div>\n   <div class="row">\n    <div class="col-md-12">\n     <h2>\n      Examples\n     </h2>\n     <button class="btn btn-primary" id="btn-1">\n      Basic modal dialog\n     </button>\n     <button class="btn btn-primary" id="btn-2">\n      Modal with postRender\n     </button>\n     <button class="btn btn-primary" id="btn-3">\n      Subclassed modal dialog\n     </button>\n     <button class="btn btn-primary" id="btn-4">\n      Static backdrop\n     </button>\n     <button class="btn btn-primary" id="btn-5">\n      Body and Title as templates\n     </button>\n    </div>\n   </div>\n   <div class="row">\n    <div class="col-md-12">\n     <h2>\n      Code\n     </h2>\n     <pre>// Basic modal dialog\n$("#btn-1").click(function(e) {\n  var modal = new Backbone.ModalView({\n    body: "Hello World!"\n  });\n  modal.render();\n});\n\n// Modal with postRender\n$("#btn-2").click(function(e) {\n  new Backbone.ModalView({\n    postRender: function() {\n      this.$body.append("&lt;h1&gt;Hello World!&lt;/h1&gt;");\n    }\n  }).render();\n});\n\n// Modal dialog with custom buttons, events and postRender function\nvar MyModal = Backbone.ModalView.extend({\n  title: "&lt;h3&gt;Modal with custom buttons&lt;/h3&gt;",\n  buttons: [{\n    className: "btn-primary ok",\n    label: "Ok"\n  }, {\n    className: "btn-default cancel",\n    label: "Cancel",\n    close: true\n  }],\n  events: {\n    "click .modal-footer a.ok": "onOk",\n    "click .modal-footer a.cancel": "onCancel",\n    "hidden.bs.modal": "onHidden"\n  },\n  postRender: function() {\n    var $h4 = $("&lt;h4&gt;").text("Events"),\n        $p = $("&lt;p&gt;").text("Use Backbone.View &lt;code&gt;events&lt;/code&gt; to bind buttons. Click on the buttons and look at the console.")\n    this.$body.append($h4).append($p);\n    return this;\n  },\n  onOk: function(e) {\n    e.preventDefault();\n    console.log("Ok clicked");\n  },\n  onCancel: function(e) {\n    console.log("Cancel clicked");\n  },\n  onHidden: function(e) {\n    console.log("Modal hidden");\n  }\n});\n$("#btn-3").click(function(e) {\n  new MyModal().render();\n});\n\n// Modal with static backdrop\n// Work with Bootstrap 2.3 and 3\n$("#btn-4").click(function(e) {\n  var modal = new Backbone.ModalView({\n    title: "Static backdrop",\n    body: "Hello World!",\n    backdrop: \'static\'\n  });\n  modal.render();\n});\n\n$("#btn-5").click(function(e) {\n  var modal = new Backbone.ModalView({\n    model: new Backbone.Model({title: "Hello", name: "Example"}),\n    title: "&lt;h3&gt;&lt;%=title%&gt;&lt;/h3&gt;",\n    body: "Hello, &lt;%=name%&gt;!",\n  });\n  modal.render();\n});\n\n</pre>\n    </div>\n   </div>\n   <div class="row">\n    <div class="col-md-12">\n     <h2>\n      Bootstrap 2.3\n     </h2>\n     <p>\n      Backbone ModalView is built for Bootstrap 3.\n            To use Backbone ModalView with Bootstrap 2.3, you must modify the HTML markups.\n            See\n      <a href="http://getbootstrap.com/2.3.2/javascript.html#modals">\n       Bootstrap 2.3 modals\n      </a>\n      for more information.\n            Use this code.\n     </p>\n     <pre>Backbone.ModalView.prototype.template = _.template([\n  \'&lt;div class="modal-header"&gt;\',\n  \'  &lt;a type="button" class="close" aria-hidden="true"&gt;\xc3\x97&lt;/a&gt;\',\n  \'  &lt;%=title%&gt;\',\n  \'&lt;/div&gt;\',\n  \'&lt;div class="modal-body"&gt;&lt;%=body%&gt;&lt;/div&gt;\',\n  \'&lt;div class="modal-footer"&gt;&lt;/div&gt;\'\n].join("\\n"));\nBackbone.ModalView.prototype.className = "modal hide backbone-modal";\n</pre>\n    </div>\n   </div>\n   <br/>\n   <!-- Backbone Shiftable Collection View -->\n   <div class="row">\n    <div class="col-md-12">\n     <h1 id="ShiftableCollectionView">\n      Backbone.ShiftableCollectionView\n     </h1>\n     <p>\n      A ShiftableCollectionView displays a collection of models. Adds buttons to shift models left and right (or top and bottom), and to remove a model. The view consists of a collection element with class\n      <code>\n       shiftable-collection\n      </code>\n      , containing item elements with class\n      <code>\n       shiftable-collection-item\n      </code>\n      . To use, subclass and define your own template see example below).\n     </p>\n     <p>\n      Included are optional styling files (CSS and LESS) to properly position the action buttons. These are:\n     </p>\n     <ul>\n      <li>\n       <strong>\n        CSS\n       </strong>\n       :\n       <code>\n        src/backbone-shiftable-collection.css\n       </code>\n      </li>\n      <li>\n       <strong>\n        LESS\n       </strong>\n       :\n       <code>\n        src/backbone-shiftable-collection.less\n       </code>\n      </li>\n     </ul>\n     <h2>\n      Example\n     </h2>\n     <div class="shiftable-collection row" id="shiftable-collection-example">\n      <div class="col-md-2 shiftable-collection-item">\n       <img alt="Mario" src="img/mario.png"/>\n       <br/>\n       <span>\n        Mario\n       </span>\n       <a class="action delete" href="#">\n        \xc3\x97\n       </a>\n       <a class="action move-left" href="#">\n        \xe2\x86\x90\n       </a>\n       <a class="action move-right" href="#">\n        \xe2\x86\x92\n       </a>\n      </div>\n      <div class="col-md-2 shiftable-collection-item">\n       <img alt="Luigi" src="img/luigi.png"/>\n       <br/>\n       <span>\n        Luigi\n       </span>\n       <a class="action delete" href="#">\n        \xc3\x97\n       </a>\n       <a class="action move-left" href="#">\n        \xe2\x86\x90\n       </a>\n       <a class="action move-right" href="#">\n        \xe2\x86\x92\n       </a>\n      </div>\n      <div class="col-md-2 shiftable-collection-item">\n       <img alt="Princess" src="img/princess.png"/>\n       <br/>\n       <span>\n        Princess\n       </span>\n       <a class="action delete" href="#">\n        \xc3\x97\n       </a>\n       <a class="action move-left" href="#">\n        \xe2\x86\x90\n       </a>\n       <a class="action move-right" href="#">\n        \xe2\x86\x92\n       </a>\n      </div>\n      <div class="col-md-2 shiftable-collection-item">\n       <img alt="Yoshi" src="img/yoshi.png"/>\n       <br/>\n       <span>\n        Yoshi\n       </span>\n       <a class="action delete" href="#">\n        \xc3\x97\n       </a>\n       <a class="action move-left" href="#">\n        \xe2\x86\x90\n       </a>\n       <a class="action move-right" href="#">\n        \xe2\x86\x92\n       </a>\n      </div>\n     </div>\n     <div class="row">\n      <div class="col-md-6">\n       <h2>\n        Code\n       </h2>\n       <pre>var ImageGallery = Backbone.ShiftableCollectionView.extend({\n  template: _.template([\n    \'&lt;div class="col-md-2 shiftable-collection-item"&gt;\',\n    \'  &lt;img src="&lt;%=image%&gt;" alt="&lt;%=name%&gt;" /&gt;\',\n    \'  &lt;br/&gt;\',\n    \'  &lt;span&gt;&lt;%=name%&gt;&lt;/span&gt;\',\n    \'  &lt;a href="#" class="action delete"&gt;\xc3\x97&lt;/a&gt;\',\n    \'  &lt;a href="#" class="action move-left"&gt;\xe2\x86\x90&lt;/a&gt;\',\n    \'  &lt;a href="#" class="action move-right"&gt;\xe2\x86\x92&lt;/a&gt;\',\n    \'&lt;/div&gt;\'\n  ].join("\\n"))\n});\nvar images = new Backbone.Collection([\n  {name: "Mario", image: "img/mario.png"},\n  {name: "Luigi", image: "img/luigi.png"},\n  {name: "Princess", image: "img/princess.png"},\n  {name: "Yoshi", image: "img/yoshi.png"}\n]);\nvar imageGallery = new ImageGallery({\n  collection: images,\n  el: $("#shiftable-collection-example")\n}).render();\n</pre>\n      </div>\n      <div class="col-md-6">\n       <h2>\n        CSS\n       </h2>\n       <pre>.shiftable-collection-item {\n  padding: 10px;\n  text-align: center;\n  height: 160px;\n  border: 1px solid #999;\n  margin-right: 10px;\n}\n.shiftable-collection-item:hover, .shiftable-collection-item.selected {\n  background-color: #ddd;\n}\n.shiftable-collection img {\n  max-width: 100%;\n  max-height: 100px;\n}\n</pre>\n      </div>\n     </div>\n    </div>\n    <!-- Backbone Form View -->\n    <div class="row">\n     <div class="col-md-12">\n      <h1 id="FormView">\n       Backbone.FormView\n      </h1>\n      <p>\n       <span class="label label-danger">\n        Deprecated\n       </span>\n       Backbone.FormView was replaced by\n       <a href="http://amiliaapp.github.io/backform/">\n        Backform\n       </a>\n       .\n      </p>\n      <p>\n       A FormView is a Backbone View which shows a form to edit the bound Backbone Model.\n            Changes made by the user are directly applied back to the Backbone Model.\n            FormView even supports nested objects.\n      </p>\n      <p>\n       The form markup is that of\n       <a href="http://getbootstrap.com/css/#forms" target="_blank">\n        Bootstrap form\n       </a>\n       .\n            The form uses the horizontal layout (class\n       <code>\n        form-horizontal\n       </code>\n       ).\n            Each model attribute is represented by a\n       <code>\n        form-group\n       </code>\n       DIV (\n       <code>\n        control-group\n       </code>\n       in Bootstrap 2.3).\n            Control types currently supported are text INPUT and SELECT.\n      </p>\n      <p>\n       FormView takes these options:\n      </p>\n      <ul>\n       <li>\n        <strong>\n         model\n        </strong>\n        : The model containing the form data, one per attribute.\n       </li>\n       <li>\n        <strong>\n         schema\n        </strong>\n        : Schema defining which attributes to edit, and what controls to use. See below.\n       </li>\n       <li>\n        <strong>\n         field\n        </strong>\n        : Optional. If set, will override default field options (see below).\n       </li>\n       <li>\n        <strong>\n         errorModel\n        </strong>\n        : Optional. If set, will be used to add inline error help blocks besides the erroneous form control.\n       </li>\n      </ul>\n      In addition, you can pass any other option supported by Backbone.View.\n      <p>\n      </p>\n      <p>\n       Option\n       <code>\n        schema\n       </code>\n       defines which model attributes will be edited. The schema is a list of field objects.\n            A field object consists of:\n      </p>\n      <ul>\n       <li>\n        <strong>\n         name\n        </strong>\n        : Model attribute to edit.\n       </li>\n       <li>\n        <strong>\n         nested\n        </strong>\n        : Optional. If the attribute is itslef an object, nested attribute name.\n       </li>\n       <li>\n        <strong>\n         label\n        </strong>\n        : Label of field.\n       </li>\n       <li>\n        <strong>\n         control\n        </strong>\n        : Type of input control. Supported controls are:\n        <ul>\n         <li>\n          <strong>\n           input\n          </strong>\n          : Text INPUT.\n         </li>\n         <li>\n          <strong>\n           booleanInput\n          </strong>\n          : Single checkbox INPUT for Boolean fields. When checked, will set model attribute to true, false otherwise.\n         </li>\n         <li>\n          <strong>\n           uneditableInput\n          </strong>\n          : An uneditable input.\n         </li>\n         <li>\n          <strong>\n           select\n          </strong>\n          : SELECT. Set\n          <strong>\n           options\n          </strong>\n          to specific OPTION elements.\n         </li>\n         <li>\n          <strong>\n           radioInput\n          </strong>\n          : INPUT[TYPE=RADIO]. Set\n          <strong>\n           options\n          </strong>\n          to specific input elements.\n         </li>\n         <li>\n          <strong>\n           spacer\n          </strong>\n          : An empty space.\n         </li>\n         <li>\n          <strong>\n           textarea\n          </strong>\n          : TEXTAREA.\n         </li>\n         <li>\n          <strong>\n           datepicker\n          </strong>\n          : INPUT bound with a\n          <a href="http://www.eyecon.ro/bootstrap-datepicker/?utm_source=twitterfeed&amp;utm_medium=twitter" target="_blank">\n           Bootstrap Datepicker\n          </a>\n          . Set\n          <strong>\n           options\n          </strong>\n          to pass datepicker options.\n         </li>\n        </ul>\n       </li>\n       <li>\n        <strong>\n         type\n        </strong>\n        : Optional. Input type. Defaults to\n        <code>\n         text\n        </code>\n        .\n       </li>\n       <li>\n        <strong>\n         disabled\n        </strong>\n        : Optional. Set to true to disabled the input or select.\n       </li>\n       <li>\n        <strong>\n         options\n        </strong>\n        : Optional. For controls\n        <strong>\n         select\n        </strong>\n        and\n        <strong>\n         radioInput\n        </strong>\n        , list of option objects in the form:\n        <code>\n         {label:&lt;label&gt;, value:&lt;value&gt;}\n        </code>\n        .\n       </li>\n       <li>\n        <strong>\n         placeholder\n        </strong>\n        : Optional. Placeholder for an input control.\n       </li>\n       <li>\n        <strong>\n         className\n        </strong>\n        : Optional. Class to set on the\n        <code>\n         form-group\n        </code>\n        DIV.\n       </li>\n       <li>\n        <strong>\n         labelClassName\n        </strong>\n        : Optional. Class to control the width of labels. Defaults to\n        <code>\n         col-sm-4\n        </code>\n        .\n       </li>\n       <li>\n        <strong>\n         controlsClassName\n        </strong>\n        : Optional. Class to control the width of form controls. Defaults to\n        <code>\n         col-sm-8\n        </code>\n        .\n       </li>\n       <li>\n        <strong>\n         controlClassName\n        </strong>\n        : Optional. Class to add to the input or select element.\n       </li>\n      </ul>\n      <p>\n      </p>\n      <h2>\n       Size of form\n      </h2>\n      <p>\n       Use Bootstrap column classes to control the size of the form labels and controls.\n            By default labels use\n       <code>\n        col-sm-4\n       </code>\n       and controls\n       <code>\n        col-sm-8\n       </code>\n       .\n            You can override this when you define the schma set setting\n       <code>\n        labelClassName\n       </code>\n       and\n       <code>\n        controlsClassName\n       </code>\n       .\n      </p>\n      <p>\n       You can also set these globally by extending the default field definition. For example:\n      </p>\n      <pre>var form = new Backbone.FormView({\n  field: {\n    labelClassName: "col-sm-2",\n    controlsClassName: "col-sm-4"\n  },\n  ...\n})\n</pre>\n      <p>\n      </p>\n      <h2>\n       Example\n      </h2>\n      <p>\n       Form to edit a person. The address is a nested object. Change to see the Backbone model updated (right).\n      </p>\n     </div>\n    </div>\n    <div class="row">\n     <div class="col-md-6">\n      <form class="form-horizontal" id="form">\n       <div class="form-group ">\n        <label class="control-label col-sm-4">\n         Id\n        </label>\n        <div class="col-sm-8">\n         <span class="form-control uneditable-input ">\n          101\n         </span>\n        </div>\n       </div>\n       <div class="form-group ">\n        <label class="control-label col-sm-4">\n         Salutation\n        </label>\n        <div class="checkbox col-sm-8">\n         <label class="checkbox-inline">\n          <input checked="checked" class="" data-nested="" name="salutation" type="radio" value="Mr"/>\n          Mr.\n         </label>\n         <label class="checkbox-inline">\n          <input class="" data-nested="" name="salutation" type="radio" value="Mrs"/>\n          Mrs.\n         </label>\n         <label class="checkbox-inline">\n          <input class="" data-nested="" name="salutation" type="radio" value="Mme"/>\n          Mme.\n         </label>\n        </div>\n       </div>\n       <div class="form-group ">\n        <label class="control-label col-sm-4">\n         First Name\n        </label>\n        <div class="col-sm-8">\n         <input class="form-control " data-nested="" name="firstName" placeholder="" type="text" value="Andre"/>\n        </div>\n       </div>\n       <div class="form-group ">\n        <label class="control-label col-sm-4">\n         Last Name\n        </label>\n        <div class="col-sm-8">\n         <input class="form-control " data-nested="" name="lastName" placeholder="" type="text" value="Jones"/>\n        </div>\n       </div>\n       <div class="form-group ">\n        <label class="control-label col-sm-4">\n        </label>\n        <div class="col-sm-8">\n         <div class="checkbox">\n          <label>\n           <input checked="checked" class="" data-nested="" name="adult" type="checkbox" value="true"/>\n           Adult\n          </label>\n         </div>\n        </div>\n       </div>\n       <div class="form-group ">\n        <label class="control-label col-sm-4">\n        </label>\n        <div class="col-sm-8">\n        </div>\n       </div>\n       <div class="form-group ">\n        <label class="control-label col-sm-4">\n         Address1\n        </label>\n        <div class="col-sm-8">\n         <input class="form-control " data-nested="address1" name="address" placeholder="" type="text" value="1751 rue Richardson"/>\n        </div>\n       </div>\n       <div class="form-group ">\n        <label class="control-label col-sm-4">\n         Address2\n        </label>\n        <div class="col-sm-8">\n         <input class="form-control " data-nested="address2" name="address" placeholder="" type="text" value="Suite 3.105"/>\n        </div>\n       </div>\n       <div class="form-group ">\n        <label class="control-label col-sm-4">\n         City\n        </label>\n        <div class="col-sm-8">\n         <input class="form-control " data-nested="city" name="address" placeholder="" type="text" value="Montr\xc3\xa9al"/>\n        </div>\n       </div>\n       <div class="form-group ">\n        <label class="control-label col-sm-4">\n         Postal Code\n        </label>\n        <div class="col-sm-8">\n         <input class="form-control " data-nested="postalCode" name="address" placeholder="" type="text" value="H3K 1G6"/>\n        </div>\n       </div>\n       <div class="form-group ">\n        <label class="control-label col-sm-4">\n         Province\n        </label>\n        <div class="col-sm-8">\n         <select class="form-control " data-nested="province" name="address" placeholder="" value="QC">\n          <option value="AB">\n           Alberta\n          </option>\n          <option value="BC">\n           British Columbia\n          </option>\n          <option value="MB">\n           Manitoba\n          </option>\n          <option value="NB">\n           New Brunswick\n          </option>\n          <option value="NL">\n           Newfoundland and Labrador\n          </option>\n          <option value="NT">\n           Northwest Territories\n          </option>\n          <option value="NS">\n           Nova Scotia\n          </option>\n          <option value="NU">\n           Nunavut\n          </option>\n          <option value="ON">\n           Ontario\n          </option>\n          <option value="PE">\n           Prince Edward Island\n          </option>\n          <option selected="selected" value="QC">\n           Qu\xc3\xa9bec\n          </option>\n          <option value="SK">\n           Saskatchewan\n          </option>\n          <option value="YT">\n           Yukon\n          </option>\n         </select>\n        </div>\n       </div>\n       <div class="form-group ">\n        <label class="control-label col-sm-4">\n         Date of birth\n        </label>\n        <div class="col-sm-8">\n         <input class="form-control datepicker " data-nested="" name="dateOfBirth" placeholder="" type="text" value="1990-10-10"/>\n        </div>\n       </div>\n       <div class="form-group ">\n        <label class="control-label col-sm-4">\n         Life goal\n        </label>\n        <div class="col-sm-8">\n         <textarea class="form-control " data-nested="" name="lifeGoal" placeholder="">To become the best basketball player there is. I want to dunk!</textarea>\n        </div>\n       </div>\n      </form>\n     </div>\n     <div class="col-md-6">\n      <pre id="object">{\n  "id": 101,\n  "salutation": "Mr",\n  "firstName": "Andre",\n  "lastName": "Jones",\n  "adult": true,\n  "address": {\n    "address1": "1751 rue Richardson",\n    "address2": "Suite 3.105",\n    "city": "Montr\xc3\xa9al",\n    "postalCode": "H3K 1G6",\n    "province": "QC"\n  },\n  "dateOfBirth": "1990-10-10",\n  "lifeGoal": "To become the best basketball player there is. I want to dunk!"\n}</pre>\n     </div>\n    </div>\n    <div class="row">\n     <div class="col-md-12">\n      <h2>\n       Code\n      </h2>\n      <pre>var person = {\n  id: 101,\n  salutation: "Mr",\n  firstName: "Andre",\n  lastName: "Jones",\n  adult: true,\n  address: {\n    address1: "1751 rue Richardson",\n    address2: "Suite 3.105",\n    city: "Montr\xc3\xa9al",\n    postalCode: "H3K 1G6",\n    province: "QC"\n  }\n};\nvar person = new Backbone.Model(person);\nvar form = new Backbone.FormView({\n  el: "#form",\n  model: person,\n  schema: [\n  {name: "id", label: "Id", control: "uneditableInput"},\n  {name: "firstName", label: "First Name", control: "input"},\n  {name: "lastName", label: "Last Name", control: "input"},\n  {name: "adult", label: "Adult", control: "booleanInput"},\n  {\n    name: "salutation",\n    label: "Salutation",\n    control: "radioInput",\n    options: [\n      {label: "Mr.", value: "Mr"},\n      {label: "Mrs.", value: "Mrs"},\n      {label: "Mme.", value: "Mme"}\n    ]\n  },\n  {control: "spacer"},\n  {name: "address", nested: "address1", label: "Address1", control: "input"},\n  {name: "address", nested: "address2", label: "Address2", control: "input"},\n  {name: "address", nested: "city", label: "City", control: "input"},\n  {name: "address", nested: "postalCode", label: "Postal Code", control: "input"},\n  {\n    name: "address",\n    nested: "province",\n    label: "Province",\n    control: "select",\n    options: [\n      {label: "Alberta", value: "AB"},\n      {label: "British Columbia", value: "BC"},\n      {label: "Manitoba", value: "MB"},\n      {label: "New Brunswick", value: "NB"},\n      {label: "Newfoundland and Labrador", value: "NL"},\n      {label: "Northwest Territories", value: "NT"},\n      {label: "Nova Scotia", value: "NS"},\n      {label: "Nunavut", value: "NU"},\n      {label: "Ontario", value: "ON"},\n      {label: "Prince Edward Island", value: "PE"},\n      {label: "Qu\xc3\xa9bec", value: "QC"},\n      {label: "Saskatchewan", value: "SK"},\n      {label: "Yukon", value: "YT"}\n    ]\n  },\n  {name: "lifeGoal", label: "Life goal", control: "textarea"}]\n});\nform.render();\n\nfunction updateObject() {\n  $("#object").text(JSON.stringify(person.toJSON(), null, 2));\n}\nperson.on("change", updateObject);\nupdateObject();\n</pre>\n     </div>\n    </div>\n    <div class="row">\n     <div class="col-md-12">\n      <h2>\n       Form Validation\n      </h2>\n      <p>\n       Backbone.FormView accepts an optional\n       <code>\n        errorModel\n       </code>\n       . It contains the same attributes as the original\n       <code>\n        model\n       </code>\n       but with error messages as values. Backbone.FormView will automatically listen for changes on the\n       <code>\n        errorModel\n       </code>\n       to display the errors. You need only set the invalid attribute with an appropriate error message and for it to be displayed.\n      </p>\n      <p>\n       This is useful for back-end validation. In the case of an error, your back-end need only return a hash of attributes and their errors to be set on the\n       <code>\n        errorModel\n       </code>\n       to inform the user what to correct.\n      </p>\n     </div>\n    </div>\n    <div class="row">\n     <div class="col-md-12">\n      <form class="form-horizontal" id="form2">\n       <div class="form-group">\n        <label class="control-label col-sm-4">\n         Choose a number between 10 and 20. Press Enter to submit the form.\n        </label>\n        <div class="col-sm-8">\n         <input class="form-control " data-nested="" name="a" placeholder="" type="text" value="101"/>\n        </div>\n       </div>\n      </form>\n     </div>\n    </div>\n    <div class="row">\n     <div class="col-md-12">\n      <h2>\n       Code\n      </h2>\n      <pre>var model = new Backbone.Model({a: 101}),\n    errorModel = new Backbone.Model();\n\nvar form2 = new Backbone.FormView({\n  el: "#form2",\n  model: model,\n  errorModel: errorModel,\n  schema: [{name: "a", label: "Choose a number between 10 and 20. Press Enter to submit the form.", control: "input"}]\n});\nform2.render()\n\n$("#form2").on("submit", function(e) {\n  e.preventDefault();\n\n  errorModel.clear();\n\n  var number = parseFloat(model.get("a"), 10);\n  if (isNaN(number))\n    errorModel.set({a: "Not a number!"});\n  else if (number &lt;= 10 || number &gt;= 20)\n    errorModel.set({a: "Must be between 10 and 20"})\n\n  return false;\n});\n</pre>\n     </div>\n    </div>\n    <div class="row">\n     <div class="col-md-12">\n      <h2>\n       Bootstrap 2.3\n      </h2>\n      <p>\n       Backbone FormView is built for Bootstrap 3.\n            To use Backbone FormView with Bootstrap 2.3, you must modify the HTML markups.\n            In addition, we declare a new field option\n       <code>\n        inputSize\n       </code>\n       to control the size of controls.\n            It takes possible values\n       <code>\n        min\n       </code>\n       ,\n       <code>\n        small\n       </code>\n       ,\n       <code>\n        medium\n       </code>\n       ,\n       <code>\n        large\n       </code>\n       ,\n       <code>\n        xlarge\n       </code>\n       or\n       <code>\n        xxlarge\n       </code>\n       . Defaults to\n       <code>\n        xlarge\n       </code>\n       .\n            See\n       <a href="http://getbootstrap.com/2.3.2/base-css.html#forms">\n        Bootstrap 2.3 forms\n       </a>\n       for more information.\n            Use this code.\n      </p>\n      <pre>Backbone.FormView.prototype.templates = {\n  input: _.template([\n    \'&lt;div class="control-group &lt;%=className%&gt;"&gt;\',\n    \'  &lt;label class="control-label &lt;%=labelClassName%&gt;"&gt;&lt;%-label%&gt;&lt;/label&gt;\',\n    \'  &lt;div class="controls &lt;%=controlsClassName%&gt;"&gt;\',\n    \'    &lt;input type="&lt;%=type%&gt;" class="input-&lt;%=inputSize%&gt; &lt;%=controlClassName%&gt;" name="&lt;%=name%&gt;" data-nested="&lt;%=nested%&gt;" value="&lt;%-value%&gt;" placeholder="&lt;%-placeholder%&gt;" /&gt;\',\n    \'  &lt;/div&gt;\',\n    \'&lt;/div&gt;\'\n  ].join("\\n")),\n  booleanInput: _.template([\n    \'&lt;div class="control-group &lt;%=className%&gt;"&gt;\',\n    \'  &lt;label class="control-label &lt;%=labelClassName%&gt;"&gt;&lt;/label&gt;\',\n    \'  &lt;div class="controls &lt;%=controlsClassName%&gt;"&gt;\',\n    \'    &lt;label class="checkbox inline"&gt;\',\n    \'      &lt;input type="checkbox" class="input-&lt;%=inputSize%&gt; &lt;%=controlClassName%&gt;" name="&lt;%=name%&gt;" data-nested="&lt;%=nested%&gt;" value="&lt;%-value%&gt;" /&gt; &lt;%-label%&gt;\',\n    \'    &lt;/label&gt;\',\n    \'  &lt;/div&gt;\',\n    \'&lt;/div&gt;\'\n  ].join("\\n")),\n  uneditableInput: _.template([\n    \'&lt;div class="control-group &lt;%=className%&gt;"&gt;\',\n    \'  &lt;label class="control-label &lt;%=labelClassName%&gt;"&gt;&lt;%-label%&gt;&lt;/label&gt;\',\n    \'  &lt;div class="controls &lt;%=controlsClassName%&gt;"&gt;\',\n    \'    &lt;span class="uneditable-input input-&lt;%=inputSize%&gt; &lt;%=controlClassName%&gt;"&gt;&lt;%-value%&gt;&lt;/span&gt;\',\n    \'  &lt;/div&gt;\',\n    \'&lt;/div&gt;\'\n  ].join("\\n")),\n  spacer: _.template([\n    \'&lt;div class="control-group &lt;%=className%&gt;"&gt;\',\n    \'  &lt;label class="control-label &lt;%=labelClassName%&gt;"&gt;\xc2\xa0&lt;/label&gt;\',\n    \'  &lt;div class="controls &lt;%=controlsClassName%&gt;"&gt;&lt;/div&gt;\',\n    \'&lt;/div&gt;\'\n  ].join("\\n")),\n  select: _.template([\n    \'&lt;div class="control-group &lt;%=className%&gt;"&gt;\',\n    \'  &lt;label class="control-label &lt;%=labelClassName%&gt;"&gt;&lt;%-label%&gt;&lt;/label&gt;\',\n    \'  &lt;div class="controls &lt;%=controlsClassName%&gt;"&gt;\',\n    \'    &lt;select class="input-&lt;%=inputSize%&gt; &lt;%=controlClassName%&gt;" name="&lt;%=name%&gt;" data-nested="&lt;%=nested%&gt;" value="&lt;%-value%&gt;" placeholder="&lt;%-placeholder%&gt;"&gt;\',\n    \'      &lt;% for (var i=0; i &lt; options.length; i++) { %&gt;\',\n    \'        &lt;% var option = options[i]; %&gt;\',\n    \'        &lt;option value="&lt;%-option.value%&gt;" &lt;%=option.value == value ? "selected=\\\'selected\\\'" : ""%&gt;&gt;&lt;%-option.label%&gt;&lt;/option&gt;\',\n    \'      &lt;% } %&gt;\',\n    \'    &lt;/select&gt;\',\n    \'  &lt;/div&gt;\',\n    \'&lt;/div&gt;\'\n  ].join("\\n")),\n  radioInput: _.template([\n    \'&lt;div class="control-group &lt;%=className%&gt;"&gt;\',\n    \'  &lt;label class="control-label &lt;%=labelClassName%&gt;"&gt;&lt;%-label%&gt;&lt;/label&gt;\',\n    \'  &lt;div class="controls &lt;%=controlsClassName%&gt;"&gt;\',\n    \'    &lt;% for (var i=0; i &lt; options.length; i++) { %&gt;\',\n    \'      &lt;% var option = options[i]; %&gt;\',\n    \'      &lt;label class="radio inline"&gt;\',\n    \'        &lt;input type="radio" class="form-control &lt;%=controlClassName%&gt;" name="&lt;%=name%&gt;" data-nested="&lt;%=nested%&gt;" value="&lt;%-option.value%&gt;" placeholder="&lt;%-placeholder%&gt;" /&gt;\',\n    \'        &lt;%=option.label%&gt;\',\n    \'      &lt;/label&gt;\',\n    \'    &lt;% } %&gt;\',\n    \'  &lt;/div&gt;\',\n    \'&lt;/div&gt;\'\n  ].join("\\n")),\n  textarea: _.template([\n    \'&lt;div class="control-group &lt;%=className%&gt;"&gt;\',\n    \'  &lt;label class="control-label &lt;%=labelClassName%&gt;"&gt;&lt;%-label%&gt;&lt;/label&gt;\',\n    \'  &lt;div class="controls &lt;%=controlsClassName%&gt;"&gt;\',\n    \'    &lt;textarea class="input-&lt;%=inputSize%&gt; &lt;%=controlClassName%&gt;" name="&lt;%=name%&gt;" data-nested="&lt;%=nested%&gt;" placeholder="&lt;%-placeholder%&gt;"&gt;&lt;%-value%&gt;&lt;/textarea&gt;\',\n    \'  &lt;/div&gt;\',\n    \'&lt;/div&gt;\'\n  ].join("\\n")),\n  datepicker: _.template([\n    \'&lt;div class="control-group &lt;%=className%&gt;"&gt;\',\n    \'  &lt;label class="control-label &lt;%=labelClassName%&gt;"&gt;&lt;%-label%&gt;&lt;/label&gt;\',\n    \'  &lt;div class="controls &lt;%=controlsClassName%&gt;"&gt;\',\n    \'    &lt;input type="&lt;%=type%&gt;" class="input-&lt;%=inputSize%&gt; datepicker &lt;%=controlClassName%&gt;" name="&lt;%=name%&gt;" data-nested="&lt;%=nested%&gt;" value="&lt;%-value%&gt;" placeholder="&lt;%-placeholder%&gt;" /&gt;\',\n    \'  &lt;/div&gt;\',\n    \'&lt;/div&gt;\'\n  ].join("\\n"))\n};\nBackbone.FormView.prototype.field.inputSize = "xlarge";\nBackbone.FormView.prototype.groupClassName = "control-group";\nBackbone.FormView.prototype.errorClassName = "error";\nBackbone.FormView.prototype.helpClassName = "help-inline";\n</pre>\n     </div>\n    </div>\n    <br/>\n   </div>\n   <br/>\n   <footer class="navbar navbar-default">\n    <p class="navbar-text navbar-left">\n     \xc2\xa9 2014\n     <a href="http://www.amilia.com/en">\n      Amilia Inc.\n     </a>\n     <a href="https://github.com/AmiliaApp/backgrid-object-cell/blob/gh-pages/LICENSE">\n      Licensed under MIT.\n     </a>\n    </p>\n    <p class="navbar-text navbar-right">\n     Written by\n     <a href="http://martindrapeau.tumblr.com/">\n      Martin Drapeau\n     </a>\n    </p>\n    <p class="navbar-text navbar-right">\n    </p>\n   </footer>\n   <a href="https://github.com/AmiliaApp/backbone-bootstrap-widgets">\n    <img alt="Fork me on GitHub" src="https://s3.amazonaws.com/github/ribbons/forkme_right_gray_6d6d6d.png" style="position: absolute; top: 0; right: 0; border: 0;"/>\n   </a>\n  </div>\n  <div class="datepicker dropdown-menu">\n   <div class="datepicker-days" style="display: block;">\n    <table class=" table-condensed">\n     <thead>\n      <tr>\n       <th class="prev">\n        \xe2\x80\xb9\n       </th>\n       <th class="switch" colspan="5">\n        October 1990\n       </th>\n       <th class="next">\n        \xe2\x80\xba\n       </th>\n      </tr>\n      <tr>\n       <th class="dow">\n        Su\n       </th>\n       <th class="dow">\n        Mo\n       </th>\n       <th class="dow">\n        Tu\n       </th>\n       <th class="dow">\n        We\n       </th>\n       <th class="dow">\n        Th\n       </th>\n       <th class="dow">\n        Fr\n       </th>\n       <th class="dow">\n        Sa\n       </th>\n      </tr>\n     </thead>\n     <tbody>\n      <tr>\n       <td class="day old">\n        30\n       </td>\n       <td class="day ">\n        1\n       </td>\n       <td class="day ">\n        2\n       </td>\n       <td class="day ">\n        3\n       </td>\n       <td class="day ">\n        4\n       </td>\n       <td class="day ">\n        5\n       </td>\n       <td class="day ">\n        6\n       </td>\n      </tr>\n      <tr>\n       <td class="day ">\n        7\n       </td>\n       <td class="day ">\n        8\n       </td>\n       <td class="day ">\n        9\n       </td>\n       <td class="day active">\n        10\n       </td>\n       <td class="day ">\n        11\n       </td>\n       <td class="day ">\n        12\n       </td>\n       <td class="day ">\n        13\n       </td>\n      </tr>\n      <tr>\n       <td class="day ">\n        14\n       </td>\n       <td class="day ">\n        15\n       </td>\n       <td class="day ">\n        16\n       </td>\n       <td class="day ">\n        17\n       </td>\n       <td class="day ">\n        18\n       </td>\n       <td class="day ">\n        19\n       </td>\n       <td class="day ">\n        20\n       </td>\n      </tr>\n      <tr>\n       <td class="day ">\n        21\n       </td>\n       <td class="day ">\n        22\n       </td>\n       <td class="day ">\n        23\n       </td>\n       <td class="day ">\n        24\n       </td>\n       <td class="day ">\n        25\n       </td>\n       <td class="day ">\n        26\n       </td>\n       <td class="day ">\n        27\n       </td>\n      </tr>\n      <tr>\n       <td class="day ">\n        28\n       </td>\n       <td class="day ">\n        29\n       </td>\n       <td class="day ">\n        30\n       </td>\n       <td class="day ">\n        31\n       </td>\n       <td class="day new">\n        1\n       </td>\n       <td class="day new">\n        2\n       </td>\n       <td class="day new">\n        3\n       </td>\n      </tr>\n      <tr>\n       <td class="day new">\n        4\n       </td>\n       <td class="day new">\n        5\n       </td>\n       <td class="day new">\n        6\n       </td>\n       <td class="day new">\n        7\n       </td>\n       <td class="day new">\n        8\n       </td>\n       <td class="day new">\n        9\n       </td>\n       <td class="day new">\n        10\n       </td>\n      </tr>\n     </tbody>\n    </table>\n   </div>\n   <div class="datepicker-months" style="display: none;">\n    <table class="table-condensed">\n     <thead>\n      <tr>\n       <th class="prev">\n        \xe2\x80\xb9\n       </th>\n       <th class="switch" colspan="5">\n        1990\n       </th>\n       <th class="next">\n        \xe2\x80\xba\n       </th>\n      </tr>\n     </thead>\n     <tbody>\n      <tr>\n       <td colspan="7">\n        <span class="month">\n         Jan\n        </span>\n        <span class="month">\n         Feb\n        </span>\n        <span class="month">\n         Mar\n        </span>\n        <span class="month">\n         Apr\n        </span>\n        <span class="month">\n         May\n        </span>\n        <span class="month">\n         Jun\n        </span>\n        <span class="month">\n         Jul\n        </span>\n        <span class="month">\n         Aug\n        </span>\n        <span class="month">\n         Sep\n        </span>\n        <span class="month active">\n         Oct\n        </span>\n        <span class="month">\n         Nov\n        </span>\n        <span class="month">\n         Dec\n        </span>\n       </td>\n      </tr>\n     </tbody>\n    </table>\n   </div>\n   <div class="datepicker-years" style="display: none;">\n    <table class="table-condensed">\n     <thead>\n      <tr>\n       <th class="prev">\n        \xe2\x80\xb9\n       </th>\n       <th class="switch" colspan="5">\n        1990-1999\n       </th>\n       <th class="next">\n        \xe2\x80\xba\n       </th>\n      </tr>\n     </thead>\n     <tbody>\n      <tr>\n       <td colspan="7">\n        <span class="year old">\n         1989\n        </span>\n        <span class="year active">\n         1990\n        </span>\n        <span class="year">\n         1991\n        </span>\n        <span class="year">\n         1992\n        </span>\n        <span class="year">\n         1993\n        </span>\n        <span class="year">\n         1994\n        </span>\n        <span class="year">\n         1995\n        </span>\n        <span class="year">\n         1996\n        </span>\n        <span class="year">\n         1997\n        </span>\n        <span class="year">\n         1998\n        </span>\n        <span class="year">\n         1999\n        </span>\n        <span class="year old">\n         2000\n        </span>\n       </td>\n      </tr>\n     </tbody>\n    </table>\n   </div>\n  </div>\n </body>\n</html>'