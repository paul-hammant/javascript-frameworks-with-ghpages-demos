b'<!DOCTYPE html>\n<html xmlns="http://www.w3.org/1999/xhtml">\n <head>\n  <meta charset="utf-8"/>\n  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>\n  <title>\n   Ember Sparkles\n  </title>\n  <meta content="" name="description"/>\n  <meta content="width=device-width, initial-scale=1" name="viewport"/>\n  <meta content="%7B%22modulePrefix%22%3A%22dummy%22%2C%22environment%22%3A%22production%22%2C%22rootURL%22%3A%22/ember-sparkles/%22%2C%22locationType%22%3A%22hash%22%2C%22EmberENV%22%3A%7B%22FEATURES%22%3A%7B%7D%2C%22EXTEND_PROTOTYPES%22%3A%7B%22Date%22%3Afalse%7D%7D%2C%22APP%22%3A%7B%22name%22%3A%22ember-sparkles%22%2C%22version%22%3A%220.4.17%22%7D%2C%22something%22%3A%22test%22%2C%22exportApplicationGlobal%22%3Afalse%2C%22resizeServiceDefaults%22%3A%7B%22widthSensitive%22%3Atrue%2C%22heightSensitive%22%3Atrue%2C%22debounceTimeout%22%3A200%2C%22injectionFactories%22%3A%5B%22view%22%2C%22component%22%5D%7D%7D" name="dummy/config/environment"/>\n  <link href="/ember-sparkles/assets/vendor-57af878e3fd9c27e41d03ea9a4d87ab4.css" rel="stylesheet"/>\n  <link href="/ember-sparkles/assets/dummy-7f2622334d99205f339d6a7148f4c65f.css" rel="stylesheet"/>\n </head>\n <body class="ember-application">\n  <script src="/ember-sparkles/assets/vendor-2ac8cac356aa4b7cdbab0c1026790766.js">\n  </script>\n  <script src="/ember-sparkles/assets/dummy-95d628aa703a85bf6e14e38413048e77.js">\n  </script>\n  <div class="ember-view" id="ember310">\n   <div class="container navbar">\n    <div class="row">\n     <div class="eleven columns">\n      <h5 class="title">\n       ember-sparkles\n      </h5>\n     </div>\n     <div class="one columns">\n      <a href="https://github.com/LocusEnergy/ember-sparkles" target="_blank">\n       source\n      </a>\n     </div>\n    </div>\n   </div>\n   <div class="container graphics">\n    <div class="row graphics">\n     <div class="two columns">\n      <div class="side-menu">\n       <ul>\n        <li>\n         <a class="active ember-view" href="#/bar-chart" id="ember341">\n          Simple Bars\n         </a>\n        </li>\n        <li>\n         <a class="ember-view" href="#/grouped-bar-chart" id="ember348">\n          Grouped Bars\n         </a>\n        </li>\n        <li>\n         <a class="ember-view" href="#/line-chart" id="ember364">\n          Lines\n         </a>\n        </li>\n        <li>\n         <a class="ember-view" href="#/pie-chart" id="ember380">\n          Pie\n         </a>\n        </li>\n        <li>\n         <a class="ember-view" href="#/data-join" id="ember396">\n          Data Join I\n         </a>\n        </li>\n        <li>\n         <a class="ember-view" href="#/sine-wave" id="ember412">\n          Sine Wave\n         </a>\n        </li>\n       </ul>\n      </div>\n     </div>\n     <div class="ten columns svg-container">\n      <svg class="ember-view" height="100%" id="ember460" width="100%" xmlns="http://www.w3.org/2000/svg">\n       <g transform="translate(40,20)">\n        <g class="ember-sparkles--axis ember-view" id="ember503">\n         <g class="axis" fill="none" font-family="sans-serif" font-size="10" text-anchor="middle" transform="translate(0, 307)">\n          <path class="domain" d="M0.5,6V0.5H691.5V6" stroke="#000">\n          </path>\n          <g class="tick" opacity="1" transform="translate(100,0)">\n           <line stroke="#000" x1="0.5" x2="0.5" y2="6">\n           </line>\n           <text dy="0.71em" fill="#000" x="0.5" y="9">\n            2016-03-02\n           </text>\n          </g>\n          <g class="tick" opacity="1" transform="translate(264,0)">\n           <line stroke="#000" x1="0.5" x2="0.5" y2="6">\n           </line>\n           <text dy="0.71em" fill="#000" x="0.5" y="9">\n            2016-03-03\n           </text>\n          </g>\n          <g class="tick" opacity="1" transform="translate(428,0)">\n           <line stroke="#000" x1="0.5" x2="0.5" y2="6">\n           </line>\n           <text dy="0.71em" fill="#000" x="0.5" y="9">\n            2016-03-04\n           </text>\n          </g>\n          <g class="tick" opacity="1" transform="translate(592,0)">\n           <line stroke="#000" x1="0.5" x2="0.5" y2="6">\n           </line>\n           <text dy="0.71em" fill="#000" x="0.5" y="9">\n            2016-03-05\n           </text>\n          </g>\n         </g>\n         <text class="label" dx="-100" dy="337" style="text-anchor: end;" x="781">\n          Date (Y-M-D)\n         </text>\n        </g>\n        <g class="ember-sparkles--axis ember-view" id="ember505">\n         <g class="axis" fill="none" font-family="sans-serif" font-size="10" text-anchor="end" transform="">\n          <path class="domain" d="M-6,307.5H0.5V0.5H-6" stroke="#000">\n          </path>\n          <g class="tick" opacity="1" transform="translate(0,307)">\n           <line stroke="#000" x2="-6" y1="0.5" y2="0.5">\n           </line>\n           <text dy="0.32em" fill="#000" x="-9" y="0.5">\n            0\n           </text>\n          </g>\n          <g class="tick" opacity="1" transform="translate(0,263.14285714285717)">\n           <line stroke="#000" x2="-6" y1="0.5" y2="0.5">\n           </line>\n           <text dy="0.32em" fill="#000" x="-9" y="0.5">\n            5\n           </text>\n          </g>\n          <g class="tick" opacity="1" transform="translate(0,219.28571428571428)">\n           <line stroke="#000" x2="-6" y1="0.5" y2="0.5">\n           </line>\n           <text dy="0.32em" fill="#000" x="-9" y="0.5">\n            10\n           </text>\n          </g>\n          <g class="tick" opacity="1" transform="translate(0,175.42857142857144)">\n           <line stroke="#000" x2="-6" y1="0.5" y2="0.5">\n           </line>\n           <text dy="0.32em" fill="#000" x="-9" y="0.5">\n            15\n           </text>\n          </g>\n          <g class="tick" opacity="1" transform="translate(0,131.57142857142858)">\n           <line stroke="#000" x2="-6" y1="0.5" y2="0.5">\n           </line>\n           <text dy="0.32em" fill="#000" x="-9" y="0.5">\n            20\n           </text>\n          </g>\n          <g class="tick" opacity="1" transform="translate(0,87.71428571428572)">\n           <line stroke="#000" x2="-6" y1="0.5" y2="0.5">\n           </line>\n           <text dy="0.32em" fill="#000" x="-9" y="0.5">\n            25\n           </text>\n          </g>\n          <g class="tick" opacity="1" transform="translate(0,43.85714285714289)">\n           <line stroke="#000" x2="-6" y1="0.5" y2="0.5">\n           </line>\n           <text dy="0.32em" fill="#000" x="-9" y="0.5">\n            30\n           </text>\n          </g>\n          <g class="tick" opacity="1" transform="translate(0,0)">\n           <line stroke="#000" x2="-6" y1="0.5" y2="0.5">\n           </line>\n           <text dy="0.32em" fill="#000" x="-9" y="0.5">\n            35\n           </text>\n          </g>\n         </g>\n         <text class="label" dx="-153.5" dy="-30" style="text-anchor: end;" transform="rotate(-90)">\n          Watts\n         </text>\n        </g>\n        <g class="ember-sparkles--bar-chart ember-view" id="ember511">\n         <rect class="bar" height="175.42857142857142" style="fill: rgb(99, 121, 57); opacity: 1;" width="131" x="34" y="131.57142857142858">\n         </rect>\n         <rect class="bar" height="131.57142857142856" style="fill: rgb(99, 121, 57); opacity: 1;" width="131" x="198" y="175.42857142857144">\n         </rect>\n         <rect class="bar" height="307" style="fill: rgb(99, 121, 57); opacity: 1;" width="131" x="362" y="0">\n         </rect>\n         <rect class="bar" height="219.28571428571428" style="fill: rgb(99, 121, 57); opacity: 1;" width="131" x="526" y="87.71428571428572">\n         </rect>\n        </g>\n       </g>\n      </svg>\n      <button data-ember-action="" data-ember-action-512="512">\n       toggle\n      </button>\n      <h5>\n       htmlbars\n      </h5>\n      <pre class="htmlbars ember-view hljs" id="ember517"><span class="xml"></span><span class="hljs-template-tag">{{#<span class="hljs-name">ember-sparkles</span>\n  <span class="hljs-attr">data</span>=data\n  <span class="hljs-built_in">input</span>-<span class="hljs-attr">key</span>=\'ts\'\n  output-<span class="hljs-attr">key</span>=\'value\'\n\n  scale-<span class="hljs-attr">type</span>=\'band\'\n  x-<span class="hljs-attr">domain</span>=(map (r/<span class="hljs-built_in">get</span> \'ts\') data)\n  y-<span class="hljs-attr">domain</span>=(append <span class="hljs-number">0</span> outputMax)\n\n  <span class="hljs-keyword">as</span> |chart|}}</span><span class="xml">\n\n  </span><span class="hljs-template-variable">{{chart.x-axis\n    tick-format=(d3-time-format \'%Y-%m-%d\')\n    label=\'Date (Y-M-D)\'\n    dy=(add chart.height 30)\n    dx=-100\n  }}</span><span class="xml">\n\n  </span><span class="hljs-template-variable">{{chart.y-axis\n    label=\'Watts\'\n    ticks=5\n    yGrid=true\n    dx=(mult -0.5 chart.height)\n    dy=-30\n  }}</span><span class="xml">\n\n  </span><span class="hljs-template-variable">{{chart.bar-chart}}</span><span class="xml">\n\n</span><span class="hljs-template-tag">{{/<span class="hljs-name">ember-sparkles</span>}}</span><span class="xml">\n</span></pre>\n      <h5>\n       javascript\n      </h5>\n      <pre class="javascript ember-view hljs" id="ember518"><span class="hljs-keyword">import</span> Ember <span class="hljs-keyword">from</span> <span class="hljs-string">\'ember\'</span>;\n<span class="hljs-keyword">import</span> dateify <span class="hljs-keyword">from</span> <span class="hljs-string">\'dummy/utils/dateify\'</span>;\n<span class="hljs-keyword">import</span> { timeseriesData } <span class="hljs-keyword">from</span> <span class="hljs-string">\'dummy/utils/fixture-data\'</span>;\n<span class="hljs-keyword">import</span> { max } <span class="hljs-keyword">from</span> <span class="hljs-string">\'d3-array\'</span>;\n\n<span class="hljs-keyword">let</span> dateified = timeseriesData.map(<span class="hljs-function"><span class="hljs-params">t</span> =&gt;</span> {\n  t.data = dateify(t.data);\n  <span class="hljs-keyword">return</span> t;\n});\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> Ember.Controller.extend({\n  <span class="hljs-attr">padding</span>: <span class="hljs-number">0.02</span>,\n  <span class="hljs-attr">dataIdx</span>: <span class="hljs-number">1</span>,\n  <span class="hljs-attr">barData</span>: <span class="hljs-keyword">new</span> Ember.A(dateified),\n\n  <span class="hljs-attr">data</span>: Ember.computed(<span class="hljs-string">\'barData\'</span>, <span class="hljs-string">\'dataIdx\'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n    <span class="hljs-keyword">let</span> b = <span class="hljs-keyword">this</span>.get(<span class="hljs-string">\'barData\'</span>);\n    <span class="hljs-keyword">let</span> idx = <span class="hljs-keyword">this</span>.get(<span class="hljs-string">\'dataIdx\'</span>);\n    <span class="hljs-keyword">let</span> result = b.filterBy(<span class="hljs-string">\'id\'</span>, idx);\n    <span class="hljs-keyword">return</span> result[<span class="hljs-number">0</span>].data;\n  }),\n\n  <span class="hljs-attr">outputMax</span>: Ember.computed(<span class="hljs-string">\'data\'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n    <span class="hljs-keyword">let</span> data = <span class="hljs-keyword">this</span>.get(<span class="hljs-string">\'data\'</span>);\n    <span class="hljs-keyword">return</span> max(data, ({ value }) =&gt; value);\n  }),\n\n  <span class="hljs-attr">actions</span>: {\n    toggleData() {\n      <span class="hljs-keyword">let</span> ids = <span class="hljs-keyword">this</span>.get(<span class="hljs-string">\'barData\'</span>).mapBy(<span class="hljs-string">\'id\'</span>);\n      <span class="hljs-keyword">let</span> dataIdx = <span class="hljs-keyword">this</span>.get(<span class="hljs-string">\'dataIdx\'</span>);\n      <span class="hljs-keyword">let</span> nonPlotted = ids.filter(<span class="hljs-function"><span class="hljs-params">idx</span> =&gt;</span> idx !== dataIdx);\n      <span class="hljs-keyword">let</span> newRandom = nonPlotted[<span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random() * nonPlotted.length)];\n      <span class="hljs-keyword">this</span>.set(<span class="hljs-string">\'dataIdx\'</span>, newRandom);\n    }\n  }\n});\n</pre>\n     </div>\n    </div>\n   </div>\n  </div>\n </body>\n</html>'b'<!DOCTYPE html>\n<html xmlns="http://www.w3.org/1999/xhtml">\n <head>\n  <meta charset="utf-8"/>\n  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>\n  <title>\n   Ember Sparkles\n  </title>\n  <meta content="" name="description"/>\n  <meta content="width=device-width, initial-scale=1" name="viewport"/>\n  <meta content="%7B%22modulePrefix%22%3A%22dummy%22%2C%22environment%22%3A%22production%22%2C%22rootURL%22%3A%22/ember-sparkles/%22%2C%22locationType%22%3A%22hash%22%2C%22EmberENV%22%3A%7B%22FEATURES%22%3A%7B%7D%2C%22EXTEND_PROTOTYPES%22%3A%7B%22Date%22%3Afalse%7D%7D%2C%22APP%22%3A%7B%22name%22%3A%22ember-sparkles%22%2C%22version%22%3A%220.4.17%22%7D%2C%22something%22%3A%22test%22%2C%22exportApplicationGlobal%22%3Afalse%2C%22resizeServiceDefaults%22%3A%7B%22widthSensitive%22%3Atrue%2C%22heightSensitive%22%3Atrue%2C%22debounceTimeout%22%3A200%2C%22injectionFactories%22%3A%5B%22view%22%2C%22component%22%5D%7D%7D" name="dummy/config/environment"/>\n  <link href="/ember-sparkles/assets/vendor-57af878e3fd9c27e41d03ea9a4d87ab4.css" rel="stylesheet"/>\n  <link href="/ember-sparkles/assets/dummy-7f2622334d99205f339d6a7148f4c65f.css" rel="stylesheet"/>\n </head>\n <body class="ember-application">\n  <script src="/ember-sparkles/assets/vendor-2ac8cac356aa4b7cdbab0c1026790766.js">\n  </script>\n  <script src="/ember-sparkles/assets/dummy-95d628aa703a85bf6e14e38413048e77.js">\n  </script>\n  <div class="ember-view" id="ember310">\n   <div class="container navbar">\n    <div class="row">\n     <div class="eleven columns">\n      <h5 class="title">\n       ember-sparkles\n      </h5>\n     </div>\n     <div class="one columns">\n      <a href="https://github.com/LocusEnergy/ember-sparkles" target="_blank">\n       source\n      </a>\n     </div>\n    </div>\n   </div>\n   <div class="container graphics">\n    <div class="row graphics">\n     <div class="two columns">\n      <div class="side-menu">\n       <ul>\n        <li>\n         <a class="active ember-view" href="#/bar-chart" id="ember341">\n          Simple Bars\n         </a>\n        </li>\n        <li>\n         <a class="ember-view" href="#/grouped-bar-chart" id="ember348">\n          Grouped Bars\n         </a>\n        </li>\n        <li>\n         <a class="ember-view" href="#/line-chart" id="ember364">\n          Lines\n         </a>\n        </li>\n        <li>\n         <a class="ember-view" href="#/pie-chart" id="ember380">\n          Pie\n         </a>\n        </li>\n        <li>\n         <a class="ember-view" href="#/data-join" id="ember396">\n          Data Join I\n         </a>\n        </li>\n        <li>\n         <a class="ember-view" href="#/sine-wave" id="ember412">\n          Sine Wave\n         </a>\n        </li>\n       </ul>\n      </div>\n     </div>\n     <div class="ten columns svg-container">\n      <svg class="ember-view" height="100%" id="ember460" width="100%" xmlns="http://www.w3.org/2000/svg">\n       <g transform="translate(40,20)">\n        <g class="ember-sparkles--axis ember-view" id="ember503">\n         <g class="axis" fill="none" font-family="sans-serif" font-size="10" text-anchor="middle" transform="translate(0, 307)">\n          <path class="domain" d="M0.5,6V0.5H691.5V6" stroke="#000">\n          </path>\n          <g class="tick" opacity="1" transform="translate(100,0)">\n           <line stroke="#000" x1="0.5" x2="0.5" y2="6">\n           </line>\n           <text dy="0.71em" fill="#000" x="0.5" y="9">\n            2016-03-02\n           </text>\n          </g>\n          <g class="tick" opacity="1" transform="translate(264,0)">\n           <line stroke="#000" x1="0.5" x2="0.5" y2="6">\n           </line>\n           <text dy="0.71em" fill="#000" x="0.5" y="9">\n            2016-03-03\n           </text>\n          </g>\n          <g class="tick" opacity="1" transform="translate(428,0)">\n           <line stroke="#000" x1="0.5" x2="0.5" y2="6">\n           </line>\n           <text dy="0.71em" fill="#000" x="0.5" y="9">\n            2016-03-04\n           </text>\n          </g>\n          <g class="tick" opacity="1" transform="translate(592,0)">\n           <line stroke="#000" x1="0.5" x2="0.5" y2="6">\n           </line>\n           <text dy="0.71em" fill="#000" x="0.5" y="9">\n            2016-03-05\n           </text>\n          </g>\n         </g>\n         <text class="label" dx="-100" dy="337" style="text-anchor: end;" x="781">\n          Date (Y-M-D)\n         </text>\n        </g>\n        <g class="ember-sparkles--axis ember-view" id="ember505">\n         <g class="axis" fill="none" font-family="sans-serif" font-size="10" text-anchor="end" transform="">\n          <path class="domain" d="M-6,307.5H0.5V0.5H-6" stroke="#000">\n          </path>\n          <g class="tick" opacity="1" transform="translate(0,307)">\n           <line stroke="#000" x2="-6" y1="0.5" y2="0.5">\n           </line>\n           <text dy="0.32em" fill="#000" x="-9" y="0.5">\n            0\n           </text>\n          </g>\n          <g class="tick" opacity="1" transform="translate(0,263.14285714285717)">\n           <line stroke="#000" x2="-6" y1="0.5" y2="0.5">\n           </line>\n           <text dy="0.32em" fill="#000" x="-9" y="0.5">\n            5\n           </text>\n          </g>\n          <g class="tick" opacity="1" transform="translate(0,219.28571428571428)">\n           <line stroke="#000" x2="-6" y1="0.5" y2="0.5">\n           </line>\n           <text dy="0.32em" fill="#000" x="-9" y="0.5">\n            10\n           </text>\n          </g>\n          <g class="tick" opacity="1" transform="translate(0,175.42857142857144)">\n           <line stroke="#000" x2="-6" y1="0.5" y2="0.5">\n           </line>\n           <text dy="0.32em" fill="#000" x="-9" y="0.5">\n            15\n           </text>\n          </g>\n          <g class="tick" opacity="1" transform="translate(0,131.57142857142858)">\n           <line stroke="#000" x2="-6" y1="0.5" y2="0.5">\n           </line>\n           <text dy="0.32em" fill="#000" x="-9" y="0.5">\n            20\n           </text>\n          </g>\n          <g class="tick" opacity="1" transform="translate(0,87.71428571428572)">\n           <line stroke="#000" x2="-6" y1="0.5" y2="0.5">\n           </line>\n           <text dy="0.32em" fill="#000" x="-9" y="0.5">\n            25\n           </text>\n          </g>\n          <g class="tick" opacity="1" transform="translate(0,43.85714285714289)">\n           <line stroke="#000" x2="-6" y1="0.5" y2="0.5">\n           </line>\n           <text dy="0.32em" fill="#000" x="-9" y="0.5">\n            30\n           </text>\n          </g>\n          <g class="tick" opacity="1" transform="translate(0,0)">\n           <line stroke="#000" x2="-6" y1="0.5" y2="0.5">\n           </line>\n           <text dy="0.32em" fill="#000" x="-9" y="0.5">\n            35\n           </text>\n          </g>\n         </g>\n         <text class="label" dx="-153.5" dy="-30" style="text-anchor: end;" transform="rotate(-90)">\n          Watts\n         </text>\n        </g>\n        <g class="ember-sparkles--bar-chart ember-view" id="ember511">\n         <rect class="bar" height="175.42857142857142" style="fill: rgb(99, 121, 57); opacity: 1;" width="131" x="34" y="131.57142857142858">\n         </rect>\n         <rect class="bar" height="131.57142857142856" style="fill: rgb(99, 121, 57); opacity: 1;" width="131" x="198" y="175.42857142857144">\n         </rect>\n         <rect class="bar" height="307" style="fill: rgb(99, 121, 57); opacity: 1;" width="131" x="362" y="0">\n         </rect>\n         <rect class="bar" height="219.28571428571428" style="fill: rgb(99, 121, 57); opacity: 1;" width="131" x="526" y="87.71428571428572">\n         </rect>\n        </g>\n       </g>\n      </svg>\n      <button data-ember-action="" data-ember-action-512="512">\n       toggle\n      </button>\n      <h5>\n       htmlbars\n      </h5>\n      <pre class="htmlbars ember-view hljs" id="ember517"><span class="xml"></span><span class="hljs-template-tag">{{#<span class="hljs-name">ember-sparkles</span>\n  <span class="hljs-attr">data</span>=data\n  <span class="hljs-built_in">input</span>-<span class="hljs-attr">key</span>=\'ts\'\n  output-<span class="hljs-attr">key</span>=\'value\'\n\n  scale-<span class="hljs-attr">type</span>=\'band\'\n  x-<span class="hljs-attr">domain</span>=(map (r/<span class="hljs-built_in">get</span> \'ts\') data)\n  y-<span class="hljs-attr">domain</span>=(append <span class="hljs-number">0</span> outputMax)\n\n  <span class="hljs-keyword">as</span> |chart|}}</span><span class="xml">\n\n  </span><span class="hljs-template-variable">{{chart.x-axis\n    tick-format=(d3-time-format \'%Y-%m-%d\')\n    label=\'Date (Y-M-D)\'\n    dy=(add chart.height 30)\n    dx=-100\n  }}</span><span class="xml">\n\n  </span><span class="hljs-template-variable">{{chart.y-axis\n    label=\'Watts\'\n    ticks=5\n    yGrid=true\n    dx=(mult -0.5 chart.height)\n    dy=-30\n  }}</span><span class="xml">\n\n  </span><span class="hljs-template-variable">{{chart.bar-chart}}</span><span class="xml">\n\n</span><span class="hljs-template-tag">{{/<span class="hljs-name">ember-sparkles</span>}}</span><span class="xml">\n</span></pre>\n      <h5>\n       javascript\n      </h5>\n      <pre class="javascript ember-view hljs" id="ember518"><span class="hljs-keyword">import</span> Ember <span class="hljs-keyword">from</span> <span class="hljs-string">\'ember\'</span>;\n<span class="hljs-keyword">import</span> dateify <span class="hljs-keyword">from</span> <span class="hljs-string">\'dummy/utils/dateify\'</span>;\n<span class="hljs-keyword">import</span> { timeseriesData } <span class="hljs-keyword">from</span> <span class="hljs-string">\'dummy/utils/fixture-data\'</span>;\n<span class="hljs-keyword">import</span> { max } <span class="hljs-keyword">from</span> <span class="hljs-string">\'d3-array\'</span>;\n\n<span class="hljs-keyword">let</span> dateified = timeseriesData.map(<span class="hljs-function"><span class="hljs-params">t</span> =&gt;</span> {\n  t.data = dateify(t.data);\n  <span class="hljs-keyword">return</span> t;\n});\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> Ember.Controller.extend({\n  <span class="hljs-attr">padding</span>: <span class="hljs-number">0.02</span>,\n  <span class="hljs-attr">dataIdx</span>: <span class="hljs-number">1</span>,\n  <span class="hljs-attr">barData</span>: <span class="hljs-keyword">new</span> Ember.A(dateified),\n\n  <span class="hljs-attr">data</span>: Ember.computed(<span class="hljs-string">\'barData\'</span>, <span class="hljs-string">\'dataIdx\'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n    <span class="hljs-keyword">let</span> b = <span class="hljs-keyword">this</span>.get(<span class="hljs-string">\'barData\'</span>);\n    <span class="hljs-keyword">let</span> idx = <span class="hljs-keyword">this</span>.get(<span class="hljs-string">\'dataIdx\'</span>);\n    <span class="hljs-keyword">let</span> result = b.filterBy(<span class="hljs-string">\'id\'</span>, idx);\n    <span class="hljs-keyword">return</span> result[<span class="hljs-number">0</span>].data;\n  }),\n\n  <span class="hljs-attr">outputMax</span>: Ember.computed(<span class="hljs-string">\'data\'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n    <span class="hljs-keyword">let</span> data = <span class="hljs-keyword">this</span>.get(<span class="hljs-string">\'data\'</span>);\n    <span class="hljs-keyword">return</span> max(data, ({ value }) =&gt; value);\n  }),\n\n  <span class="hljs-attr">actions</span>: {\n    toggleData() {\n      <span class="hljs-keyword">let</span> ids = <span class="hljs-keyword">this</span>.get(<span class="hljs-string">\'barData\'</span>).mapBy(<span class="hljs-string">\'id\'</span>);\n      <span class="hljs-keyword">let</span> dataIdx = <span class="hljs-keyword">this</span>.get(<span class="hljs-string">\'dataIdx\'</span>);\n      <span class="hljs-keyword">let</span> nonPlotted = ids.filter(<span class="hljs-function"><span class="hljs-params">idx</span> =&gt;</span> idx !== dataIdx);\n      <span class="hljs-keyword">let</span> newRandom = nonPlotted[<span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random() * nonPlotted.length)];\n      <span class="hljs-keyword">this</span>.set(<span class="hljs-string">\'dataIdx\'</span>, newRandom);\n    }\n  }\n});\n</pre>\n     </div>\n    </div>\n   </div>\n  </div>\n </body>\n</html>'