b'<html lang="en-GB">\n <head>\n  <meta charset="utf-8"/>\n  <title>\n   Ractive.js ractive-adaptors-mongoose adaptor plugin\n  </title>\n  <!-- CSS -->\n  <link href="http://fonts.googleapis.com/css?family=Voltaire" rel="stylesheet" type="text/css"/>\n  <link href="demo/main.css" rel="stylesheet"/>\n  <!-- TODO add styles specific to this demo -->\n  <style type="text/css">\n  </style>\n </head>\n <body class="transforms-enabled">\n  <!-- if the project is on GitHub, add a fork me button! -->\n  <!-- <a class=\'forkme\' href=\'https://github.com/you/repo\'>Fork me on GitHub</a> -->\n  <header>\n   <h1>\n    Ractive.js ractive-adaptors-mongoose adaptor plugin\n   </h1>\n   <p class="strap">\n    <span class="download">\n     download:\n     <a href="https://github.com/cncolder/ractive-adaptors-mongoose/raw/master/ractive-adaptors-mongoose.js">\n      ractive-adaptors-mongoose.js\n     </a>\n     or\n     <a href="https://github.com/cncolder/ractive-adaptors-mongoose/raw/master/ractive-adaptors-mongoose.min.js">\n      .min.js\n     </a>\n    </span>\n    <span class="more-plugins">\n     more plugins at\n     <a href="http://docs.ractivejs.org/latest/plugins">\n      docs.ractivejs.org/latest/plugins\n     </a>\n    </span>\n   </p>\n  </header>\n  <main>\n   <p>\n    Mongoose 3.9.2+ allow us bundle it by browserify. This make us a new way to share model between server/client side.\n   </p>\n   <p>\n    This plugin is very young. Mongoose 3.9.x is unstable version. Just play it. Don\'t use for production.\n   </p>\n   <div class="clearfix" id="demo">\n    <p>\n     My name is Jim Green\n    </p>\n    <p>\n     My first name is Jim\n    </p>\n    <p>\n     My last name is Green\n    </p>\n    <p>\n     I have -1 years old\n    </p>\n    <p>\n     Really? Path `age` (-1) is less than minimum allowed value (1).\n    </p>\n    <p>\n     My coins: 3++\n    </p>\n   </div>\n   <p>\n    You can play with person variable on your browser console.\n   </p>\n   <pre class="prettyprint lang-js prettyprinted" style=""><span class="pln">      person</span><span class="pun">.</span><span class="pln">name</span><span class="pun">.</span><span class="pln">first </span><span class="pun">=</span><span class="pln"> </span><span class="str">\'Lee\'</span><span class="pln">\n      person</span><span class="pun">.</span><span class="pln">fullname </span><span class="pun">=</span><span class="pln"> </span><span class="str">\'John White\'</span><span class="pln">\n      person</span><span class="pun">.</span><span class="pln">age </span><span class="pun">=</span><span class="pln"> </span><span class="lit">20</span><span class="pln">\n      person</span><span class="pun">.</span><span class="pln">errors </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">null</span><span class="pln"> </span><span class="com">// I\'m working for fix this issue.</span><span class="pln">\n      person</span><span class="pun">.</span><span class="pln">validate</span><span class="pun">()</span><span class="pln">\n    </span></pre>\n   <pre class="prettyprint lang-html prettyprinted" id="demo-template-view" style=""><span class="tag">&lt;p&gt;</span><span class="pln">My name is {{ fullname }}</span><span class="tag">&lt;/p&gt;</span><span class="pln">\n</span><span class="tag">&lt;p&gt;</span><span class="pln">My first name is {{ name.first }}</span><span class="tag">&lt;/p&gt;</span><span class="pln">\n</span><span class="tag">&lt;p&gt;</span><span class="pln">My last name is {{ name.last }}</span><span class="tag">&lt;/p&gt;</span><span class="pln">\n</span><span class="tag">&lt;p&gt;</span><span class="pln">I have {{ age }} years old</span><span class="tag">&lt;/p&gt;</span><span class="pln">\n</span><span class="tag">&lt;p&gt;</span><span class="pln">Really? {{ errors.age.message }}</span><span class="tag">&lt;/p&gt;</span><span class="pln">\n</span><span class="tag">&lt;p&gt;</span><span class="pln">My coins: {{ coin }}++</span><span class="tag">&lt;/p&gt;</span></pre>\n   <pre class="prettyprint lang-js prettyprinted" id="demo-code-view" style=""><span class="pln">schema </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> mongoose</span><span class="pun">.</span><span class="typ">Schema</span><span class="pun">({</span><span class="pln">\n  name</span><span class="pun">:</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n    first</span><span class="pun">:</span><span class="pln"> </span><span class="typ">String</span><span class="pun">,</span><span class="pln">\n    last</span><span class="pun">:</span><span class="pln"> </span><span class="typ">String</span><span class="pln">\n  </span><span class="pun">},</span><span class="pln">\n  age</span><span class="pun">:</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n    type</span><span class="pun">:</span><span class="pln"> </span><span class="typ">Number</span><span class="pun">,</span><span class="pln">\n    min</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pln">\n  </span><span class="pun">},</span><span class="pln">\n  coin</span><span class="pun">:</span><span class="pln"> </span><span class="typ">Number</span><span class="pln">\n</span><span class="pun">});</span><span class="pln">\n\nschema</span><span class="pun">.</span><span class="pln">virtual</span><span class="pun">(</span><span class="str">\'fullname\'</span><span class="pun">)</span><span class="pln">\n  </span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="kwd">function</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n    </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">name</span><span class="pun">.</span><span class="pln">first </span><span class="pun">+</span><span class="pln"> </span><span class="str">\' \'</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">name</span><span class="pun">.</span><span class="pln">last</span><span class="pun">;</span><span class="pln">\n  </span><span class="pun">})</span><span class="pln">\n  </span><span class="pun">.</span><span class="kwd">set</span><span class="pun">(</span><span class="kwd">function</span><span class="pun">(</span><span class="pln">v</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n    </span><span class="kwd">var</span><span class="pln"> parts </span><span class="pun">=</span><span class="pln"> v</span><span class="pun">.</span><span class="pln">split</span><span class="pun">(</span><span class="str">\' \'</span><span class="pun">);</span><span class="pln">\n    </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">name</span><span class="pun">.</span><span class="pln">first </span><span class="pun">=</span><span class="pln"> parts</span><span class="pun">[</span><span class="lit">0</span><span class="pun">];</span><span class="pln">\n    </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">name</span><span class="pun">.</span><span class="pln">last </span><span class="pun">=</span><span class="pln"> parts</span><span class="pun">[</span><span class="lit">1</span><span class="pun">];</span><span class="pln">\n  </span><span class="pun">});</span><span class="pln">\n\nperson </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> mongoose</span><span class="pun">.</span><span class="typ">Document</span><span class="pun">({</span><span class="pln">\n  name</span><span class="pun">:</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n    first</span><span class="pun">:</span><span class="pln"> </span><span class="str">\'Jim\'</span><span class="pun">,</span><span class="pln">\n    last</span><span class="pun">:</span><span class="pln"> </span><span class="str">\'Green\'</span><span class="pln">\n  </span><span class="pun">},</span><span class="pln">\n  age</span><span class="pun">:</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1</span><span class="pun">,</span><span class="pln">\n  coin</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pln">\n</span><span class="pun">},</span><span class="pln"> schema</span><span class="pun">);</span><span class="pln">\n\nractive </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Ractive</span><span class="pun">({</span><span class="pln">\n  el</span><span class="pun">:</span><span class="pln"> </span><span class="str">\'demo\'</span><span class="pun">,</span><span class="pln">\n  template</span><span class="pun">:</span><span class="pln"> </span><span class="str">\'#demo-template\'</span><span class="pun">,</span><span class="pln">\n  adapt</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="str">\'mongoose\'</span><span class="pun">],</span><span class="pln">\n  data</span><span class="pun">:</span><span class="pln"> person\n</span><span class="pun">});</span><span class="pln">\n\nperson</span><span class="pun">.</span><span class="pln">validate</span><span class="pun">();</span><span class="pln">\n\nsetInterval</span><span class="pun">(</span><span class="kwd">function</span><span class="pln"> </span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n  person</span><span class="pun">.</span><span class="pln">coin </span><span class="pun">+=</span><span class="pln"> </span><span class="lit">1</span><span class="pun">;</span><span class="pln">\n</span><span class="pun">},</span><span class="pln"> </span><span class="lit">500</span><span class="pun">);</span></pre>\n  </main>\n  <!-- add additional info such as your homepage here, if you want -->\n  <footer>\n   <p>\n    Copyright \xc2\xa9 2014 colder. Licensed MIT\n   </p>\n  </footer>\n  <!-- Demo template -->\n  <script id="demo-template" type="text/ractive">\n   <p>My name is {{ fullname }}</p>\n    <p>My first name is {{ name.first }}</p>\n    <p>My last name is {{ name.last }}</p>\n    <p>I have {{ age }} years old</p>\n    <p>Really? {{ errors.age.message }}</p>\n    <p>My coins: {{ coin }}++</p>\n  </script>\n  <!-- Dependencies -->\n  <script src="demo/ractive.min.js">\n  </script>\n  <script src="demo/mongoose.min.js">\n  </script>\n  <script src="ractive-adaptors-mongoose.js">\n  </script>\n  <!-- Demo code -->\n  <script id="demo-code">\n   schema = new mongoose.Schema({\n      name: {\n        first: String,\n        last: String\n      },\n      age: {\n        type: Number,\n        min: 1\n      },\n      coin: Number\n    });\n    \n    schema.virtual(\'fullname\')\n      .get(function() {\n        return this.name.first + \' \' + this.name.last;\n      })\n      .set(function(v) {\n        var parts = v.split(\' \');\n        this.name.first = parts[0];\n        this.name.last = parts[1];\n      });\n    \n    person = new mongoose.Document({\n      name: {\n        first: \'Jim\',\n        last: \'Green\'\n      },\n      age: -1,\n      coin: 0\n    }, schema);\n    \n\t\tractive = new Ractive({\n\t\t\tel: \'demo\',\n\t\t\ttemplate: \'#demo-template\',\n      adapt: [\'mongoose\'],\n      data: person\n\t\t});\n    \n    person.validate();\n    \n    setInterval(function () {\n      person.coin += 1;\n    }, 500);\n  </script>\n  <!-- Insert code into the page -->\n  <script src="demo/prettify.js">\n  </script>\n  <script src="demo/demo.js">\n  </script>\n </body>\n</html>'