b'<html>\n <head>\n  <title>\n   Mithril.js\n  </title>\n  <link href="reveal.min.css" rel="stylesheet"/>\n  <link href="theme.css" rel="stylesheet"/>\n  <link href="code-theme.css" rel="stylesheet"/>\n  <script src="reveal.min.js">\n  </script>\n  <script src="prism.min.js">\n  </script>\n  <script src="mithril.min.js">\n  </script>\n </head>\n <body>\n  <div class="reveal default center" data-background-transition="default" data-transition-speed="default">\n   <div class="slides" style="width: 960px; height: 700px; zoom: 0.912857;">\n    <section class="present" style="top: -93.5px; display: block;">\n     <h3>\n      Leo Horie\n     </h3>\n     <p>\n      Developer at Klick Health\n     </p>\n    </section>\n    <section class="future" hidden="" style="top: -100.5px; display: block;">\n     <h1>\n      Mithril.js\n     </h1>\n    </section>\n    <section class="future" hidden="" style="top: -123px; display: block;">\n     <h3>\n      Design Goals\n     </h3>\n     <ul>\n      <li>\n       Small\n      </li>\n      <li>\n       Fast\n      </li>\n      <li>\n       Pragmatic\n      </li>\n     </ul>\n    </section>\n    <section class="future" hidden="" style="top: -111px; display: block;">\n     <h3>\n      Simplicity through isomorphisms\n     </h3>\n     <p>\n      Two things are isomorphic if they share\n      <br/>\n      a set of properties that interest us\n     </p>\n    </section>\n    <section class="future" hidden="" style="top: -20px; display: none;">\n     <h3>\n      Pick features that are\n     </h3>\n     <h3>\n      isomorphic to familiar things,\n     </h3>\n     <h3>\n      but more powerful\n     </h3>\n    </section>\n    <section class="future" hidden="" style="top: -20px; display: none;">\n     <h3>\n      Getter-Setters\n     </h3>\n     <h4>\n      Same as variables, but functional\n     </h4>\n     <div style="float:left;width:50%">\n      <pre class="language-javascript"><code class="language-javascript" data-language="javascript"><span class="token comment" spellcheck="true">\n//a variable\n</span><span class="token keyword">var</span> thing <span class="token operator">=</span> <span class="token string">"Macbook"</span><span class="token punctuation">;</span><span class="token lf">\n</span>thing <span class="token operator">=</span> <span class="token string">"iPhone"</span><span class="token punctuation">;</span><span class="token lf">\n</span>console<span class="token punctuation">.</span><span class="token function">log<span class="token punctuation">(</span></span> things <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true"> // "iPhone"\n</span><span class="token tab">\t</span><span class="token tab">\t</span></code></pre>\n     </div>\n     <div style="float:left;width:50%">\n      <pre class="language-javascript"><code class="language-javascript" data-language="javascript"><span class="token comment" spellcheck="true">\n//a getter-setter\n</span><span class="token keyword">var</span> thing <span class="token operator">=</span> m<span class="token punctuation">.</span><span class="token function">prop<span class="token punctuation">(</span></span> <span class="token string">"MacBook"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token lf">\n</span><span class="token function">thing<span class="token punctuation">(</span></span> <span class="token string">"iPhone"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token lf">\n</span>console<span class="token punctuation">.</span><span class="token function">log<span class="token punctuation">(</span></span> <span class="token function">thing<span class="token punctuation">(</span></span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true"> // "iPhone"\n</span><span class="token tab">\t</span><span class="token tab">\t</span></code></pre>\n     </div>\n     <div style="clear:both;">\n     </div>\n    </section>\n    <section class="future" hidden="" style="top: -20px; display: none;">\n     <h3>\n      Promises\n     </h3>\n     <p>\n      Makes Async similar to Sync\n     </p>\n     <pre class="language-javascript"><code class="language-javascript" data-language="javascript"><span class="token lf">\n</span><span class="token keyword">var</span> things <span class="token operator">=</span> m<span class="token punctuation">.</span><span class="token function">request<span class="token punctuation">(</span></span><span class="token punctuation">{</span>method<span class="token punctuation">:</span> <span class="token string">"GET"</span><span class="token punctuation">,</span> url<span class="token punctuation">:</span> <span class="token string">"/things.json"</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"> //get a list of things\n</span>  <span class="token punctuation">.</span><span class="token function">then<span class="token punctuation">(</span></span><span class="token keyword">function</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> list<span class="token punctuation">.</span><span class="token function">slice<span class="token punctuation">(</span></span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true"> //then slice it\n</span>  <span class="token punctuation">.</span><span class="token function">then<span class="token punctuation">(</span></span><span class="token keyword">function</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> list<span class="token punctuation">.</span><span class="token function">slice<span class="token punctuation">(</span></span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true"> //then slice it some more\n</span><span class="token tab">\t</span></code></pre>\n     <p>\n      e.g. Compare to jQuery\n     </p>\n     <pre class="language-javascript"><code class="language-javascript" data-language="javascript"><span class="token lf">\n</span><span class="token keyword">var</span> things <span class="token operator">=</span> $<span class="token punctuation">(</span><span class="token string">".things"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"> //get a list of things\n</span>  <span class="token punctuation">.</span><span class="token function">slice<span class="token punctuation">(</span></span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true"> //then slice it\n</span>  <span class="token punctuation">.</span><span class="token function">slice<span class="token punctuation">(</span></span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment" spellcheck="true"> //then slice it some more\n</span><span class="token tab">\t</span></code></pre>\n    </section>\n    <section class="future" hidden="" style="top: -20px; display: none;">\n     <h3>\n      Virtual DOM\n     </h3>\n     <p>\n      Just like HTML, but in Javascript\n     </p>\n     <pre class="language-javascript"><code class="language-javascript" data-language="javascript"><span class="token lf">\n</span><span class="token function">m<span class="token punctuation">(</span></span><span class="token string">"div"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>                                    <span class="token comment" spellcheck="true"> // &lt;div&gt;\n</span>  <span class="token function">m<span class="token punctuation">(</span></span><span class="token string">"a"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>href<span class="token punctuation">:</span> <span class="token string">"<a class="token url-link" href="http://google.ca">http://google.ca</a>"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">"Google"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"> //   &lt;a href="<a class="token url-link" href="http://google.ca">http://google.ca</a>"&gt;Google&lt;/a&gt;\n</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                                            <span class="token comment" spellcheck="true"> // &lt;/div&gt;\n</span><span class="token tab">\t</span></code></pre>\n    </section>\n    <section class="future" hidden="" style="top: -20px; display: none;">\n     <h5>\n      Why not just use HTML?\n     </h5>\n     <br/>\n     <h3>\n      Templating = Html +\n      <em>\n       Logic*\n      </em>\n     </h3>\n     <br/>\n     <h5>\n      *Logic is complex!\n     </h5>\n    </section>\n    <section class="future" hidden="" style="top: -20px; display: none;">\n     <h3>\n      Case study: Angular.js\n     </h3>\n     <h5>\n      Loop-related things...\n     </h5>\n     <ul>\n      <li>\n       ng-repeat\n      </li>\n      <li>\n       track by\n      </li>\n      <li>\n       ng-repeat-start/ng-repeat-end\n      </li>\n      <li>\n       ng-options and list comprehension syntax\n      </li>\n      <li>\n       ng-init\n      </li>\n      <li>\n       filters\n      </li>\n      <li>\n       $index\n      </li>\n      <li>\n       $scope semantics\n      </li>\n      <li>\n       error handling semantics\n      </li>\n     </ul>\n    </section>\n    <section class="future" hidden="" style="top: -20px; display: none;">\n     <h3>\n      Case study: jQuery\n     </h3>\n     <h5>\n      Loops: Need a lot of boilerplate code\n     </h5>\n     <ul>\n      <li>\n       render whole list\n      </li>\n      <li>\n       update one item\n      </li>\n      <li>\n       add item\n      </li>\n      <li>\n       remove item\n      </li>\n      <li>\n       map data to element\n      </li>\n      <li>\n       find element by data / find data by element (to update / remove)\n      </li>\n      <li>\n       diff\n      </li>\n      <li>\n       batch redraws\n      </li>\n     </ul>\n    </section>\n    <section class="future" hidden="" style="top: -20px; display: none;">\n     <h5>\n      HTML is easier to map onto javascript than the other way around\n     </h5>\n     <pre class="language-javascript"><code class="language-javascript" data-language="javascript"><span class="token lf">\n</span><span class="token function">m<span class="token punctuation">(</span></span><span class="token string">"div"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>                                              <span class="token comment" spellcheck="true"> //&lt;div&gt;\n</span>  <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map<span class="token punctuation">(</span></span><span class="token keyword">function</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token punctuation">{</span>                           <span class="token comment" spellcheck="true"> //  &lt;a href="/page/1"&gt;Page 1&lt;/a&gt;\n</span>    <span class="token keyword">return</span> <span class="token function">m<span class="token punctuation">(</span></span><span class="token string">"a"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>href<span class="token punctuation">:</span> <span class="token string">"/page/"</span> <span class="token operator">+</span> num<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">"Page "</span> <span class="token operator">+</span> num<span class="token punctuation">)</span><span class="token comment" spellcheck="true"> //  &lt;a href="/page/2"&gt;Page 2&lt;/a&gt;\n</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span>                                                    <span class="token comment" spellcheck="true"> //  &lt;a href="/page/3"&gt;Page 3&lt;/a&gt;\n</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                                                      <span class="token comment" spellcheck="true"> //&lt;/div&gt;\n</span><span class="token tab">\t</span></code></pre>\n     <p>\n      Let the browser and the framework do the heavy lifting\n     </p>\n    </section>\n    <section class="future" hidden="" style="top: -20px; display: none;">\n     <h3>\n      Leverage the ecosystem\n     </h3>\n     <div style="float:left;width:33%">\n      <pre class="language-javascript"><code class="language-javascript" data-language="javascript"><span class="token comment" spellcheck="true">\n// Vanilla Javascript\n</span><span class="token function">m<span class="token punctuation">(</span></span><span class="token string">"ul.things"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token lf">\n</span>  <span class="token function">m<span class="token punctuation">(</span></span><span class="token string">"li"</span><span class="token punctuation">,</span> <span class="token string">"iPhone"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token lf">\n</span>  <span class="token function">m<span class="token punctuation">(</span></span><span class="token string">"li"</span><span class="token punctuation">,</span> <span class="token string">"Macbook"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token lf">\n</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token lf">\n</span><span class="token tab">\t</span><span class="token tab">\t</span></code></pre>\n     </div>\n     <div style="float:left;width:33%">\n      <pre class="language-javascript"><code class="language-javascript" data-language="javascript"><span class="token lf">\n</span># Coffescript<span class="token lf">\n</span>m <span class="token string">"ul.things"</span><span class="token punctuation">,</span><span class="token lf">\n</span>  m <span class="token string">"li"</span><span class="token punctuation">,</span> <span class="token string">"iPhone"</span><span class="token lf">\n</span>  m <span class="token string">"li"</span><span class="token punctuation">,</span> <span class="token string">"Macbook"</span><span class="token lf">\n</span><span class="token tab">\t</span><span class="token lf">\n</span><span class="token tab">\t</span><span class="token tab">\t</span></code></pre>\n     </div>\n     <div style="float:left;width:33%">\n      <pre class="language-markup"><code class="language-markup" data-language="markup"><span class="token lf">\n</span>// React\'s JSX (via MSX)<span class="token lf">\n</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><a class="token tag-id" href="http://docs.webplatform.org/wiki/html/elements/ul" target="_blank">ul</a></span> <a class="token attr-name" href="http://docs.webplatform.org/wiki/html/attributes/class" target="_blank">class</a><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>things<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token lf">\n</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><a class="token tag-id" href="http://docs.webplatform.org/wiki/html/elements/li" target="_blank">li</a></span><span class="token punctuation">&gt;</span></span>iPhone<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><a class="token tag-id" href="http://docs.webplatform.org/wiki/html/elements/li" target="_blank">li</a></span><span class="token punctuation">&gt;</span></span><span class="token lf">\n</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><a class="token tag-id" href="http://docs.webplatform.org/wiki/html/elements/li" target="_blank">li</a></span><span class="token punctuation">&gt;</span></span>Macbook<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><a class="token tag-id" href="http://docs.webplatform.org/wiki/html/elements/li" target="_blank">li</a></span><span class="token punctuation">&gt;</span></span><span class="token lf">\n</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><a class="token tag-id" href="http://docs.webplatform.org/wiki/html/elements/ul" target="_blank">ul</a></span><span class="token punctuation">&gt;</span></span><span class="token lf">\n</span><span class="token tab">\t</span><span class="token tab">\t</span></code></pre>\n     </div>\n     <div style="clear:both;">\n     </div>\n    </section>\n    <section class="future" hidden="" style="top: -20px; display: none;">\n     <ul>\n      <li>\n       jshint templates\n      </li>\n      <li>\n       minify templates (source maps!)\n      </li>\n      <li>\n       Sweet.js macros\n      </li>\n      <li>\n       Static typing (Typescript)\n      </li>\n      <li>\n       render on the server\n      </li>\n      <li>\n       etc\n      </li>\n     </ul>\n    </section>\n    <section class="future" hidden="" style="top: -20px; display: none;">\n     <h3>\n      Portable knowledge\n     </h3>\n     <ul>\n      <li>\n       Promises\n      </li>\n      <li>\n       <code>\n        .map\n       </code>\n       ,\n       <code>\n        .filter\n       </code>\n       , and other FP concepts\n      </li>\n      <li>\n       CSS syntax (Emmett/ZenCoding)\n      </li>\n      <li>\n       Refactoring techniques\n      </li>\n      <li>\n       etc\n      </li>\n     </ul>\n    </section>\n    <section class="future" hidden="" style="top: -20px; display: none;">\n     <h4>\n      Demo: fetching data\n     </h4>\n     <pre class="language-javascript"><code class="language-javascript" data-language="javascript"><span class="token lf">\n</span><span class="token keyword">var</span> demo <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token lf">\n</span><span class="token lf">\n</span>demo<span class="token punctuation">.</span>controller <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token lf">\n</span><span class="token lf">\n</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>things <span class="token operator">=</span> m<span class="token punctuation">.</span><span class="token function">request<span class="token punctuation">(</span></span><span class="token punctuation">{</span>method<span class="token punctuation">:</span> <span class="token string">"GET"</span><span class="token punctuation">,</span> url<span class="token punctuation">:</span> <span class="token string">"/things.json"</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token lf">\n</span><span class="token lf">\n</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token lf">\n</span><span class="token tab">\t</span></code></pre>\n    </section>\n    <section class="future" hidden="" style="top: -20px; display: none;">\n     <h4>\n      Demo: showing stuff on screen\n     </h4>\n     <pre class="language-javascript"><code class="language-javascript" data-language="javascript"><span class="token keyword">var</span> demo <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token lf">\n</span><span class="token lf">\n</span>demo<span class="token punctuation">.</span>controller <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token lf">\n</span><span class="token lf">\n</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>things <span class="token operator">=</span> m<span class="token punctuation">.</span><span class="token function">request<span class="token punctuation">(</span></span><span class="token punctuation">{</span>method<span class="token punctuation">:</span> <span class="token string">"GET"</span><span class="token punctuation">,</span> url<span class="token punctuation">:</span> <span class="token string">"/things.json"</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token lf">\n</span><span class="token lf">\n</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token lf">\n</span><span class="token lf">\n</span>demo<span class="token punctuation">.</span>view <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>ctrl<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token lf">\n</span>  <span class="token keyword">return</span> <span class="token function">m<span class="token punctuation">(</span></span><span class="token string">"ul"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>                     <span class="token comment" spellcheck="true"> // &lt;ul&gt;\n</span><span class="token lf">\n</span>    ctrl<span class="token punctuation">.</span><span class="token function">things<span class="token punctuation">(</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map<span class="token punctuation">(</span></span><span class="token keyword">function</span><span class="token punctuation">(</span>thing<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true"> //    &lt;li&gt;iPhone&lt;/li&gt;\n</span>      <span class="token keyword">return</span> <span class="token function">m<span class="token punctuation">(</span></span><span class="token string">"li"</span><span class="token punctuation">,</span> thing<span class="token punctuation">.</span>name<span class="token punctuation">)</span>       <span class="token comment" spellcheck="true"> //    &lt;li&gt;MacBook&lt;/li&gt;\n</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>                                 <span class="token comment" spellcheck="true"> //    &lt;li&gt;iPod&lt;/li&gt;\n</span><span class="token lf">\n</span>  <span class="token punctuation">]</span><span class="token punctuation">)</span>                                   <span class="token comment" spellcheck="true"> // &lt;/ul&gt;\n</span><span class="token punctuation">}</span><span class="token lf">\n</span><span class="token lf">\n</span>m<span class="token punctuation">.</span><span class="token function">module<span class="token punctuation">(</span></span>document<span class="token punctuation">.</span>body<span class="token punctuation">,</span> demo<span class="token punctuation">)</span><span class="token comment" spellcheck="true"> // initialize</span></code></pre>\n    </section>\n    <section class="future" hidden="" style="top: -20px; display: none;">\n     <h4>\n      Demo: responding to user actions\n     </h4>\n     <pre class="language-javascript"><code class="language-javascript" data-language="javascript"><span class="token keyword">var</span> demo <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token lf">\n</span><span class="token lf">\n</span>demo<span class="token punctuation">.</span>controller <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token lf">\n</span><span class="token lf">\n</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>things <span class="token operator">=</span> m<span class="token punctuation">.</span><span class="token function">request<span class="token punctuation">(</span></span><span class="token punctuation">{</span>method<span class="token punctuation">:</span> <span class="token string">"GET"</span><span class="token punctuation">,</span> url<span class="token punctuation">:</span> <span class="token string">"/things.json"</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token lf">\n</span><span class="token lf">\n</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token lf">\n</span><span class="token lf">\n</span>demo<span class="token punctuation">.</span>view <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>ctrl<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token lf">\n</span>  <span class="token keyword">return</span> <span class="token function">m<span class="token punctuation">(</span></span><span class="token string">"ul"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token lf">\n</span><span class="token lf">\n</span>    ctrl<span class="token punctuation">.</span><span class="token function">things<span class="token punctuation">(</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map<span class="token punctuation">(</span></span><span class="token keyword">function</span><span class="token punctuation">(</span>thing<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token lf">\n</span>      <span class="token keyword">return</span> <span class="token function">m<span class="token punctuation">(</span></span><span class="token string">"li"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>onclick<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> thing<span class="token punctuation">.</span>name <span class="token operator">+</span><span class="token operator">=</span> <span class="token string">"!"</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span> thing<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token lf">\n</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token lf">\n</span><span class="token tab">\t</span><span class="token lf">\n</span>  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token lf">\n</span><span class="token punctuation">}</span><span class="token lf">\n</span><span class="token lf">\n</span>m<span class="token punctuation">.</span><span class="token function">module<span class="token punctuation">(</span></span>document<span class="token punctuation">.</span>body<span class="token punctuation">,</span> demo<span class="token punctuation">)</span><span class="token comment" spellcheck="true"> // initialize</span></code></pre>\n    </section>\n    <section class="future" hidden="" style="top: -20px; display: none;">\n     <h4>\n      Demo: result\n     </h4>\n     <div id="demo" style="background:#3f3f3f;padding:30px;">\n      <ul>\n       <li>\n        iPhone\n       </li>\n       <li>\n        Macbook\n       </li>\n       <li>\n        iPad\n       </li>\n      </ul>\n     </div>\n     <script>\n      var demo = {};\n\ndemo.controller = function() {\n  this.things = m.prop([{name: "iPhone"}, {name: "Macbook"}, {name: "iPad"}]);\n};\n\ndemo.view = function(ctrl) {\n  return m("ul", [\n    ctrl.things().map(function(thing) {\n      return m("li", {onclick: function(e) { thing.name += "!" }}, thing.name)\n    })\n  ])\n}\n\nm.module(document.getElementById("demo"), demo)\n     </script>\n    </section>\n    <section class="future" hidden="" style="top: -123px; display: block;">\n     <h3>\n      Take away\n     </h3>\n     <ul>\n      <li>\n       Reads like server-side MVC code\n      </li>\n      <li>\n       You already know how to do conditionals, includes, etc\n      </li>\n      <li>\n       Mithril takes care of plumbing, performance\n      </li>\n     </ul>\n    </section>\n    <section class="future" hidden="" style="top: -75.5px; display: block;">\n     <ul>\n      <li>\n       Learn Javascript, not frameworks\n      </li>\n      <li>\n       Practice FP, become a better programmer\n      </li>\n     </ul>\n    </section>\n    <section class="future" hidden="" style="top: -70.5px; display: block;">\n     <h3>\n      Questions?\n     </h3>\n    </section>\n   </div>\n   <div class="backgrounds">\n    <div class="slide-background present">\n    </div>\n    <div class="slide-background future">\n    </div>\n    <div class="slide-background future">\n    </div>\n    <div class="slide-background future">\n    </div>\n    <div class="slide-background future">\n    </div>\n    <div class="slide-background future">\n    </div>\n    <div class="slide-background future">\n    </div>\n    <div class="slide-background future">\n    </div>\n    <div class="slide-background future">\n    </div>\n    <div class="slide-background future">\n    </div>\n    <div class="slide-background future">\n    </div>\n    <div class="slide-background future">\n    </div>\n    <div class="slide-background future">\n    </div>\n    <div class="slide-background future">\n    </div>\n    <div class="slide-background future">\n    </div>\n    <div class="slide-background future">\n    </div>\n    <div class="slide-background future">\n    </div>\n    <div class="slide-background future">\n    </div>\n    <div class="slide-background future">\n    </div>\n    <div class="slide-background future">\n    </div>\n    <div class="slide-background future">\n    </div>\n    <div class="slide-background future">\n    </div>\n   </div>\n   <div class="progress" style="display: block;">\n    <span style="width: 0px;">\n    </span>\n   </div>\n   <aside class="controls" style="display: block;">\n    <div class="navigate-left">\n    </div>\n    <div class="navigate-right enabled">\n    </div>\n    <div class="navigate-up">\n    </div>\n    <div class="navigate-down">\n    </div>\n   </aside>\n   <div class="slide-number">\n   </div>\n   <div class="state-background">\n   </div>\n   <div class="pause-overlay">\n   </div>\n  </div>\n  <script>\n   Reveal.initialize()\n  </script>\n </body>\n</html>'