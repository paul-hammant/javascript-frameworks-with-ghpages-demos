b'<!DOCTYPE html>\n<html xmlns="http://www.w3.org/1999/xhtml">\n <head>\n  <meta charset="utf-8"/>\n  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>\n  <title>\n   ember-prop-types\n  </title>\n  <meta content="" name="description"/>\n  <meta content="width=device-width, initial-scale=1" name="viewport"/>\n  <meta content="%7B%22APP%22%3A%7B%22name%22%3A%22ember-prop-types%22%2C%22version%22%3A%223.10.3%22%7D%2C%22rootURL%22%3A%22/ember-prop-types%22%2C%22EmberENV%22%3A%7B%22FEATURES%22%3A%7B%7D%7D%2C%22googleFonts%22%3A%5B%22Roboto%3A300%22%5D%2C%22environment%22%3A%22production%22%2C%22locationType%22%3A%22hash%22%2C%22modulePrefix%22%3A%22dummy%22%2C%22ember-prop-types%22%3A%7B%22spreadProperty%22%3A%22options%22%2C%22throwErrors%22%3Afalse%2C%22validateOnUpdate%22%3Atrue%7D%2C%22exportApplicationGlobal%22%3Afalse%7D" name="dummy/config/environment"/>\n  <link href="https://fonts.googleapis.com/css?family=Roboto:300" media="all" rel="stylesheet" type="text/css"/>\n  <link href="/ember-prop-types/assets/vendor-cbb66747de72427fe7fad11ecf3d6271.css" rel="stylesheet"/>\n  <link href="/ember-prop-types/assets/dummy-8a3bb4648aa75e240c15c4b85c3b93f0.css" rel="stylesheet"/>\n </head>\n <body class="ember-application">\n  <script src="/ember-prop-types/assets/vendor-00286b02a0be564c7b006a2cb284e429.js">\n  </script>\n  <script src="/ember-prop-types/assets/dummy-866bdb519d0c4d38efe1c0defbddb61b.js">\n  </script>\n  <div class="ember-view" id="ember216">\n   <div class="flex header">\n    <h1>\n     ember-prop-types\n    </h1>\n    <a href="https://github.com/ciena-blueplanet/ember-prop-types/blob/master/LICENSE.md">\n     <img alt="MIT License" src="mit-d9d55730279d560591b31d4b0aab52b2.png"/>\n    </a>\n    <a href="https://github.com/ciena-blueplanet/ember-prop-types">\n     <img alt="Github" src="octocat-e020986dbdafe5c1e97be521f17a28d8.png"/>\n    </a>\n   </div>\n   <p>\n    This project aims to improve the developer experience of property management within Ember\n  apps and addons by implementing the entire React proptype API with a few additional\n  validators. By using\n    <em>\n     ember-prop-types\n    </em>\n    a developer is informed when a property\n  being fed to a component is not of the expected type, as well as allows a developer to group\n  all default property values under a single method.\n   </p>\n   <p>\n    <em>\n     ember-prop-types\n    </em>\n    comes with a few configuration options which can be set in\n    <em>\n     config/environment.js\n    </em>\n    for all environments or specific environments. Below is an example configuration with comments as to what each\n  option is for:\n    <pre class="code-block ember-view language-javascript" id="ember250"><code class=" language-javascript">\n<span class="token string">\'ember-prop-types\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n  <span class="token comment" spellcheck="true">// Validate properties coming from a spread property (default is undefined)</span>\n  spreadProperty<span class="token punctuation">:</span> <span class="token string">\'options\'</span><span class="token punctuation">,</span>\n\n  <span class="token comment" spellcheck="true">// Throw errors instead of logging warnings (default is false)</span>\n  throwErrors<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n\n  <span class="token comment" spellcheck="true">// Validate properties (default is true for all environments except "production")</span>\n  validate<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n\n  <span class="token comment" spellcheck="true">// Validate properties when they are updated (default is false)</span>\n  validateOnUpdate<span class="token punctuation">:</span> <span class="token boolean">true</span>\n<span class="token punctuation">}</span>\n</code>\n</pre>\n   </p>\n   <h2>\n    Validators\n   </h2>\n   <div class="flex">\n    <section>\n     <dt>\n      any\n     </dt>\n     <dl>\n      Property can be of any type.\n     </dl>\n     <h4>\n      Component Definition\n     </h4>\n     <pre class="code-block ember-view language-javascript" id="ember252"><code class=" language-javascript">\n<span class="token keyword">import</span> Ember <span class="token keyword">from</span> <span class="token string">\'ember\'</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token operator">=</span> Ember\n<span class="token keyword">import</span> PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>PropTypes<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ember-prop-types\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Component<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  propTypes<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>any<span class="token punctuation">,</span>\n    baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>any<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n    foo<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">{</span>required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    spam<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">{</span>updatable<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n    </code>\n</pre>\n     <!-- -->\n    </section>\n    <section>\n     <dt>\n      array\n     </dt>\n     <dl>\n      Property must be an array.\n     </dl>\n     <h4>\n      Component Definition\n     </h4>\n     <pre class="code-block ember-view language-javascript" id="ember254"><code class=" language-javascript">\n<span class="token keyword">import</span> Ember <span class="token keyword">from</span> <span class="token string">\'ember\'</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token operator">=</span> Ember\n<span class="token keyword">import</span> PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>PropTypes<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ember-prop-types\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Component<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  propTypes<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>array<span class="token punctuation">,</span>\n    baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>array<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n    foo<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">array</span><span class="token punctuation">(</span><span class="token punctuation">{</span>required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    spam<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">array</span><span class="token punctuation">(</span><span class="token punctuation">{</span>updatable<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n    </code>\n</pre>\n     <!-- -->\n    </section>\n    <section>\n     <dt>\n      arrayOf\n     </dt>\n     <dl>\n      Property must be an array of given type.\n     </dl>\n     <h4>\n      Component Definition\n     </h4>\n     <pre class="code-block ember-view language-javascript" id="ember256"><code class=" language-javascript">\n<span class="token keyword">import</span> Ember <span class="token keyword">from</span> <span class="token string">\'ember\'</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token operator">=</span> Ember\n<span class="token keyword">import</span> PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>PropTypes<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ember-prop-types\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Component<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  propTypes<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">arrayOf</span><span class="token punctuation">(</span>PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">)</span><span class="token punctuation">,</span>\n    baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">arrayOf</span><span class="token punctuation">(</span>PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">)</span><span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n    foo<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">arrayOf</span><span class="token punctuation">(</span>PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">,</span> <span class="token punctuation">{</span>required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    spam<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">arrayOf</span><span class="token punctuation">(</span>PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">,</span> <span class="token punctuation">{</span>updatable<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n    </code>\n</pre>\n     <!-- -->\n    </section>\n    <section>\n     <dt>\n      bool\n     </dt>\n     <dl>\n      Property must be a boolean.\n     </dl>\n     <h4>\n      Component Definition\n     </h4>\n     <pre class="code-block ember-view language-javascript" id="ember258"><code class=" language-javascript">\n<span class="token keyword">import</span> Ember <span class="token keyword">from</span> <span class="token string">\'ember\'</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token operator">=</span> Ember\n<span class="token keyword">import</span> PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>PropTypes<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ember-prop-types\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Component<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  propTypes<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>bool<span class="token punctuation">,</span>\n    baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>bool<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n    foo<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">bool</span><span class="token punctuation">(</span><span class="token punctuation">{</span>required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    spam<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">bool</span><span class="token punctuation">(</span><span class="token punctuation">{</span>updatable<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n    </code>\n</pre>\n     <!-- -->\n    </section>\n    <section>\n     <dt>\n      element\n     </dt>\n     <dl>\n      Property must be an instance of Element.\n     </dl>\n     <h4>\n      Component Definition\n     </h4>\n     <pre class="code-block ember-view language-javascript" id="ember260"><code class=" language-javascript">\n<span class="token keyword">import</span> Ember <span class="token keyword">from</span> <span class="token string">\'ember\'</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token operator">=</span> Ember\n<span class="token keyword">import</span> PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>PropTypes<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ember-prop-types\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Component<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  propTypes<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>element<span class="token punctuation">,</span>\n    baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>element<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n    foo<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">element</span><span class="token punctuation">(</span><span class="token punctuation">{</span>required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    spam<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">element</span><span class="token punctuation">(</span><span class="token punctuation">{</span>updatable<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n    </code>\n</pre>\n     <!-- -->\n    </section>\n    <section>\n     <dt>\n      EmberComponent\n     </dt>\n     <dl>\n      Property must be from {{component}} helper.\n     </dl>\n     <h4>\n      Component Definition\n     </h4>\n     <pre class="code-block ember-view language-javascript" id="ember262"><code class=" language-javascript">\n<span class="token keyword">import</span> Ember <span class="token keyword">from</span> <span class="token string">\'ember\'</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token operator">=</span> Ember\n<span class="token keyword">import</span> PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>PropTypes<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ember-prop-types\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Component<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  propTypes<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>EmberComponent<span class="token punctuation">,</span>\n    baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>EmberComponent<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n    foo<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">EmberComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    spam<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">EmberComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>updatable<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n    </code>\n</pre>\n     <h4>\n      Consumption in Templae\n     </h4>\n     <pre class="code-block ember-view language-handlebars" id="ember263"><code class=" language-handlebars">\n<span class="token handlebars"><span class="token delimiter punctuation">{{</span><span class="token variable">my-component</span>\n  <span class="token variable">bar</span><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">component</span> <span class="token string">\'foo-bar\'</span><span class="token delimiter punctuation">}}</span></span>\n  baz=<span class="token handlebars"><span class="token delimiter punctuation">{{</span><span class="token variable">component</span> <span class="token string">\'foo-bar\'</span> <span class="token string">\'test\'</span> <span class="token string">\'spam\'</span><span class="token delimiter punctuation">}}</span></span>\n  foo=<span class="token handlebars"><span class="token delimiter punctuation">{{</span><span class="token variable">component</span> <span class="token variable">prop1</span><span class="token punctuation">=</span><span class="token string">\'test\'</span> <span class="token variable">prop2</span><span class="token punctuation">=</span><span class="token string">\'spam\'</span><span class="token delimiter punctuation">}}</span></span>\n}}\n    </code>\n</pre>\n    </section>\n    <section>\n     <dt>\n      EmberObject\n     </dt>\n     <dl>\n      Property must be an Ember.Object.\n     </dl>\n     <h4>\n      Component Definition\n     </h4>\n     <pre class="code-block ember-view language-javascript" id="ember265"><code class=" language-javascript">\n<span class="token keyword">import</span> Ember <span class="token keyword">from</span> <span class="token string">\'ember\'</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token operator">=</span> Ember\n<span class="token keyword">import</span> PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>PropTypes<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ember-prop-types\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Component<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  propTypes<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>EmberObject<span class="token punctuation">,</span>\n    baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>EmberObject<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n    foo<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">EmberObject</span><span class="token punctuation">(</span><span class="token punctuation">{</span>required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    spam<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">EmberObject</span><span class="token punctuation">(</span><span class="token punctuation">{</span>updatable<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n    </code>\n</pre>\n     <!-- -->\n    </section>\n    <section>\n     <dt>\n      func\n     </dt>\n     <dl>\n      Property must be a function.\n     </dl>\n     <h4>\n      Component Definition\n     </h4>\n     <pre class="code-block ember-view language-javascript" id="ember267"><code class=" language-javascript">\n<span class="token keyword">import</span> Ember <span class="token keyword">from</span> <span class="token string">\'ember\'</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token operator">=</span> Ember\n<span class="token keyword">import</span> PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>PropTypes<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ember-prop-types\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Component<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  propTypes<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>func<span class="token punctuation">,</span>\n    baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>func<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n    foo<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">{</span>required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    spam<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">{</span>updatable<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n    </code>\n</pre>\n     <!-- -->\n    </section>\n    <section>\n     <dt>\n      instanceOf\n     </dt>\n     <dl>\n      Property must be an instance of given class.\n     </dl>\n     <h4>\n      Component Definition\n     </h4>\n     <pre class="code-block ember-view language-javascript" id="ember269"><code class=" language-javascript">\n<span class="token keyword">import</span> Ember <span class="token keyword">from</span> <span class="token string">\'ember\'</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token operator">=</span> Ember\n<span class="token keyword">import</span> PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>PropTypes<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ember-prop-types\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Component<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  propTypes<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">instanceOf</span><span class="token punctuation">(</span>HTMLElement<span class="token punctuation">)</span><span class="token punctuation">,</span>\n    baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">instanceOf</span><span class="token punctuation">(</span>HTMLElement<span class="token punctuation">)</span><span class="token punctuation">.</span>isRequired\n    foo<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">instanceOf</span><span class="token punctuation">(</span>HTMLElement<span class="token punctuation">,</span> <span class="token punctuation">{</span>required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    spam<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">instanceOf</span><span class="token punctuation">(</span>HTMLElement<span class="token punctuation">,</span> <span class="token punctuation">{</span>updatable<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n    </code>\n</pre>\n     <!-- -->\n    </section>\n    <section>\n     <dt>\n      null\n     </dt>\n     <dl>\n      Property must be null. This is typically useful in conjunction with oneOfType.\n     </dl>\n     <h4>\n      Component Definition\n     </h4>\n     <pre class="code-block ember-view language-javascript" id="ember271"><code class=" language-javascript">\n<span class="token keyword">import</span> Ember <span class="token keyword">from</span> <span class="token string">\'ember\'</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token operator">=</span> Ember\n<span class="token keyword">import</span> PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>PropTypes<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ember-prop-types\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Component<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  propTypes<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">oneOfType</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n      PropTypes<span class="token punctuation">.</span><span class="token keyword">null</span><span class="token punctuation">,</span>\n      PropTypes<span class="token punctuation">.</span>string\n    <span class="token punctuation">]</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n    </code>\n</pre>\n     <!-- -->\n    </section>\n    <section>\n     <dt>\n      number\n     </dt>\n     <dl>\n      Property must be a number.\n     </dl>\n     <h4>\n      Component Definition\n     </h4>\n     <pre class="code-block ember-view language-javascript" id="ember273"><code class=" language-javascript">\n<span class="token keyword">import</span> Ember <span class="token keyword">from</span> <span class="token string">\'ember\'</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token operator">=</span> Ember\n<span class="token keyword">import</span> PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>PropTypes<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ember-prop-types\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Component<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  propTypes<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">,</span>\n    baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n    foo<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">number</span><span class="token punctuation">(</span><span class="token punctuation">{</span>required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    spam<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">number</span><span class="token punctuation">(</span><span class="token punctuation">{</span>updatable<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n    </code>\n</pre>\n     <!-- -->\n    </section>\n    <section>\n     <dt>\n      object\n     </dt>\n     <dl>\n      Property must be an object.\n     </dl>\n     <h4>\n      Component Definition\n     </h4>\n     <pre class="code-block ember-view language-javascript" id="ember275"><code class=" language-javascript">\n<span class="token keyword">import</span> Ember <span class="token keyword">from</span> <span class="token string">\'ember\'</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token operator">=</span> Ember\n<span class="token keyword">import</span> PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>PropTypes<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ember-prop-types\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Component<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  propTypes<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>object<span class="token punctuation">,</span>\n    baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>object<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n    foo<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">object</span><span class="token punctuation">(</span><span class="token punctuation">{</span>required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    spam<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">object</span><span class="token punctuation">(</span><span class="token punctuation">{</span>updatable<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n    </code>\n</pre>\n     <!-- -->\n    </section>\n    <section>\n     <dt>\n      oneOf\n     </dt>\n     <dl>\n      Property value must be in set of possible values.\n     </dl>\n     <h4>\n      Component Definition\n     </h4>\n     <pre class="code-block ember-view language-javascript" id="ember277"><code class=" language-javascript">\n<span class="token keyword">import</span> Ember <span class="token keyword">from</span> <span class="token string">\'ember\'</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token operator">=</span> Ember\n<span class="token keyword">import</span> PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>PropTypes<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ember-prop-types\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Component<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  propTypes<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">oneOf</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">\'bar\'</span><span class="token punctuation">,</span> <span class="token string">\'baz\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">oneOf</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">\'bar\'</span><span class="token punctuation">,</span> <span class="token string">\'baz\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n    foo<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">oneOf</span><span class="token punctuation">(</span>\n      <span class="token punctuation">[</span>\n        <span class="token string">\'bar\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'baz\'</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        required<span class="token punctuation">:</span> <span class="token boolean">true</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    spam<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">oneOf</span><span class="token punctuation">(</span>\n      <span class="token punctuation">[</span>\n        <span class="token string">\'bar\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'baz\'</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        updatable<span class="token punctuation">:</span> <span class="token boolean">false</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n    </code>\n</pre>\n     <!-- -->\n    </section>\n    <section>\n     <dt>\n      oneOfType\n     </dt>\n     <dl>\n      Property type must be in set of possible types.\n     </dl>\n     <h4>\n      Component Definition\n     </h4>\n     <pre class="code-block ember-view language-javascript" id="ember279"><code class=" language-javascript">\n<span class="token keyword">import</span> Ember <span class="token keyword">from</span> <span class="token string">\'ember\'</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token operator">=</span> Ember\n<span class="token keyword">import</span> PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>PropTypes<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ember-prop-types\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Component<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  propTypes<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">oneOfType</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n      PropTypes<span class="token punctuation">.</span><span class="token keyword">null</span><span class="token punctuation">,</span>\n      PropTypes<span class="token punctuation">.</span>string\n    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">oneOfType</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n      PropTypes<span class="token punctuation">.</span><span class="token keyword">null</span><span class="token punctuation">,</span>\n      PropTypes<span class="token punctuation">.</span>string\n    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n    foo<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">oneOfType</span><span class="token punctuation">(</span>\n      <span class="token punctuation">[</span>\n        PropTypes<span class="token punctuation">.</span><span class="token keyword">null</span><span class="token punctuation">,</span>\n        PropTypes<span class="token punctuation">.</span>string\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        required<span class="token punctuation">:</span> <span class="token boolean">true</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    spam<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">oneOfType</span><span class="token punctuation">(</span>\n      <span class="token punctuation">[</span>\n        PropTypes<span class="token punctuation">.</span><span class="token keyword">null</span><span class="token punctuation">,</span>\n        PropTypes<span class="token punctuation">.</span>string\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        updatable<span class="token punctuation">:</span> <span class="token boolean">false</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n    </code>\n</pre>\n     <!-- -->\n    </section>\n    <section>\n     <dt>\n      shape\n     </dt>\n     <dl>\n      Property must be an Object of the given shape.\n     </dl>\n     <h4>\n      Component Definition\n     </h4>\n     <pre class="code-block ember-view language-javascript" id="ember281"><code class=" language-javascript">\n<span class="token keyword">import</span> Ember <span class="token keyword">from</span> <span class="token string">\'ember\'</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token operator">=</span> Ember\n<span class="token keyword">import</span> PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>PropTypes<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ember-prop-types\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Component<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  propTypes<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">shape</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n      baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>string\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">shape</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n      baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>string\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n    foo<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">shape</span><span class="token punctuation">(</span>\n      <span class="token punctuation">{</span>\n        bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n        baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>string\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        required<span class="token punctuation">:</span> <span class="token boolean">true</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    spam<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">shape</span><span class="token punctuation">(</span>\n      <span class="token punctuation">{</span>\n        bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n        baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>string\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        updatable<span class="token punctuation">:</span> <span class="token boolean">false</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n    </code>\n</pre>\n     <!-- -->\n    </section>\n    <section>\n     <dt>\n      string\n     </dt>\n     <dl>\n      Property must be a string.\n     </dl>\n     <h4>\n      Component Definition\n     </h4>\n     <pre class="code-block ember-view language-javascript" id="ember283"><code class=" language-javascript">\n<span class="token keyword">import</span> Ember <span class="token keyword">from</span> <span class="token string">\'ember\'</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token operator">=</span> Ember\n<span class="token keyword">import</span> PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>PropTypes<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ember-prop-types\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Component<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  propTypes<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">,</span>\n    baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n    foo<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token punctuation">{</span>required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    spam<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token punctuation">{</span>updatable<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n    </code>\n</pre>\n     <!-- -->\n    </section>\n    <section>\n     <dt>\n      symbol\n     </dt>\n     <dl>\n      Property must be a symbol.\n     </dl>\n     <h4>\n      Component Definition\n     </h4>\n     <pre class="code-block ember-view language-javascript" id="ember285"><code class=" language-javascript">\n<span class="token keyword">import</span> Ember <span class="token keyword">from</span> <span class="token string">\'ember\'</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token operator">=</span> Ember\n<span class="token keyword">import</span> PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>PropTypes<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ember-prop-types\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Component<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  propTypes<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>symbol<span class="token punctuation">,</span>\n    baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>symbol<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n    foo<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">symbol</span><span class="token punctuation">(</span><span class="token punctuation">{</span>required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    spam<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">symbol</span><span class="token punctuation">(</span><span class="token punctuation">{</span>updatable<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n    </code>\n</pre>\n     <!-- -->\n    </section>\n   </div>\n   <h2>\n    Default Values\n   </h2>\n   <div class="flex">\n    <section>\n     <dt>\n      getDefaultProps()\n     </dt>\n     <dl>\n      Method to get default property values.\n     </dl>\n     <pre class="code-block ember-view language-javascript" id="ember286"><code class=" language-javascript">\n<span class="token keyword">import</span> Ember <span class="token keyword">from</span> <span class="token string">\'ember\'</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token operator">=</span> Ember\n<span class="token keyword">import</span> PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>PropTypes<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ember-prop-types\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Component<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  propTypes<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">,</span>\n    foo<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>string\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  getDefaultProps <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      baz<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n      foo<span class="token punctuation">:</span> <span class="token string">\'bar\'</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n</code>\n</pre>\n    </section>\n   </div>\n   <h2>\n    Contributors\n   </h2>\n   <div class="contributors flex">\n    <a href="https://github.com/sandersky">\n     <img alt="sandersky" src="https://avatars3.githubusercontent.com/u/422902"/>\n     <br/>\n     Matthew Dahl\n    </a>\n    <a href="https://github.com/sdesros">\n     <img alt="sdesros" src="https://avatars3.githubusercontent.com/u/18398999"/>\n     <br/>\n     sdesros\n    </a>\n    <a href="https://github.com/juwara0">\n     <img alt="juwara0" src="https://avatars3.githubusercontent.com/u/8236686"/>\n     <br/>\n     Michael Carroll\n    </a>\n    <a href="https://github.com/pnachum">\n     <img alt="pnachum" src="https://avatars3.githubusercontent.com/u/2244653"/>\n     <br/>\n     Phil Nachum\n    </a>\n    <a href="https://github.com/sglanzer">\n     <img alt="sglanzer" src="https://avatars3.githubusercontent.com/u/9026198"/>\n     <br/>\n     Steven Glanzer\n    </a>\n    <a href="https://github.com/EWhite613">\n     <img alt="EWhite613" src="https://avatars3.githubusercontent.com/u/9057680"/>\n     <br/>\n     Eric White\n    </a>\n    <a href="https://github.com/ianstarz">\n     <img alt="ianstarz" src="https://avatars3.githubusercontent.com/u/1192053"/>\n     <br/>\n     Ian Storz\n    </a>\n    <a href="https://github.com/justinbowes">\n     <img alt="justinbowes" src="https://avatars3.githubusercontent.com/u/35697"/>\n     <br/>\n     Justin Bowes\n    </a>\n    <a href="https://github.com/job13er">\n     <img alt="job13er" src="https://avatars3.githubusercontent.com/u/411788"/>\n     <br/>\n     Adam Meadows\n    </a>\n   </div>\n  </div>\n </body>\n</html>'b'<!DOCTYPE html>\n<html xmlns="http://www.w3.org/1999/xhtml">\n <head>\n  <meta charset="utf-8"/>\n  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>\n  <title>\n   ember-prop-types\n  </title>\n  <meta content="" name="description"/>\n  <meta content="width=device-width, initial-scale=1" name="viewport"/>\n  <meta content="%7B%22APP%22%3A%7B%22name%22%3A%22ember-prop-types%22%2C%22version%22%3A%223.10.3%22%7D%2C%22rootURL%22%3A%22/ember-prop-types%22%2C%22EmberENV%22%3A%7B%22FEATURES%22%3A%7B%7D%7D%2C%22googleFonts%22%3A%5B%22Roboto%3A300%22%5D%2C%22environment%22%3A%22production%22%2C%22locationType%22%3A%22hash%22%2C%22modulePrefix%22%3A%22dummy%22%2C%22ember-prop-types%22%3A%7B%22spreadProperty%22%3A%22options%22%2C%22throwErrors%22%3Afalse%2C%22validateOnUpdate%22%3Atrue%7D%2C%22exportApplicationGlobal%22%3Afalse%7D" name="dummy/config/environment"/>\n  <link href="https://fonts.googleapis.com/css?family=Roboto:300" media="all" rel="stylesheet" type="text/css"/>\n  <link href="/ember-prop-types/assets/vendor-cbb66747de72427fe7fad11ecf3d6271.css" rel="stylesheet"/>\n  <link href="/ember-prop-types/assets/dummy-8a3bb4648aa75e240c15c4b85c3b93f0.css" rel="stylesheet"/>\n </head>\n <body class="ember-application">\n  <script src="/ember-prop-types/assets/vendor-00286b02a0be564c7b006a2cb284e429.js">\n  </script>\n  <script src="/ember-prop-types/assets/dummy-866bdb519d0c4d38efe1c0defbddb61b.js">\n  </script>\n  <div class="ember-view" id="ember216">\n   <div class="flex header">\n    <h1>\n     ember-prop-types\n    </h1>\n    <a href="https://github.com/ciena-blueplanet/ember-prop-types/blob/master/LICENSE.md">\n     <img alt="MIT License" src="mit-d9d55730279d560591b31d4b0aab52b2.png"/>\n    </a>\n    <a href="https://github.com/ciena-blueplanet/ember-prop-types">\n     <img alt="Github" src="octocat-e020986dbdafe5c1e97be521f17a28d8.png"/>\n    </a>\n   </div>\n   <p>\n    This project aims to improve the developer experience of property management within Ember\n  apps and addons by implementing the entire React proptype API with a few additional\n  validators. By using\n    <em>\n     ember-prop-types\n    </em>\n    a developer is informed when a property\n  being fed to a component is not of the expected type, as well as allows a developer to group\n  all default property values under a single method.\n   </p>\n   <p>\n    <em>\n     ember-prop-types\n    </em>\n    comes with a few configuration options which can be set in\n    <em>\n     config/environment.js\n    </em>\n    for all environments or specific environments. Below is an example configuration with comments as to what each\n  option is for:\n    <pre class="code-block ember-view language-javascript" id="ember250"><code class=" language-javascript">\n<span class="token string">\'ember-prop-types\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n  <span class="token comment" spellcheck="true">// Validate properties coming from a spread property (default is undefined)</span>\n  spreadProperty<span class="token punctuation">:</span> <span class="token string">\'options\'</span><span class="token punctuation">,</span>\n\n  <span class="token comment" spellcheck="true">// Throw errors instead of logging warnings (default is false)</span>\n  throwErrors<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n\n  <span class="token comment" spellcheck="true">// Validate properties (default is true for all environments except "production")</span>\n  validate<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n\n  <span class="token comment" spellcheck="true">// Validate properties when they are updated (default is false)</span>\n  validateOnUpdate<span class="token punctuation">:</span> <span class="token boolean">true</span>\n<span class="token punctuation">}</span>\n</code>\n</pre>\n   </p>\n   <h2>\n    Validators\n   </h2>\n   <div class="flex">\n    <section>\n     <dt>\n      any\n     </dt>\n     <dl>\n      Property can be of any type.\n     </dl>\n     <h4>\n      Component Definition\n     </h4>\n     <pre class="code-block ember-view language-javascript" id="ember252"><code class=" language-javascript">\n<span class="token keyword">import</span> Ember <span class="token keyword">from</span> <span class="token string">\'ember\'</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token operator">=</span> Ember\n<span class="token keyword">import</span> PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>PropTypes<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ember-prop-types\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Component<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  propTypes<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>any<span class="token punctuation">,</span>\n    baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>any<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n    foo<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">{</span>required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    spam<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">{</span>updatable<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n    </code>\n</pre>\n     <!-- -->\n    </section>\n    <section>\n     <dt>\n      array\n     </dt>\n     <dl>\n      Property must be an array.\n     </dl>\n     <h4>\n      Component Definition\n     </h4>\n     <pre class="code-block ember-view language-javascript" id="ember254"><code class=" language-javascript">\n<span class="token keyword">import</span> Ember <span class="token keyword">from</span> <span class="token string">\'ember\'</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token operator">=</span> Ember\n<span class="token keyword">import</span> PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>PropTypes<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ember-prop-types\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Component<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  propTypes<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>array<span class="token punctuation">,</span>\n    baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>array<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n    foo<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">array</span><span class="token punctuation">(</span><span class="token punctuation">{</span>required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    spam<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">array</span><span class="token punctuation">(</span><span class="token punctuation">{</span>updatable<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n    </code>\n</pre>\n     <!-- -->\n    </section>\n    <section>\n     <dt>\n      arrayOf\n     </dt>\n     <dl>\n      Property must be an array of given type.\n     </dl>\n     <h4>\n      Component Definition\n     </h4>\n     <pre class="code-block ember-view language-javascript" id="ember256"><code class=" language-javascript">\n<span class="token keyword">import</span> Ember <span class="token keyword">from</span> <span class="token string">\'ember\'</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token operator">=</span> Ember\n<span class="token keyword">import</span> PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>PropTypes<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ember-prop-types\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Component<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  propTypes<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">arrayOf</span><span class="token punctuation">(</span>PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">)</span><span class="token punctuation">,</span>\n    baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">arrayOf</span><span class="token punctuation">(</span>PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">)</span><span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n    foo<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">arrayOf</span><span class="token punctuation">(</span>PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">,</span> <span class="token punctuation">{</span>required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    spam<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">arrayOf</span><span class="token punctuation">(</span>PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">,</span> <span class="token punctuation">{</span>updatable<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n    </code>\n</pre>\n     <!-- -->\n    </section>\n    <section>\n     <dt>\n      bool\n     </dt>\n     <dl>\n      Property must be a boolean.\n     </dl>\n     <h4>\n      Component Definition\n     </h4>\n     <pre class="code-block ember-view language-javascript" id="ember258"><code class=" language-javascript">\n<span class="token keyword">import</span> Ember <span class="token keyword">from</span> <span class="token string">\'ember\'</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token operator">=</span> Ember\n<span class="token keyword">import</span> PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>PropTypes<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ember-prop-types\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Component<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  propTypes<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>bool<span class="token punctuation">,</span>\n    baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>bool<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n    foo<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">bool</span><span class="token punctuation">(</span><span class="token punctuation">{</span>required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    spam<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">bool</span><span class="token punctuation">(</span><span class="token punctuation">{</span>updatable<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n    </code>\n</pre>\n     <!-- -->\n    </section>\n    <section>\n     <dt>\n      element\n     </dt>\n     <dl>\n      Property must be an instance of Element.\n     </dl>\n     <h4>\n      Component Definition\n     </h4>\n     <pre class="code-block ember-view language-javascript" id="ember260"><code class=" language-javascript">\n<span class="token keyword">import</span> Ember <span class="token keyword">from</span> <span class="token string">\'ember\'</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token operator">=</span> Ember\n<span class="token keyword">import</span> PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>PropTypes<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ember-prop-types\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Component<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  propTypes<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>element<span class="token punctuation">,</span>\n    baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>element<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n    foo<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">element</span><span class="token punctuation">(</span><span class="token punctuation">{</span>required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    spam<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">element</span><span class="token punctuation">(</span><span class="token punctuation">{</span>updatable<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n    </code>\n</pre>\n     <!-- -->\n    </section>\n    <section>\n     <dt>\n      EmberComponent\n     </dt>\n     <dl>\n      Property must be from {{component}} helper.\n     </dl>\n     <h4>\n      Component Definition\n     </h4>\n     <pre class="code-block ember-view language-javascript" id="ember262"><code class=" language-javascript">\n<span class="token keyword">import</span> Ember <span class="token keyword">from</span> <span class="token string">\'ember\'</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token operator">=</span> Ember\n<span class="token keyword">import</span> PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>PropTypes<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ember-prop-types\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Component<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  propTypes<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>EmberComponent<span class="token punctuation">,</span>\n    baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>EmberComponent<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n    foo<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">EmberComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    spam<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">EmberComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>updatable<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n    </code>\n</pre>\n     <h4>\n      Consumption in Templae\n     </h4>\n     <pre class="code-block ember-view language-handlebars" id="ember263"><code class=" language-handlebars">\n<span class="token handlebars"><span class="token delimiter punctuation">{{</span><span class="token variable">my-component</span>\n  <span class="token variable">bar</span><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token variable">component</span> <span class="token string">\'foo-bar\'</span><span class="token delimiter punctuation">}}</span></span>\n  baz=<span class="token handlebars"><span class="token delimiter punctuation">{{</span><span class="token variable">component</span> <span class="token string">\'foo-bar\'</span> <span class="token string">\'test\'</span> <span class="token string">\'spam\'</span><span class="token delimiter punctuation">}}</span></span>\n  foo=<span class="token handlebars"><span class="token delimiter punctuation">{{</span><span class="token variable">component</span> <span class="token variable">prop1</span><span class="token punctuation">=</span><span class="token string">\'test\'</span> <span class="token variable">prop2</span><span class="token punctuation">=</span><span class="token string">\'spam\'</span><span class="token delimiter punctuation">}}</span></span>\n}}\n    </code>\n</pre>\n    </section>\n    <section>\n     <dt>\n      EmberObject\n     </dt>\n     <dl>\n      Property must be an Ember.Object.\n     </dl>\n     <h4>\n      Component Definition\n     </h4>\n     <pre class="code-block ember-view language-javascript" id="ember265"><code class=" language-javascript">\n<span class="token keyword">import</span> Ember <span class="token keyword">from</span> <span class="token string">\'ember\'</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token operator">=</span> Ember\n<span class="token keyword">import</span> PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>PropTypes<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ember-prop-types\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Component<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  propTypes<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>EmberObject<span class="token punctuation">,</span>\n    baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>EmberObject<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n    foo<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">EmberObject</span><span class="token punctuation">(</span><span class="token punctuation">{</span>required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    spam<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">EmberObject</span><span class="token punctuation">(</span><span class="token punctuation">{</span>updatable<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n    </code>\n</pre>\n     <!-- -->\n    </section>\n    <section>\n     <dt>\n      func\n     </dt>\n     <dl>\n      Property must be a function.\n     </dl>\n     <h4>\n      Component Definition\n     </h4>\n     <pre class="code-block ember-view language-javascript" id="ember267"><code class=" language-javascript">\n<span class="token keyword">import</span> Ember <span class="token keyword">from</span> <span class="token string">\'ember\'</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token operator">=</span> Ember\n<span class="token keyword">import</span> PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>PropTypes<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ember-prop-types\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Component<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  propTypes<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>func<span class="token punctuation">,</span>\n    baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>func<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n    foo<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">{</span>required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    spam<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">{</span>updatable<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n    </code>\n</pre>\n     <!-- -->\n    </section>\n    <section>\n     <dt>\n      instanceOf\n     </dt>\n     <dl>\n      Property must be an instance of given class.\n     </dl>\n     <h4>\n      Component Definition\n     </h4>\n     <pre class="code-block ember-view language-javascript" id="ember269"><code class=" language-javascript">\n<span class="token keyword">import</span> Ember <span class="token keyword">from</span> <span class="token string">\'ember\'</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token operator">=</span> Ember\n<span class="token keyword">import</span> PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>PropTypes<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ember-prop-types\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Component<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  propTypes<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">instanceOf</span><span class="token punctuation">(</span>HTMLElement<span class="token punctuation">)</span><span class="token punctuation">,</span>\n    baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">instanceOf</span><span class="token punctuation">(</span>HTMLElement<span class="token punctuation">)</span><span class="token punctuation">.</span>isRequired\n    foo<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">instanceOf</span><span class="token punctuation">(</span>HTMLElement<span class="token punctuation">,</span> <span class="token punctuation">{</span>required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    spam<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">instanceOf</span><span class="token punctuation">(</span>HTMLElement<span class="token punctuation">,</span> <span class="token punctuation">{</span>updatable<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n    </code>\n</pre>\n     <!-- -->\n    </section>\n    <section>\n     <dt>\n      null\n     </dt>\n     <dl>\n      Property must be null. This is typically useful in conjunction with oneOfType.\n     </dl>\n     <h4>\n      Component Definition\n     </h4>\n     <pre class="code-block ember-view language-javascript" id="ember271"><code class=" language-javascript">\n<span class="token keyword">import</span> Ember <span class="token keyword">from</span> <span class="token string">\'ember\'</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token operator">=</span> Ember\n<span class="token keyword">import</span> PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>PropTypes<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ember-prop-types\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Component<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  propTypes<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">oneOfType</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n      PropTypes<span class="token punctuation">.</span><span class="token keyword">null</span><span class="token punctuation">,</span>\n      PropTypes<span class="token punctuation">.</span>string\n    <span class="token punctuation">]</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n    </code>\n</pre>\n     <!-- -->\n    </section>\n    <section>\n     <dt>\n      number\n     </dt>\n     <dl>\n      Property must be a number.\n     </dl>\n     <h4>\n      Component Definition\n     </h4>\n     <pre class="code-block ember-view language-javascript" id="ember273"><code class=" language-javascript">\n<span class="token keyword">import</span> Ember <span class="token keyword">from</span> <span class="token string">\'ember\'</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token operator">=</span> Ember\n<span class="token keyword">import</span> PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>PropTypes<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ember-prop-types\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Component<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  propTypes<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">,</span>\n    baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n    foo<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">number</span><span class="token punctuation">(</span><span class="token punctuation">{</span>required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    spam<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">number</span><span class="token punctuation">(</span><span class="token punctuation">{</span>updatable<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n    </code>\n</pre>\n     <!-- -->\n    </section>\n    <section>\n     <dt>\n      object\n     </dt>\n     <dl>\n      Property must be an object.\n     </dl>\n     <h4>\n      Component Definition\n     </h4>\n     <pre class="code-block ember-view language-javascript" id="ember275"><code class=" language-javascript">\n<span class="token keyword">import</span> Ember <span class="token keyword">from</span> <span class="token string">\'ember\'</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token operator">=</span> Ember\n<span class="token keyword">import</span> PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>PropTypes<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ember-prop-types\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Component<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  propTypes<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>object<span class="token punctuation">,</span>\n    baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>object<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n    foo<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">object</span><span class="token punctuation">(</span><span class="token punctuation">{</span>required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    spam<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">object</span><span class="token punctuation">(</span><span class="token punctuation">{</span>updatable<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n    </code>\n</pre>\n     <!-- -->\n    </section>\n    <section>\n     <dt>\n      oneOf\n     </dt>\n     <dl>\n      Property value must be in set of possible values.\n     </dl>\n     <h4>\n      Component Definition\n     </h4>\n     <pre class="code-block ember-view language-javascript" id="ember277"><code class=" language-javascript">\n<span class="token keyword">import</span> Ember <span class="token keyword">from</span> <span class="token string">\'ember\'</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token operator">=</span> Ember\n<span class="token keyword">import</span> PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>PropTypes<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ember-prop-types\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Component<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  propTypes<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">oneOf</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">\'bar\'</span><span class="token punctuation">,</span> <span class="token string">\'baz\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">oneOf</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">\'bar\'</span><span class="token punctuation">,</span> <span class="token string">\'baz\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n    foo<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">oneOf</span><span class="token punctuation">(</span>\n      <span class="token punctuation">[</span>\n        <span class="token string">\'bar\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'baz\'</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        required<span class="token punctuation">:</span> <span class="token boolean">true</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    spam<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">oneOf</span><span class="token punctuation">(</span>\n      <span class="token punctuation">[</span>\n        <span class="token string">\'bar\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'baz\'</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        updatable<span class="token punctuation">:</span> <span class="token boolean">false</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n    </code>\n</pre>\n     <!-- -->\n    </section>\n    <section>\n     <dt>\n      oneOfType\n     </dt>\n     <dl>\n      Property type must be in set of possible types.\n     </dl>\n     <h4>\n      Component Definition\n     </h4>\n     <pre class="code-block ember-view language-javascript" id="ember279"><code class=" language-javascript">\n<span class="token keyword">import</span> Ember <span class="token keyword">from</span> <span class="token string">\'ember\'</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token operator">=</span> Ember\n<span class="token keyword">import</span> PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>PropTypes<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ember-prop-types\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Component<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  propTypes<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">oneOfType</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n      PropTypes<span class="token punctuation">.</span><span class="token keyword">null</span><span class="token punctuation">,</span>\n      PropTypes<span class="token punctuation">.</span>string\n    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">oneOfType</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n      PropTypes<span class="token punctuation">.</span><span class="token keyword">null</span><span class="token punctuation">,</span>\n      PropTypes<span class="token punctuation">.</span>string\n    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n    foo<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">oneOfType</span><span class="token punctuation">(</span>\n      <span class="token punctuation">[</span>\n        PropTypes<span class="token punctuation">.</span><span class="token keyword">null</span><span class="token punctuation">,</span>\n        PropTypes<span class="token punctuation">.</span>string\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        required<span class="token punctuation">:</span> <span class="token boolean">true</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    spam<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">oneOfType</span><span class="token punctuation">(</span>\n      <span class="token punctuation">[</span>\n        PropTypes<span class="token punctuation">.</span><span class="token keyword">null</span><span class="token punctuation">,</span>\n        PropTypes<span class="token punctuation">.</span>string\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        updatable<span class="token punctuation">:</span> <span class="token boolean">false</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n    </code>\n</pre>\n     <!-- -->\n    </section>\n    <section>\n     <dt>\n      shape\n     </dt>\n     <dl>\n      Property must be an Object of the given shape.\n     </dl>\n     <h4>\n      Component Definition\n     </h4>\n     <pre class="code-block ember-view language-javascript" id="ember281"><code class=" language-javascript">\n<span class="token keyword">import</span> Ember <span class="token keyword">from</span> <span class="token string">\'ember\'</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token operator">=</span> Ember\n<span class="token keyword">import</span> PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>PropTypes<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ember-prop-types\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Component<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  propTypes<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">shape</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n      baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>string\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">shape</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n      baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>string\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n    foo<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">shape</span><span class="token punctuation">(</span>\n      <span class="token punctuation">{</span>\n        bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n        baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>string\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        required<span class="token punctuation">:</span> <span class="token boolean">true</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    spam<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">shape</span><span class="token punctuation">(</span>\n      <span class="token punctuation">{</span>\n        bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n        baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>string\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        updatable<span class="token punctuation">:</span> <span class="token boolean">false</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n    </code>\n</pre>\n     <!-- -->\n    </section>\n    <section>\n     <dt>\n      string\n     </dt>\n     <dl>\n      Property must be a string.\n     </dl>\n     <h4>\n      Component Definition\n     </h4>\n     <pre class="code-block ember-view language-javascript" id="ember283"><code class=" language-javascript">\n<span class="token keyword">import</span> Ember <span class="token keyword">from</span> <span class="token string">\'ember\'</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token operator">=</span> Ember\n<span class="token keyword">import</span> PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>PropTypes<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ember-prop-types\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Component<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  propTypes<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">,</span>\n    baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n    foo<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token punctuation">{</span>required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    spam<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token punctuation">{</span>updatable<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n    </code>\n</pre>\n     <!-- -->\n    </section>\n    <section>\n     <dt>\n      symbol\n     </dt>\n     <dl>\n      Property must be a symbol.\n     </dl>\n     <h4>\n      Component Definition\n     </h4>\n     <pre class="code-block ember-view language-javascript" id="ember285"><code class=" language-javascript">\n<span class="token keyword">import</span> Ember <span class="token keyword">from</span> <span class="token string">\'ember\'</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token operator">=</span> Ember\n<span class="token keyword">import</span> PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>PropTypes<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ember-prop-types\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Component<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  propTypes<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>symbol<span class="token punctuation">,</span>\n    baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>symbol<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n    foo<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">symbol</span><span class="token punctuation">(</span><span class="token punctuation">{</span>required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    spam<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">symbol</span><span class="token punctuation">(</span><span class="token punctuation">{</span>updatable<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n    </code>\n</pre>\n     <!-- -->\n    </section>\n   </div>\n   <h2>\n    Default Values\n   </h2>\n   <div class="flex">\n    <section>\n     <dt>\n      getDefaultProps()\n     </dt>\n     <dl>\n      Method to get default property values.\n     </dl>\n     <pre class="code-block ember-view language-javascript" id="ember286"><code class=" language-javascript">\n<span class="token keyword">import</span> Ember <span class="token keyword">from</span> <span class="token string">\'ember\'</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token operator">=</span> Ember\n<span class="token keyword">import</span> PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>PropTypes<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ember-prop-types\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Component<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>PropTypeMixin<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  propTypes<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    baz<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">,</span>\n    foo<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>string\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  getDefaultProps <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      baz<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n      foo<span class="token punctuation">:</span> <span class="token string">\'bar\'</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n</code>\n</pre>\n    </section>\n   </div>\n   <h2>\n    Contributors\n   </h2>\n   <div class="contributors flex">\n    <a href="https://github.com/sandersky">\n     <img alt="sandersky" src="https://avatars3.githubusercontent.com/u/422902"/>\n     <br/>\n     Matthew Dahl\n    </a>\n    <a href="https://github.com/sdesros">\n     <img alt="sdesros" src="https://avatars3.githubusercontent.com/u/18398999"/>\n     <br/>\n     sdesros\n    </a>\n    <a href="https://github.com/juwara0">\n     <img alt="juwara0" src="https://avatars3.githubusercontent.com/u/8236686"/>\n     <br/>\n     Michael Carroll\n    </a>\n    <a href="https://github.com/pnachum">\n     <img alt="pnachum" src="https://avatars3.githubusercontent.com/u/2244653"/>\n     <br/>\n     Phil Nachum\n    </a>\n    <a href="https://github.com/sglanzer">\n     <img alt="sglanzer" src="https://avatars3.githubusercontent.com/u/9026198"/>\n     <br/>\n     Steven Glanzer\n    </a>\n    <a href="https://github.com/EWhite613">\n     <img alt="EWhite613" src="https://avatars3.githubusercontent.com/u/9057680"/>\n     <br/>\n     Eric White\n    </a>\n    <a href="https://github.com/ianstarz">\n     <img alt="ianstarz" src="https://avatars3.githubusercontent.com/u/1192053"/>\n     <br/>\n     Ian Storz\n    </a>\n    <a href="https://github.com/justinbowes">\n     <img alt="justinbowes" src="https://avatars3.githubusercontent.com/u/35697"/>\n     <br/>\n     Justin Bowes\n    </a>\n    <a href="https://github.com/job13er">\n     <img alt="job13er" src="https://avatars3.githubusercontent.com/u/411788"/>\n     <br/>\n     Adam Meadows\n    </a>\n   </div>\n  </div>\n </body>\n</html>'