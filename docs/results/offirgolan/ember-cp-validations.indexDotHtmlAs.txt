b'<!DOCTYPE html>\n<html xmlns="http://www.w3.org/1999/xhtml">\n <head>\n  <meta charset="utf-8"/>\n  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>\n  <title>\n   Ember CP Validations\n  </title>\n  <meta content="" name="description"/>\n  <meta content="width=device-width, initial-scale=1" name="viewport"/>\n  <meta content="%7B%22modulePrefix%22%3A%22dummy%22%2C%22environment%22%3A%22production%22%2C%22rootURL%22%3A%22/ember-cp-validations/%22%2C%22locationType%22%3A%22hash%22%2C%22EmberENV%22%3A%7B%22FEATURES%22%3A%7B%7D%2C%22EXTEND_PROTOTYPES%22%3A%7B%22Date%22%3Afalse%7D%7D%2C%22APP%22%3A%7B%22name%22%3A%22ember-cp-validations%22%2C%22version%22%3A%223.3.0+f0f8a92f%22%7D%2C%22exportApplicationGlobal%22%3Afalse%7D" name="dummy/config/environment"/>\n  <link href="/ember-cp-validations/assets/vendor-e63afa9faf7b2b84ae43474918028f34.css" rel="stylesheet"/>\n  <link crossorigin="anonymous" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" rel="stylesheet"/>\n  <link href="https://fonts.googleapis.com/css?family=Roboto:400,700,500,300,100|Open+Sans:400,300,600,700" rel="stylesheet" type="text/css"/>\n  <link href="/ember-cp-validations/assets/dummy-1795b7cd7c4b8c8e54dabf83dc574884.css" rel="stylesheet"/>\n </head>\n <body class="ember-application">\n  <script src="/ember-cp-validations/assets/vendor-cfcae432a0f3c08e64cfee6b7e5ac792.js">\n  </script>\n  <script crossorigin="anonymous" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js">\n  </script>\n  <script src="/ember-cp-validations/assets/dummy-5aef6eb800d4927f6f8ccf04ed8b9161.js">\n  </script>\n  <div class="ember-view" id="ember338">\n   <nav class="navbar navbar-default">\n    <div class="container-fluid">\n     <div class="navbar-header">\n      <button aria-expanded="false" class="navbar-toggle collapsed" data-target="#nav" data-toggle="collapse" type="button">\n       <span class="sr-only">\n        Toggle navigation\n       </span>\n       <span class="icon-bar">\n       </span>\n       <span class="icon-bar">\n       </span>\n       <span class="icon-bar">\n       </span>\n      </button>\n      <a class="navbar-brand active ember-view" href="#/" id="ember369">\n       <img alt="" src="images/ember-logo-99c60a70bf501182696e660669420aa3.png"/>\n       <span>\n        CP Validations\n       </span>\n      </a>\n     </div>\n     <div class="collapse navbar-collapse" id="nav">\n      <ul class="nav navbar-nav">\n      </ul>\n      <ul class="nav navbar-nav navbar-right">\n       <li class="dropdown">\n        <a aria-expanded="false" aria-haspopup="true" class="dropdown-toggle" data-toggle="dropdown" role="button">\n         Documentation\n         <span class="fa fa-caret-down">\n         </span>\n        </a>\n        <ul class="dropdown-menu">\n         <li>\n          <a href="docs">\n           v3.x\n          </a>\n         </li>\n         <li>\n          <a href="https://rawgit.com/offirgolan/ember-cp-validations/c08fedbf3dcfff1e8904a6469c8defd1fc2bfdf5/docs/index.html">\n           v2.x\n          </a>\n         </li>\n        </ul>\n       </li>\n       <li>\n        <a class="fa fa-github github" href="https://github.com/offirgolan/ember-cp-validations">\n        </a>\n       </li>\n      </ul>\n     </div>\n    </div>\n   </nav>\n   <div class="content">\n    <div class="form">\n     <div class="register">\n      <h2>\n       Create an Account\n      </h2>\n      <!-- -->\n      <form>\n       <div class="section">\n        <div class="section-info left">\n         These form inputs are bound to the\n         <strong>\n          User\n         </strong>\n         model which is created in the route\'s model hook. Each one of these fields has validations to make sure we we receive the data we want.\n        </div>\n        <div class="validated-input ember-view" id="ember385">\n         <div class="form-group">\n          <input class="form-control ember-text-field ember-view" id="ember469" name="username" placeholder="Username" type="text"/>\n          <!-- -->\n          <div class="input-error">\n           <!-- -->\n           <!-- -->\n          </div>\n         </div>\n        </div>\n        <div class="validated-input ember-view" id="ember470">\n         <div class="form-group">\n          <input class="form-control ember-text-field ember-view" id="ember479" name="password" placeholder="Password" type="password"/>\n          <!-- -->\n          <div class="input-error">\n           <!-- -->\n           <!-- -->\n          </div>\n         </div>\n        </div>\n        <div class="validated-input ember-view" id="ember480">\n         <div class="form-group">\n          <input class="form-control ember-text-field ember-view" id="ember483" name="email" placeholder="Email" type="text"/>\n          <!-- -->\n          <div class="input-error">\n           <!-- -->\n           <!-- -->\n          </div>\n         </div>\n        </div>\n        <div class="validated-input ember-view" id="ember484">\n         <div class="form-group">\n          <input class="form-control ember-text-field ember-view" id="ember490" name="emailConfirmation" placeholder="Verify Email" type="text"/>\n          <!-- -->\n          <div class="input-error">\n           <!-- -->\n           <!-- -->\n          </div>\n         </div>\n        </div>\n       </div>\n       <h4>\n        About Me\n       </h4>\n       <div class="section">\n        <div class="section-info right">\n         We have a secondary model,\n         <strong>\n          User Details\n         </strong>\n         , which holds extra information about our user. This model is part of the\n         <strong>\n          User\n         </strong>\n         model via a belongsTo relationship.\n        </div>\n        <div class="validated-input ember-view" id="ember491">\n         <div class="form-group">\n          <input class="form-control ember-text-field ember-view" id="ember513" name="firstName" placeholder="First Name" type="text"/>\n          <!-- -->\n          <div class="input-error">\n           <!-- -->\n           <!-- -->\n          </div>\n         </div>\n        </div>\n        <div class="validated-input ember-view" id="ember514">\n         <div class="form-group">\n          <input class="form-control ember-text-field ember-view" id="ember516" name="lastName" placeholder="Last Name" type="text"/>\n          <!-- -->\n          <div class="input-error">\n           <!-- -->\n           <!-- -->\n          </div>\n         </div>\n        </div>\n        <div class="validated-input ember-view" id="ember517">\n         <div class="form-group">\n          <input class="form-control ember-text-field ember-view" id="ember524" name="dob" placeholder="Date of Birth" type="text"/>\n          <!-- -->\n          <div class="input-error">\n           <!-- -->\n           <!-- -->\n          </div>\n         </div>\n        </div>\n        <div class="validated-input ember-view" id="ember525">\n         <div class="form-group">\n          <input class="form-control ember-text-field ember-view" id="ember527" name="phone" placeholder="Phone #" type="text"/>\n          <!-- -->\n          <div class="input-error">\n           <!-- -->\n           <!-- -->\n          </div>\n         </div>\n        </div>\n        <div class="validated-input ember-view" id="ember528">\n         <div class="form-group">\n          <input class="form-control ember-text-field ember-view" id="ember530" name="url" placeholder="URL" type="text"/>\n          <!-- -->\n          <div class="input-error">\n           <!-- -->\n           <!-- -->\n          </div>\n         </div>\n        </div>\n       </div>\n       <div class="section">\n        <div class="section-info left last">\n         On submit, a manual validation is run which will validate both the\n         <strong>\n          User\n         </strong>\n         and\n         <strong>\n          User Details\n         </strong>\n         models. If both are valid, then the user can continue to the next screen.\n        </div>\n        <button data-ember-action="" data-ember-action-531="531" id="signup">\n         Sign Up\n        </button>\n       </div>\n      </form>\n     </div>\n     <footer>\n      <a class="show-code bottom" data-ember-action="" data-ember-action-532="532">\n       <i class="fa fa-code">\n       </i>\n       Show Code\n       <i class="fa fa-code">\n       </i>\n      </a>\n     </footer>\n    </div>\n    <div class="snippet-container ">\n     <ul class="nav nav-tabs" role="tablist">\n      <li class="active" role="presentation">\n       <a aria-controls="user-model" data-toggle="tab" href="#user-model" role="tab">\n        models/user.js\n       </a>\n      </li>\n      <li role="presentation">\n       <a aria-controls="user-detail-model" data-toggle="tab" href="#user-detail-model" role="tab">\n        models/user-detail.js\n       </a>\n      </li>\n      <li role="presentation">\n       <a aria-controls="validated-input-js" data-toggle="tab" href="#validated-input-js" role="tab">\n        validated-input.js\n       </a>\n      </li>\n      <li role="presentation">\n       <a aria-controls="validated-input-hbs" data-toggle="tab" href="#validated-input-hbs" role="tab">\n        validated-input.hbs\n       </a>\n      </li>\n     </ul>\n     <div class="tab-content">\n      <div class="tab-pane fade in active" id="user-model" role="tabpanel">\n       <pre class="javascript ember-view hljs" id="ember541"><span class="hljs-keyword">import</span> DS <span class="hljs-keyword">from</span> <span class="hljs-string">\'ember-data\'</span>;\n<span class="hljs-keyword">import</span> { validator, buildValidations } <span class="hljs-keyword">from</span> <span class="hljs-string">\'ember-cp-validations\'</span>;\n\n<span class="hljs-keyword">const</span> { attr } = DS;\n\n<span class="hljs-keyword">const</span> Validations = buildValidations({\n  <span class="hljs-attr">username</span>: {\n    <span class="hljs-attr">description</span>: <span class="hljs-string">\'Username\'</span>,\n    <span class="hljs-attr">validators</span>: [\n      validator(<span class="hljs-string">\'presence\'</span>, <span class="hljs-literal">true</span>),\n      validator(<span class="hljs-string">\'length\'</span>, {\n        <span class="hljs-attr">min</span>: <span class="hljs-number">5</span>,\n        <span class="hljs-attr">max</span>: <span class="hljs-number">15</span>\n      })\n    ]\n  },\n  <span class="hljs-attr">password</span>: {\n    <span class="hljs-attr">description</span>: <span class="hljs-string">\'Password\'</span>,\n    <span class="hljs-attr">validators</span>: [\n      validator(<span class="hljs-string">\'presence\'</span>, <span class="hljs-literal">true</span>),\n      validator(<span class="hljs-string">\'length\'</span>, {\n        <span class="hljs-attr">min</span>: <span class="hljs-number">4</span>,\n        <span class="hljs-attr">max</span>: <span class="hljs-number">10</span>\n      }),\n      validator(<span class="hljs-string">\'format\'</span>, {\n        <span class="hljs-attr">regex</span>: <span class="hljs-regexp">/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{4,10}$/</span>,\n        <span class="hljs-attr">message</span>: <span class="hljs-string">\'{description} must include at least one upper case letter, one lower case letter, and a number\'</span>\n      }),\n      validator(<span class="hljs-string">\'length\'</span>, {\n        <span class="hljs-attr">isWarning</span>: <span class="hljs-literal">true</span>,\n        <span class="hljs-attr">min</span>: <span class="hljs-number">6</span>,\n        <span class="hljs-attr">message</span>: <span class="hljs-string">\'What kind of weak password is that?\'</span>\n      })\n    ]\n  },\n  <span class="hljs-attr">email</span>: {\n    <span class="hljs-attr">validators</span>: [\n      validator(<span class="hljs-string">\'presence\'</span>, <span class="hljs-literal">true</span>),\n      validator(<span class="hljs-string">\'format\'</span>, {\n        <span class="hljs-attr">type</span>: <span class="hljs-string">\'email\'</span>\n      })\n    ]\n  },\n  <span class="hljs-attr">emailConfirmation</span>: validator(<span class="hljs-string">\'confirmation\'</span>, {\n    <span class="hljs-attr">on</span>: <span class="hljs-string">\'email\'</span>,\n    <span class="hljs-attr">message</span>: <span class="hljs-string">\'Email addresses do not match\'</span>\n  }),\n  <span class="hljs-attr">details</span>: validator(<span class="hljs-string">\'belongs-to\'</span>)\n}, {\n  <span class="hljs-attr">debounce</span>: <span class="hljs-number">500</span>\n});\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> DS.Model.extend(Validations, {\n  <span class="hljs-attr">username</span>: attr(<span class="hljs-string">\'string\'</span>),\n  <span class="hljs-attr">password</span>: attr(<span class="hljs-string">\'string\'</span>),\n  <span class="hljs-attr">email</span>: attr(<span class="hljs-string">\'string\'</span>),\n  <span class="hljs-attr">details</span>: DS.belongsTo(<span class="hljs-string">\'user-detail\'</span>)\n});\n</pre>\n      </div>\n      <div class="tab-pane fade" id="user-detail-model" role="tabpanel">\n       <pre class="javascript ember-view hljs" id="ember542"><span class="hljs-keyword">import</span> Ember <span class="hljs-keyword">from</span> <span class="hljs-string">\'ember\'</span>;\n<span class="hljs-keyword">import</span> DS <span class="hljs-keyword">from</span> <span class="hljs-string">\'ember-data\'</span>;\n<span class="hljs-keyword">import</span> moment <span class="hljs-keyword">from</span> <span class="hljs-string">\'moment\'</span>;\n<span class="hljs-keyword">import</span> { validator, buildValidations } <span class="hljs-keyword">from</span> <span class="hljs-string">\'ember-cp-validations\'</span>;\n\n<span class="hljs-keyword">const</span> { computed } = Ember;\n<span class="hljs-keyword">const</span> { attr } = DS;\n\n<span class="hljs-keyword">const</span> Validations = buildValidations({\n  <span class="hljs-attr">firstName</span>: validator(<span class="hljs-string">\'presence\'</span>, <span class="hljs-literal">true</span>),\n  <span class="hljs-attr">lastName</span>: validator(<span class="hljs-string">\'presence\'</span>, <span class="hljs-literal">true</span>),\n  <span class="hljs-attr">dob</span>: {\n    <span class="hljs-attr">description</span>: <span class="hljs-string">\'Date of  birth\'</span>,\n    <span class="hljs-attr">validators</span>: [\n      validator(<span class="hljs-string">\'presence\'</span>, <span class="hljs-literal">true</span>),\n      validator(<span class="hljs-string">\'date\'</span>, {\n        <span class="hljs-attr">before</span>: <span class="hljs-string">\'now\'</span>,\n        <span class="hljs-attr">after</span>: computed(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n          <span class="hljs-keyword">return</span> moment().subtract(<span class="hljs-number">120</span>, <span class="hljs-string">\'years\'</span>).format(<span class="hljs-string">\'M/D/YYYY\'</span>);\n        }).volatile(),\n        <span class="hljs-attr">format</span>: <span class="hljs-string">\'M/D/YYYY\'</span>,\n        message(type, value <span class="hljs-comment">/*, context */</span>) {\n          <span class="hljs-keyword">if</span> (type === <span class="hljs-string">\'before\'</span>) {\n            <span class="hljs-keyword">return</span> <span class="hljs-string">\'Are you from the future?\'</span>;\n          }\n          <span class="hljs-keyword">if</span> (type === <span class="hljs-string">\'after\'</span>) {\n            <span class="hljs-keyword">return</span> <span class="hljs-string">`There is no way you are <span class="hljs-subst">${moment().diff(value, <span class="hljs-string">\'years\'</span>)}</span> years old`</span>;\n          }\n        }\n      })\n    ]\n  },\n  <span class="hljs-attr">phone</span>: [\n    validator(<span class="hljs-string">\'format\'</span>, {\n      <span class="hljs-attr">allowBlank</span>: <span class="hljs-literal">true</span>,\n      <span class="hljs-attr">type</span>: <span class="hljs-string">\'phone\'</span>\n    })\n  ],\n  <span class="hljs-attr">url</span>: [\n    validator(<span class="hljs-string">\'format\'</span>, {\n      <span class="hljs-attr">allowBlank</span>: <span class="hljs-literal">true</span>,\n      <span class="hljs-attr">type</span>: <span class="hljs-string">\'url\'</span>\n    })\n  ]\n}, {\n  <span class="hljs-attr">debounce</span>: <span class="hljs-number">500</span>\n});\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> DS.Model.extend(Validations, {\n  <span class="hljs-attr">firstName</span>: attr(<span class="hljs-string">\'string\'</span>),\n  <span class="hljs-attr">lastName</span>: attr(<span class="hljs-string">\'string\'</span>),\n  <span class="hljs-attr">dob</span>: attr(<span class="hljs-string">\'date\'</span>),\n  <span class="hljs-attr">phone</span>: attr(<span class="hljs-string">\'string\'</span>),\n  <span class="hljs-attr">url</span>: attr(<span class="hljs-string">\'string\'</span>)\n});\n</pre>\n      </div>\n      <div class="tab-pane fade" id="validated-input-js" role="tabpanel">\n       <pre class="javascript ember-view hljs" id="ember543"><span class="hljs-keyword">import</span> Ember <span class="hljs-keyword">from</span> <span class="hljs-string">\'ember\'</span>;\n\n<span class="hljs-keyword">const</span> {\n  computed,\n  defineProperty\n} = Ember;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> Ember.Component.extend({\n  <span class="hljs-attr">classNames</span>: [<span class="hljs-string">\'validated-input\'</span>],\n  <span class="hljs-attr">classNameBindings</span>: [<span class="hljs-string">\'showErrorClass:has-error\'</span>, <span class="hljs-string">\'isValid:has-success\'</span>],\n  <span class="hljs-attr">model</span>: <span class="hljs-literal">null</span>,\n  <span class="hljs-attr">value</span>: <span class="hljs-literal">null</span>,\n  <span class="hljs-attr">type</span>: <span class="hljs-string">\'text\'</span>,\n  <span class="hljs-attr">valuePath</span>: <span class="hljs-string">\'\'</span>,\n  <span class="hljs-attr">placeholder</span>: <span class="hljs-string">\'\'</span>,\n  <span class="hljs-attr">validation</span>: <span class="hljs-literal">null</span>,\n  <span class="hljs-attr">showValidations</span>: <span class="hljs-literal">false</span>,\n  <span class="hljs-attr">didValidate</span>: <span class="hljs-literal">false</span>,\n\n  <span class="hljs-attr">notValidating</span>: computed.not(<span class="hljs-string">\'validation.isValidating\'</span>).readOnly(),\n  <span class="hljs-attr">hasContent</span>: computed.notEmpty(<span class="hljs-string">\'value\'</span>).readOnly(),\n  <span class="hljs-attr">hasWarnings</span>: computed.notEmpty(<span class="hljs-string">\'validation.warnings\'</span>).readOnly(),\n  <span class="hljs-attr">isValid</span>: computed.and(<span class="hljs-string">\'hasContent\'</span>, <span class="hljs-string">\'validation.isTruelyValid\'</span>).readOnly(),\n  <span class="hljs-attr">shouldDisplayValidations</span>: computed.or(<span class="hljs-string">\'showValidations\'</span>, <span class="hljs-string">\'didValidate\'</span>, <span class="hljs-string">\'hasContent\'</span>).readOnly(),\n\n  <span class="hljs-attr">showErrorClass</span>: computed.and(<span class="hljs-string">\'notValidating\'</span>, <span class="hljs-string">\'showErrorMessage\'</span>, <span class="hljs-string">\'hasContent\'</span>, <span class="hljs-string">\'validation\'</span>).readOnly(),\n  <span class="hljs-attr">showErrorMessage</span>: computed.and(<span class="hljs-string">\'shouldDisplayValidations\'</span>, <span class="hljs-string">\'validation.isInvalid\'</span>).readOnly(),\n  <span class="hljs-attr">showWarningMessage</span>: computed.and(<span class="hljs-string">\'shouldDisplayValidations\'</span>, <span class="hljs-string">\'hasWarnings\'</span>, <span class="hljs-string">\'isValid\'</span>).readOnly(),\n\n  init() {\n    <span class="hljs-keyword">this</span>._super(...arguments);\n    <span class="hljs-keyword">let</span> valuePath = <span class="hljs-keyword">this</span>.get(<span class="hljs-string">\'valuePath\'</span>);\n\n    defineProperty(<span class="hljs-keyword">this</span>, <span class="hljs-string">\'validation\'</span>, computed.readOnly(<span class="hljs-string">`model.validations.attrs.<span class="hljs-subst">${valuePath}</span>`</span>));\n    defineProperty(<span class="hljs-keyword">this</span>, <span class="hljs-string">\'value\'</span>, computed.alias(<span class="hljs-string">`model.<span class="hljs-subst">${valuePath}</span>`</span>));\n  },\n\n  focusOut() {\n    <span class="hljs-keyword">this</span>._super(...arguments);\n    <span class="hljs-keyword">this</span>.set(<span class="hljs-string">\'showValidations\'</span>, <span class="hljs-literal">true</span>);\n  }\n});\n</pre>\n      </div>\n      <div class="tab-pane fade" id="validated-input-hbs" role="tabpanel">\n       <pre class="htmlbars ember-view hljs" id="ember544"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">\'form-group\'</span>&gt;</span>\n  </span><span class="hljs-template-variable">{{<span class="hljs-built_in">input</span> type=type value=value placeholder=placeholder class=\'form-control\' name=valuePath}}</span><span class="xml">\n  </span><span class="hljs-template-tag">{{#<span class="hljs-name"><span class="hljs-builtin-name">if</span></span> isValid}}</span><span class="xml">\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">\'valid-input fa fa-check\'</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n  </span><span class="hljs-template-tag">{{/<span class="hljs-name"><span class="hljs-builtin-name">if</span></span>}}</span><span class="xml">\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">\'input-error\'</span>&gt;</span>\n    </span><span class="hljs-template-tag">{{#<span class="hljs-name"><span class="hljs-builtin-name">if</span></span> showErrorMessage}}</span><span class="xml">\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">\'error\'</span>&gt;</span>\n        </span><span class="hljs-template-variable">{{v-<span class="hljs-built_in">get</span> model valuePath \'message\'}}</span><span class="xml">\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    </span><span class="hljs-template-tag">{{/<span class="hljs-name"><span class="hljs-builtin-name">if</span></span>}}</span><span class="xml">\n\n    </span><span class="hljs-template-tag">{{#<span class="hljs-name"><span class="hljs-builtin-name">if</span></span> showWarningMessage}}</span><span class="xml">\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">\'warning\'</span>&gt;</span>\n        </span><span class="hljs-template-variable">{{v-<span class="hljs-built_in">get</span> model valuePath \'warningMessage\'}}</span><span class="xml">\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    </span><span class="hljs-template-tag">{{/<span class="hljs-name"><span class="hljs-builtin-name">if</span></span>}}</span><span class="xml">\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n</span></pre>\n      </div>\n     </div>\n    </div>\n   </div>\n  </div>\n </body>\n</html>'b'<!DOCTYPE html>\n<html xmlns="http://www.w3.org/1999/xhtml">\n <head>\n  <meta charset="utf-8"/>\n  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>\n  <title>\n   Ember CP Validations\n  </title>\n  <meta content="" name="description"/>\n  <meta content="width=device-width, initial-scale=1" name="viewport"/>\n  <meta content="%7B%22modulePrefix%22%3A%22dummy%22%2C%22environment%22%3A%22production%22%2C%22rootURL%22%3A%22/ember-cp-validations/%22%2C%22locationType%22%3A%22hash%22%2C%22EmberENV%22%3A%7B%22FEATURES%22%3A%7B%7D%2C%22EXTEND_PROTOTYPES%22%3A%7B%22Date%22%3Afalse%7D%7D%2C%22APP%22%3A%7B%22name%22%3A%22ember-cp-validations%22%2C%22version%22%3A%223.3.0+f0f8a92f%22%7D%2C%22exportApplicationGlobal%22%3Afalse%7D" name="dummy/config/environment"/>\n  <link href="/ember-cp-validations/assets/vendor-e63afa9faf7b2b84ae43474918028f34.css" rel="stylesheet"/>\n  <link crossorigin="anonymous" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" rel="stylesheet"/>\n  <link href="https://fonts.googleapis.com/css?family=Roboto:400,700,500,300,100|Open+Sans:400,300,600,700" rel="stylesheet" type="text/css"/>\n  <link href="/ember-cp-validations/assets/dummy-1795b7cd7c4b8c8e54dabf83dc574884.css" rel="stylesheet"/>\n </head>\n <body class="ember-application">\n  <script src="/ember-cp-validations/assets/vendor-cfcae432a0f3c08e64cfee6b7e5ac792.js">\n  </script>\n  <script crossorigin="anonymous" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js">\n  </script>\n  <script src="/ember-cp-validations/assets/dummy-5aef6eb800d4927f6f8ccf04ed8b9161.js">\n  </script>\n  <div class="ember-view" id="ember338">\n   <nav class="navbar navbar-default">\n    <div class="container-fluid">\n     <div class="navbar-header">\n      <button aria-expanded="false" class="navbar-toggle collapsed" data-target="#nav" data-toggle="collapse" type="button">\n       <span class="sr-only">\n        Toggle navigation\n       </span>\n       <span class="icon-bar">\n       </span>\n       <span class="icon-bar">\n       </span>\n       <span class="icon-bar">\n       </span>\n      </button>\n      <a class="navbar-brand active ember-view" href="#/" id="ember369">\n       <img alt="" src="images/ember-logo-99c60a70bf501182696e660669420aa3.png"/>\n       <span>\n        CP Validations\n       </span>\n      </a>\n     </div>\n     <div class="collapse navbar-collapse" id="nav">\n      <ul class="nav navbar-nav">\n      </ul>\n      <ul class="nav navbar-nav navbar-right">\n       <li class="dropdown">\n        <a aria-expanded="false" aria-haspopup="true" class="dropdown-toggle" data-toggle="dropdown" role="button">\n         Documentation\n         <span class="fa fa-caret-down">\n         </span>\n        </a>\n        <ul class="dropdown-menu">\n         <li>\n          <a href="docs">\n           v3.x\n          </a>\n         </li>\n         <li>\n          <a href="https://rawgit.com/offirgolan/ember-cp-validations/c08fedbf3dcfff1e8904a6469c8defd1fc2bfdf5/docs/index.html">\n           v2.x\n          </a>\n         </li>\n        </ul>\n       </li>\n       <li>\n        <a class="fa fa-github github" href="https://github.com/offirgolan/ember-cp-validations">\n        </a>\n       </li>\n      </ul>\n     </div>\n    </div>\n   </nav>\n   <div class="content">\n    <div class="form">\n     <div class="register">\n      <h2>\n       Create an Account\n      </h2>\n      <!-- -->\n      <form>\n       <div class="section">\n        <div class="section-info left">\n         These form inputs are bound to the\n         <strong>\n          User\n         </strong>\n         model which is created in the route\'s model hook. Each one of these fields has validations to make sure we we receive the data we want.\n        </div>\n        <div class="validated-input ember-view" id="ember385">\n         <div class="form-group">\n          <input class="form-control ember-text-field ember-view" id="ember469" name="username" placeholder="Username" type="text"/>\n          <!-- -->\n          <div class="input-error">\n           <!-- -->\n           <!-- -->\n          </div>\n         </div>\n        </div>\n        <div class="validated-input ember-view" id="ember470">\n         <div class="form-group">\n          <input class="form-control ember-text-field ember-view" id="ember479" name="password" placeholder="Password" type="password"/>\n          <!-- -->\n          <div class="input-error">\n           <!-- -->\n           <!-- -->\n          </div>\n         </div>\n        </div>\n        <div class="validated-input ember-view" id="ember480">\n         <div class="form-group">\n          <input class="form-control ember-text-field ember-view" id="ember483" name="email" placeholder="Email" type="text"/>\n          <!-- -->\n          <div class="input-error">\n           <!-- -->\n           <!-- -->\n          </div>\n         </div>\n        </div>\n        <div class="validated-input ember-view" id="ember484">\n         <div class="form-group">\n          <input class="form-control ember-text-field ember-view" id="ember490" name="emailConfirmation" placeholder="Verify Email" type="text"/>\n          <!-- -->\n          <div class="input-error">\n           <!-- -->\n           <!-- -->\n          </div>\n         </div>\n        </div>\n       </div>\n       <h4>\n        About Me\n       </h4>\n       <div class="section">\n        <div class="section-info right">\n         We have a secondary model,\n         <strong>\n          User Details\n         </strong>\n         , which holds extra information about our user. This model is part of the\n         <strong>\n          User\n         </strong>\n         model via a belongsTo relationship.\n        </div>\n        <div class="validated-input ember-view" id="ember491">\n         <div class="form-group">\n          <input class="form-control ember-text-field ember-view" id="ember513" name="firstName" placeholder="First Name" type="text"/>\n          <!-- -->\n          <div class="input-error">\n           <!-- -->\n           <!-- -->\n          </div>\n         </div>\n        </div>\n        <div class="validated-input ember-view" id="ember514">\n         <div class="form-group">\n          <input class="form-control ember-text-field ember-view" id="ember516" name="lastName" placeholder="Last Name" type="text"/>\n          <!-- -->\n          <div class="input-error">\n           <!-- -->\n           <!-- -->\n          </div>\n         </div>\n        </div>\n        <div class="validated-input ember-view" id="ember517">\n         <div class="form-group">\n          <input class="form-control ember-text-field ember-view" id="ember524" name="dob" placeholder="Date of Birth" type="text"/>\n          <!-- -->\n          <div class="input-error">\n           <!-- -->\n           <!-- -->\n          </div>\n         </div>\n        </div>\n        <div class="validated-input ember-view" id="ember525">\n         <div class="form-group">\n          <input class="form-control ember-text-field ember-view" id="ember527" name="phone" placeholder="Phone #" type="text"/>\n          <!-- -->\n          <div class="input-error">\n           <!-- -->\n           <!-- -->\n          </div>\n         </div>\n        </div>\n        <div class="validated-input ember-view" id="ember528">\n         <div class="form-group">\n          <input class="form-control ember-text-field ember-view" id="ember530" name="url" placeholder="URL" type="text"/>\n          <!-- -->\n          <div class="input-error">\n           <!-- -->\n           <!-- -->\n          </div>\n         </div>\n        </div>\n       </div>\n       <div class="section">\n        <div class="section-info left last">\n         On submit, a manual validation is run which will validate both the\n         <strong>\n          User\n         </strong>\n         and\n         <strong>\n          User Details\n         </strong>\n         models. If both are valid, then the user can continue to the next screen.\n        </div>\n        <button data-ember-action="" data-ember-action-531="531" id="signup">\n         Sign Up\n        </button>\n       </div>\n      </form>\n     </div>\n     <footer>\n      <a class="show-code bottom" data-ember-action="" data-ember-action-532="532">\n       <i class="fa fa-code">\n       </i>\n       Show Code\n       <i class="fa fa-code">\n       </i>\n      </a>\n     </footer>\n    </div>\n    <div class="snippet-container ">\n     <ul class="nav nav-tabs" role="tablist">\n      <li class="active" role="presentation">\n       <a aria-controls="user-model" data-toggle="tab" href="#user-model" role="tab">\n        models/user.js\n       </a>\n      </li>\n      <li role="presentation">\n       <a aria-controls="user-detail-model" data-toggle="tab" href="#user-detail-model" role="tab">\n        models/user-detail.js\n       </a>\n      </li>\n      <li role="presentation">\n       <a aria-controls="validated-input-js" data-toggle="tab" href="#validated-input-js" role="tab">\n        validated-input.js\n       </a>\n      </li>\n      <li role="presentation">\n       <a aria-controls="validated-input-hbs" data-toggle="tab" href="#validated-input-hbs" role="tab">\n        validated-input.hbs\n       </a>\n      </li>\n     </ul>\n     <div class="tab-content">\n      <div class="tab-pane fade in active" id="user-model" role="tabpanel">\n       <pre class="javascript ember-view hljs" id="ember541"><span class="hljs-keyword">import</span> DS <span class="hljs-keyword">from</span> <span class="hljs-string">\'ember-data\'</span>;\n<span class="hljs-keyword">import</span> { validator, buildValidations } <span class="hljs-keyword">from</span> <span class="hljs-string">\'ember-cp-validations\'</span>;\n\n<span class="hljs-keyword">const</span> { attr } = DS;\n\n<span class="hljs-keyword">const</span> Validations = buildValidations({\n  <span class="hljs-attr">username</span>: {\n    <span class="hljs-attr">description</span>: <span class="hljs-string">\'Username\'</span>,\n    <span class="hljs-attr">validators</span>: [\n      validator(<span class="hljs-string">\'presence\'</span>, <span class="hljs-literal">true</span>),\n      validator(<span class="hljs-string">\'length\'</span>, {\n        <span class="hljs-attr">min</span>: <span class="hljs-number">5</span>,\n        <span class="hljs-attr">max</span>: <span class="hljs-number">15</span>\n      })\n    ]\n  },\n  <span class="hljs-attr">password</span>: {\n    <span class="hljs-attr">description</span>: <span class="hljs-string">\'Password\'</span>,\n    <span class="hljs-attr">validators</span>: [\n      validator(<span class="hljs-string">\'presence\'</span>, <span class="hljs-literal">true</span>),\n      validator(<span class="hljs-string">\'length\'</span>, {\n        <span class="hljs-attr">min</span>: <span class="hljs-number">4</span>,\n        <span class="hljs-attr">max</span>: <span class="hljs-number">10</span>\n      }),\n      validator(<span class="hljs-string">\'format\'</span>, {\n        <span class="hljs-attr">regex</span>: <span class="hljs-regexp">/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{4,10}$/</span>,\n        <span class="hljs-attr">message</span>: <span class="hljs-string">\'{description} must include at least one upper case letter, one lower case letter, and a number\'</span>\n      }),\n      validator(<span class="hljs-string">\'length\'</span>, {\n        <span class="hljs-attr">isWarning</span>: <span class="hljs-literal">true</span>,\n        <span class="hljs-attr">min</span>: <span class="hljs-number">6</span>,\n        <span class="hljs-attr">message</span>: <span class="hljs-string">\'What kind of weak password is that?\'</span>\n      })\n    ]\n  },\n  <span class="hljs-attr">email</span>: {\n    <span class="hljs-attr">validators</span>: [\n      validator(<span class="hljs-string">\'presence\'</span>, <span class="hljs-literal">true</span>),\n      validator(<span class="hljs-string">\'format\'</span>, {\n        <span class="hljs-attr">type</span>: <span class="hljs-string">\'email\'</span>\n      })\n    ]\n  },\n  <span class="hljs-attr">emailConfirmation</span>: validator(<span class="hljs-string">\'confirmation\'</span>, {\n    <span class="hljs-attr">on</span>: <span class="hljs-string">\'email\'</span>,\n    <span class="hljs-attr">message</span>: <span class="hljs-string">\'Email addresses do not match\'</span>\n  }),\n  <span class="hljs-attr">details</span>: validator(<span class="hljs-string">\'belongs-to\'</span>)\n}, {\n  <span class="hljs-attr">debounce</span>: <span class="hljs-number">500</span>\n});\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> DS.Model.extend(Validations, {\n  <span class="hljs-attr">username</span>: attr(<span class="hljs-string">\'string\'</span>),\n  <span class="hljs-attr">password</span>: attr(<span class="hljs-string">\'string\'</span>),\n  <span class="hljs-attr">email</span>: attr(<span class="hljs-string">\'string\'</span>),\n  <span class="hljs-attr">details</span>: DS.belongsTo(<span class="hljs-string">\'user-detail\'</span>)\n});\n</pre>\n      </div>\n      <div class="tab-pane fade" id="user-detail-model" role="tabpanel">\n       <pre class="javascript ember-view hljs" id="ember542"><span class="hljs-keyword">import</span> Ember <span class="hljs-keyword">from</span> <span class="hljs-string">\'ember\'</span>;\n<span class="hljs-keyword">import</span> DS <span class="hljs-keyword">from</span> <span class="hljs-string">\'ember-data\'</span>;\n<span class="hljs-keyword">import</span> moment <span class="hljs-keyword">from</span> <span class="hljs-string">\'moment\'</span>;\n<span class="hljs-keyword">import</span> { validator, buildValidations } <span class="hljs-keyword">from</span> <span class="hljs-string">\'ember-cp-validations\'</span>;\n\n<span class="hljs-keyword">const</span> { computed } = Ember;\n<span class="hljs-keyword">const</span> { attr } = DS;\n\n<span class="hljs-keyword">const</span> Validations = buildValidations({\n  <span class="hljs-attr">firstName</span>: validator(<span class="hljs-string">\'presence\'</span>, <span class="hljs-literal">true</span>),\n  <span class="hljs-attr">lastName</span>: validator(<span class="hljs-string">\'presence\'</span>, <span class="hljs-literal">true</span>),\n  <span class="hljs-attr">dob</span>: {\n    <span class="hljs-attr">description</span>: <span class="hljs-string">\'Date of  birth\'</span>,\n    <span class="hljs-attr">validators</span>: [\n      validator(<span class="hljs-string">\'presence\'</span>, <span class="hljs-literal">true</span>),\n      validator(<span class="hljs-string">\'date\'</span>, {\n        <span class="hljs-attr">before</span>: <span class="hljs-string">\'now\'</span>,\n        <span class="hljs-attr">after</span>: computed(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n          <span class="hljs-keyword">return</span> moment().subtract(<span class="hljs-number">120</span>, <span class="hljs-string">\'years\'</span>).format(<span class="hljs-string">\'M/D/YYYY\'</span>);\n        }).volatile(),\n        <span class="hljs-attr">format</span>: <span class="hljs-string">\'M/D/YYYY\'</span>,\n        message(type, value <span class="hljs-comment">/*, context */</span>) {\n          <span class="hljs-keyword">if</span> (type === <span class="hljs-string">\'before\'</span>) {\n            <span class="hljs-keyword">return</span> <span class="hljs-string">\'Are you from the future?\'</span>;\n          }\n          <span class="hljs-keyword">if</span> (type === <span class="hljs-string">\'after\'</span>) {\n            <span class="hljs-keyword">return</span> <span class="hljs-string">`There is no way you are <span class="hljs-subst">${moment().diff(value, <span class="hljs-string">\'years\'</span>)}</span> years old`</span>;\n          }\n        }\n      })\n    ]\n  },\n  <span class="hljs-attr">phone</span>: [\n    validator(<span class="hljs-string">\'format\'</span>, {\n      <span class="hljs-attr">allowBlank</span>: <span class="hljs-literal">true</span>,\n      <span class="hljs-attr">type</span>: <span class="hljs-string">\'phone\'</span>\n    })\n  ],\n  <span class="hljs-attr">url</span>: [\n    validator(<span class="hljs-string">\'format\'</span>, {\n      <span class="hljs-attr">allowBlank</span>: <span class="hljs-literal">true</span>,\n      <span class="hljs-attr">type</span>: <span class="hljs-string">\'url\'</span>\n    })\n  ]\n}, {\n  <span class="hljs-attr">debounce</span>: <span class="hljs-number">500</span>\n});\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> DS.Model.extend(Validations, {\n  <span class="hljs-attr">firstName</span>: attr(<span class="hljs-string">\'string\'</span>),\n  <span class="hljs-attr">lastName</span>: attr(<span class="hljs-string">\'string\'</span>),\n  <span class="hljs-attr">dob</span>: attr(<span class="hljs-string">\'date\'</span>),\n  <span class="hljs-attr">phone</span>: attr(<span class="hljs-string">\'string\'</span>),\n  <span class="hljs-attr">url</span>: attr(<span class="hljs-string">\'string\'</span>)\n});\n</pre>\n      </div>\n      <div class="tab-pane fade" id="validated-input-js" role="tabpanel">\n       <pre class="javascript ember-view hljs" id="ember543"><span class="hljs-keyword">import</span> Ember <span class="hljs-keyword">from</span> <span class="hljs-string">\'ember\'</span>;\n\n<span class="hljs-keyword">const</span> {\n  computed,\n  defineProperty\n} = Ember;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> Ember.Component.extend({\n  <span class="hljs-attr">classNames</span>: [<span class="hljs-string">\'validated-input\'</span>],\n  <span class="hljs-attr">classNameBindings</span>: [<span class="hljs-string">\'showErrorClass:has-error\'</span>, <span class="hljs-string">\'isValid:has-success\'</span>],\n  <span class="hljs-attr">model</span>: <span class="hljs-literal">null</span>,\n  <span class="hljs-attr">value</span>: <span class="hljs-literal">null</span>,\n  <span class="hljs-attr">type</span>: <span class="hljs-string">\'text\'</span>,\n  <span class="hljs-attr">valuePath</span>: <span class="hljs-string">\'\'</span>,\n  <span class="hljs-attr">placeholder</span>: <span class="hljs-string">\'\'</span>,\n  <span class="hljs-attr">validation</span>: <span class="hljs-literal">null</span>,\n  <span class="hljs-attr">showValidations</span>: <span class="hljs-literal">false</span>,\n  <span class="hljs-attr">didValidate</span>: <span class="hljs-literal">false</span>,\n\n  <span class="hljs-attr">notValidating</span>: computed.not(<span class="hljs-string">\'validation.isValidating\'</span>).readOnly(),\n  <span class="hljs-attr">hasContent</span>: computed.notEmpty(<span class="hljs-string">\'value\'</span>).readOnly(),\n  <span class="hljs-attr">hasWarnings</span>: computed.notEmpty(<span class="hljs-string">\'validation.warnings\'</span>).readOnly(),\n  <span class="hljs-attr">isValid</span>: computed.and(<span class="hljs-string">\'hasContent\'</span>, <span class="hljs-string">\'validation.isTruelyValid\'</span>).readOnly(),\n  <span class="hljs-attr">shouldDisplayValidations</span>: computed.or(<span class="hljs-string">\'showValidations\'</span>, <span class="hljs-string">\'didValidate\'</span>, <span class="hljs-string">\'hasContent\'</span>).readOnly(),\n\n  <span class="hljs-attr">showErrorClass</span>: computed.and(<span class="hljs-string">\'notValidating\'</span>, <span class="hljs-string">\'showErrorMessage\'</span>, <span class="hljs-string">\'hasContent\'</span>, <span class="hljs-string">\'validation\'</span>).readOnly(),\n  <span class="hljs-attr">showErrorMessage</span>: computed.and(<span class="hljs-string">\'shouldDisplayValidations\'</span>, <span class="hljs-string">\'validation.isInvalid\'</span>).readOnly(),\n  <span class="hljs-attr">showWarningMessage</span>: computed.and(<span class="hljs-string">\'shouldDisplayValidations\'</span>, <span class="hljs-string">\'hasWarnings\'</span>, <span class="hljs-string">\'isValid\'</span>).readOnly(),\n\n  init() {\n    <span class="hljs-keyword">this</span>._super(...arguments);\n    <span class="hljs-keyword">let</span> valuePath = <span class="hljs-keyword">this</span>.get(<span class="hljs-string">\'valuePath\'</span>);\n\n    defineProperty(<span class="hljs-keyword">this</span>, <span class="hljs-string">\'validation\'</span>, computed.readOnly(<span class="hljs-string">`model.validations.attrs.<span class="hljs-subst">${valuePath}</span>`</span>));\n    defineProperty(<span class="hljs-keyword">this</span>, <span class="hljs-string">\'value\'</span>, computed.alias(<span class="hljs-string">`model.<span class="hljs-subst">${valuePath}</span>`</span>));\n  },\n\n  focusOut() {\n    <span class="hljs-keyword">this</span>._super(...arguments);\n    <span class="hljs-keyword">this</span>.set(<span class="hljs-string">\'showValidations\'</span>, <span class="hljs-literal">true</span>);\n  }\n});\n</pre>\n      </div>\n      <div class="tab-pane fade" id="validated-input-hbs" role="tabpanel">\n       <pre class="htmlbars ember-view hljs" id="ember544"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">\'form-group\'</span>&gt;</span>\n  </span><span class="hljs-template-variable">{{<span class="hljs-built_in">input</span> type=type value=value placeholder=placeholder class=\'form-control\' name=valuePath}}</span><span class="xml">\n  </span><span class="hljs-template-tag">{{#<span class="hljs-name"><span class="hljs-builtin-name">if</span></span> isValid}}</span><span class="xml">\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">\'valid-input fa fa-check\'</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n  </span><span class="hljs-template-tag">{{/<span class="hljs-name"><span class="hljs-builtin-name">if</span></span>}}</span><span class="xml">\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">\'input-error\'</span>&gt;</span>\n    </span><span class="hljs-template-tag">{{#<span class="hljs-name"><span class="hljs-builtin-name">if</span></span> showErrorMessage}}</span><span class="xml">\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">\'error\'</span>&gt;</span>\n        </span><span class="hljs-template-variable">{{v-<span class="hljs-built_in">get</span> model valuePath \'message\'}}</span><span class="xml">\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    </span><span class="hljs-template-tag">{{/<span class="hljs-name"><span class="hljs-builtin-name">if</span></span>}}</span><span class="xml">\n\n    </span><span class="hljs-template-tag">{{#<span class="hljs-name"><span class="hljs-builtin-name">if</span></span> showWarningMessage}}</span><span class="xml">\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">\'warning\'</span>&gt;</span>\n        </span><span class="hljs-template-variable">{{v-<span class="hljs-built_in">get</span> model valuePath \'warningMessage\'}}</span><span class="xml">\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    </span><span class="hljs-template-tag">{{/<span class="hljs-name"><span class="hljs-builtin-name">if</span></span>}}</span><span class="xml">\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n</span></pre>\n      </div>\n     </div>\n    </div>\n   </div>\n  </div>\n </body>\n</html>'