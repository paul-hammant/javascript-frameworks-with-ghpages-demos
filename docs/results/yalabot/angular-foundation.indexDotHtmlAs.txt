b'<html class="ng-scope" id="top" lang="en" ng-app="foundationDemoApp">\n <head>\n  <style type="text/css">\n   @charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}\n  </style>\n  <meta charset="utf-8"/>\n  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>\n  <meta content="width=device-width, initial-scale=1.0, user-scalable=no" name="viewport"/>\n  <title>\n   Angular directives for Foundation\n  </title>\n  <meta content="AngularJS (Angular) native\n  directives for Foundation. Small footprint (5kB gzipped!),\n  no 3rd party JS dependencies (jQuery, Foundation JS) required!\n  Widgets: Accordion, Alert, Buttons, Dropdown Toggle, Interchange, Modal, Offcanvas, Pagination, Popover, Progressbar, Rating, Tabs, Tooltip, Topbar, Tour, Typeahead, " name="description"/>\n  <script src="//cdnjs.cloudflare.com/ajax/libs/fastclick/0.6.7/fastclick.min.js">\n  </script>\n  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.4.6/angular.min.js">\n  </script>\n  <script src="mm-foundation-tpls-0.8.0.js">\n  </script>\n  <script src="assets/plunker.js">\n  </script>\n  <script src="assets/app.js">\n  </script>\n  <link href="//cdnjs.cloudflare.com/ajax/libs/foundation/5.5.2/css/foundation.min.css" rel="stylesheet"/>\n  <link href="//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.2.0/css/font-awesome.min.css" rel="stylesheet"/>\n  <link href="assets/rainbow.css" rel="stylesheet"/>\n  <link href="assets/demo.css" rel="stylesheet"/>\n  <link href="https://github.com/pineconellc/angular-foundation/graphs/contributors" rel="author"/>\n  <meta class="foundation-mq-topbar"/>\n  <meta class="foundation-mq-small"/>\n  <meta class="foundation-mq-medium"/>\n  <meta class="foundation-mq-large"/>\n  <meta class="foundation-mq-small"/>\n  <meta class="foundation-mq-medium"/>\n  <meta class="foundation-mq-large"/>\n  <meta class="foundation-mq-xlarge"/>\n  <meta class="foundation-mq-xxlarge"/>\n </head>\n <body class="ng-scope" ng-controller="MainCtrl" style="padding-top: 45px;">\n  <div class="fixed">\n   <nav class="top-bar ng-isolate-scope" ng-transclude="" scrolltop="false" style="height: 45px;">\n    <ul class="title-area ng-scope">\n     <li class="name">\n      <h1>\n       <a href="#">\n        Angular Foundation\n       </a>\n      </h1>\n     </li>\n     <li class="menu-icon toggle-topbar menu-icon ng-isolate-scope" ng-transclude="" toggle-top-bar="">\n      <a class="ng-scope" href="#">\n       Menu\n      </a>\n     </li>\n    </ul>\n    <section class="top-bar-section ng-isolate-scope" ng-transclude="" style="left: 0%;">\n     <ul class="right ng-scope">\n      <li>\n       <a href="#getting_started">\n        Getting started\n       </a>\n      </li>\n      <li class="has-dropdown ng-isolate-scope" has-dropdown="" ng-transclude="">\n       <a class="ng-scope" href="#">\n        Directives\n       </a>\n       <ul class="dropdown ng-isolate-scope" id="directives-list" ng-transclude="" top-bar-dropdown="">\n        <li class="title back js-generated ng-scope">\n         <h5>\n          <a class="ng-binding" href="" ng-click="back($event);">\n           Back\n          </a>\n         </h5>\n        </li>\n        <li class="ng-scope">\n         <a href="#accordion">\n          Accordion\n         </a>\n        </li>\n        <li class="ng-scope">\n         <a href="#alert">\n          Alert\n         </a>\n        </li>\n        <li class="ng-scope">\n         <a href="#buttons">\n          Buttons\n         </a>\n        </li>\n        <li class="ng-scope">\n         <a href="#dropdownToggle">\n          Dropdown Toggle\n         </a>\n        </li>\n        <li class="ng-scope">\n         <a href="#interchange">\n          Interchange\n         </a>\n        </li>\n        <li class="ng-scope">\n         <a href="#modal">\n          Modal\n         </a>\n        </li>\n        <li class="ng-scope">\n         <a href="#offcanvas">\n          Offcanvas\n         </a>\n        </li>\n        <li class="ng-scope">\n         <a href="#pagination">\n          Pagination\n         </a>\n        </li>\n        <li class="ng-scope">\n         <a href="#popover">\n          Popover\n         </a>\n        </li>\n        <li class="ng-scope">\n         <a href="#progressbar">\n          Progressbar\n         </a>\n        </li>\n        <li class="ng-scope">\n         <a href="#rating">\n          Rating\n         </a>\n        </li>\n        <li class="ng-scope">\n         <a href="#tabs">\n          Tabs\n         </a>\n        </li>\n        <li class="ng-scope">\n         <a href="#tooltip">\n          Tooltip\n         </a>\n        </li>\n        <li class="ng-scope">\n         <a href="#topbar">\n          Topbar\n         </a>\n        </li>\n        <li class="ng-scope">\n         <a href="#tour">\n          Tour\n         </a>\n        </li>\n        <li class="ng-scope">\n         <a href="#typeahead">\n          Typeahead\n         </a>\n        </li>\n       </ul>\n      </li>\n      <li>\n       <a href="#animations">\n        Animations\n       </a>\n      </li>\n     </ul>\n    </section>\n   </nav>\n  </div>\n  <div class="header-placeholder">\n  </div>\n  <div role="main">\n   <header class="bs-header text-center" id="overview">\n    <figure>\n     <img class="logo" src="assets/logo.png"/>\n    </figure>\n    <div class="container">\n     <div class="row">\n      <div class="columns large-12 medium-11 small-11 small-centered">\n       <h1>\n        Angular Foundation\n       </h1>\n       <h3>\n        With love, from\n        <a href="http://github.com/pineconellc/">\n         Pinecone\n        </a>\n       </h3>\n       <hr/>\n       <p>\n        <a class="button radius large" href="https://github.com/pineconellc/angular-foundation/tree/gh-pages">\n         <i class="fa fa-download">\n         </i>\n         Download v0.8.0\n        </a>\n        <a class="button radius large" href="https://github.com/pineconellc/angular-foundation">\n         <i class="fa fa-github">\n         </i>\n         Contribute\n        </a>\n       </p>\n      </div>\n     </div>\n    </div>\n   </header>\n   <div class="container">\n    <div class="row">\n     <div class="columns border large-12 medium-11 small-11 small-centered">\n      <section id="getting_started">\n       <div class="page-header">\n        <h1>\n         Getting started\n        </h1>\n       </div>\n       <h3>\n        Dependencies\n       </h3>\n       <p>\n        This repository contains a set of\n        <strong>\n         native AngularJS directives\n        </strong>\n        based on\n            Foundation\'s markup and CSS. As a result no dependency on\n            jQuery or Foundation\'s\n            JavaScript is required. The\n        <strong>\n         only required dependencies\n        </strong>\n        are:\n       </p>\n       <ul>\n        <li>\n         <strong>\n          AngularJS\n         </strong>\n         1.3 or 1.4 (tested with 1.3.19 and 1.4.6)\n        </li>\n        <li>\n         <strong>\n          Foundation 5 CSS\n         </strong>\n         (tested with version 5.5.2).\n        </li>\n       </ul>\n       <h3>\n        Downloading\n       </h3>\n       <p>\n        Build files for all directives are distributed in several flavours: minified for production usage, un-minified\n            for development, with or without templates. All the options are described and can be\n        <a href="https://github.com/pineconellc/angular-foundation/tree/gh-pages">\n         downloaded from here\n        </a>\n        .\n       </p>\n       <h3>\n        Installation\n       </h3>\n       <p>\n        As soon as you\'ve got all the files downloaded and included in your page you just need to declare\n             a dependency on the\n        <code>\n         mm.foundation\n        </code>\n        <a href="http://docs.angularjs.org/guide/module">\n         module\n        </a>\n        :\n        <br/>\n       </p>\n       <pre><code>angular.module(\'myModule\', [\'mm.foundation\']);</code></pre>\n       <p>\n       </p>\n       <p>\n        You can fork one of the plunkers from this page to see a working example of what is described here.\n       </p>\n      </section>\n      <section class="demo" id="accordion">\n       <div class="page-header">\n        <h1>\n         Accordion\n         <small>\n          (\n          <a href="https://github.com/pineconellc/angular-foundation/tree/master/src/accordion" target="_blank">\n           mm.foundation.accordion\n          </a>\n          )\n         </small>\n        </h1>\n       </div>\n       <div class="row">\n        <div class="columns medium-6 show-grid">\n         <div class="ng-scope" ng-controller="AccordionDemoCtrl">\n          <label class="checkbox">\n           <input class="ng-pristine ng-untouched ng-valid" ng-model="oneAtATime" type="checkbox"/>\n           Open only one at a time\n          </label>\n          <accordion close-others="oneAtATime">\n           <dl class="accordion" ng-transclude="">\n            <dd class="ng-isolate-scope" heading="Static Header, initially expanded" is-open="true">\n             <a accordion-transclude="heading" class="ng-binding active" ng-class="{ active: isOpen }" ng-click="isOpen = !isOpen">\n              Static Header, initially expanded\n             </a>\n             <div class="content active" ng-class="{ active: isOpen }" ng-transclude="">\n              <span class="ng-scope">\n               This content is straight in the template.\n              </span>\n             </div>\n            </dd>\n            <!-- ngRepeat: group in groups -->\n            <dd class="ng-isolate-scope" heading="Dynamic Group Header - 1" ng-repeat="group in groups">\n             <a accordion-transclude="heading" class="ng-binding" ng-class="{ active: isOpen }" ng-click="isOpen = !isOpen">\n              Dynamic Group Header - 1\n             </a>\n             <div class="content" ng-class="{ active: isOpen }" ng-transclude="">\n              <span class="ng-binding ng-scope">\n               Dynamic Group Body - 1\n              </span>\n             </div>\n            </dd>\n            <!-- end ngRepeat: group in groups -->\n            <dd class="ng-isolate-scope" heading="Dynamic Group Header - 2" ng-repeat="group in groups">\n             <a accordion-transclude="heading" class="ng-binding" ng-class="{ active: isOpen }" ng-click="isOpen = !isOpen">\n              Dynamic Group Header - 2\n             </a>\n             <div class="content" ng-class="{ active: isOpen }" ng-transclude="">\n              <span class="ng-binding ng-scope">\n               Dynamic Group Body - 2\n              </span>\n             </div>\n            </dd>\n            <!-- end ngRepeat: group in groups -->\n            <dd class="ng-isolate-scope" heading="Dynamic Body Content">\n             <a accordion-transclude="heading" class="ng-binding" ng-class="{ active: isOpen }" ng-click="isOpen = !isOpen">\n              Dynamic Body Content\n             </a>\n             <div class="content" ng-class="{ active: isOpen }" ng-transclude="">\n              <p class="ng-scope">\n               The body of the accordion group grows to fit the contents\n              </p>\n              <button class="button small ng-scope" ng-click="addItem()">\n               Add Item\n              </button>\n              <!-- ngRepeat: item in items -->\n              <div class="ng-binding ng-scope" ng-repeat="item in items">\n               Item 1\n              </div>\n              <!-- end ngRepeat: item in items -->\n              <div class="ng-binding ng-scope" ng-repeat="item in items">\n               Item 2\n              </div>\n              <!-- end ngRepeat: item in items -->\n              <div class="ng-binding ng-scope" ng-repeat="item in items">\n               Item 3\n              </div>\n              <!-- end ngRepeat: item in items -->\n             </div>\n            </dd>\n            <dd class="ng-isolate-scope" is-open="isopen">\n             <a accordion-transclude="heading" class="ng-binding" ng-class="{ active: isOpen }" ng-click="isOpen = !isOpen">\n              <span class="ng-scope">\n               I can have markup, too!\n              </span>\n              <i class="right ng-scope fa fa-chevron-right" ng-class="{\'fa fa-chevron-down\': isopen, \'fa fa-chevron-right\': !isopen}">\n              </i>\n             </a>\n             <div class="content" ng-class="{ active: isOpen }" ng-transclude="">\n              <accordion-heading class="ng-scope">\n              </accordion-heading>\n              <span class="ng-scope">\n               This is just some content to illustrate fancy headings.\n              </span>\n             </div>\n            </dd>\n           </dl>\n          </accordion>\n         </div>\n        </div>\n        <div class="columns medium-6">\n         <p>\n          The\n          <strong>\n           accordion directive\n          </strong>\n          builds on top of the collapse directive to provide a list of items, with collapsible bodies that are collapsed or expanded by clicking on the item\'s header.\n         </p>\n         <p>\n          We can control whether expanding an item will cause the other items to close, using the\n          <code>\n           close-others\n          </code>\n          attribute on accordion.\n         </p>\n         <p>\n          The body of each accordion group is transcluded in to the body of the collapsible element.\n         </p>\n        </div>\n       </div>\n       <hr/>\n       <div class="row code">\n        <div class="columns medium-12 ng-scope" ng-controller="PlunkerCtrl">\n         <div class="right">\n          <button class="button secondary" id="plunk-btn" ng-click="edit(\'1.4.6\', \'5.5.2\', \'0.8.0\', \'accordion\')">\n           <i class="fa fa-edit">\n           </i>\n           Edit in plunker\n          </button>\n         </div>\n         <div class="tabbable ng-isolate-scope">\n          <dl class="tabs" ng-class="{\'vertical\': vertical}" ng-transclude="">\n           <dd class="ng-isolate-scope active" heading="Markup" ng-class="{active: active}">\n            <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n             Markup\n            </a>\n           </dd>\n           <dd class="ng-isolate-scope" heading="JavaScript" ng-class="{active: active}">\n            <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n             JavaScript\n            </a>\n           </dd>\n          </dl>\n          <div class="tabs-content" ng-class="{\'vertical\': vertical}">\n           <!-- ngRepeat: tab in tabs -->\n           <div class="content ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs">\n            <div tab-content-transclude="tab">\n             <div class="ng-scope" plunker-content="markup">\n              <pre ng-non-bindable=""><code class="rainbow" data-language="html"><span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">div</span></span> <span class="support attribute">ng-controller</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">AccordionDemoCtrl</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n  <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">label</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">checkbox</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">input</span></span> <span class="support attribute">type</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">checkbox</span><span class="string quote">"</span> <span class="support attribute">ng-model</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">oneAtATime</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n    Open only one at a time\n  <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">label</span></span><span class="support tag cclose">&gt;</span>\n\n  <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">accordion</span></span> <span class="support attribute">close-others</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">oneAtATime</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">accordion</span></span>-group <span class="support attribute">heading</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">Static Header, initially expanded</span><span class="string quote">"</span> <span class="support attribute">is-open</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">true</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n      This content is straight in the template.\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">accordion</span></span>-group<span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">accordion</span></span>-group <span class="support attribute">heading</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">{{group.title}}</span><span class="string quote">"</span> <span class="support attribute">ng-repeat</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">group in groups</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n      {{group.content}}\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">accordion</span></span>-group<span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">accordion</span></span>-group <span class="support attribute">heading</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">Dynamic Body Content</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n      <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">p</span></span><span class="support tag cclose">&gt;</span>The body of the accordion group grows to fit the contents<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">p</span></span><span class="support tag cclose">&gt;</span>\n        <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">button</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">button small</span><span class="string quote">"</span> <span class="support attribute">ng-click</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">addItem()</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>Add Item<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">button</span></span><span class="support tag cclose">&gt;</span>\n        <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">div</span></span> <span class="support attribute">ng-repeat</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">item in items</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>{{item}}<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">div</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">accordion</span></span>-group<span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">accordion</span></span>-group <span class="support attribute">is-open</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">isopen</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n        <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">accordion</span></span>-heading<span class="support tag cclose">&gt;</span>\n            I can have markup, too! <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">i</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">right</span><span class="string quote">"</span> <span class="support attribute">ng-class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">{\'fa fa-chevron-down\': isopen, \'fa fa-chevron-right\': !isopen}</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">i</span></span><span class="support tag cclose">&gt;</span>\n        <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">accordion</span></span>-heading<span class="support tag cclose">&gt;</span>\n        This is just some content to illustrate fancy headings.\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">accordion</span></span>-group<span class="support tag cclose">&gt;</span>\n  <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">accordion</span></span><span class="support tag cclose">&gt;</span>\n<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">div</span></span><span class="support tag cclose">&gt;</span>\n</code></pre>\n             </div>\n            </div>\n           </div>\n           <!-- end ngRepeat: tab in tabs -->\n           <div class="content ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs">\n            <div tab-content-transclude="tab">\n             <div class="ng-scope" plunker-content="javascript">\n              <pre ng-non-bindable=""><code class="rainbow" data-language="javascript">angular.<span class="function call">module</span>(<span class="string">\'foundationDemoApp\'</span>).<span class="function call">controller</span>(<span class="string">\'AccordionDemoCtrl\'</span>, <span class="keyword">function</span>($scope) {\n  $scope.oneAtATime <span class="keyword operator">=</span> <span class="constant language">true</span>;\n\n  $scope.groups <span class="keyword operator">=</span> [\n    {\n      title: <span class="string">"Dynamic Group Header - 1"</span>,\n      content: <span class="string">"Dynamic Group Body - 1"</span>\n    },\n    {\n      title: <span class="string">"Dynamic Group Header - 2"</span>,\n      content: <span class="string">"Dynamic Group Body - 2"</span>\n    }\n  ];\n\n  $scope.items <span class="keyword operator">=</span> [<span class="string">\'Item 1\'</span>, <span class="string">\'Item 2\'</span>, <span class="string">\'Item 3\'</span>];\n\n<span class="entity function">  $scope.addItem </span><span class="keyword operator">=</span> <span class="keyword">function</span>() {\n    <span class="keyword">var</span> newItemNo <span class="keyword operator">=</span> $scope.items.<span class="support property">length</span> <span class="keyword operator">+</span> <span class="constant numeric">1</span>;\n    $scope.items.<span class="support method">push</span>(<span class="string">\'Item \'</span> <span class="keyword operator">+</span> newItemNo);\n  };\n});\n</code></pre>\n             </div>\n            </div>\n           </div>\n           <!-- end ngRepeat: tab in tabs -->\n          </div>\n         </div>\n        </div>\n       </div>\n      </section>\n      <script>\n       angular.module(\'foundationDemoApp\').controller(\'AccordionDemoCtrl\', function($scope) {\n  $scope.oneAtATime = true;\n\n  $scope.groups = [\n    {\n      title: "Dynamic Group Header - 1",\n      content: "Dynamic Group Body - 1"\n    },\n    {\n      title: "Dynamic Group Header - 2",\n      content: "Dynamic Group Body - 2"\n    }\n  ];\n\n  $scope.items = [\'Item 1\', \'Item 2\', \'Item 3\'];\n\n  $scope.addItem = function() {\n    var newItemNo = $scope.items.length + 1;\n    $scope.items.push(\'Item \' + newItemNo);\n  };\n});\n      </script>\n      <section class="demo" id="alert">\n       <div class="page-header">\n        <h1>\n         Alert\n         <small>\n          (\n          <a href="https://github.com/pineconellc/angular-foundation/tree/master/src/alert" target="_blank">\n           mm.foundation.alert\n          </a>\n          )\n         </small>\n        </h1>\n       </div>\n       <div class="row">\n        <div class="columns medium-6 show-grid">\n         <div class="ng-scope" ng-controller="AlertDemoCtrl">\n          <!-- ngRepeat: alert in alerts -->\n          <div class="alert-box ng-isolate-scope danger" close="closeAlert($index)" ng-class=\'(type || "")\' ng-repeat="alert in alerts" type="alert.type">\n           <span ng-transclude="">\n            <span class="ng-binding ng-scope">\n             Oh snap! Change a few things up and try submitting again.\n            </span>\n           </span>\n           <a class="close" ng-click="close()" ng-show="closeable">\n            \xc3\x97\n           </a>\n          </div>\n          <!-- end ngRepeat: alert in alerts -->\n          <div class="alert-box ng-isolate-scope success round" close="closeAlert($index)" ng-class=\'(type || "")\' ng-repeat="alert in alerts" type="alert.type">\n           <span ng-transclude="">\n            <span class="ng-binding ng-scope">\n             Well done! You successfully read this important alert message.\n            </span>\n           </span>\n           <a class="close" ng-click="close()" ng-show="closeable">\n            \xc3\x97\n           </a>\n          </div>\n          <!-- end ngRepeat: alert in alerts -->\n          <button class="button" ng-click="addAlert()">\n           Add Alert\n          </button>\n         </div>\n        </div>\n        <div class="columns medium-6">\n         <p>\n          Alert is an AngularJS-version of Foundation\'s alert.\n         </p>\n         <p>\n          This directive can be used to generate alerts from the dynamic model data (using the ng-repeat directive);\n         </p>\n         <p>\n          The presence of the "close" attribute determines if a close button is displayed\n         </p>\n        </div>\n       </div>\n       <hr/>\n       <div class="row code">\n        <div class="columns medium-12 ng-scope" ng-controller="PlunkerCtrl">\n         <div class="right">\n          <button class="button secondary" id="plunk-btn" ng-click="edit(\'1.4.6\', \'5.5.2\', \'0.8.0\', \'alert\')">\n           <i class="fa fa-edit">\n           </i>\n           Edit in plunker\n          </button>\n         </div>\n         <div class="tabbable ng-isolate-scope">\n          <dl class="tabs" ng-class="{\'vertical\': vertical}" ng-transclude="">\n           <dd class="ng-isolate-scope active" heading="Markup" ng-class="{active: active}">\n            <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n             Markup\n            </a>\n           </dd>\n           <dd class="ng-isolate-scope" heading="JavaScript" ng-class="{active: active}">\n            <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n             JavaScript\n            </a>\n           </dd>\n          </dl>\n          <div class="tabs-content" ng-class="{\'vertical\': vertical}">\n           <!-- ngRepeat: tab in tabs -->\n           <div class="content ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs">\n            <div tab-content-transclude="tab">\n             <div class="ng-scope" plunker-content="markup">\n              <pre ng-non-bindable=""><code class="rainbow" data-language="html"><span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">div</span></span> <span class="support attribute">ng-controller</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">AlertDemoCtrl</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n  <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">alert</span></span> <span class="support attribute">ng-repeat</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">alert in alerts</span><span class="string quote">"</span> <span class="support attribute">type</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">alert.type</span><span class="string quote">"</span> <span class="support attribute">close</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">closeAlert($index)</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>{{alert.msg}}<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">alert</span></span><span class="support tag cclose">&gt;</span>\n  <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">button</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">\'</span><span class="string value">button</span><span class="string quote">\'</span> <span class="support attribute">ng-click</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">addAlert()</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>Add Alert<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">button</span></span><span class="support tag cclose">&gt;</span>\n<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">div</span></span><span class="support tag cclose">&gt;</span>\n</code></pre>\n             </div>\n            </div>\n           </div>\n           <!-- end ngRepeat: tab in tabs -->\n           <div class="content ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs">\n            <div tab-content-transclude="tab">\n             <div class="ng-scope" plunker-content="javascript">\n              <pre ng-non-bindable=""><code class="rainbow" data-language="javascript">angular.<span class="function call">module</span>(<span class="string">\'foundationDemoApp\'</span>).<span class="function call">controller</span>(<span class="string">\'AlertDemoCtrl\'</span>, <span class="keyword">function</span>($scope) {\n  $scope.alerts <span class="keyword operator">=</span> [\n    { type: <span class="string">\'danger\'</span>, msg: <span class="string">\'Oh snap! Change a few things up and try submitting again.\'</span> },\n    { type: <span class="string">\'success round\'</span>, msg: <span class="string">\'Well done! You successfully read this important alert message.\'</span> }\n  ];\n\n<span class="entity function">  $scope.addAlert </span><span class="keyword operator">=</span> <span class="keyword">function</span>() {\n    $scope.alerts.<span class="support method">push</span>({msg: <span class="string">"Another alert!"</span>});\n  };\n\n<span class="entity function">  $scope.closeAlert </span><span class="keyword operator">=</span> <span class="keyword">function</span>(index) {\n    $scope.alerts.<span class="function call">splice</span>(index, <span class="constant numeric">1</span>);\n  };\n\n});\n</code></pre>\n             </div>\n            </div>\n           </div>\n           <!-- end ngRepeat: tab in tabs -->\n          </div>\n         </div>\n        </div>\n       </div>\n      </section>\n      <script>\n       angular.module(\'foundationDemoApp\').controller(\'AlertDemoCtrl\', function($scope) {\n  $scope.alerts = [\n    { type: \'danger\', msg: \'Oh snap! Change a few things up and try submitting again.\' },\n    { type: \'success round\', msg: \'Well done! You successfully read this important alert message.\' }\n  ];\n\n  $scope.addAlert = function() {\n    $scope.alerts.push({msg: "Another alert!"});\n  };\n\n  $scope.closeAlert = function(index) {\n    $scope.alerts.splice(index, 1);\n  };\n\n});\n      </script>\n      <section class="demo" id="buttons">\n       <div class="page-header">\n        <h1>\n         Buttons\n         <small>\n          (\n          <a href="https://github.com/pineconellc/angular-foundation/tree/master/src/buttons" target="_blank">\n           mm.foundation.buttons\n          </a>\n          )\n         </small>\n        </h1>\n       </div>\n       <div class="row">\n        <div class="columns medium-6 show-grid">\n         <div class="ng-scope" ng-controller="ButtonsCtrl">\n          <h4>\n           Single toggle\n          </h4>\n          <pre class="ng-binding">1</pre>\n          <button btn-checkbox="" btn-checkbox-false="0" btn-checkbox-true="1" class="button ng-pristine ng-untouched ng-valid active" ng-model="singleModel" type="button">\n           Single Toggle\n          </button>\n          <h4>\n           Checkbox\n          </h4>\n          <pre class="ng-binding">{"left":false,"middle":true,"right":false}</pre>\n          <div class="button-group">\n           <button btn-checkbox="" class="button ng-pristine ng-untouched ng-valid" ng-model="checkModel.left" type="button">\n            Left\n           </button>\n           <button btn-checkbox="" class="button ng-pristine ng-untouched ng-valid active" ng-model="checkModel.middle" type="button">\n            Middle\n           </button>\n           <button btn-checkbox="" class="button ng-pristine ng-untouched ng-valid" ng-model="checkModel.right" type="button">\n            Right\n           </button>\n          </div>\n          <h4>\n           Radio\n          </h4>\n          <pre class="ng-binding">Middle</pre>\n          <div class="button-group">\n           <button btn-radio="\'Left\'" class="button ng-pristine ng-untouched ng-valid" ng-model="radioModel" type="button">\n            Left\n           </button>\n           <button btn-radio="\'Middle\'" class="button ng-pristine ng-untouched ng-valid active" ng-model="radioModel" type="button">\n            Middle\n           </button>\n           <button btn-radio="\'Right\'" class="button ng-pristine ng-untouched ng-valid" ng-model="radioModel" type="button">\n            Right\n           </button>\n          </div>\n         </div>\n        </div>\n        <div class="columns medium-6">\n         <p>\n          There are 2 directives that can make a group of buttons to behave like a set of checkboxes or radio buttons.\n         </p>\n        </div>\n       </div>\n       <hr/>\n       <div class="row code">\n        <div class="columns medium-12 ng-scope" ng-controller="PlunkerCtrl">\n         <div class="right">\n          <button class="button secondary" id="plunk-btn" ng-click="edit(\'1.4.6\', \'5.5.2\', \'0.8.0\', \'buttons\')">\n           <i class="fa fa-edit">\n           </i>\n           Edit in plunker\n          </button>\n         </div>\n         <div class="tabbable ng-isolate-scope">\n          <dl class="tabs" ng-class="{\'vertical\': vertical}" ng-transclude="">\n           <dd class="ng-isolate-scope active" heading="Markup" ng-class="{active: active}">\n            <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n             Markup\n            </a>\n           </dd>\n           <dd class="ng-isolate-scope" heading="JavaScript" ng-class="{active: active}">\n            <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n             JavaScript\n            </a>\n           </dd>\n          </dl>\n          <div class="tabs-content" ng-class="{\'vertical\': vertical}">\n           <!-- ngRepeat: tab in tabs -->\n           <div class="content ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs">\n            <div tab-content-transclude="tab">\n             <div class="ng-scope" plunker-content="markup">\n              <pre ng-non-bindable=""><code class="rainbow" data-language="html"><span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">div</span></span> <span class="support attribute">ng-controller</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">ButtonsCtrl</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">h4</span></span><span class="support tag cclose">&gt;</span>Single toggle<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">h4</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">pre</span></span><span class="support tag cclose">&gt;</span>{{singleModel}}<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">pre</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">button</span></span> <span class="support attribute">type</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">button</span><span class="string quote">"</span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">button</span><span class="string quote">"</span> <span class="support attribute">ng-model</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">singleModel</span><span class="string quote">"</span> btn-checkbox <span class="support attribute">btn-checkbox-true</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">1</span><span class="string quote">"</span> <span class="support attribute">btn-checkbox-false</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">0</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n        Single Toggle\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">button</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">h4</span></span><span class="support tag cclose">&gt;</span>Checkbox<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">h4</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">pre</span></span><span class="support tag cclose">&gt;</span>{{checkModel}}<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">pre</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">div</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">button-group</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n        <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">button</span></span> <span class="support attribute">type</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">button</span><span class="string quote">"</span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">button</span><span class="string quote">"</span> <span class="support attribute">ng-model</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">checkModel.left</span><span class="string quote">"</span> btn-checkbox<span class="support tag cclose">&gt;</span>Left<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">button</span></span><span class="support tag cclose">&gt;</span>\n        <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">button</span></span> <span class="support attribute">type</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">button</span><span class="string quote">"</span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">button</span><span class="string quote">"</span> <span class="support attribute">ng-model</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">checkModel.middle</span><span class="string quote">"</span> btn-checkbox<span class="support tag cclose">&gt;</span>Middle<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">button</span></span><span class="support tag cclose">&gt;</span>\n        <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">button</span></span> <span class="support attribute">type</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">button</span><span class="string quote">"</span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">button</span><span class="string quote">"</span> <span class="support attribute">ng-model</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">checkModel.right</span><span class="string quote">"</span> btn-checkbox<span class="support tag cclose">&gt;</span>Right<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">button</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">div</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">h4</span></span><span class="support tag cclose">&gt;</span>Radio<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">h4</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">pre</span></span><span class="support tag cclose">&gt;</span>{{radioModel}}<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">pre</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">div</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">button-group</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n        <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">button</span></span> <span class="support attribute">type</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">button</span><span class="string quote">"</span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">button</span><span class="string quote">"</span> <span class="support attribute">ng-model</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">radioModel</span><span class="string quote">"</span> <span class="support attribute">btn-radio</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">\'Left\'</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>Left<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">button</span></span><span class="support tag cclose">&gt;</span>\n        <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">button</span></span> <span class="support attribute">type</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">button</span><span class="string quote">"</span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">button</span><span class="string quote">"</span> <span class="support attribute">ng-model</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">radioModel</span><span class="string quote">"</span> <span class="support attribute">btn-radio</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">\'Middle\'</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>Middle<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">button</span></span><span class="support tag cclose">&gt;</span>\n        <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">button</span></span> <span class="support attribute">type</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">button</span><span class="string quote">"</span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">button</span><span class="string quote">"</span> <span class="support attribute">ng-model</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">radioModel</span><span class="string quote">"</span> <span class="support attribute">btn-radio</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">\'Right\'</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>Right<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">button</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">div</span></span><span class="support tag cclose">&gt;</span>\n<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">div</span></span><span class="support tag cclose">&gt;</span>\n</code></pre>\n             </div>\n            </div>\n           </div>\n           <!-- end ngRepeat: tab in tabs -->\n           <div class="content ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs">\n            <div tab-content-transclude="tab">\n             <div class="ng-scope" plunker-content="javascript">\n              <pre ng-non-bindable=""><code class="rainbow" data-language="javascript">angular.<span class="function call">module</span>(<span class="string">\'foundationDemoApp\'</span>).<span class="function call">controller</span>(<span class="string">\'ButtonsCtrl\'</span>, <span class="storage function">function</span> ($scope) {\n\n  $scope.singleModel <span class="keyword operator">=</span> <span class="constant numeric">1</span>;\n\n  $scope.radioModel <span class="keyword operator">=</span> <span class="string">\'Middle\'</span>;\n\n  $scope.checkModel <span class="keyword operator">=</span> {\n    left: <span class="constant language">false</span>,\n    middle: <span class="constant language">true</span>,\n    right: <span class="constant language">false</span>\n  };\n});</code></pre>\n             </div>\n            </div>\n           </div>\n           <!-- end ngRepeat: tab in tabs -->\n          </div>\n         </div>\n        </div>\n       </div>\n      </section>\n      <script>\n       angular.module(\'foundationDemoApp\').controller(\'ButtonsCtrl\', function ($scope) {\n\n  $scope.singleModel = 1;\n\n  $scope.radioModel = \'Middle\';\n\n  $scope.checkModel = {\n    left: false,\n    middle: true,\n    right: false\n  };\n});\n      </script>\n      <section class="demo" id="dropdownToggle">\n       <div class="page-header">\n        <h1>\n         Dropdown Toggle\n         <small>\n          (\n          <a href="https://github.com/pineconellc/angular-foundation/tree/master/src/dropdownToggle" target="_blank">\n           mm.foundation.dropdownToggle\n          </a>\n          )\n         </small>\n        </h1>\n       </div>\n       <div class="row">\n        <div class="columns medium-6 show-grid">\n         <div class="ng-scope" ng-controller="DropdownCtrl">\n          <p>\n           <a dropdown-toggle="#dropdown-example-1">\n            Click me for a dropdown, yo!\n           </a>\n          </p>\n          <ul class="f-dropdown" id="dropdown-example-1" style="display: none;">\n           <!-- ngRepeat: choice in items -->\n           <li class="ng-scope" ng-repeat="choice in items">\n            <a class="ng-binding">\n             The first choice!\n            </a>\n           </li>\n           <!-- end ngRepeat: choice in items -->\n           <li class="ng-scope" ng-repeat="choice in items">\n            <a class="ng-binding">\n             And another choice for you.\n            </a>\n           </li>\n           <!-- end ngRepeat: choice in items -->\n           <li class="ng-scope" ng-repeat="choice in items">\n            <a class="ng-binding">\n             but wait! A third!\n            </a>\n           </li>\n           <!-- end ngRepeat: choice in items -->\n          </ul>\n          <a class="button dropdown" dropdown-toggle="#dropdown-example-2">\n           Dropdowns can also have links!\n          </a>\n          <ul class="f-dropdown" id="dropdown-example-2" style="display: none;">\n           <!-- ngRepeat: (label, url) in linkItems -->\n           <li class="ng-scope" ng-repeat="(label, url) in linkItems">\n            <a class="ng-binding" href="http://google.com" target="_blank">\n             Google\n            </a>\n           </li>\n           <!-- end ngRepeat: (label, url) in linkItems -->\n           <li class="ng-scope" ng-repeat="(label, url) in linkItems">\n            <a class="ng-binding" href="http://altavista.com" target="_blank">\n             AltaVista\n            </a>\n           </li>\n           <!-- end ngRepeat: (label, url) in linkItems -->\n          </ul>\n          <a class="button split">\n           Split Button\n           <span dropdown-toggle="#dropdown-example-3">\n           </span>\n          </a>\n          <ul class="f-dropdown" id="dropdown-example-3" style="display: none;">\n           <!-- ngRepeat: choice in items -->\n           <li class="ng-scope" ng-repeat="choice in items">\n            <a class="ng-binding">\n             The first choice!\n            </a>\n           </li>\n           <!-- end ngRepeat: choice in items -->\n           <li class="ng-scope" ng-repeat="choice in items">\n            <a class="ng-binding">\n             And another choice for you.\n            </a>\n           </li>\n           <!-- end ngRepeat: choice in items -->\n           <li class="ng-scope" ng-repeat="choice in items">\n            <a class="ng-binding">\n             but wait! A third!\n            </a>\n           </li>\n           <!-- end ngRepeat: choice in items -->\n          </ul>\n         </div>\n        </div>\n        <div class="columns medium-6">\n         <p>\n          DropdownToggle is a simple directive which will toggle a dropdown link on click.  Simply put it on the toggler-element, and it will find the target element and toggle it when the element matching the value of the\n          <code>\n           dropdown-toggle\n          </code>\n          attribute is clicked.\n         </p>\n        </div>\n       </div>\n       <hr/>\n       <div class="row code">\n        <div class="columns medium-12 ng-scope" ng-controller="PlunkerCtrl">\n         <div class="right">\n          <button class="button secondary" id="plunk-btn" ng-click="edit(\'1.4.6\', \'5.5.2\', \'0.8.0\', \'dropdownToggle\')">\n           <i class="fa fa-edit">\n           </i>\n           Edit in plunker\n          </button>\n         </div>\n         <div class="tabbable ng-isolate-scope">\n          <dl class="tabs" ng-class="{\'vertical\': vertical}" ng-transclude="">\n           <dd class="ng-isolate-scope active" heading="Markup" ng-class="{active: active}">\n            <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n             Markup\n            </a>\n           </dd>\n           <dd class="ng-isolate-scope" heading="JavaScript" ng-class="{active: active}">\n            <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n             JavaScript\n            </a>\n           </dd>\n          </dl>\n          <div class="tabs-content" ng-class="{\'vertical\': vertical}">\n           <!-- ngRepeat: tab in tabs -->\n           <div class="content ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs">\n            <div tab-content-transclude="tab">\n             <div class="ng-scope" plunker-content="markup">\n              <pre ng-non-bindable=""><code class="rainbow" data-language="html"><span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">div</span></span> <span class="support attribute">ng-controller</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">DropdownCtrl</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n  <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">p</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">a</span></span> <span class="support attribute">dropdown-toggle</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">#dropdown-example-1</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>Click me for a dropdown, yo!<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">a</span></span><span class="support tag cclose">&gt;</span>\n  <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">p</span></span><span class="support tag cclose">&gt;</span>\n  <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">ul</span></span> <span class="support attribute">id</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">dropdown-example-1</span><span class="string quote">"</span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">f-dropdown</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">li</span></span> <span class="support attribute">ng-repeat</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">choice in items</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n      <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">a</span></span><span class="support tag cclose">&gt;</span>{{choice}}<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">a</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">li</span></span><span class="support tag cclose">&gt;</span>\n  <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">ul</span></span><span class="support tag cclose">&gt;</span>\n\n  <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">a</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">button dropdown</span><span class="string quote">"</span> <span class="support attribute">dropdown-toggle</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">#dropdown-example-2</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>Dropdowns can also have links!<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">a</span></span><span class="support tag cclose">&gt;</span>\n  <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">ul</span></span> <span class="support attribute">id</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">dropdown-example-2</span><span class="string quote">"</span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">f-dropdown</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">li</span></span> <span class="support attribute">ng-repeat</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">(label, url) in linkItems</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n      <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">a</span></span> <span class="support attribute">href</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">{{url}}</span><span class="string quote">"</span> <span class="support attribute">target</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">_blank</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>{{label}}<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">a</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">li</span></span><span class="support tag cclose">&gt;</span>\n  <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">ul</span></span><span class="support tag cclose">&gt;</span>\n\n  <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">a</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">button split</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n    Split Button\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">span</span></span> <span class="support attribute">dropdown-toggle</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">#dropdown-example-3</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">span</span></span><span class="support tag cclose">&gt;</span>\n  <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">a</span></span><span class="support tag cclose">&gt;</span>\n  <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">ul</span></span> <span class="support attribute">id</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">dropdown-example-3</span><span class="string quote">"</span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">f-dropdown</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">li</span></span> <span class="support attribute">ng-repeat</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">choice in items</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n      <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">a</span></span><span class="support tag cclose">&gt;</span>{{choice}}<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">a</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">li</span></span><span class="support tag cclose">&gt;</span>\n  <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">ul</span></span><span class="support tag cclose">&gt;</span>\n<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">div</span></span><span class="support tag cclose">&gt;</span>\n</code></pre>\n             </div>\n            </div>\n           </div>\n           <!-- end ngRepeat: tab in tabs -->\n           <div class="content ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs">\n            <div tab-content-transclude="tab">\n             <div class="ng-scope" plunker-content="javascript">\n              <pre ng-non-bindable=""><code class="rainbow" data-language="javascript">angular.<span class="function call">module</span>(<span class="string">\'foundationDemoApp\'</span>).<span class="function call">controller</span>(<span class="string">\'DropdownCtrl\'</span>, <span class="keyword">function</span>($scope) {\n  $scope.items <span class="keyword operator">=</span> [\n    <span class="string">"The first choice!"</span>,\n    <span class="string">"And another choice for you."</span>,\n    <span class="string">"but wait! A third!"</span>\n  ];\n  $scope.linkItems <span class="keyword operator">=</span> {\n    <span class="string">"Google"</span>: <span class="string">"http://google.com"</span>,\n    <span class="string">"AltaVista"</span>: <span class="string">"http://altavista.com"</span>\n  };\n});\n</code></pre>\n             </div>\n            </div>\n           </div>\n           <!-- end ngRepeat: tab in tabs -->\n          </div>\n         </div>\n        </div>\n       </div>\n      </section>\n      <script>\n       angular.module(\'foundationDemoApp\').controller(\'DropdownCtrl\', function($scope) {\n  $scope.items = [\n    "The first choice!",\n    "And another choice for you.",\n    "but wait! A third!"\n  ];\n  $scope.linkItems = {\n    "Google": "http://google.com",\n    "AltaVista": "http://altavista.com"\n  };\n});\n      </script>\n      <section class="demo" id="interchange">\n       <div class="page-header">\n        <h1>\n         Interchange\n         <small>\n          (\n          <a href="https://github.com/pineconellc/angular-foundation/tree/master/src/interchange" target="_blank">\n           mm.foundation.interchange\n          </a>\n          )\n         </small>\n        </h1>\n       </div>\n       <div class="row">\n        <div class="columns medium-6 show-grid">\n         <img class="ng-scope" interchange="[assets/img/space-small.jpg, (small)],\n                  [assets/img/space-medium.jpg, (medium)],\n                  [assets/img/space-large.jpg, (large)]" src="assets/img/space-large.jpg"/>\n         <p class="panel">\n          Resize the window to update the content\n         </p>\n        </div>\n        <div class="columns medium-6">\n         <p>\n          Interchange uses media queries to dynamically load responsive content that is appropriate for different screen sizes.\n         </p>\n         <p>\n          You can use Interchange with different content types:\n         </p>\n         <ul>\n          <li>\n           <em>\n            HTML templates:\n           </em>\n           by linking a rule with html files to a\n           <code>\n            div\n           </code>\n           tag\n          </li>\n          <li>\n           <em>\n            Images:\n           </em>\n           through an interchange rule to an\n           <code>\n            img\n           </code>\n           tag\n          </li>\n          <li>\n           <em>\n            Background-images\n           </em>\n           through linking a rule with picture files to a\n           <code>\n            div\n           </code>\n           tag\n          </li>\n         </ul>\n         <p>\n          Custom named queries are available via the method\n          <code>\n           add\n          </code>\n          of the\n          <code>\n           interchangeQueriesManager\n          </code>\n          factory. You just need to provide the name and media type desired.\n         </p>\n         <p>\n          Like the original,\n          <code>\n           replace\n          </code>\n          events are available when an Interchange element switch to another media query.\n         </p>\n         <p>\n          For more information, check out\n          <a href="http://foundation.zurb.com/docs/components/interchange.html">\n           the docs for the original Interchange component\n          </a>\n          .\n         </p>\n         <p>\n          <em>\n           Images courtesy of the official ZURB Foundation documentation.\n          </em>\n         </p>\n        </div>\n       </div>\n       <hr/>\n       <div class="row code">\n        <div class="columns medium-12 ng-scope" ng-controller="PlunkerCtrl">\n         <div class="right">\n          <button class="button secondary" id="plunk-btn" ng-click="edit(\'1.4.6\', \'5.5.2\', \'0.8.0\', \'interchange\')">\n           <i class="fa fa-edit">\n           </i>\n           Edit in plunker\n          </button>\n         </div>\n         <div class="tabbable ng-isolate-scope">\n          <dl class="tabs" ng-class="{\'vertical\': vertical}" ng-transclude="">\n           <dd class="ng-isolate-scope active" heading="Markup" ng-class="{active: active}">\n            <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n             Markup\n            </a>\n           </dd>\n           <dd class="ng-isolate-scope" heading="JavaScript" ng-class="{active: active}">\n            <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n             JavaScript\n            </a>\n           </dd>\n          </dl>\n          <div class="tabs-content" ng-class="{\'vertical\': vertical}">\n           <!-- ngRepeat: tab in tabs -->\n           <div class="content ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs">\n            <div tab-content-transclude="tab">\n             <div class="ng-scope" plunker-content="markup">\n              <pre ng-non-bindable=""><code class="rainbow" data-language="html"><span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">img</span></span> <span class="support attribute">interchange</span>="[assets/img/space-small.jpg, (small)],\n                  [assets/img/space-medium.jpg, (medium)],\n                  [assets/img/space-large.jpg, (large)]"\n     <span class="support attribute">src</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">assets/img/space-small.jpg</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n\n<span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">p</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">panel</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>Resize the window to update the content<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">p</span></span><span class="support tag cclose">&gt;</span>\n</code></pre>\n             </div>\n            </div>\n           </div>\n           <!-- end ngRepeat: tab in tabs -->\n           <div class="content ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs">\n            <div tab-content-transclude="tab">\n             <div class="ng-scope" plunker-content="javascript">\n              <pre ng-non-bindable=""><code class="rainbow" data-language="javascript"><span class="comment">// No controller required</span></code></pre>\n             </div>\n            </div>\n           </div>\n           <!-- end ngRepeat: tab in tabs -->\n          </div>\n         </div>\n        </div>\n       </div>\n      </section>\n      <script>\n       // No controller required\n      </script>\n      <section class="demo" id="modal">\n       <div class="page-header">\n        <h1>\n         Modal\n         <small>\n          (\n          <a href="https://github.com/pineconellc/angular-foundation/tree/master/src/modal" target="_blank">\n           mm.foundation.modal\n          </a>\n          )\n         </small>\n        </h1>\n       </div>\n       <div class="row">\n        <div class="columns medium-6 show-grid">\n         <div class="ng-scope" ng-controller="ModalDemoCtrl">\n          <script id="myModalContent.html" type="text/ng-template">\n           <h3>I\'m a modal!</h3>\n    <ul>\n      <li ng-repeat="item in items">\n        <a ng-click="selected.item = item">{{ item }}</a>\n      </li>\n    </ul>\n    <p>Selected: <b>{{ selected.item }}</b></p>\n    <button class="button secondary" ng-click="reposition()">Reset top position</button>\n    <button class="button" ng-click="ok()">OK</button>\n    <a class="close-reveal-modal" ng-click="cancel()">&#215;</a>\n          </script>\n          <button class="button" ng-click="open()">\n           Open me!\n          </button>\n          <div class="ng-binding ng-hide" ng-show="selected">\n           Selection from a modal:\n          </div>\n         </div>\n        </div>\n        <div class="columns medium-6">\n         <p>\n          <code>\n           $modal\n          </code>\n          is a service to quickly create AngularJS-powered modal windows. It is the equivalent of the\n          <a href="http://foundation.zurb.com/docs/components/reveal.html">\n           Foundation Reveal\n          </a>\n          component.\nCreating custom modals is straightforward: create a partial view, its controller and reference them when using the service.\n         </p>\n         <p>\n          The\n          <code>\n           $modal\n          </code>\n          service has only one method:\n          <code>\n           open(options)\n          </code>\n          where available options are like follows:\n         </p>\n         <ul>\n          <li>\n           <code>\n            templateUrl\n           </code>\n           - a path to a template representing modal\'s content\n          </li>\n          <li>\n           <code>\n            template\n           </code>\n           - inline template representing the modal\'s content\n          </li>\n          <li>\n           <code>\n            scope\n           </code>\n           - a scope instance to be used for the modal\'s content (actually the\n           <code>\n            $modal\n           </code>\n           service is going to create a child scope of a provided scope). Defaults to\n           <code>\n            $rootScope\n           </code>\n          </li>\n          <li>\n           <code>\n            controller\n           </code>\n           - a controller for a modal instance - it can initialize scope used by modal. Accepts the "controller-as" syntax, and can be injected with\n           <code>\n            $modalInstance\n           </code>\n          </li>\n          <li>\n           <code>\n            controllerAs\n           </code>\n           - an alternative to the aforementioned "controller-as" syntax. This is intended for the case of when the\n           <code>\n            controller\n           </code>\n           option is assigned an anonymous or local function and thus the "controller-as" syntax couldn\'t be applied.\n          </li>\n          <li>\n           <code>\n            resolve\n           </code>\n           - members that will be resolved and passed to the controller as locals; it is equivalent of the\n           <code>\n            resolve\n           </code>\n           property for AngularJS routes\n          </li>\n          <li>\n           <code>\n            backdrop\n           </code>\n           - controls presence of a backdrop. Allowed values: true (default), false (no backdrop),\n           <code>\n            \'static\'\n           </code>\n           - backdrop is present but modal window is not closed when clicking outside of the modal window.\n          </li>\n          <li>\n           <code>\n            keyboard\n           </code>\n           - indicates whether the dialog should be closable by hitting the ESC key, defaults to true\n          </li>\n          <li>\n           <code>\n            windowClass\n           </code>\n           - additional CSS class(es) to be added to a modal window template\n          </li>\n          <li>\n           <code>\n            parent\n           </code>\n           - specify the container element where the modal HTML will be injected. This should be a valid\n           <code>\n            angular.element()\n           </code>\n           selector and defaults to \'body\'.\n          </li>\n         </ul>\n         <p>\n          The\n          <code>\n           open\n          </code>\n          method returns a modal instance, an object with the following properties:\n         </p>\n         <ul>\n          <li>\n           <code>\n            close(result)\n           </code>\n           - a method that can be used to close a modal, passing a result\n          </li>\n          <li>\n           <code>\n            dismiss(reason)\n           </code>\n           - a method that can be used to dismiss a modal, passing a reason\n          </li>\n          <li>\n           <code>\n            reposition()\n           </code>\n           - recalculates and positions the top position of the modal\n          </li>\n          <li>\n           <code>\n            result\n           </code>\n           - a promise that is resolved when a modal is closed and rejected when a modal is dismissed\n          </li>\n          <li>\n           <code>\n            opened\n           </code>\n           - a promise that is resolved when a modal gets opened after downloading content\'s template and resolving all variables\n          </li>\n         </ul>\n         <p>\n          In addition the scope associated with modal\'s content is augmented with 2 methods:\n         </p>\n         <ul>\n          <li>\n           <code>\n            $close(result)\n           </code>\n           - an alias for\n           <code>\n            $modalInstance.close()\n           </code>\n          </li>\n          <li>\n           <code>\n            $dismiss(reason)\n           </code>\n           - an alias for\n           <code>\n            $modalInstance.dismiss()\n           </code>\n          </li>\n         </ul>\n         <p>\n          Those methods make it easy to close a modal window without a need to create a dedicated controller\n         </p>\n        </div>\n       </div>\n       <hr/>\n       <div class="row code">\n        <div class="columns medium-12 ng-scope" ng-controller="PlunkerCtrl">\n         <div class="right">\n          <button class="button secondary" id="plunk-btn" ng-click="edit(\'1.4.6\', \'5.5.2\', \'0.8.0\', \'modal\')">\n           <i class="fa fa-edit">\n           </i>\n           Edit in plunker\n          </button>\n         </div>\n         <div class="tabbable ng-isolate-scope">\n          <dl class="tabs" ng-class="{\'vertical\': vertical}" ng-transclude="">\n           <dd class="ng-isolate-scope active" heading="Markup" ng-class="{active: active}">\n            <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n             Markup\n            </a>\n           </dd>\n           <dd class="ng-isolate-scope" heading="JavaScript" ng-class="{active: active}">\n            <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n             JavaScript\n            </a>\n           </dd>\n          </dl>\n          <div class="tabs-content" ng-class="{\'vertical\': vertical}">\n           <!-- ngRepeat: tab in tabs -->\n           <div class="content ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs">\n            <div tab-content-transclude="tab">\n             <div class="ng-scope" plunker-content="markup">\n              <pre ng-non-bindable=""><code class="rainbow" data-language="html"><span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">div</span></span> <span class="support attribute">ng-controller</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">ModalDemoCtrl</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n  <span class="source js embedded"><span class="support tag script">&lt;</span><span class="entity tag script">script</span> <span class="entity tag script">type</span>=<span class="string">"text/ng-template"</span> <span class="entity tag script">id</span>=<span class="string">"myModalContent.html"</span><span class="support tag script">&gt;</span>\n    <span class="keyword operator">&lt;</span>h3<span class="keyword operator">&gt;</span>I\'m a modal<span class="keyword operator">!</span><span class="keyword operator">&lt;</span>/h3<span class="keyword operator">&gt;</span>\n    <span class="keyword operator">&lt;</span>ul<span class="keyword operator">&gt;</span>\n      <span class="keyword operator">&lt;</span>li ng<span class="keyword operator">-</span>repeat<span class="keyword operator">=</span><span class="string">"item in items"</span><span class="keyword operator">&gt;</span>\n        <span class="keyword operator">&lt;</span>a ng<span class="keyword operator">-</span>click<span class="keyword operator">=</span><span class="string">"selected.item = item"</span><span class="keyword operator">&gt;</span>{{ item }}<span class="keyword operator">&lt;</span>/a<span class="keyword operator">&gt;</span>\n      <span class="keyword operator">&lt;</span>/li<span class="keyword operator">&gt;</span>\n    <span class="keyword operator">&lt;</span>/ul<span class="keyword operator">&gt;</span>\n    <span class="keyword operator">&lt;</span>p<span class="keyword operator">&gt;</span>Selected: <span class="keyword operator">&lt;</span>b<span class="keyword operator">&gt;</span>{{ selected.item }}<span class="keyword operator">&lt;</span><span class="string regexp"><span class="string regexp open">/</span>b&gt;&lt;<span class="string regexp cclose">/</span></span>p<span class="keyword operator">&gt;</span>\n    <span class="keyword operator">&lt;</span>button <span class="keyword">class</span><span class="keyword operator">=</span><span class="string">"button secondary"</span> ng<span class="keyword operator">-</span>click<span class="keyword operator">=</span><span class="string">"reposition()"</span><span class="keyword operator">&gt;</span>Reset top position<span class="keyword operator">&lt;</span>/button<span class="keyword operator">&gt;</span>\n    <span class="keyword operator">&lt;</span>button <span class="keyword">class</span><span class="keyword operator">=</span><span class="string">"button"</span> ng<span class="keyword operator">-</span>click<span class="keyword operator">=</span><span class="string">"ok()"</span><span class="keyword operator">&gt;</span>OK<span class="keyword operator">&lt;</span>/button<span class="keyword operator">&gt;</span>\n    <span class="keyword operator">&lt;</span>a <span class="keyword">class</span><span class="keyword operator">=</span><span class="string">"close-reveal-modal"</span> ng<span class="keyword operator">-</span>click<span class="keyword operator">=</span><span class="string">"cancel()"</span><span class="keyword operator">&gt;</span><span class="keyword operator">&amp;</span><span class="comment">#215;&lt;/a&gt;</span>\n  <span class="support tag script">&lt;/</span><span class="entity tag script">script</span><span class="support tag script">&gt;</span></span>\n\n  <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">button</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">button</span><span class="string quote">"</span> <span class="support attribute">ng-click</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">open()</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>Open me!<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">button</span></span><span class="support tag cclose">&gt;</span>\n  <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">div</span></span> <span class="support attribute">ng-show</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">selected</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>Selection from a modal: {{ selected }}<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">div</span></span><span class="support tag cclose">&gt;</span>\n<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">div</span></span><span class="support tag cclose">&gt;</span>\n</code></pre>\n             </div>\n            </div>\n           </div>\n           <!-- end ngRepeat: tab in tabs -->\n           <div class="content ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs">\n            <div tab-content-transclude="tab">\n             <div class="ng-scope" plunker-content="javascript">\n              <pre ng-non-bindable=""><code class="rainbow" data-language="javascript">angular.<span class="function call">module</span>(<span class="string">\'foundationDemoApp\'</span>).<span class="function call">controller</span>(<span class="string">\'ModalDemoCtrl\'</span>, <span class="storage function">function</span> ($scope, $modal, $log) {\n\n  $scope.items <span class="keyword operator">=</span> [<span class="string">\'item1\'</span>, <span class="string">\'item2\'</span>, <span class="string">\'item3\'</span>];\n\n  $scope.open <span class="keyword operator">=</span> <span class="storage function">function</span> () {\n\n    <span class="keyword">var</span> modalInstance <span class="keyword operator">=</span> $modal.<span class="function call">open</span>({\n      templateUrl: <span class="string">\'myModalContent.html\'</span>,\n      controller: <span class="string">\'ModalInstanceCtrl\'</span>,\n      resolve: {\n        <span class="entity function">items</span>: <span class="storage function">function</span> () {\n          <span class="keyword">return</span> $scope.items;\n        }\n      }\n    });\n\n    modalInstance.result.<span class="keyword">then</span>(<span class="storage function">function</span> (selectedItem) {\n      $scope.selected <span class="keyword operator">=</span> selectedItem;\n    }, <span class="storage function">function</span> () {\n      $log.<span class="function call">info</span>(<span class="string">\'Modal dismissed at: \'</span> <span class="keyword operator">+</span> <span class="keyword">new</span> <span class="entity function">Date</span>());\n    });\n  };\n});\n\n<span class="comment">// Please note that $modalInstance represents a modal window (instance) dependency.</span>\n<span class="comment">// It is not the same as the $modal service used above.</span>\n\nangular.<span class="function call">module</span>(<span class="string">\'foundationDemoApp\'</span>).<span class="function call">controller</span>(<span class="string">\'ModalInstanceCtrl\'</span>, <span class="storage function">function</span> ($scope, $modalInstance, items) {\n\n  $scope.items <span class="keyword operator">=</span> items;\n  $scope.selected <span class="keyword operator">=</span> {\n    item: $scope.items[<span class="constant numeric">0</span>]\n  };\n\n  $scope.reposition <span class="keyword operator">=</span> <span class="storage function">function</span> () {\n    $modalInstance.<span class="function call">reposition</span>();\n  };\n\n  $scope.ok <span class="keyword operator">=</span> <span class="storage function">function</span> () {\n    $modalInstance.<span class="function call">close</span>($scope.selected.item);\n  };\n\n  $scope.cancel <span class="keyword operator">=</span> <span class="storage function">function</span> () {\n    $modalInstance.<span class="function call">dismiss</span>(<span class="string">\'cancel\'</span>);\n  };\n});\n</code></pre>\n             </div>\n            </div>\n           </div>\n           <!-- end ngRepeat: tab in tabs -->\n          </div>\n         </div>\n        </div>\n       </div>\n      </section>\n      <script>\n       angular.module(\'foundationDemoApp\').controller(\'ModalDemoCtrl\', function ($scope, $modal, $log) {\n\n  $scope.items = [\'item1\', \'item2\', \'item3\'];\n\n  $scope.open = function () {\n\n    var modalInstance = $modal.open({\n      templateUrl: \'myModalContent.html\',\n      controller: \'ModalInstanceCtrl\',\n      resolve: {\n        items: function () {\n          return $scope.items;\n        }\n      }\n    });\n\n    modalInstance.result.then(function (selectedItem) {\n      $scope.selected = selectedItem;\n    }, function () {\n      $log.info(\'Modal dismissed at: \' + new Date());\n    });\n  };\n});\n\n// Please note that $modalInstance represents a modal window (instance) dependency.\n// It is not the same as the $modal service used above.\n\nangular.module(\'foundationDemoApp\').controller(\'ModalInstanceCtrl\', function ($scope, $modalInstance, items) {\n\n  $scope.items = items;\n  $scope.selected = {\n    item: $scope.items[0]\n  };\n\n  $scope.reposition = function () {\n    $modalInstance.reposition();\n  };\n\n  $scope.ok = function () {\n    $modalInstance.close($scope.selected.item);\n  };\n\n  $scope.cancel = function () {\n    $modalInstance.dismiss(\'cancel\');\n  };\n});\n      </script>\n      <section class="demo" id="offcanvas">\n       <div class="page-header">\n        <h1>\n         Offcanvas\n         <small>\n          (\n          <a href="https://github.com/pineconellc/angular-foundation/tree/master/src/offcanvas" target="_blank">\n           mm.foundation.offcanvas\n          </a>\n          )\n         </small>\n        </h1>\n       </div>\n       <div class="row">\n        <div class="columns medium-6 show-grid">\n         <div class="ng-scope" ng-controller="OffCanvasDemoCtrl">\n          <div class="off-canvas-wrap ng-isolate-scope">\n           <div class="inner-wrap">\n            <nav class="tab-bar">\n             <section class="left-small">\n              <a class="left-off-canvas-toggle menu-icon">\n               <span>\n               </span>\n              </a>\n             </section>\n             <section class="middle tab-bar-section">\n              <h1 class="title">\n               OffCanvas\n              </h1>\n             </section>\n             <section class="right-small">\n              <a class="right-off-canvas-toggle menu-icon">\n               <span>\n               </span>\n              </a>\n             </section>\n            </nav>\n            <aside class="left-off-canvas-menu">\n             <ul class="off-canvas-list">\n              <li>\n               <a href="#">\n                Left Sidebar\n               </a>\n              </li>\n             </ul>\n            </aside>\n            <aside class="right-off-canvas-menu">\n             <ul class="off-canvas-list">\n              <li>\n               <a href="#">\n                Right Sidebar\n               </a>\n              </li>\n             </ul>\n            </aside>\n            <section class="main-section">\n             <div class="small-12 columns">\n              <h1>\n               How to use\n              </h1>\n              <p>\n               Just use the standard layout for an offcanvas page as documented in the\n               <a href="http://foundation.zurb.com/docs/components/offcanvas.html">\n                foundation docs\n               </a>\n              </p>\n              <p>\n               As long as you include mm.foundation.offcanvas it should simply work\n              </p>\n             </div>\n            </section>\n            <a class="exit-off-canvas">\n            </a>\n           </div>\n          </div>\n         </div>\n        </div>\n        <div class="columns medium-6">\n         <p>\n          A lightweight directive that provides the\n          <a href="http://foundation.zurb.com/docs/components/offcanvas.html">\n           Foundation Offcanvas\n          </a>\n          component.\n         </p>\n         <p>\n          There are no settings. You simply need to include the foundation off canvas CSS component in your page.\n         </p>\n         <p>\n          The off canvas module expects the use of several nested elements with the following classes:\n         </p>\n         <ul>\n          <li>\n           <code>\n            off-canvas-wrap\n           </code>\n           : The most outter page wrapper.\n          </li>\n          <li>\n           <code>\n            inner-wrap\n           </code>\n           : Second page wrapper nested directly inside off-canvas-wrap.\n          </li>\n          <li>\n           <code>\n            left-off-canvas-toggle\n           </code>\n           : Wraps the left off canvas menu.\n          </li>\n          <li>\n           <code>\n            right-off-canvas-toggle\n           </code>\n           : Wraps the right off canvas menu.\n          </li>\n          <li>\n           <code>\n            exit-off-canvas\n           </code>\n           : Occludes the main page content when an off canvas menu is visible. Hides the menu when clicked.\n          </li>\n          <li>\n           <code>\n            off-canvas-list\n           </code>\n           : Contains off canvas menu items. Hides the menu after a nested link is clicked.\n          </li>\n         </ul>\n         <p>\n          See the demo page for example on how to use this and see the\n          <a href="http://foundation.zurb.com/docs/components/offcanvas.html">\n           Foundation docs\n          </a>\n          for more details.\n         </p>\n        </div>\n       </div>\n       <hr/>\n       <div class="row code">\n        <div class="columns medium-12 ng-scope" ng-controller="PlunkerCtrl">\n         <div class="right">\n          <button class="button secondary" id="plunk-btn" ng-click="edit(\'1.4.6\', \'5.5.2\', \'0.8.0\', \'offcanvas\')">\n           <i class="fa fa-edit">\n           </i>\n           Edit in plunker\n          </button>\n         </div>\n         <div class="tabbable ng-isolate-scope">\n          <dl class="tabs" ng-class="{\'vertical\': vertical}" ng-transclude="">\n           <dd class="ng-isolate-scope active" heading="Markup" ng-class="{active: active}">\n            <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n             Markup\n            </a>\n           </dd>\n           <dd class="ng-isolate-scope" heading="JavaScript" ng-class="{active: active}">\n            <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n             JavaScript\n            </a>\n           </dd>\n          </dl>\n          <div class="tabs-content" ng-class="{\'vertical\': vertical}">\n           <!-- ngRepeat: tab in tabs -->\n           <div class="content ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs">\n            <div tab-content-transclude="tab">\n             <div class="ng-scope" plunker-content="markup">\n              <pre ng-non-bindable=""><code class="rainbow" data-language="html"><span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">div</span></span> <span class="support attribute">ng-controller</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">OffCanvasDemoCtrl</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">div</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">off-canvas-wrap</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n        <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">div</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">inner-wrap</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n            <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">nav</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">tab-bar</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n                <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">section</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">left-small</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n                    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">a</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">left-off-canvas-toggle menu-icon</span><span class="string quote">"</span> <span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">span</span></span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">span</span></span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">a</span></span><span class="support tag cclose">&gt;</span>\n                <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">section</span></span><span class="support tag cclose">&gt;</span>\n\n                <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">section</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">middle tab-bar-section</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n                    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">h1</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">title</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>OffCanvas<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">h1</span></span><span class="support tag cclose">&gt;</span>\n                <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">section</span></span><span class="support tag cclose">&gt;</span>\n\n                <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">section</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">right-small</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n                    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">a</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">right-off-canvas-toggle menu-icon</span><span class="string quote">"</span> <span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">span</span></span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">span</span></span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">a</span></span><span class="support tag cclose">&gt;</span>\n                <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">section</span></span><span class="support tag cclose">&gt;</span>\n\n            <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">nav</span></span><span class="support tag cclose">&gt;</span>\n\n            <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">aside</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">left-off-canvas-menu</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n                <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">ul</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">off-canvas-list</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n                    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">li</span></span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">a</span></span> <span class="support attribute">href</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">#</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>Left Sidebar<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">a</span></span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">li</span></span><span class="support tag cclose">&gt;</span>\n                <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">ul</span></span><span class="support tag cclose">&gt;</span>\n            <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">aside</span></span><span class="support tag cclose">&gt;</span>\n            <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">aside</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">right-off-canvas-menu</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n                <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">ul</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">off-canvas-list</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n                    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">li</span></span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">a</span></span> <span class="support attribute">href</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">#</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>Right Sidebar<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">a</span></span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">li</span></span><span class="support tag cclose">&gt;</span>\n                <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">ul</span></span><span class="support tag cclose">&gt;</span>\n            <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">aside</span></span><span class="support tag cclose">&gt;</span>\n            <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">section</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">main-section</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n                <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">div</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">small-12 columns</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n                    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">h1</span></span><span class="support tag cclose">&gt;</span>How to use<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">h1</span></span><span class="support tag cclose">&gt;</span>\n                    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">p</span></span><span class="support tag cclose">&gt;</span>Just use the standard layout for an offcanvas page as documented in the <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">a</span></span> <span class="support attribute">href</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">http://foundation.zurb.com/docs/components/offcanvas.html</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>foundation docs<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">a</span></span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">p</span></span><span class="support tag cclose">&gt;</span>\n                    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">p</span></span><span class="support tag cclose">&gt;</span>As long as you include mm.foundation.offcanvas it should simply work<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">p</span></span><span class="support tag cclose">&gt;</span>\n                <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">div</span></span><span class="support tag cclose">&gt;</span>\n            <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">section</span></span><span class="support tag cclose">&gt;</span>\n\n            <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">a</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">exit-off-canvas</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">a</span></span><span class="support tag cclose">&gt;</span>\n        <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">div</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">div</span></span><span class="support tag cclose">&gt;</span>\n<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">div</span></span><span class="support tag cclose">&gt;</span></code></pre>\n             </div>\n            </div>\n           </div>\n           <!-- end ngRepeat: tab in tabs -->\n           <div class="content ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs">\n            <div tab-content-transclude="tab">\n             <div class="ng-scope" plunker-content="javascript">\n              <pre ng-non-bindable=""><code class="rainbow" data-language="javascript">angular.<span class="function call">module</span>(<span class="string">\'foundationDemoApp\'</span>).<span class="function call">controller</span>(<span class="string">\'OffCanvasDemoCtrl\'</span>, <span class="storage function">function</span> ($scope) {\n\n});\n</code></pre>\n             </div>\n            </div>\n           </div>\n           <!-- end ngRepeat: tab in tabs -->\n          </div>\n         </div>\n        </div>\n       </div>\n      </section>\n      <script>\n       angular.module(\'foundationDemoApp\').controller(\'OffCanvasDemoCtrl\', function ($scope) {\n\n});\n      </script>\n      <section class="demo" id="pagination">\n       <div class="page-header">\n        <h1>\n         Pagination\n         <small>\n          (\n          <a href="https://github.com/pineconellc/angular-foundation/tree/master/src/pagination" target="_blank">\n           mm.foundation.pagination\n          </a>\n          )\n         </small>\n        </h1>\n       </div>\n       <div class="row">\n        <div class="columns medium-6 show-grid">\n         <div class="ng-scope" ng-controller="PaginationDemoCtrl">\n          <h4>\n           Default\n          </h4>\n          <ul class="pagination ng-isolate-scope" page="currentPage" total-items="totalItems">\n           <!-- ngRepeat: page in pages -->\n           <li class="ng-scope arrow" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             Previous\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             1\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             2\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             3\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope current" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             4\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             5\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             6\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             7\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope arrow" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             Next\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n          </ul>\n          <ul boundary-links="true" class="pagination-sm pagination ng-isolate-scope" first-text="\xc2\xab" last-text="\xc2\xbb" next-text="\xe2\x80\xba" page="currentPage" previous-text="\xe2\x80\xb9" total-items="totalItems">\n           <!-- ngRepeat: page in pages -->\n           <li class="ng-scope arrow" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             \xc2\xab\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             \xe2\x80\xb9\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             1\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             2\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             3\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope current" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             4\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             5\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             6\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             7\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             \xe2\x80\xba\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope arrow" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             \xc2\xbb\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n          </ul>\n          <ul boundary-links="true" class="pagination ng-isolate-scope" direction-links="false" page="currentPage" total-items="totalItems">\n           <!-- ngRepeat: page in pages -->\n           <li class="ng-scope arrow" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             First\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             1\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             2\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             3\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope current" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             4\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             5\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             6\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             7\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope arrow" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             Last\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n          </ul>\n          <ul class="pagination ng-isolate-scope" direction-links="false" num-pages="smallnumPages" page="currentPage" total-items="totalItems">\n           <!-- ngRepeat: page in pages -->\n           <li class="ng-scope arrow" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             1\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             2\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             3\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope current" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             4\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             5\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             6\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope arrow" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             7\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n          </ul>\n          <pre class="ng-binding">The selected page no: 4</pre>\n          <button class="button secondary" ng-click="setPage(3)">\n           Set current page to: 3\n          </button>\n          <hr/>\n          <h4>\n           Pager\n          </h4>\n          <ul class="pagination ng-isolate-scope" page="currentPage" total-items="totalItems">\n           <!-- ngRepeat: page in pages -->\n           <li class="arrow ng-scope left" ng-class="{unavailable: page.disabled, left: page.previous, right: page.next}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             \xc2\xab Previous\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="arrow ng-scope right" ng-class="{unavailable: page.disabled, left: page.previous, right: page.next}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             Next \xc2\xbb\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n          </ul>\n          <hr/>\n          <h4>\n           Limit the maximum visible buttons\n          </h4>\n          <ul boundary-links="true" class="pagination-sm pagination ng-isolate-scope" max-size="maxSize" page="bigCurrentPage" total-items="bigTotalItems">\n           <!-- ngRepeat: page in pages -->\n           <li class="ng-scope arrow unavailable" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             First\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope unavailable" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             Previous\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope current" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             1\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             2\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             3\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             4\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             5\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             Next\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope arrow" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             Last\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n          </ul>\n          <ul boundary-links="true" class="pagination-sm pagination ng-isolate-scope" max-size="maxSize" num-pages="numPages" page="bigCurrentPage" rotate="false" total-items="bigTotalItems">\n           <!-- ngRepeat: page in pages -->\n           <li class="ng-scope arrow unavailable" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             First\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope unavailable" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             Previous\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope current" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             1\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             2\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             3\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             4\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             5\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             ...\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             Next\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n           <li class="ng-scope arrow" ng-class="{arrow: $first || $last, current: page.active, unavailable: page.disabled}" ng-repeat="page in pages">\n            <a class="ng-binding" ng-click="selectPage(page.number)">\n             Last\n            </a>\n           </li>\n           <!-- end ngRepeat: page in pages -->\n          </ul>\n          <pre class="ng-binding">Page: 1 / 18</pre>\n         </div>\n        </div>\n        <div class="columns medium-6">\n         <p>\n          A lightweight pagination directive that is focused on ... providing pagination &amp; will take care of visualising a pagination bar and enable / disable buttons correctly!\n         </p>\n         <h3>\n          Pagination Settings\n         </h3>\n         <p>\n          Settings can be provided as attributes in the\n          <code>\n           &lt;pagination&gt;\n          </code>\n          or globally configured through the\n          <code>\n           paginationConfig\n          </code>\n          .\n         </p>\n         <ul>\n          <li>\n           <p>\n            <code>\n             page\n            </code>\n            <i class="fa fa-eye">\n            </i>\n            :\n Current page number. First page is 1.\n           </p>\n          </li>\n          <li>\n           <p>\n            <code>\n             total-items\n            </code>\n            <i class="fa fa-eye">\n            </i>\n            :\n Total number of items in all pages.\n           </p>\n          </li>\n          <li>\n           <p>\n            <code>\n             items-per-page\n            </code>\n            <i class="fa fa-eye">\n            </i>\n            <em>\n             (Defaults: 10)\n            </em>\n            :\n Maximum number of items per page. A value less than one indicates all items on one page.\n           </p>\n          </li>\n          <li>\n           <p>\n            <code>\n             max-size\n            </code>\n            <i class="fa fa-eye">\n            </i>\n            <em>\n             (Defaults: null)\n            </em>\n            :\n Limit number for pagination size.\n           </p>\n          </li>\n          <li>\n           <p>\n            <code>\n             num-pages\n            </code>\n            <small class="badge">\n             readonly\n            </small>\n            <em>\n             (Defaults: angular.noop)\n            </em>\n            :\n An optional expression assigned the total number of pages to display.\n           </p>\n          </li>\n          <li>\n           <p>\n            <code>\n             rotate\n            </code>\n            <em>\n             (Defaults: true)\n            </em>\n            :\n Whether to keep current page in the middle of the visible ones.\n           </p>\n          </li>\n          <li>\n           <p>\n            <code>\n             on-select-page (page)\n            </code>\n            <em>\n             (Default: null)\n            </em>\n            :\n An optional expression called when a page is selected having the page number as argument.\n           </p>\n          </li>\n          <li>\n           <p>\n            <code>\n             direction-links\n            </code>\n            <em>\n             (Default: true)\n            </em>\n            :\n Whether to display Previous / Next buttons.\n           </p>\n          </li>\n          <li>\n           <p>\n            <code>\n             previous-text\n            </code>\n            <em>\n             (Default: \'Previous\')\n            </em>\n            :\n Text for Previous button.\n           </p>\n          </li>\n          <li>\n           <p>\n            <code>\n             next-text\n            </code>\n            <em>\n             (Default: \'Next\')\n            </em>\n            :\n Text for Next button.\n           </p>\n          </li>\n          <li>\n           <p>\n            <code>\n             boundary-links\n            </code>\n            <em>\n             (Default: false)\n            </em>\n            :\n Whether to display First / Last buttons.\n           </p>\n          </li>\n          <li>\n           <p>\n            <code>\n             first-text\n            </code>\n            <em>\n             (Default: \'First\')\n            </em>\n            :\n Text for First button.\n           </p>\n          </li>\n          <li>\n           <p>\n            <code>\n             last-text\n            </code>\n            <em>\n             (Default: \'Last\')\n            </em>\n            :\n Text for Last button.\n           </p>\n          </li>\n         </ul>\n         <h3>\n          Pager Settings\n         </h3>\n         <p>\n          Settings can be provided as attributes in the\n          <code>\n           &lt;pager&gt;\n          </code>\n          or globally configured through the\n          <code>\n           pagerConfig\n          </code>\n          .\n          <br/>\n          For\n          <code>\n           page\n          </code>\n          ,\n          <code>\n           total-items\n          </code>\n          ,\n          <code>\n           items-per-page\n          </code>\n          ,\n          <code>\n           num-pages\n          </code>\n          and\n          <code>\n           on-select-page (page)\n          </code>\n          see pagination settings. Other settings are:\n         </p>\n         <ul>\n          <li>\n           <p>\n            <code>\n             align\n            </code>\n            <em>\n             (Default: true)\n            </em>\n            :\n Whether to align each link to the sides.\n           </p>\n          </li>\n          <li>\n           <p>\n            <code>\n             previous-text\n            </code>\n            <em>\n             (Default: \'\xc2\xab Previous\')\n            </em>\n            :\n Text for Previous button.\n           </p>\n          </li>\n          <li>\n           <p>\n            <code>\n             next-text\n            </code>\n            <em>\n             (Default: \'Next \xc2\xbb\')\n            </em>\n            :\n Text for Next button.\n           </p>\n          </li>\n         </ul>\n        </div>\n       </div>\n       <hr/>\n       <div class="row code">\n        <div class="columns medium-12 ng-scope" ng-controller="PlunkerCtrl">\n         <div class="right">\n          <button class="button secondary" id="plunk-btn" ng-click="edit(\'1.4.6\', \'5.5.2\', \'0.8.0\', \'pagination\')">\n           <i class="fa fa-edit">\n           </i>\n           Edit in plunker\n          </button>\n         </div>\n         <div class="tabbable ng-isolate-scope">\n          <dl class="tabs" ng-class="{\'vertical\': vertical}" ng-transclude="">\n           <dd class="ng-isolate-scope active" heading="Markup" ng-class="{active: active}">\n            <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n             Markup\n            </a>\n           </dd>\n           <dd class="ng-isolate-scope" heading="JavaScript" ng-class="{active: active}">\n            <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n             JavaScript\n            </a>\n           </dd>\n          </dl>\n          <div class="tabs-content" ng-class="{\'vertical\': vertical}">\n           <!-- ngRepeat: tab in tabs -->\n           <div class="content ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs">\n            <div tab-content-transclude="tab">\n             <div class="ng-scope" plunker-content="markup">\n              <pre ng-non-bindable=""><code class="rainbow" data-language="html"><span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">div</span></span> <span class="support attribute">ng-controller</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">PaginationDemoCtrl</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">h4</span></span><span class="support tag cclose">&gt;</span>Default<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">h4</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">pagination</span></span> <span class="support attribute">total-items</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">totalItems</span><span class="string quote">"</span> <span class="support attribute">page</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">currentPage</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">pagination</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">pagination</span></span> <span class="support attribute">boundary-links</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">true</span><span class="string quote">"</span> <span class="support attribute">total-items</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">totalItems</span><span class="string quote">"</span> <span class="support attribute">page</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">currentPage</span><span class="string quote">"</span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">pagination-sm</span><span class="string quote">"</span> <span class="support attribute">previous-text</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">&amp;lsaquo;</span><span class="string quote">"</span> <span class="support attribute">next-text</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">&amp;rsaquo;</span><span class="string quote">"</span> <span class="support attribute">first-text</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">&amp;laquo;</span><span class="string quote">"</span> <span class="support attribute">last-text</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">&amp;raquo;</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">pagination</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">pagination</span></span> <span class="support attribute">direction-links</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">false</span><span class="string quote">"</span> <span class="support attribute">boundary-links</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">true</span><span class="string quote">"</span> <span class="support attribute">total-items</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">totalItems</span><span class="string quote">"</span> <span class="support attribute">page</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">currentPage</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">pagination</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">pagination</span></span> <span class="support attribute">direction-links</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">false</span><span class="string quote">"</span> <span class="support attribute">total-items</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">totalItems</span><span class="string quote">"</span> <span class="support attribute">page</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">currentPage</span><span class="string quote">"</span> <span class="support attribute">num-pages</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">smallnumPages</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">pagination</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">pre</span></span><span class="support tag cclose">&gt;</span>The selected page no: {{currentPage}}<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">pre</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">button</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">button secondary</span><span class="string quote">"</span> <span class="support attribute">ng-click</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">setPage(3)</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>Set current page to: 3<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">button</span></span><span class="support tag cclose">&gt;</span>\n\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">hr</span></span> <span class="support tag cclose">/&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">h4</span></span><span class="support tag cclose">&gt;</span>Pager<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">h4</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">pager</span></span> <span class="support attribute">total-items</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">totalItems</span><span class="string quote">"</span> <span class="support attribute">page</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">currentPage</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">pager</span></span><span class="support tag cclose">&gt;</span>\n\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">hr</span></span> <span class="support tag cclose">/&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">h4</span></span><span class="support tag cclose">&gt;</span>Limit the maximum visible buttons<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">h4</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">pagination</span></span> <span class="support attribute">total-items</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">bigTotalItems</span><span class="string quote">"</span> <span class="support attribute">page</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">bigCurrentPage</span><span class="string quote">"</span> <span class="support attribute">max-size</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">maxSize</span><span class="string quote">"</span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">pagination-sm</span><span class="string quote">"</span> <span class="support attribute">boundary-links</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">true</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">pagination</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">pagination</span></span> <span class="support attribute">total-items</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">bigTotalItems</span><span class="string quote">"</span> <span class="support attribute">page</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">bigCurrentPage</span><span class="string quote">"</span> <span class="support attribute">max-size</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">maxSize</span><span class="string quote">"</span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">pagination-sm</span><span class="string quote">"</span> <span class="support attribute">boundary-links</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">true</span><span class="string quote">"</span> <span class="support attribute">rotate</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">false</span><span class="string quote">"</span> <span class="support attribute">num-pages</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">numPages</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">pagination</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">pre</span></span><span class="support tag cclose">&gt;</span>Page: {{bigCurrentPage}} / {{numPages}}<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">pre</span></span><span class="support tag cclose">&gt;</span>\n<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">div</span></span><span class="support tag cclose">&gt;</span>\n</code></pre>\n             </div>\n            </div>\n           </div>\n           <!-- end ngRepeat: tab in tabs -->\n           <div class="content ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs">\n            <div tab-content-transclude="tab">\n             <div class="ng-scope" plunker-content="javascript">\n              <pre ng-non-bindable=""><code class="rainbow" data-language="javascript">angular.<span class="function call">module</span>(<span class="string">\'foundationDemoApp\'</span>).<span class="function call">controller</span>(<span class="string">\'PaginationDemoCtrl\'</span>, <span class="storage function">function</span> ($scope) {\n  $scope.totalItems <span class="keyword operator">=</span> <span class="constant numeric">64</span>;\n  $scope.currentPage <span class="keyword operator">=</span> <span class="constant numeric">4</span>;\n  $scope.maxSize <span class="keyword operator">=</span> <span class="constant numeric">5</span>;\n  \n  $scope.setPage <span class="keyword operator">=</span> <span class="storage function">function</span> (pageNo) {\n    $scope.currentPage <span class="keyword operator">=</span> pageNo;\n  };\n\n  $scope.bigTotalItems <span class="keyword operator">=</span> <span class="constant numeric">175</span>;\n  $scope.bigCurrentPage <span class="keyword operator">=</span> <span class="constant numeric">1</span>;\n});\n</code></pre>\n             </div>\n            </div>\n           </div>\n           <!-- end ngRepeat: tab in tabs -->\n          </div>\n         </div>\n        </div>\n       </div>\n      </section>\n      <script>\n       angular.module(\'foundationDemoApp\').controller(\'PaginationDemoCtrl\', function ($scope) {\n  $scope.totalItems = 64;\n  $scope.currentPage = 4;\n  $scope.maxSize = 5;\n  \n  $scope.setPage = function (pageNo) {\n    $scope.currentPage = pageNo;\n  };\n\n  $scope.bigTotalItems = 175;\n  $scope.bigCurrentPage = 1;\n});\n      </script>\n      <section class="demo" id="popover">\n       <div class="page-header">\n        <h1>\n         Popover\n         <small>\n          (\n          <a href="https://github.com/pineconellc/angular-foundation/tree/master/src/popover" target="_blank">\n           mm.foundation.popover\n          </a>\n          )\n         </small>\n        </h1>\n       </div>\n       <div class="row">\n        <div class="columns medium-6 show-grid">\n         <div class="ng-scope" ng-controller="PopoverDemoCtrl">\n          <h4>\n           Dynamic\n          </h4>\n          <div class="form-group">\n           <label>\n            Popup Text:\n           </label>\n           <input class="form-control ng-pristine ng-untouched ng-valid" ng-model="dynamicPopover" type="text"/>\n          </div>\n          <div class="form-group">\n           <label>\n            Popup Title:\n           </label>\n           <input class="form-control ng-pristine ng-untouched ng-valid" ng-model="dynamicPopoverTitle" type="text"/>\n          </div>\n          <button class="button ng-scope" popover="Hello, World!" popover-title="Title">\n           Dynamic Popover\n          </button>\n          <hr/>\n          <h4>\n           Positional\n          </h4>\n          <button class="button ng-scope" popover="On the Top!" popover-placement="top">\n           Top\n          </button>\n          <button class="button ng-scope" popover="On the Left!" popover-placement="left">\n           Left\n          </button>\n          <button class="button ng-scope" popover="On the Right!" popover-placement="right">\n           Right\n          </button>\n          <button class="button ng-scope" popover="On the Bottom!" popover-placement="bottom">\n           Bottom\n          </button>\n          <hr/>\n          <h4>\n           Triggers\n          </h4>\n          <p>\n           <button class="button ng-scope" popover="I appeared on mouse enter!" popover-trigger="mouseenter">\n            Mouseenter\n           </button>\n          </p>\n          <input class="form-control ng-scope" popover="I appeared on focus! Click away and I\'ll vanish..." popover-trigger="focus" type="text" value="Click me!"/>\n          <hr/>\n          <h4>\n           Other\n          </h4>\n          <button class="button ng-scope" popover="I fade in and out!" popover-animation="true">\n           fading\n          </button>\n          <button class="button ng-scope" popover="I have a title!" popover-title="The title.">\n           title\n          </button>\n         </div>\n        </div>\n        <div class="columns medium-6">\n         <p>\n          A lightweight, extensible directive for fancy popover creation. The popover\ndirective supports multiple placements, optional transition animation, and more.\n         </p>\n         <p>\n          Like the Bootstrap jQuery plugin, the popover\n          <strong>\n           requires\n          </strong>\n          the tooltip\nmodule.\n         </p>\n         <p>\n          The popover directives provides several optional attributes to control how it\nwill display:\n         </p>\n         <ul>\n          <li>\n           <code>\n            popover-title\n           </code>\n           : A string to display as a fancy title.\n          </li>\n          <li>\n           <code>\n            popover-placement\n           </code>\n           : Where to place it? Defaults to "top", but also accepts\n"bottom", "left", "right".\n          </li>\n          <li>\n           <code>\n            popover-animation\n           </code>\n           : Should it fade in and out? Defaults to "true".\n          </li>\n          <li>\n           <code>\n            popover-popup-delay\n           </code>\n           : For how long should the user have to have the mouse\nover the element before the popover shows (in milliseconds)? Defaults to 0.\n          </li>\n          <li>\n           <code>\n            popover-trigger\n           </code>\n           : What should trigger the show of the popover? See the\n           <code>\n            tooltip\n           </code>\n           directive for supported values.\n          </li>\n          <li>\n           <code>\n            popover-append-to-body\n           </code>\n           : Should the tooltip be appended to\n           <code>\n            $body\n           </code>\n           instead of\nthe parent element?\n          </li>\n         </ul>\n         <p>\n          The popover directives require the\n          <code>\n           $position\n          </code>\n          service.\n         </p>\n         <p>\n          The popover directive also supports various default configurations through the\n$tooltipProvider. See the\n          <a href="#tooltip">\n           tooltip\n          </a>\n          section for more information.\n         </p>\n        </div>\n       </div>\n       <hr/>\n       <div class="row code">\n        <div class="columns medium-12 ng-scope" ng-controller="PlunkerCtrl">\n         <div class="right">\n          <button class="button secondary" id="plunk-btn" ng-click="edit(\'1.4.6\', \'5.5.2\', \'0.8.0\', \'popover\')">\n           <i class="fa fa-edit">\n           </i>\n           Edit in plunker\n          </button>\n         </div>\n         <div class="tabbable ng-isolate-scope">\n          <dl class="tabs" ng-class="{\'vertical\': vertical}" ng-transclude="">\n           <dd class="ng-isolate-scope active" heading="Markup" ng-class="{active: active}">\n            <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n             Markup\n            </a>\n           </dd>\n           <dd class="ng-isolate-scope" heading="JavaScript" ng-class="{active: active}">\n            <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n             JavaScript\n            </a>\n           </dd>\n          </dl>\n          <div class="tabs-content" ng-class="{\'vertical\': vertical}">\n           <!-- ngRepeat: tab in tabs -->\n           <div class="content ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs">\n            <div tab-content-transclude="tab">\n             <div class="ng-scope" plunker-content="markup">\n              <pre ng-non-bindable=""><code class="rainbow" data-language="html"><span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">div</span></span> <span class="support attribute">ng-controller</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">PopoverDemoCtrl</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">h4</span></span><span class="support tag cclose">&gt;</span>Dynamic<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">h4</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">div</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">form-group</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n      <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">label</span></span><span class="support tag cclose">&gt;</span>Popup Text:<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">label</span></span><span class="support tag cclose">&gt;</span>\n      <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">input</span></span> <span class="support attribute">type</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">text</span><span class="string quote">"</span> <span class="support attribute">ng-model</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">dynamicPopover</span><span class="string quote">"</span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">form-control</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">div</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">div</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">form-group</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n      <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">label</span></span><span class="support tag cclose">&gt;</span>Popup Title:<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">label</span></span><span class="support tag cclose">&gt;</span>\n      <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">input</span></span> <span class="support attribute">type</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">text</span><span class="string quote">"</span> <span class="support attribute">ng-model</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">dynamicPopoverTitle</span><span class="string quote">"</span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">form-control</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">div</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">button</span></span> <span class="support attribute">popover</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">{{dynamicPopover}}</span><span class="string quote">"</span>\n      <span class="support attribute">popover-title</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">{{dynamicPopoverTitle}}</span><span class="string quote">"</span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">button</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>Dynamic Popover<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">button</span></span><span class="support tag cclose">&gt;</span>\n    \n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">hr</span></span> <span class="support tag cclose">/&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">h4</span></span><span class="support tag cclose">&gt;</span>Positional<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">h4</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">button</span></span> <span class="support attribute">popover-placement</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">top</span><span class="string quote">"</span> <span class="support attribute">popover</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">On the Top!</span><span class="string quote">"</span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">button</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>Top<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">button</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">button</span></span> <span class="support attribute">popover-placement</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">left</span><span class="string quote">"</span> <span class="support attribute">popover</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">On the Left!</span><span class="string quote">"</span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">button</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>Left<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">button</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">button</span></span> <span class="support attribute">popover-placement</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">right</span><span class="string quote">"</span> <span class="support attribute">popover</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">On the Right!</span><span class="string quote">"</span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">button</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>Right<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">button</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">button</span></span> <span class="support attribute">popover-placement</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">bottom</span><span class="string quote">"</span> <span class="support attribute">popover</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">On the Bottom!</span><span class="string quote">"</span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">button</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>Bottom<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">button</span></span><span class="support tag cclose">&gt;</span>\n    \n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">hr</span></span> <span class="support tag cclose">/&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">h4</span></span><span class="support tag cclose">&gt;</span>Triggers<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">h4</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">p</span></span><span class="support tag cclose">&gt;</span>\n      <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">button</span></span> <span class="support attribute">popover</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">I appeared on mouse enter!</span><span class="string quote">"</span> <span class="support attribute">popover-trigger</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">mouseenter</span><span class="string quote">"</span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">button</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>Mouseenter<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">button</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">p</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">input</span></span> <span class="support attribute">type</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">text</span><span class="string quote">"</span> <span class="support attribute">value</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">Click me!</span><span class="string quote">"</span> <span class="support attribute">popover</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">I appeared on focus! Click away and I\'ll vanish...</span><span class="string quote">"</span>  <span class="support attribute">popover-trigger</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">focus</span><span class="string quote">"</span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">form-control</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">hr</span></span> <span class="support tag cclose">/&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">h4</span></span><span class="support tag cclose">&gt;</span>Other<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">h4</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">button</span></span> <span class="support attribute">Popover-animation</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">true</span><span class="string quote">"</span> <span class="support attribute">popover</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">I fade in and out!</span><span class="string quote">"</span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">button</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>fading<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">button</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">button</span></span> <span class="support attribute">popover</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">I have a title!</span><span class="string quote">"</span> <span class="support attribute">popover-title</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">The title.</span><span class="string quote">"</span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">button</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>title<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">button</span></span><span class="support tag cclose">&gt;</span>\n<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">div</span></span><span class="support tag cclose">&gt;</span>\n</code></pre>\n             </div>\n            </div>\n           </div>\n           <!-- end ngRepeat: tab in tabs -->\n           <div class="content ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs">\n            <div tab-content-transclude="tab">\n             <div class="ng-scope" plunker-content="javascript">\n              <pre ng-non-bindable=""><code class="rainbow" data-language="javascript">angular.<span class="function call">module</span>(<span class="string">\'foundationDemoApp\'</span>).<span class="function call">controller</span>(<span class="string">\'PopoverDemoCtrl\'</span>, <span class="storage function">function</span> ($scope) {\n  $scope.dynamicPopover <span class="keyword operator">=</span> <span class="string">"Hello, World!"</span>;\n  $scope.dynamicPopoverTitle <span class="keyword operator">=</span> <span class="string">"Title"</span>;\n});\n</code></pre>\n             </div>\n            </div>\n           </div>\n           <!-- end ngRepeat: tab in tabs -->\n          </div>\n         </div>\n        </div>\n       </div>\n      </section>\n      <script>\n       angular.module(\'foundationDemoApp\').controller(\'PopoverDemoCtrl\', function ($scope) {\n  $scope.dynamicPopover = "Hello, World!";\n  $scope.dynamicPopoverTitle = "Title";\n});\n      </script>\n      <section class="demo" id="progressbar">\n       <div class="page-header">\n        <h1>\n         Progressbar\n         <small>\n          (\n          <a href="https://github.com/pineconellc/angular-foundation/tree/master/src/progressbar" target="_blank">\n           mm.foundation.progressbar\n          </a>\n          )\n         </small>\n        </h1>\n       </div>\n       <div class="row">\n        <div class="columns medium-6 show-grid">\n         <div class="ng-scope" ng-controller="ProgressDemoCtrl">\n          <style>\n           .progress .meter {\n        -webkit-transition: width 1s ease-out;\n        transition: width 1s ease-out;\n      }\n          </style>\n          <h3>\n           Static\n          </h3>\n          <div class="row">\n           <div class="col-sm-4">\n            <div class="progress ng-isolate-scope" ng-class="type" value="55">\n             <span class="meter" ng-transclude="" style="width: 55%;">\n             </span>\n            </div>\n           </div>\n           <div class="col-sm-4">\n            <div class="progress ng-isolate-scope warning" ng-class="type" type="warning" value="22">\n             <span class="meter" ng-transclude="" style="width: 22%;">\n              <span class="ng-scope">\n               22%\n              </span>\n             </span>\n            </div>\n           </div>\n           <div class="col-sm-4">\n            <div class="progress ng-isolate-scope alert" max="200" ng-class="type" type="alert" value="166">\n             <span class="meter" ng-transclude="" style="width: 83%;">\n              <i class="ng-scope">\n               166 / 200\n              </i>\n             </span>\n            </div>\n           </div>\n          </div>\n          <hr/>\n          <h3>\n           Dynamic\n           <button class="button small" ng-click="random()" type="button">\n            Randomize\n           </button>\n          </h3>\n          <div class="progress ng-isolate-scope" max="max" ng-class="type" value="dynamic">\n           <span class="meter" ng-transclude="" style="width: 13%;">\n            <span class="ng-binding ng-scope" style="color:black; white-space:nowrap;">\n             26 / 200\n            </span>\n           </span>\n          </div>\n          <small>\n           <em>\n            No animation\n           </em>\n          </small>\n          <div animate="false" class="progress ng-isolate-scope success" ng-class="type" type="success" value="dynamic">\n           <span class="meter" ng-transclude="" style="transition: none 0s ease 0s; width: 26%;">\n            <b class="ng-binding ng-scope">\n             26%\n            </b>\n           </span>\n          </div>\n          <small>\n           <em>\n            Object (changes type based on value)\n           </em>\n          </small>\n          <div class="progress-striped active progress ng-isolate-scope info" ng-class="type" type="info" value="dynamic">\n           <span class="meter" ng-transclude="" style="width: 26%;">\n            <span class="ng-binding ng-scope">\n             info\n            </span>\n            <i class="ng-scope ng-hide" ng-show="showWarning">\n             !!! Watch out !!!\n            </i>\n           </span>\n          </div>\n         </div>\n        </div>\n        <div class="columns medium-6">\n         <p>\n          A progress bar directive that is focused on providing feedback on the progress of a workflow or action.\n         </p>\n         <p>\n          It supports multiple (stacked) bars into the same\n          <code>\n           &lt;progress&gt;\n          </code>\n          element or a single\n          <code>\n           &lt;progressbar&gt;\n          </code>\n          element with optional\n          <code>\n           max\n          </code>\n          attribute and transition animations.\n         </p>\n         <h3>\n          Settings\n         </h3>\n         <h4>\n          <code>\n           &lt;progressbar&gt;\n          </code>\n         </h4>\n         <ul>\n          <li>\n           <p>\n            <code>\n             value\n            </code>\n            <i class="fa-eye">\n            </i>\n            :\n The current value of progress completed.\n           </p>\n          </li>\n          <li>\n           <p>\n            <code>\n             type\n            </code>\n            <em>\n             (Default: null)\n            </em>\n            :\n Style type. Possible values are \'success\', \'warning\' etc.\n           </p>\n          </li>\n          <li>\n           <p>\n            <code>\n             max\n            </code>\n            <em>\n             (Default: 100)\n            </em>\n            :\n A number that specifies the total value of bars that is required.\n           </p>\n          </li>\n          <li>\n           <p>\n            <code>\n             animate\n            </code>\n            <em>\n             (Default: true)\n            </em>\n            :\n Whether bars use transitions to achieve the width change.\n            <strong>\n             IMPORTANT:\n            </strong>\n            Foundation\'s CSS does not not apply a\n            <code>\n             transition\n            </code>\n            to progress bars. In order for animations to work, you\'ll need to apply a\n            <code>\n             transition\n            </code>\n            in your own CSS. See the demo for an example.\n           </p>\n          </li>\n         </ul>\n        </div>\n       </div>\n       <hr/>\n       <div class="row code">\n        <div class="columns medium-12 ng-scope" ng-controller="PlunkerCtrl">\n         <div class="right">\n          <button class="button secondary" id="plunk-btn" ng-click="edit(\'1.4.6\', \'5.5.2\', \'0.8.0\', \'progressbar\')">\n           <i class="fa fa-edit">\n           </i>\n           Edit in plunker\n          </button>\n         </div>\n         <div class="tabbable ng-isolate-scope">\n          <dl class="tabs" ng-class="{\'vertical\': vertical}" ng-transclude="">\n           <dd class="ng-isolate-scope active" heading="Markup" ng-class="{active: active}">\n            <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n             Markup\n            </a>\n           </dd>\n           <dd class="ng-isolate-scope" heading="JavaScript" ng-class="{active: active}">\n            <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n             JavaScript\n            </a>\n           </dd>\n          </dl>\n          <div class="tabs-content" ng-class="{\'vertical\': vertical}">\n           <!-- ngRepeat: tab in tabs -->\n           <div class="content ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs">\n            <div tab-content-transclude="tab">\n             <div class="ng-scope" plunker-content="markup">\n              <pre ng-non-bindable=""><code class="rainbow" data-language="html"><span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">div</span></span> <span class="support attribute">ng-controller</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">ProgressDemoCtrl</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n    <span class="source css embedded"><span class="keyword operator">&lt;</span>style<span class="keyword operator">&gt;</span>\n      .progress .meter {\n        <span class="keyword operator">-</span>webkit<span class="keyword operator">-</span>transition: width 1s ease<span class="keyword operator">-</span>out;\n        transition: width 1s ease<span class="keyword operator">-</span>out;\n      }\n    <span class="keyword operator">&lt;</span>/style<span class="keyword operator">&gt;</span></span>\n\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">h3</span></span><span class="support tag cclose">&gt;</span>Static<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">h3</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">div</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">row</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n        <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">div</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">col-sm-4</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">progressbar</span></span> <span class="support attribute">value</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">55</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">progressbar</span></span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">div</span></span><span class="support tag cclose">&gt;</span>\n        <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">div</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">col-sm-4</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">progressbar</span></span> <span class="support attribute">value</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">22</span><span class="string quote">"</span> <span class="support attribute">type</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">warning</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>22%<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">progressbar</span></span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">div</span></span><span class="support tag cclose">&gt;</span>\n        <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">div</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">col-sm-4</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">progressbar</span></span> <span class="support attribute">max</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">200</span><span class="string quote">"</span> <span class="support attribute">value</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">166</span><span class="string quote">"</span> <span class="support attribute">type</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">alert</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">i</span></span><span class="support tag cclose">&gt;</span>166 / 200<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">i</span></span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">progressbar</span></span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">div</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">div</span></span><span class="support tag cclose">&gt;</span>\n\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">hr</span></span> <span class="support tag cclose">/&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">h3</span></span><span class="support tag cclose">&gt;</span>Dynamic <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">button</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">button small</span><span class="string quote">"</span> <span class="support attribute">type</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">button</span><span class="string quote">"</span> <span class="support attribute">ng-click</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">random()</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>Randomize<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">button</span></span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">h3</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">progressbar</span></span> <span class="support attribute">max</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">max</span><span class="string quote">"</span> <span class="support attribute">value</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">dynamic</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">span</span></span> <span class="support attribute">style</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">color:black; white-space:nowrap;</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>{{dynamic}} / {{max}}<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">span</span></span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">progressbar</span></span><span class="support tag cclose">&gt;</span>\n\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">small</span></span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">em</span></span><span class="support tag cclose">&gt;</span>No animation<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">em</span></span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">small</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">progressbar</span></span> <span class="support attribute">animate</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">false</span><span class="string quote">"</span> <span class="support attribute">value</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">dynamic</span><span class="string quote">"</span> <span class="support attribute">type</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">success</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">b</span></span><span class="support tag cclose">&gt;</span>{{dynamic}}%<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">b</span></span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">progressbar</span></span><span class="support tag cclose">&gt;</span>\n\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">small</span></span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">em</span></span><span class="support tag cclose">&gt;</span>Object (changes type based on value)<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">em</span></span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">small</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">progressbar</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">progress-striped active</span><span class="string quote">"</span> <span class="support attribute">value</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">dynamic</span><span class="string quote">"</span> <span class="support attribute">type</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">{{type}}</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>{{type}} <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">i</span></span> <span class="support attribute">ng-show</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">showWarning</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>!!! Watch out !!!<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">i</span></span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">progressbar</span></span><span class="support tag cclose">&gt;</span>\n\n<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">div</span></span><span class="support tag cclose">&gt;</span>\n</code></pre>\n             </div>\n            </div>\n           </div>\n           <!-- end ngRepeat: tab in tabs -->\n           <div class="content ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs">\n            <div tab-content-transclude="tab">\n             <div class="ng-scope" plunker-content="javascript">\n              <pre ng-non-bindable=""><code class="rainbow" data-language="javascript">angular.<span class="function call">module</span>(<span class="string">\'foundationDemoApp\'</span>).<span class="function call">controller</span>(<span class="string">\'ProgressDemoCtrl\'</span>, <span class="storage function">function</span> ($scope) {\n  \n  $scope.max <span class="keyword operator">=</span> <span class="constant numeric">200</span>;\n\n<span class="entity function">  $scope.random </span><span class="keyword operator">=</span> <span class="keyword">function</span>() {\n    <span class="keyword">var</span> value <span class="keyword operator">=</span> Math.<span class="function call">floor</span>((Math.<span class="function call">random</span>() <span class="keyword operator">*</span> <span class="constant numeric">100</span>) <span class="keyword operator">+</span> <span class="constant numeric">1</span>);\n    <span class="keyword">var</span> type;\n\n    <span class="keyword">if</span> (value <span class="keyword operator">&lt;</span> <span class="constant numeric">25</span>) {\n      type <span class="keyword operator">=</span> <span class="string">\'success\'</span>;\n    } <span class="keyword">else</span> <span class="keyword">if</span> (value <span class="keyword operator">&lt;</span> <span class="constant numeric">50</span>) {\n      type <span class="keyword operator">=</span> <span class="string">\'info\'</span>;\n    } <span class="keyword">else</span> <span class="keyword">if</span> (value <span class="keyword operator">&lt;</span> <span class="constant numeric">75</span>) {\n      type <span class="keyword operator">=</span> <span class="string">\'warning\'</span>;\n    } <span class="keyword">else</span> {\n      type <span class="keyword operator">=</span> <span class="string">\'alert\'</span>;\n    }\n\n    $scope.showWarning <span class="keyword operator">=</span> (type <span class="keyword operator">=</span><span class="keyword operator">=</span><span class="keyword operator">=</span> <span class="string">\'alert\'</span> <span class="keyword operator">|</span><span class="keyword operator">|</span> type <span class="keyword operator">=</span><span class="keyword operator">=</span><span class="keyword operator">=</span> <span class="string">\'warning\'</span>);\n\n    $scope.dynamic <span class="keyword operator">=</span> value;\n    $scope.type <span class="keyword operator">=</span> type;\n  };\n  $scope.<span class="function call">random</span>();\n});\n</code></pre>\n             </div>\n            </div>\n           </div>\n           <!-- end ngRepeat: tab in tabs -->\n          </div>\n         </div>\n        </div>\n       </div>\n      </section>\n      <script>\n       angular.module(\'foundationDemoApp\').controller(\'ProgressDemoCtrl\', function ($scope) {\n  \n  $scope.max = 200;\n\n  $scope.random = function() {\n    var value = Math.floor((Math.random() * 100) + 1);\n    var type;\n\n    if (value < 25) {\n      type = \'success\';\n    } else if (value < 50) {\n      type = \'info\';\n    } else if (value < 75) {\n      type = \'warning\';\n    } else {\n      type = \'alert\';\n    }\n\n    $scope.showWarning = (type === \'alert\' || type === \'warning\');\n\n    $scope.dynamic = value;\n    $scope.type = type;\n  };\n  $scope.random();\n});\n      </script>\n      <section class="demo" id="rating">\n       <div class="page-header">\n        <h1>\n         Rating\n         <small>\n          (\n          <a href="https://github.com/pineconellc/angular-foundation/tree/master/src/rating" target="_blank">\n           mm.foundation.rating\n          </a>\n          )\n         </small>\n        </h1>\n       </div>\n       <div class="row">\n        <div class="columns medium-6 show-grid">\n         <div class="ng-scope" ng-controller="RatingDemoCtrl">\n          <h4>\n           Default\n          </h4>\n          <span class="ng-isolate-scope" max="max" ng-mouseleave="reset()" on-hover="hoveringOver(value)" on-leave="overStar = null" readonly="readonly" value="rate">\n           <!-- ngRepeat: r in range -->\n           <i class="fa ng-scope fa-star" ng-class="$index &lt; val &amp;&amp; (r.stateOn || \'fa-star\') || (r.stateOff || \'fa-star-o\')" ng-click="rate($index + 1)" ng-mouseenter="enter($index + 1)" ng-repeat="r in range">\n           </i>\n           <!-- end ngRepeat: r in range -->\n           <i class="fa ng-scope fa-star" ng-class="$index &lt; val &amp;&amp; (r.stateOn || \'fa-star\') || (r.stateOff || \'fa-star-o\')" ng-click="rate($index + 1)" ng-mouseenter="enter($index + 1)" ng-repeat="r in range">\n           </i>\n           <!-- end ngRepeat: r in range -->\n           <i class="fa ng-scope fa-star" ng-class="$index &lt; val &amp;&amp; (r.stateOn || \'fa-star\') || (r.stateOff || \'fa-star-o\')" ng-click="rate($index + 1)" ng-mouseenter="enter($index + 1)" ng-repeat="r in range">\n           </i>\n           <!-- end ngRepeat: r in range -->\n           <i class="fa ng-scope fa-star" ng-class="$index &lt; val &amp;&amp; (r.stateOn || \'fa-star\') || (r.stateOff || \'fa-star-o\')" ng-click="rate($index + 1)" ng-mouseenter="enter($index + 1)" ng-repeat="r in range">\n           </i>\n           <!-- end ngRepeat: r in range -->\n           <i class="fa ng-scope fa-star" ng-class="$index &lt; val &amp;&amp; (r.stateOn || \'fa-star\') || (r.stateOff || \'fa-star-o\')" ng-click="rate($index + 1)" ng-mouseenter="enter($index + 1)" ng-repeat="r in range">\n           </i>\n           <!-- end ngRepeat: r in range -->\n           <i class="fa ng-scope fa-star" ng-class="$index &lt; val &amp;&amp; (r.stateOn || \'fa-star\') || (r.stateOff || \'fa-star-o\')" ng-click="rate($index + 1)" ng-mouseenter="enter($index + 1)" ng-repeat="r in range">\n           </i>\n           <!-- end ngRepeat: r in range -->\n           <i class="fa ng-scope fa-star" ng-class="$index &lt; val &amp;&amp; (r.stateOn || \'fa-star\') || (r.stateOff || \'fa-star-o\')" ng-click="rate($index + 1)" ng-mouseenter="enter($index + 1)" ng-repeat="r in range">\n           </i>\n           <!-- end ngRepeat: r in range -->\n           <i class="fa ng-scope fa-star-o" ng-class="$index &lt; val &amp;&amp; (r.stateOn || \'fa-star\') || (r.stateOff || \'fa-star-o\')" ng-click="rate($index + 1)" ng-mouseenter="enter($index + 1)" ng-repeat="r in range">\n           </i>\n           <!-- end ngRepeat: r in range -->\n           <i class="fa ng-scope fa-star-o" ng-class="$index &lt; val &amp;&amp; (r.stateOn || \'fa-star\') || (r.stateOff || \'fa-star-o\')" ng-click="rate($index + 1)" ng-mouseenter="enter($index + 1)" ng-repeat="r in range">\n           </i>\n           <!-- end ngRepeat: r in range -->\n           <i class="fa ng-scope fa-star-o" ng-class="$index &lt; val &amp;&amp; (r.stateOn || \'fa-star\') || (r.stateOff || \'fa-star-o\')" ng-click="rate($index + 1)" ng-mouseenter="enter($index + 1)" ng-repeat="r in range">\n           </i>\n           <!-- end ngRepeat: r in range -->\n          </span>\n          <span class="label ng-binding ng-hide" ng-class="{\'label-warning\': percent&lt;30, \'label-info\': percent&gt;=30 &amp;&amp; percent&lt;70, \'label-success\': percent&gt;=70}" ng-show="overStar &amp;&amp; !isReadonly">\n           %\n          </span>\n          <pre style="margin:15px 0;">Rate: <b class="ng-binding">7</b> - Readonly is: <i class="ng-binding">false</i> - Hovering over: <b class="ng-binding">none</b></pre>\n          <button class="button small alert" ng-click="rate = 0" ng-disabled="isReadonly">\n           Clear\n          </button>\n          <button class="button small" ng-click="isReadonly = ! isReadonly">\n           Toggle Readonly\n          </button>\n          <hr/>\n          <h4>\n           Custom icons\n          </h4>\n          <div ng-init="x = 5">\n           <span class="ng-isolate-scope" max="15" ng-mouseleave="reset()" state-off="\'fa-check-circle-o\'" state-on="\'fa-check-circle\'" value="x">\n            <!-- ngRepeat: r in range -->\n            <i class="fa ng-scope fa-check-circle" ng-class="$index &lt; val &amp;&amp; (r.stateOn || \'fa-star\') || (r.stateOff || \'fa-star-o\')" ng-click="rate($index + 1)" ng-mouseenter="enter($index + 1)" ng-repeat="r in range">\n            </i>\n            <!-- end ngRepeat: r in range -->\n            <i class="fa ng-scope fa-check-circle" ng-class="$index &lt; val &amp;&amp; (r.stateOn || \'fa-star\') || (r.stateOff || \'fa-star-o\')" ng-click="rate($index + 1)" ng-mouseenter="enter($index + 1)" ng-repeat="r in range">\n            </i>\n            <!-- end ngRepeat: r in range -->\n            <i class="fa ng-scope fa-check-circle" ng-class="$index &lt; val &amp;&amp; (r.stateOn || \'fa-star\') || (r.stateOff || \'fa-star-o\')" ng-click="rate($index + 1)" ng-mouseenter="enter($index + 1)" ng-repeat="r in range">\n            </i>\n            <!-- end ngRepeat: r in range -->\n            <i class="fa ng-scope fa-check-circle" ng-class="$index &lt; val &amp;&amp; (r.stateOn || \'fa-star\') || (r.stateOff || \'fa-star-o\')" ng-click="rate($index + 1)" ng-mouseenter="enter($index + 1)" ng-repeat="r in range">\n            </i>\n            <!-- end ngRepeat: r in range -->\n            <i class="fa ng-scope fa-check-circle" ng-class="$index &lt; val &amp;&amp; (r.stateOn || \'fa-star\') || (r.stateOff || \'fa-star-o\')" ng-click="rate($index + 1)" ng-mouseenter="enter($index + 1)" ng-repeat="r in range">\n            </i>\n            <!-- end ngRepeat: r in range -->\n            <i class="fa ng-scope fa-check-circle-o" ng-class="$index &lt; val &amp;&amp; (r.stateOn || \'fa-star\') || (r.stateOff || \'fa-star-o\')" ng-click="rate($index + 1)" ng-mouseenter="enter($index + 1)" ng-repeat="r in range">\n            </i>\n            <!-- end ngRepeat: r in range -->\n            <i class="fa ng-scope fa-check-circle-o" ng-class="$index &lt; val &amp;&amp; (r.stateOn || \'fa-star\') || (r.stateOff || \'fa-star-o\')" ng-click="rate($index + 1)" ng-mouseenter="enter($index + 1)" ng-repeat="r in range">\n            </i>\n            <!-- end ngRepeat: r in range -->\n            <i class="fa ng-scope fa-check-circle-o" ng-class="$index &lt; val &amp;&amp; (r.stateOn || \'fa-star\') || (r.stateOff || \'fa-star-o\')" ng-click="rate($index + 1)" ng-mouseenter="enter($index + 1)" ng-repeat="r in range">\n            </i>\n            <!-- end ngRepeat: r in range -->\n            <i class="fa ng-scope fa-check-circle-o" ng-class="$index &lt; val &amp;&amp; (r.stateOn || \'fa-star\') || (r.stateOff || \'fa-star-o\')" ng-click="rate($index + 1)" ng-mouseenter="enter($index + 1)" ng-repeat="r in range">\n            </i>\n            <!-- end ngRepeat: r in range -->\n            <i class="fa ng-scope fa-check-circle-o" ng-class="$index &lt; val &amp;&amp; (r.stateOn || \'fa-star\') || (r.stateOff || \'fa-star-o\')" ng-click="rate($index + 1)" ng-mouseenter="enter($index + 1)" ng-repeat="r in range">\n            </i>\n            <!-- end ngRepeat: r in range -->\n            <i class="fa ng-scope fa-check-circle-o" ng-class="$index &lt; val &amp;&amp; (r.stateOn || \'fa-star\') || (r.stateOff || \'fa-star-o\')" ng-click="rate($index + 1)" ng-mouseenter="enter($index + 1)" ng-repeat="r in range">\n            </i>\n            <!-- end ngRepeat: r in range -->\n            <i class="fa ng-scope fa-check-circle-o" ng-class="$index &lt; val &amp;&amp; (r.stateOn || \'fa-star\') || (r.stateOff || \'fa-star-o\')" ng-click="rate($index + 1)" ng-mouseenter="enter($index + 1)" ng-repeat="r in range">\n            </i>\n            <!-- end ngRepeat: r in range -->\n            <i class="fa ng-scope fa-check-circle-o" ng-class="$index &lt; val &amp;&amp; (r.stateOn || \'fa-star\') || (r.stateOff || \'fa-star-o\')" ng-click="rate($index + 1)" ng-mouseenter="enter($index + 1)" ng-repeat="r in range">\n            </i>\n            <!-- end ngRepeat: r in range -->\n            <i class="fa ng-scope fa-check-circle-o" ng-class="$index &lt; val &amp;&amp; (r.stateOn || \'fa-star\') || (r.stateOff || \'fa-star-o\')" ng-click="rate($index + 1)" ng-mouseenter="enter($index + 1)" ng-repeat="r in range">\n            </i>\n            <!-- end ngRepeat: r in range -->\n            <i class="fa ng-scope fa-check-circle-o" ng-class="$index &lt; val &amp;&amp; (r.stateOn || \'fa-star\') || (r.stateOff || \'fa-star-o\')" ng-click="rate($index + 1)" ng-mouseenter="enter($index + 1)" ng-repeat="r in range">\n            </i>\n            <!-- end ngRepeat: r in range -->\n           </span>\n           <b class="ng-binding">\n            (\n            <i>\n             Rate:\n            </i>\n            5)\n           </b>\n          </div>\n          <div ng-init="y = 2">\n           <span class="ng-isolate-scope" ng-mouseleave="reset()" rating-states="ratingStates" value="y">\n            <!-- ngRepeat: r in range -->\n            <i class="fa ng-scope fa-check-circle" ng-class="$index &lt; val &amp;&amp; (r.stateOn || \'fa-star\') || (r.stateOff || \'fa-star-o\')" ng-click="rate($index + 1)" ng-mouseenter="enter($index + 1)" ng-repeat="r in range">\n            </i>\n            <!-- end ngRepeat: r in range -->\n            <i class="fa ng-scope fa-star" ng-class="$index &lt; val &amp;&amp; (r.stateOn || \'fa-star\') || (r.stateOff || \'fa-star-o\')" ng-click="rate($index + 1)" ng-mouseenter="enter($index + 1)" ng-repeat="r in range">\n            </i>\n            <!-- end ngRepeat: r in range -->\n            <i class="fa ng-scope fa-ban" ng-class="$index &lt; val &amp;&amp; (r.stateOn || \'fa-star\') || (r.stateOff || \'fa-star-o\')" ng-click="rate($index + 1)" ng-mouseenter="enter($index + 1)" ng-repeat="r in range">\n            </i>\n            <!-- end ngRepeat: r in range -->\n            <i class="fa ng-scope fa-star-o" ng-class="$index &lt; val &amp;&amp; (r.stateOn || \'fa-star\') || (r.stateOff || \'fa-star-o\')" ng-click="rate($index + 1)" ng-mouseenter="enter($index + 1)" ng-repeat="r in range">\n            </i>\n            <!-- end ngRepeat: r in range -->\n            <i class="fa ng-scope fa-power-off" ng-class="$index &lt; val &amp;&amp; (r.stateOn || \'fa-star\') || (r.stateOff || \'fa-star-o\')" ng-click="rate($index + 1)" ng-mouseenter="enter($index + 1)" ng-repeat="r in range">\n            </i>\n            <!-- end ngRepeat: r in range -->\n           </span>\n           <b class="ng-binding">\n            (\n            <i>\n             Rate:\n            </i>\n            2)\n           </b>\n          </div>\n         </div>\n        </div>\n        <div class="columns medium-6">\n         <p>\n          Rating directive that will take care of visualising a star rating bar.\n         </p>\n         <p>\n          It uses Font Awesome icons (http://fontawesome.io/) by default.\n         </p>\n         <h3>\n          Settings\n         </h3>\n         <h4>\n          <code>\n           &lt;rating&gt;\n          </code>\n         </h4>\n         <ul>\n          <li>\n           <p>\n            <code>\n             value\n            </code>\n            <i class="fa fa-eye">\n            </i>\n            :\n The current rate.\n           </p>\n          </li>\n          <li>\n           <p>\n            <code>\n             max\n            </code>\n            <em>\n             (Defaults: 5)\n            </em>\n            :\n Changes the number of icons.\n           </p>\n          </li>\n          <li>\n           <p>\n            <code>\n             readonly\n            </code>\n            <em>\n             (Defaults: false)\n            </em>\n            :\n Prevent user\'s interaction.\n           </p>\n          </li>\n          <li>\n           <p>\n            <code>\n             on-hover(value)\n            </code>\n            :\n An optional expression called when user\'s mouse is over a particular icon.\n           </p>\n          </li>\n          <li>\n           <p>\n            <code>\n             on-leave()\n            </code>\n            :\n An optional expression called when user\'s mouse leaves the control altogether.\n           </p>\n          </li>\n          <li>\n           <p>\n            <code>\n             state-on\n            </code>\n            <em>\n             (Defaults: null)\n            </em>\n            :\n A variable used in template to specify the state (class, src, etc) for selected icons.\n           </p>\n          </li>\n          <li>\n           <p>\n            <code>\n             state-off\n            </code>\n            <em>\n             (Defaults: null)\n            </em>\n            :\n A variable used in template to specify the state for unselected icons.\n           </p>\n          </li>\n          <li>\n           <p>\n            <code>\n             rating-states\n            </code>\n            <em>\n             (Defaults: null)\n            </em>\n            :\n An array of objects defining properties for all icons. In default template,\n            <code>\n             stateOn\n            </code>\n            &amp;\n            <code>\n             stateOff\n            </code>\n            property is used to specify the icon\'s class.\n           </p>\n          </li>\n         </ul>\n        </div>\n       </div>\n       <hr/>\n       <div class="row code">\n        <div class="columns medium-12 ng-scope" ng-controller="PlunkerCtrl">\n         <div class="right">\n          <button class="button secondary" id="plunk-btn" ng-click="edit(\'1.4.6\', \'5.5.2\', \'0.8.0\', \'rating\')">\n           <i class="fa fa-edit">\n           </i>\n           Edit in plunker\n          </button>\n         </div>\n         <div class="tabbable ng-isolate-scope">\n          <dl class="tabs" ng-class="{\'vertical\': vertical}" ng-transclude="">\n           <dd class="ng-isolate-scope active" heading="Markup" ng-class="{active: active}">\n            <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n             Markup\n            </a>\n           </dd>\n           <dd class="ng-isolate-scope" heading="JavaScript" ng-class="{active: active}">\n            <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n             JavaScript\n            </a>\n           </dd>\n          </dl>\n          <div class="tabs-content" ng-class="{\'vertical\': vertical}">\n           <!-- ngRepeat: tab in tabs -->\n           <div class="content ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs">\n            <div tab-content-transclude="tab">\n             <div class="ng-scope" plunker-content="markup">\n              <pre ng-non-bindable=""><code class="rainbow" data-language="html"><span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">div</span></span> <span class="support attribute">ng-controller</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">RatingDemoCtrl</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">h4</span></span><span class="support tag cclose">&gt;</span>Default<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">h4</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">rating</span></span> <span class="support attribute">value</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">rate</span><span class="string quote">"</span> <span class="support attribute">max</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">max</span><span class="string quote">"</span> <span class="support attribute">readonly</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">isReadonly</span><span class="string quote">"</span> <span class="support attribute">on-hover</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">hoveringOver(value)</span><span class="string quote">"</span> <span class="support attribute">on-leave</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">overStar = null</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">rating</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">span</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">label</span><span class="string quote">"</span> <span class="support attribute">ng-class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">{\'label-warning\': percent&lt;30, \'label-info\': percent&gt;=30 &amp;&amp; percent&lt;70, \'label-success\': percent&gt;=70}</span><span class="string quote">"</span> <span class="support attribute">ng-show</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">overStar &amp;&amp; !isReadonly</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>{{percent}}%<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">span</span></span><span class="support tag cclose">&gt;</span>\n\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">pre</span></span> <span class="support attribute">style</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">margin:15px 0;</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>Rate: <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">b</span></span><span class="support tag cclose">&gt;</span>{{rate}}<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">b</span></span><span class="support tag cclose">&gt;</span> - Readonly is: <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">i</span></span><span class="support tag cclose">&gt;</span>{{isReadonly}}<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">i</span></span><span class="support tag cclose">&gt;</span> - Hovering over: <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">b</span></span><span class="support tag cclose">&gt;</span>{{overStar || "none"}}<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">b</span></span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">pre</span></span><span class="support tag cclose">&gt;</span>\n\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">button</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">button small alert</span><span class="string quote">"</span> <span class="support attribute">ng-click</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">rate = 0</span><span class="string quote">"</span> <span class="support attribute">ng-disabled</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">isReadonly</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>Clear<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">button</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">button</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">button small</span><span class="string quote">"</span> <span class="support attribute">ng-click</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">isReadonly = ! isReadonly</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>Toggle Readonly<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">button</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">hr</span></span> <span class="support tag cclose">/&gt;</span>\n\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">h4</span></span><span class="support tag cclose">&gt;</span>Custom icons<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">h4</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">div</span></span> <span class="support attribute">ng-init</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">x = 5</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n      <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">rating</span></span> <span class="support attribute">value</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">x</span><span class="string quote">"</span> <span class="support attribute">max</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">15</span><span class="string quote">"</span> <span class="support attribute">state-on</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">\'fa-check-circle\'</span><span class="string quote">"</span> <span class="support attribute">state-off</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">\'fa-check-circle-o\'</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">rating</span></span><span class="support tag cclose">&gt;</span>\n      <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">b</span></span><span class="support tag cclose">&gt;</span>(<span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">i</span></span><span class="support tag cclose">&gt;</span>Rate:<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">i</span></span><span class="support tag cclose">&gt;</span> {{x}})<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">b</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">div</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">div</span></span> <span class="support attribute">ng-init</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">y = 2</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n      <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">rating</span></span> <span class="support attribute">value</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">y</span><span class="string quote">"</span> <span class="support attribute">rating-states</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">ratingStates</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">rating</span></span><span class="support tag cclose">&gt;</span>\n      <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">b</span></span><span class="support tag cclose">&gt;</span>(<span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">i</span></span><span class="support tag cclose">&gt;</span>Rate:<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">i</span></span><span class="support tag cclose">&gt;</span> {{y}})<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">b</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">div</span></span><span class="support tag cclose">&gt;</span>\n<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">div</span></span><span class="support tag cclose">&gt;</span>\n</code></pre>\n             </div>\n            </div>\n           </div>\n           <!-- end ngRepeat: tab in tabs -->\n           <div class="content ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs">\n            <div tab-content-transclude="tab">\n             <div class="ng-scope" plunker-content="javascript">\n              <pre ng-non-bindable=""><code class="rainbow" data-language="javascript">angular.<span class="function call">module</span>(<span class="string">\'foundationDemoApp\'</span>).<span class="function call">controller</span>(<span class="string">\'RatingDemoCtrl\'</span>, <span class="storage function">function</span> ($scope) {\n  $scope.rate <span class="keyword operator">=</span> <span class="constant numeric">7</span>;\n  $scope.max <span class="keyword operator">=</span> <span class="constant numeric">10</span>;\n  $scope.isReadonly <span class="keyword operator">=</span> <span class="constant language">false</span>;\n\n<span class="entity function">  $scope.hoveringOver </span><span class="keyword operator">=</span> <span class="keyword">function</span>(value) {\n    $scope.overStar <span class="keyword operator">=</span> value;\n    $scope.percent <span class="keyword operator">=</span> <span class="constant numeric">100</span> <span class="keyword operator">*</span> (value / $scope.max);\n  };\n\n  $scope.ratingStates <span class="keyword operator">=</span> [\n    {stateOn: <span class="string">\'fa-check-circle\'</span>, stateOff: <span class="string">\'fa-check-circle-o\'</span>},\n    {stateOn: <span class="string">\'fa-star\'</span>, stateOff: <span class="string">\'fa-start-o\'</span>},\n    {stateOn: <span class="string">\'fa-heart\'</span>, stateOff: <span class="string">\'fa-ban\'</span>},\n    {stateOn: <span class="string">\'fa-heart\'</span>},\n    {stateOff: <span class="string">\'fa-power-off\'</span>}\n  ];\n});\n</code></pre>\n             </div>\n            </div>\n           </div>\n           <!-- end ngRepeat: tab in tabs -->\n          </div>\n         </div>\n        </div>\n       </div>\n      </section>\n      <script>\n       angular.module(\'foundationDemoApp\').controller(\'RatingDemoCtrl\', function ($scope) {\n  $scope.rate = 7;\n  $scope.max = 10;\n  $scope.isReadonly = false;\n\n  $scope.hoveringOver = function(value) {\n    $scope.overStar = value;\n    $scope.percent = 100 * (value / $scope.max);\n  };\n\n  $scope.ratingStates = [\n    {stateOn: \'fa-check-circle\', stateOff: \'fa-check-circle-o\'},\n    {stateOn: \'fa-star\', stateOff: \'fa-start-o\'},\n    {stateOn: \'fa-heart\', stateOff: \'fa-ban\'},\n    {stateOn: \'fa-heart\'},\n    {stateOff: \'fa-power-off\'}\n  ];\n});\n      </script>\n      <section class="demo" id="tabs">\n       <div class="page-header">\n        <h1>\n         Tabs\n         <small>\n          (\n          <a href="https://github.com/pineconellc/angular-foundation/tree/master/src/tabs" target="_blank">\n           mm.foundation.tabs\n          </a>\n          )\n         </small>\n        </h1>\n       </div>\n       <div class="row">\n        <div class="columns medium-6 show-grid">\n         <div class="ng-scope" ng-controller="TabsDemoCtrl">\n          <p>\n           Select a tab by setting active binding to true:\n          </p>\n          <p>\n           <button class="button small" ng-click="tabs[0].active = true">\n            Select second tab\n           </button>\n           <button class="button small" ng-click="tabs[1].active = true">\n            Select third tab\n           </button>\n          </p>\n          <hr/>\n          <div class="tabbable ng-isolate-scope">\n           <dl class="tabs" ng-class="{\'vertical\': vertical}" ng-transclude="">\n            <dd class="ng-isolate-scope active" heading="Static title" ng-class="{active: active}">\n             <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n              Static title\n             </a>\n            </dd>\n            <!-- ngRepeat: tab in tabs -->\n            <dd active="tab.active" class="ng-isolate-scope" heading="Dynamic Title 1" ng-class="{active: active}" ng-repeat="tab in tabs">\n             <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n              Dynamic Title 1\n             </a>\n            </dd>\n            <!-- end ngRepeat: tab in tabs -->\n            <dd active="tab.active" class="ng-isolate-scope" heading="Dynamic Title 2" ng-class="{active: active}" ng-repeat="tab in tabs">\n             <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n              Dynamic Title 2\n             </a>\n            </dd>\n            <!-- end ngRepeat: tab in tabs -->\n            <dd class="ng-isolate-scope" ng-class="{active: active}" select="alertMe()">\n             <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n              <tab-heading class="ng-scope">\n               <i class="fa fa-bell">\n               </i>\n               Alert!\n              </tab-heading>\n             </a>\n            </dd>\n           </dl>\n           <div class="tabs-content" ng-class="{\'vertical\': vertical}">\n            <!-- ngRepeat: tab in tabs -->\n            <div class="content ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs">\n             <div tab-content-transclude="tab">\n              <span class="ng-scope">\n               Static content\n              </span>\n             </div>\n            </div>\n            <!-- end ngRepeat: tab in tabs -->\n            <div class="content ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs">\n             <div tab-content-transclude="tab">\n              <span class="ng-scope">\n               I\'ve got an HTML heading, and a select callback. Pretty cool!\n              </span>\n             </div>\n            </div>\n            <!-- end ngRepeat: tab in tabs -->\n            <div class="content ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs">\n             <div tab-content-transclude="tab">\n              <span class="ng-binding ng-scope">\n               Dynamic content 1\n              </span>\n             </div>\n            </div>\n            <!-- end ngRepeat: tab in tabs -->\n            <div class="content ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs">\n             <div tab-content-transclude="tab">\n              <span class="ng-binding ng-scope">\n               Dynamic content 2\n              </span>\n             </div>\n            </div>\n            <!-- end ngRepeat: tab in tabs -->\n           </div>\n          </div>\n          <hr/>\n          <div class="tabbable ng-isolate-scope" type="navType" vertical="true">\n           <dl class="tabs vertical" ng-class="{\'vertical\': vertical}" ng-transclude="">\n            <dd class="ng-isolate-scope active" heading="Vertical 1" ng-class="{active: active}">\n             <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n              Vertical 1\n             </a>\n            </dd>\n            <dd class="ng-isolate-scope" heading="Vertical 2" ng-class="{active: active}">\n             <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n              Vertical 2\n             </a>\n            </dd>\n           </dl>\n           <div class="tabs-content vertical" ng-class="{\'vertical\': vertical}">\n            <!-- ngRepeat: tab in tabs -->\n            <div class="content ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs">\n             <div tab-content-transclude="tab">\n              <span class="ng-scope">\n               Vertical content 1\n              </span>\n             </div>\n            </div>\n            <!-- end ngRepeat: tab in tabs -->\n            <div class="content ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs">\n             <div tab-content-transclude="tab">\n              <span class="ng-scope">\n               Vertical content 2\n              </span>\n             </div>\n            </div>\n            <!-- end ngRepeat: tab in tabs -->\n           </div>\n          </div>\n          <hr/>\n         </div>\n        </div>\n        <div class="columns medium-6">\n         <p>\n          Foundation version of the tabs directive.\n         </p>\n         <h3>\n          Settings\n         </h3>\n         <h4>\n          <code>\n           &lt;tabset&gt;\n          </code>\n         </h4>\n         <ul>\n          <li>\n           <p>\n            <code>\n             vertical\n            </code>\n            <em>\n             (Defaults: false)\n            </em>\n            :\n Whether tabs appear vertically stacked.\n           </p>\n          </li>\n          <li>\n           <p>\n            <code>\n             open-on-load\n            </code>\n            <em>\n             (Defaults: true)\n            </em>\n            :\nWhether to open an active tab automatically.\n           </p>\n          </li>\n         </ul>\n         <h4>\n          <code>\n           &lt;tab&gt;\n          </code>\n         </h4>\n         <ul>\n          <li>\n           <p>\n            <code>\n             heading\n            </code>\n            or\n            <code>\n             &lt;tab-heading&gt;\n            </code>\n            :\n Heading text or HTML markup.\n           </p>\n          </li>\n          <li>\n           <p>\n            <code>\n             active\n            </code>\n            <i class="fa fa-eye">\n            </i>\n            <em>\n             (Defaults: false)\n            </em>\n            :\n Whether tab is currently selected.\n           </p>\n          </li>\n          <li>\n           <p>\n            <code>\n             select()\n            </code>\n            <em>\n             (Defaults: null)\n            </em>\n            :\n An optional expression called when tab is activated.\n           </p>\n          </li>\n         </ul>\n        </div>\n       </div>\n       <hr/>\n       <div class="row code">\n        <div class="columns medium-12 ng-scope" ng-controller="PlunkerCtrl">\n         <div class="right">\n          <button class="button secondary" id="plunk-btn" ng-click="edit(\'1.4.6\', \'5.5.2\', \'0.8.0\', \'tabs\')">\n           <i class="fa fa-edit">\n           </i>\n           Edit in plunker\n          </button>\n         </div>\n         <div class="tabbable ng-isolate-scope">\n          <dl class="tabs" ng-class="{\'vertical\': vertical}" ng-transclude="">\n           <dd class="ng-isolate-scope active" heading="Markup" ng-class="{active: active}">\n            <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n             Markup\n            </a>\n           </dd>\n           <dd class="ng-isolate-scope" heading="JavaScript" ng-class="{active: active}">\n            <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n             JavaScript\n            </a>\n           </dd>\n          </dl>\n          <div class="tabs-content" ng-class="{\'vertical\': vertical}">\n           <!-- ngRepeat: tab in tabs -->\n           <div class="content ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs">\n            <div tab-content-transclude="tab">\n             <div class="ng-scope" plunker-content="markup">\n              <pre ng-non-bindable=""><code class="rainbow" data-language="html"><span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">div</span></span> <span class="support attribute">ng-controller</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">TabsDemoCtrl</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n  <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">p</span></span><span class="support tag cclose">&gt;</span>Select a tab by setting active binding to true:<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">p</span></span><span class="support tag cclose">&gt;</span>\n  <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">p</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">button</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">button small</span><span class="string quote">"</span> <span class="support attribute">ng-click</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">tabs[0].active = true</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>Select second tab<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">button</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">button</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">button small</span><span class="string quote">"</span> <span class="support attribute">ng-click</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">tabs[1].active = true</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>Select third tab<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">button</span></span><span class="support tag cclose">&gt;</span>\n  <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">p</span></span><span class="support tag cclose">&gt;</span>\n  <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">hr</span></span> <span class="support tag cclose">/&gt;</span>\n\n  <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">tabset</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">tab</span></span> <span class="support attribute">heading</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">Static title</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>Static content<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">tab</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">tab</span></span> <span class="support attribute">ng-repeat</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">tab in tabs</span><span class="string quote">"</span> <span class="support attribute">heading</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">{{tab.title}}</span><span class="string quote">"</span> <span class="support attribute">active</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">tab.active</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n      {{tab.content}}\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">tab</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">tab</span></span> <span class="support attribute">select</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">alertMe()</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n      <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">tab</span></span>-heading<span class="support tag cclose">&gt;</span>\n        <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">i</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">fa fa-bell</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">i</span></span><span class="support tag cclose">&gt;</span> Alert!\n      <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">tab</span></span>-heading<span class="support tag cclose">&gt;</span>\n      I\'ve got an HTML heading, and a select callback. Pretty cool!\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">tab</span></span><span class="support tag cclose">&gt;</span>\n  <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">tabset</span></span><span class="support tag cclose">&gt;</span>\n\n  <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">hr</span></span> <span class="support tag cclose">/&gt;</span>\n\n  <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">tabset</span></span> <span class="support attribute">vertical</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">true</span><span class="string quote">"</span> <span class="support attribute">type</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">navType</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">tab</span></span> <span class="support attribute">heading</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">Vertical 1</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>Vertical content 1<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">tab</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">tab</span></span> <span class="support attribute">heading</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">Vertical 2</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>Vertical content 2<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">tab</span></span><span class="support tag cclose">&gt;</span>\n  <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">tabset</span></span><span class="support tag cclose">&gt;</span>\n\n  <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">hr</span></span> <span class="support tag cclose">/&gt;</span>\n<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">div</span></span><span class="support tag cclose">&gt;</span>\n</code></pre>\n             </div>\n            </div>\n           </div>\n           <!-- end ngRepeat: tab in tabs -->\n           <div class="content ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs">\n            <div tab-content-transclude="tab">\n             <div class="ng-scope" plunker-content="javascript">\n              <pre ng-non-bindable=""><code class="rainbow" data-language="javascript">angular.<span class="function call">module</span>(<span class="string">\'foundationDemoApp\'</span>).<span class="function call">controller</span>(<span class="string">\'TabsDemoCtrl\'</span>, <span class="storage function">function</span> ($scope) {\n  $scope.tabs <span class="keyword operator">=</span> [\n    { title:<span class="string">"Dynamic Title 1"</span>, content:<span class="string">"Dynamic content 1"</span> },\n    { title:<span class="string">"Dynamic Title 2"</span>, content:<span class="string">"Dynamic content 2"</span> }\n  ];\n\n<span class="entity function">  $scope.alertMe </span><span class="keyword operator">=</span> <span class="keyword">function</span>() {\n    <span class="support function">setTimeout</span>(<span class="keyword">function</span>() {\n      <span class="function call">alert</span>(<span class="string">"You\'ve selected the alert tab!"</span>);\n    });\n  };\n});\n</code></pre>\n             </div>\n            </div>\n           </div>\n           <!-- end ngRepeat: tab in tabs -->\n          </div>\n         </div>\n        </div>\n       </div>\n      </section>\n      <script>\n       angular.module(\'foundationDemoApp\').controller(\'TabsDemoCtrl\', function ($scope) {\n  $scope.tabs = [\n    { title:"Dynamic Title 1", content:"Dynamic content 1" },\n    { title:"Dynamic Title 2", content:"Dynamic content 2" }\n  ];\n\n  $scope.alertMe = function() {\n    setTimeout(function() {\n      alert("You\'ve selected the alert tab!");\n    });\n  };\n});\n      </script>\n      <section class="demo" id="tooltip">\n       <div class="page-header">\n        <h1>\n         Tooltip\n         <small>\n          (\n          <a href="https://github.com/pineconellc/angular-foundation/tree/master/src/tooltip" target="_blank">\n           mm.foundation.tooltip\n          </a>\n          )\n         </small>\n        </h1>\n       </div>\n       <div class="row">\n        <div class="columns medium-6 show-grid">\n         <div class="ng-scope" ng-controller="TooltipDemoCtrl">\n          <div class="form-group">\n           <label>\n            Dynamic Tooltip Text\n           </label>\n           <input class="form-control ng-pristine ng-untouched ng-valid" ng-model="dynamicTooltipText" type="text"/>\n          </div>\n          <div class="form-group">\n           <label>\n            Dynamic Tooltip Popup Text\n           </label>\n           <input class="form-control ng-pristine ng-untouched ng-valid" ng-model="dynamicTooltip" type="text"/>\n          </div>\n          <p>\n           Pellentesque\n           <a class="has-tip ng-scope ng-binding" href="#" tooltip="Hello, World!">\n            dynamic\n           </a>\n           ,\n      sit amet venenatis urna cursus eget nunc scelerisque viverra mauris, in\n      aliquam. Tincidunt lobortis feugiat vivamus at\n           <a class="has-tip ng-scope" href="#" tooltip="On the Left!" tooltip-placement="left">\n            left\n           </a>\n           eget\n      arcu dictum varius duis at consectetur lorem. Vitae elementum curabitur\n           <a class="has-tip ng-scope" href="#" tooltip="On the Right!" tooltip-placement="right">\n            right\n           </a>\n           nunc sed velit dignissim sodales ut eu sem integer vitae. Turpis egestas\n           <a class="has-tip ng-scope" href="#" tooltip="On the Bottom!" tooltip-placement="bottom">\n            bottom\n           </a>\n           pharetra convallis posuere morbi leo urna,\n           <a class="has-tip ng-scope" href="#" tooltip="I don\'t fade. :-(" tooltip-animation="false">\n            fading\n           </a>\n           at elementum eu, facilisis sed odio morbi quis commodo odio. In cursus\n           <a class="has-tip ng-scope" href="#" tooltip="appears with delay" tooltip-popup-delay="1000">\n            delayed\n           </a>\n           turpis massa tincidunt dui ut.\n          </p>\n          <p>\n           I can even contain HTML.\n           <a class="has-tip ng-scope" href="#" tooltip-html-unsafe="I\'ve been made &lt;b&gt;bold&lt;/b&gt;!">\n            Check me out!\n           </a>\n          </p>\n          <form class="ng-pristine ng-valid" role="form">\n           <div class="form-group">\n            <label>\n             Or use custom triggers, like focus:\n            </label>\n            <input class="form-control ng-scope" tooltip="See? Now click away..." tooltip-placement="right" tooltip-trigger="focus" type="text" value="Click me!"/>\n           </div>\n          </form>\n         </div>\n        </div>\n        <div class="columns medium-6">\n         <p>\n          A lightweight, extensible directive for fancy tooltip creation. The tooltip\ndirective supports multiple placements, optional transition animation, and more.\n         </p>\n         <p>\n          There are two versions of the tooltip:\n          <code>\n           tooltip\n          </code>\n          and\n          <code>\n           tooltip-html-unsafe\n          </code>\n          . The\nformer takes text only and will escape any HTML provided. The latter takes\nwhatever HTML is provided and displays it in a tooltip; it called "unsafe"\nbecause the HTML is not sanitized.\n          <em>\n           The user is responsible for ensuring the\ncontent is safe to put into the DOM!\n          </em>\n         </p>\n         <p>\n          The tooltip directives provide several optional attributes to control how they\nwill display:\n         </p>\n         <ul>\n          <li>\n           <code>\n            tooltip-placement\n           </code>\n           : Where to place it? Defaults to "top", but also accepts\n"bottom", "left", "right".\n          </li>\n          <li>\n           <code>\n            tooltip-animation\n           </code>\n           : Should it fade in and out? Defaults to "true".\n          </li>\n          <li>\n           <code>\n            tooltip-popup-delay\n           </code>\n           : For how long should the user have to have the mouse\nover the element before the tooltip shows (in milliseconds)? Defaults to 0.\n          </li>\n          <li>\n           <code>\n            tooltip-trigger\n           </code>\n           : What should trigger a show of the tooltip?\n          </li>\n          <li>\n           <code>\n            tooltip-append-to-body\n           </code>\n           : Should the tooltip be appended to\n           <code>\n            $body\n           </code>\n           instead of\nthe parent element?\n          </li>\n         </ul>\n         <p>\n          The tooltip directives require the\n          <code>\n           $position\n          </code>\n          service.\n         </p>\n         <p>\n          <strong>\n           Triggers\n          </strong>\n         </p>\n         <p>\n          The following show triggers are supported out of the box, along with their\nprovided hide triggers:\n         </p>\n         <ul>\n          <li>\n           <code>\n            mouseenter\n           </code>\n           :\n           <code>\n            mouseleave\n           </code>\n          </li>\n          <li>\n           <code>\n            click\n           </code>\n           :\n           <code>\n            click\n           </code>\n          </li>\n          <li>\n           <code>\n            focus\n           </code>\n           :\n           <code>\n            blur\n           </code>\n          </li>\n         </ul>\n         <p>\n          For any non-supported value, the trigger will be used to both show and hide the\ntooltip.\n         </p>\n         <p>\n          <strong>\n           $tooltipProvider\n          </strong>\n         </p>\n         <p>\n          Through the\n          <code>\n           $tooltipProvider\n          </code>\n          , you can change the way tooltips and popovers\nbehave by default; the attributes above always take precedence. The following\nmethods are available:\n         </p>\n         <ul>\n          <li>\n           <code>\n            setTriggers( obj )\n           </code>\n           : Extends the default trigger mappings mentioned above\nwith mappings of your own. E.g.\n           <code>\n            { \'openTrigger\': \'closeTrigger\' }\n           </code>\n           .\n          </li>\n          <li>\n           <p>\n            <code>\n             options( obj )\n            </code>\n            : Provide a set of defaults for certain tooltip and popover\nattributes. Currently supports \'placement\', \'animation\', \'popupDelay\', and\n            <code>\n             appendToBody\n            </code>\n            . Here are the defaults:\n           </p>\n           <pre>placement: \'top\',\nanimation: true,\npopupDelay: 0,\nappendToBody: false\n</pre>\n          </li>\n         </ul>\n        </div>\n       </div>\n       <hr/>\n       <div class="row code">\n        <div class="columns medium-12 ng-scope" ng-controller="PlunkerCtrl">\n         <div class="right">\n          <button class="button secondary" id="plunk-btn" ng-click="edit(\'1.4.6\', \'5.5.2\', \'0.8.0\', \'tooltip\')">\n           <i class="fa fa-edit">\n           </i>\n           Edit in plunker\n          </button>\n         </div>\n         <div class="tabbable ng-isolate-scope">\n          <dl class="tabs" ng-class="{\'vertical\': vertical}" ng-transclude="">\n           <dd class="ng-isolate-scope active" heading="Markup" ng-class="{active: active}">\n            <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n             Markup\n            </a>\n           </dd>\n           <dd class="ng-isolate-scope" heading="JavaScript" ng-class="{active: active}">\n            <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n             JavaScript\n            </a>\n           </dd>\n          </dl>\n          <div class="tabs-content" ng-class="{\'vertical\': vertical}">\n           <!-- ngRepeat: tab in tabs -->\n           <div class="content ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs">\n            <div tab-content-transclude="tab">\n             <div class="ng-scope" plunker-content="markup">\n              <pre ng-non-bindable=""><code class="rainbow" data-language="html"><span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">div</span></span> <span class="support attribute">ng-controller</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">TooltipDemoCtrl</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">div</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">form-group</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n      <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">label</span></span><span class="support tag cclose">&gt;</span>Dynamic Tooltip Text<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">label</span></span><span class="support tag cclose">&gt;</span>\n      <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">input</span></span> <span class="support attribute">type</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">text</span><span class="string quote">"</span> <span class="support attribute">ng-model</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">dynamicTooltipText</span><span class="string quote">"</span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">form-control</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">div</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">div</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">form-group</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n      <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">label</span></span><span class="support tag cclose">&gt;</span>Dynamic Tooltip Popup Text<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">label</span></span><span class="support tag cclose">&gt;</span>\n      <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">input</span></span> <span class="support attribute">type</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">text</span><span class="string quote">"</span> <span class="support attribute">ng-model</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">dynamicTooltip</span><span class="string quote">"</span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">form-control</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">div</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">p</span></span><span class="support tag cclose">&gt;</span>\n      Pellentesque <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">a</span></span> <span class="support attribute">href</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">#</span><span class="string quote">"</span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">has-tip</span><span class="string quote">"</span> <span class="support attribute">tooltip</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">{{dynamicTooltip}}</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>{{dynamicTooltipText}}<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">a</span></span><span class="support tag cclose">&gt;</span>,\n      sit amet venenatis urna cursus eget nunc scelerisque viverra mauris, in\n      aliquam. Tincidunt lobortis feugiat vivamus at \n      <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">a</span></span> <span class="support attribute">href</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">#</span><span class="string quote">"</span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">has-tip</span><span class="string quote">"</span> <span class="support attribute">tooltip-placement</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">left</span><span class="string quote">"</span> <span class="support attribute">tooltip</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">On the Left!</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>left<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">a</span></span><span class="support tag cclose">&gt;</span> eget\n      arcu dictum varius duis at consectetur lorem. Vitae elementum curabitur\n      <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">a</span></span> <span class="support attribute">href</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">#</span><span class="string quote">"</span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">has-tip</span><span class="string quote">"</span> <span class="support attribute">tooltip-placement</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">right</span><span class="string quote">"</span> <span class="support attribute">tooltip</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">On the Right!</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>right<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">a</span></span><span class="support tag cclose">&gt;</span> \n      nunc sed velit dignissim sodales ut eu sem integer vitae. Turpis egestas \n      <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">a</span></span> <span class="support attribute">href</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">#</span><span class="string quote">"</span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">has-tip</span><span class="string quote">"</span> <span class="support attribute">tooltip-placement</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">bottom</span><span class="string quote">"</span> <span class="support attribute">tooltip</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">On the Bottom!</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>bottom<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">a</span></span><span class="support tag cclose">&gt;</span> \n      pharetra convallis posuere morbi leo urna, \n      <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">a</span></span> <span class="support attribute">href</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">#</span><span class="string quote">"</span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">has-tip</span><span class="string quote">"</span> <span class="support attribute">tooltip-animation</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">false</span><span class="string quote">"</span> <span class="support attribute">tooltip</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">I don\'t fade. :-(</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>fading<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">a</span></span><span class="support tag cclose">&gt;</span>\n      at elementum eu, facilisis sed odio morbi quis commodo odio. In cursus\n      <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">a</span></span> <span class="support attribute">href</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">#</span><span class="string quote">"</span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">has-tip</span><span class="string quote">"</span> <span class="support attribute">tooltip-popup-delay</span><span class="support operator">=</span><span class="string quote">\'</span><span class="string value">1000</span><span class="string quote">\'</span> <span class="support attribute">tooltip</span><span class="support operator">=</span><span class="string quote">\'</span><span class="string value">appears with delay</span><span class="string quote">\'</span><span class="support tag cclose">&gt;</span>delayed<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">a</span></span><span class="support tag cclose">&gt;</span> turpis massa tincidunt dui ut.\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">p</span></span><span class="support tag cclose">&gt;</span>\n\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">p</span></span><span class="support tag cclose">&gt;</span>\n      I can even contain HTML. <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">a</span></span> <span class="support attribute">href</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">#</span><span class="string quote">"</span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">has-tip</span><span class="string quote">"</span> <span class="support attribute">tooltip-html-unsafe</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">{{htmlTooltip}}</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>Check me out!<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">a</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">p</span></span><span class="support tag cclose">&gt;</span>\n\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">form</span></span> <span class="support attribute">role</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">form</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n      <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">div</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">form-group</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n        <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">label</span></span><span class="support tag cclose">&gt;</span>Or use custom triggers, like focus: <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">label</span></span><span class="support tag cclose">&gt;</span>\n        <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">input</span></span> <span class="support attribute">type</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">text</span><span class="string quote">"</span> <span class="support attribute">value</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">Click me!</span><span class="string quote">"</span> <span class="support attribute">tooltip</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">See? Now click away...</span><span class="string quote">"</span>  <span class="support attribute">tooltip-trigger</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">focus</span><span class="string quote">"</span> <span class="support attribute">tooltip-placement</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">right</span><span class="string quote">"</span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">form-control</span><span class="string quote">"</span> <span class="support tag cclose">/&gt;</span>\n      <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">div</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">form</span></span><span class="support tag cclose">&gt;</span>\n<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">div</span></span><span class="support tag cclose">&gt;</span>\n</code></pre>\n             </div>\n            </div>\n           </div>\n           <!-- end ngRepeat: tab in tabs -->\n           <div class="content ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs">\n            <div tab-content-transclude="tab">\n             <div class="ng-scope" plunker-content="javascript">\n              <pre ng-non-bindable=""><code class="rainbow" data-language="javascript">angular.<span class="function call">module</span>(<span class="string">\'foundationDemoApp\'</span>).<span class="function call">controller</span>(<span class="string">\'TooltipDemoCtrl\'</span>, <span class="storage function">function</span> ($scope) {\n  $scope.dynamicTooltip <span class="keyword operator">=</span> <span class="string">"Hello, World!"</span>;\n  $scope.dynamicTooltipText <span class="keyword operator">=</span> <span class="string">"dynamic"</span>;\n  $scope.htmlTooltip <span class="keyword operator">=</span> <span class="string">"I\'ve been made &lt;b&gt;bold&lt;/b&gt;!"</span>;\n});\n</code></pre>\n             </div>\n            </div>\n           </div>\n           <!-- end ngRepeat: tab in tabs -->\n          </div>\n         </div>\n        </div>\n       </div>\n      </section>\n      <script>\n       angular.module(\'foundationDemoApp\').controller(\'TooltipDemoCtrl\', function ($scope) {\n  $scope.dynamicTooltip = "Hello, World!";\n  $scope.dynamicTooltipText = "dynamic";\n  $scope.htmlTooltip = "I\'ve been made <b>bold</b>!";\n});\n      </script>\n      <section class="demo" id="topbar">\n       <div class="page-header">\n        <h1>\n         Topbar\n         <small>\n          (\n          <a href="https://github.com/pineconellc/angular-foundation/tree/master/src/topbar" target="_blank">\n           mm.foundation.topbar\n          </a>\n          )\n         </small>\n        </h1>\n       </div>\n       <div class="row">\n        <div class="columns medium-6 show-grid">\n         <div class="ng-scope" ng-controller="TopBarDemoCtrl">\n          <nav class="top-bar ng-isolate-scope" ng-transclude="" style="height: 45px;">\n           <ul class="title-area ng-scope">\n            <li class="name">\n             <h1>\n              <a href="#">\n               My Site\n              </a>\n             </h1>\n            </li>\n            <li class="menu-icon toggle-topbar menu-icon ng-isolate-scope" ng-transclude="" toggle-top-bar="">\n             <a class="ng-scope" href="#">\n              Menu\n             </a>\n            </li>\n           </ul>\n           <section class="top-bar-section ng-isolate-scope" ng-transclude="" style="left: 0%;">\n            <!-- Right Nav Section -->\n            <ul class="right ng-scope">\n             <li class="active">\n              <a href="#">\n               Active\n              </a>\n             </li>\n             <li class="has-dropdown ng-isolate-scope" has-dropdown="" ng-transclude="">\n              <a class="ng-scope" href="#">\n               Dropdown\n              </a>\n              <ul class="dropdown ng-isolate-scope" ng-transclude="" top-bar-dropdown="">\n               <li class="title back js-generated ng-scope">\n                <h5>\n                 <a class="ng-binding" href="" ng-click="back($event);">\n                  Back\n                 </a>\n                </h5>\n               </li>\n               <li class="ng-scope">\n                <a href="#">\n                 First link in dropdown\n                </a>\n               </li>\n              </ul>\n             </li>\n            </ul>\n            <!-- Left Nav Section -->\n            <ul class="left ng-scope">\n             <li>\n              <a href="#">\n               Left\n              </a>\n             </li>\n            </ul>\n           </section>\n          </nav>\n         </div>\n        </div>\n        <div class="columns medium-6">\n         <p>\n          A directive that provides the\n          <a href="http://foundation.zurb.com/docs/components/topbar.html">\n           Foundation Top Bar\n          </a>\n          component.\n         </p>\n         <p>\n          The directive has virtually identical behavior to Foundation Top Bar. The markup however, is slightly different. The top bar consist of a root\n          <code>\n           top-bar\n          </code>\n          element with nested\n          <code>\n           top-bar-section\n          </code>\n          elements that encapsulate menus. The\n          <code>\n           title-area\n          </code>\n          list is also a direct descendant of the root element. The mobile menu toggle is created by adding the\n          <code>\n           toggle-top-bar\n          </code>\n          attribute to a\n          <code>\n           li\n          </code>\n          element inside the title area. Applying\n          <code>\n           menu-icon\n          </code>\n          class to this element will trigger the icon as determined by the Foundation CSS.\n          <code>\n           li\n          </code>\n          elements that contain nested menus need to have the\n          <code>\n           has-dropdown\n          </code>\n          attribute. The nested list itself should have the\n          <code>\n           top-bar-dropdown\n          </code>\n          attribute.\n         </p>\n         <p>\n          The following settings can be applied as attributes to the\n          <code>\n           top-bar\n          </code>\n          element:\n         </p>\n         <ul>\n          <li>\n           <code>\n            sticky-class\n           </code>\n           : Class name that will trigger sticky behavior.\n          </li>\n          <li>\n           <code>\n            custom-back-text\n           </code>\n           : Set this to false and it will pull the top level link name as the back text.\n          </li>\n          <li>\n           <code>\n            back-text\n           </code>\n           : Define what you want your custom back text to be if custom-back-text is set.\n          </li>\n          <li>\n           <code>\n            is-hover\n           </code>\n           : Toggle drop down menus on hover.\n          </li>\n          <li>\n           <code>\n            mobile-show-parent-link\n           </code>\n           : will copy parent links into dropdowns for mobile navigation.\n          </li>\n          <li>\n           <code>\n            scrolltop\n           </code>\n           : jump to top when sticky nav menu toggle is clicked\n          </li>\n         </ul>\n         <p>\n          See the demo page for example on how to use this and visit the\n          <a href="http://foundation.zurb.com/docs/components/topbar.html">\n           Foundation docs\n          </a>\n          for more details.\n         </p>\n        </div>\n       </div>\n       <hr/>\n       <div class="row code">\n        <div class="columns medium-12 ng-scope" ng-controller="PlunkerCtrl">\n         <div class="right">\n          <button class="button secondary" id="plunk-btn" ng-click="edit(\'1.4.6\', \'5.5.2\', \'0.8.0\', \'topbar\')">\n           <i class="fa fa-edit">\n           </i>\n           Edit in plunker\n          </button>\n         </div>\n         <div class="tabbable ng-isolate-scope">\n          <dl class="tabs" ng-class="{\'vertical\': vertical}" ng-transclude="">\n           <dd class="ng-isolate-scope active" heading="Markup" ng-class="{active: active}">\n            <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n             Markup\n            </a>\n           </dd>\n           <dd class="ng-isolate-scope" heading="JavaScript" ng-class="{active: active}">\n            <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n             JavaScript\n            </a>\n           </dd>\n          </dl>\n          <div class="tabs-content" ng-class="{\'vertical\': vertical}">\n           <!-- ngRepeat: tab in tabs -->\n           <div class="content ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs">\n            <div tab-content-transclude="tab">\n             <div class="ng-scope" plunker-content="markup">\n              <pre ng-non-bindable=""><code class="rainbow" data-language="html"><span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">div</span></span> <span class="support attribute">ng-controller</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">TopBarDemoCtrl</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n  <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">top</span></span>-bar<span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">ul</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">title-area</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n      <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">li</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">name</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n        <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">h1</span></span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">a</span></span> <span class="support attribute">href</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">#</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>My Site<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">a</span></span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">h1</span></span><span class="support tag cclose">&gt;</span>\n      <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">li</span></span><span class="support tag cclose">&gt;</span>\n      <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">li</span></span> toggle-top-bar <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">menu-icon</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">a</span></span> <span class="support attribute">href</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">#</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>Menu<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">a</span></span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">li</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">ul</span></span><span class="support tag cclose">&gt;</span>\n\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">top</span></span>-bar-section<span class="support tag cclose">&gt;</span>\n      <span class="comment html">&lt;!-- Right Nav Section --&gt;</span>\n      <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">ul</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">right</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n        <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">li</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">active</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">a</span></span> <span class="support attribute">href</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">#</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>Active<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">a</span></span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">li</span></span><span class="support tag cclose">&gt;</span>\n        <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">li</span></span> has-dropdown<span class="support tag cclose">&gt;</span>\n          <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">a</span></span> <span class="support attribute">href</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">#</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>Dropdown<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">a</span></span><span class="support tag cclose">&gt;</span>\n          <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">ul</span></span> top-bar-dropdown<span class="support tag cclose">&gt;</span>\n            <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">li</span></span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">a</span></span> <span class="support attribute">href</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">#</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>First link in dropdown<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">a</span></span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">li</span></span><span class="support tag cclose">&gt;</span>\n          <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">ul</span></span><span class="support tag cclose">&gt;</span>\n        <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">li</span></span><span class="support tag cclose">&gt;</span>\n      <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">ul</span></span><span class="support tag cclose">&gt;</span>\n\n      <span class="comment html">&lt;!-- Left Nav Section --&gt;</span>\n      <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">ul</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">left</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n        <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">li</span></span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">a</span></span> <span class="support attribute">href</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">#</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>Left<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">a</span></span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">li</span></span><span class="support tag cclose">&gt;</span>\n      <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">ul</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">top</span></span>-bar-section<span class="support tag cclose">&gt;</span>\n  <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">top</span></span>-bar<span class="support tag cclose">&gt;</span>\n<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">div</span></span><span class="support tag cclose">&gt;</span></code></pre>\n             </div>\n            </div>\n           </div>\n           <!-- end ngRepeat: tab in tabs -->\n           <div class="content ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs">\n            <div tab-content-transclude="tab">\n             <div class="ng-scope" plunker-content="javascript">\n              <pre ng-non-bindable=""><code class="rainbow" data-language="javascript">angular.<span class="function call">module</span>(<span class="string">\'foundationDemoApp\'</span>).<span class="function call">controller</span>(<span class="string">\'TopBarDemoCtrl\'</span>, <span class="storage function">function</span> ($scope) {\n\n});\n</code></pre>\n             </div>\n            </div>\n           </div>\n           <!-- end ngRepeat: tab in tabs -->\n          </div>\n         </div>\n        </div>\n       </div>\n      </section>\n      <script>\n       angular.module(\'foundationDemoApp\').controller(\'TopBarDemoCtrl\', function ($scope) {\n\n});\n      </script>\n      <section class="demo" id="tour">\n       <div class="page-header">\n        <h1>\n         Tour\n         <small>\n          (\n          <a href="https://github.com/pineconellc/angular-foundation/tree/master/src/tour" target="_blank">\n           mm.foundation.tour\n          </a>\n          )\n         </small>\n        </h1>\n       </div>\n       <div class="row">\n        <div class="columns medium-6 show-grid">\n         <div class="ng-scope" ng-controller="TourDemoCtrl">\n          <button ng-click="startTour()">\n           Start tour\n          </button>\n          <div class="panel ng-scope" step-index="1" step-placement="bottom" step-text="Hello, this is the first step of the tour.">\n           First tour step points here\n          </div>\n          <div class="panel ng-scope" step-index="2" step-placement="right" step-text="This is another step of the tour.">\n           Second tour step points here\n          </div>\n          <div class="panel ng-scope" step-index="3" step-text="Last step. Finally.">\n           Third tour step points here\n          </div>\n         </div>\n        </div>\n        <div class="columns medium-6">\n         <p>\n          A\n          <code>\n           $tour\n          </code>\n          service to give users of your website or app a tour when they\nvisit. It works in conjunction with a\n          <code>\n           step-text\n          </code>\n          directive. This is an angular-focused\nrefactoring of the\n          <a href="http://foundation.zurb.com/docs/components/joyride.html">\n           Foundation Joyride\n          </a>\n          component.\n         </p>\n         <p>\n          The step directive\n          <strong>\n           requires\n          </strong>\n          the tooltip module and supports multiple\nplacements, optional transition animation, and more.\n         </p>\n         <p>\n          Required attributes are:\n         </p>\n         <ul>\n          <li>\n           <code>\n            step-text\n           </code>\n           : The text to show in the tour popup when the tour is focused on the element.\n          </li>\n          <li>\n           <code>\n            step-index\n           </code>\n           : The order in which the tour should focus on the element strting with\n           <code>\n            1\n           </code>\n           .\n          </li>\n         </ul>\n         <p>\n          The\n          <code>\n           step-text\n          </code>\n          directive provides several optional attributes to control how it\nwill display:\n         </p>\n         <ul>\n          <li>\n           <code>\n            step-title\n           </code>\n           : A string to display as a fancy title.\n          </li>\n          <li>\n           <code>\n            step-placement\n           </code>\n           : Where to place it? Defaults to "top", but also accepts\n"bottom", "left", "right".\n          </li>\n          <li>\n           <code>\n            step-animation\n           </code>\n           : Should it fade in and out? Defaults to "true".\n          </li>\n          <li>\n           <code>\n            step-popup-delay\n           </code>\n           : For how long should the user have to have the mouse\nover the element before the step shows (in milliseconds)? Defaults to 0.\n          </li>\n          <li>\n           <code>\n            step-trigger\n           </code>\n           : What should trigger the show of the step? See the\n           <code>\n            tooltip\n           </code>\n           directive for supported values.\n          </li>\n          <li>\n           <code>\n            step-append-to-body\n           </code>\n           : Should the tooltip be appended to\n           <code>\n            $body\n           </code>\n           instead of\nthe parent element?\n          </li>\n         </ul>\n         <p>\n          The step directive requires the\n          <code>\n           $position\n          </code>\n          service.\n         </p>\n         <p>\n          The step directive also supports various default configurations through the\n$tooltipProvider. See the\n          <a href="#tooltip">\n           tooltip\n          </a>\n          section for more information.\n         </p>\n        </div>\n       </div>\n       <hr/>\n       <div class="row code">\n        <div class="columns medium-12 ng-scope" ng-controller="PlunkerCtrl">\n         <div class="right">\n          <button class="button secondary" id="plunk-btn" ng-click="edit(\'1.4.6\', \'5.5.2\', \'0.8.0\', \'tour\')">\n           <i class="fa fa-edit">\n           </i>\n           Edit in plunker\n          </button>\n         </div>\n         <div class="tabbable ng-isolate-scope">\n          <dl class="tabs" ng-class="{\'vertical\': vertical}" ng-transclude="">\n           <dd class="ng-isolate-scope active" heading="Markup" ng-class="{active: active}">\n            <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n             Markup\n            </a>\n           </dd>\n           <dd class="ng-isolate-scope" heading="JavaScript" ng-class="{active: active}">\n            <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n             JavaScript\n            </a>\n           </dd>\n          </dl>\n          <div class="tabs-content" ng-class="{\'vertical\': vertical}">\n           <!-- ngRepeat: tab in tabs -->\n           <div class="content ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs">\n            <div tab-content-transclude="tab">\n             <div class="ng-scope" plunker-content="markup">\n              <pre ng-non-bindable=""><code class="rainbow" data-language="html"><span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">div</span></span> <span class="support attribute">ng-controller</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">TourDemoCtrl</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n  <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">button</span></span> <span class="support attribute">ng-click</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">startTour()</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>Start tour<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">button</span></span><span class="support tag cclose">&gt;</span>\n  <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">div</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">panel</span><span class="string quote">"</span>\n    <span class="support attribute">step-text</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">Hello, this is the first step of the tour.</span><span class="string quote">"</span>\n    <span class="support attribute">step-index</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">1</span><span class="string quote">"</span>\n    <span class="support attribute">step-placement</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">bottom</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n    First tour step points here\n  <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">div</span></span><span class="support tag cclose">&gt;</span>\n  <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">div</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">panel</span><span class="string quote">"</span>\n    <span class="support attribute">step-text</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">This is another step of the tour.</span><span class="string quote">"</span>\n    <span class="support attribute">step-index</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">2</span><span class="string quote">"</span>\n    <span class="support attribute">step-placement</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">right</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n    Second tour step points here\n  <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">div</span></span><span class="support tag cclose">&gt;</span>\n  <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">div</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">panel</span><span class="string quote">"</span>\n    <span class="support attribute">step-text</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">Last step. Finally.</span><span class="string quote">"</span>\n    <span class="support attribute">step-index</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">3</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n    Third tour step points here\n  <span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">div</span></span><span class="support tag cclose">&gt;</span>\n<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">div</span></span><span class="support tag cclose">&gt;</span>\n</code></pre>\n             </div>\n            </div>\n           </div>\n           <!-- end ngRepeat: tab in tabs -->\n           <div class="content ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs">\n            <div tab-content-transclude="tab">\n             <div class="ng-scope" plunker-content="javascript">\n              <pre ng-non-bindable=""><code class="rainbow" data-language="javascript">angular.<span class="function call">module</span>(<span class="string">\'foundationDemoApp\'</span>).<span class="function call">controller</span>(<span class="string">\'TourDemoCtrl\'</span>, <span class="storage function">function</span> ($scope, $tour) {\n  $scope.startTour <span class="keyword operator">=</span> $tour.start;\n});\n</code></pre>\n             </div>\n            </div>\n           </div>\n           <!-- end ngRepeat: tab in tabs -->\n          </div>\n         </div>\n        </div>\n       </div>\n      </section>\n      <script>\n       angular.module(\'foundationDemoApp\').controller(\'TourDemoCtrl\', function ($scope, $tour) {\n  $scope.startTour = $tour.start;\n});\n      </script>\n      <section class="demo" id="typeahead">\n       <div class="page-header">\n        <h1>\n         Typeahead\n         <small>\n          (\n          <a href="https://github.com/pineconellc/angular-foundation/tree/master/src/typeahead" target="_blank">\n           mm.foundation.typeahead\n          </a>\n          )\n         </small>\n        </h1>\n       </div>\n       <div class="row">\n        <div class="columns medium-6 show-grid">\n         <script id="customTemplate.html" type="text/ng-template">\n          <a>\n      <img ng-src="http://upload.wikimedia.org/wikipedia/commons/thumb/{{match.model.flag}}" width="16">\n      <span bind-html-unsafe="match.label | typeaheadHighlight:query"></span>\n  </a>\n         </script>\n         <div class="container-fluid ng-scope" ng-controller="TypeaheadCtrl">\n          <h4>\n           Static arrays\n          </h4>\n          <pre class="ng-binding">Model: </pre>\n          <input class="form-control ng-pristine ng-untouched ng-valid" ng-model="selected" type="text" typeahead="state for state in states | filter:$viewValue | limitTo:8"/>\n          <ul active="activeIdx" class="f-dropdown ng-isolate-scope" matches="matches" ng-style="{display: isOpen()&amp;&amp;\'block\' || \'none\', top: position.top+\'px\', left: position.left+\'px\'}" position="position" query="query" select="select(activeIdx)" style="display: none;" typeahead-popup="">\n           <!-- ngRepeat: match in matches -->\n          </ul>\n          <h4>\n           Asynchronous results\n          </h4>\n          <pre class="ng-binding">Model: </pre>\n          <input class="form-control ng-pristine ng-untouched ng-valid" ng-model="asyncSelected" placeholder="Locations loaded via $http" type="text" typeahead="address for address in getLocation($viewValue)" typeahead-loading="loadingLocations"/>\n          <ul active="activeIdx" class="f-dropdown ng-isolate-scope" matches="matches" ng-style="{display: isOpen()&amp;&amp;\'block\' || \'none\', top: position.top+\'px\', left: position.left+\'px\'}" position="position" query="query" select="select(activeIdx)" style="display: none;" typeahead-popup="">\n           <!-- ngRepeat: match in matches -->\n          </ul>\n          <i class="glyphicon glyphicon-refresh ng-hide" ng-show="loadingLocations">\n          </i>\n          <h4>\n           Custom templates for results\n          </h4>\n          <pre class="ng-binding">Model: </pre>\n          <input class="form-control ng-pristine ng-untouched ng-valid" ng-model="customSelected" placeholder="Custom template" type="text" typeahead="state as state.name for state in statesWithFlags | filter:{name:$viewValue}" typeahead-template-url="customTemplate.html"/>\n          <ul active="activeIdx" class="f-dropdown ng-isolate-scope" matches="matches" ng-style="{display: isOpen()&amp;&amp;\'block\' || \'none\', top: position.top+\'px\', left: position.left+\'px\'}" position="position" query="query" select="select(activeIdx)" style="display: none;" template-url="customTemplate.html" typeahead-popup="">\n           <!-- ngRepeat: match in matches -->\n          </ul>\n         </div>\n        </div>\n        <div class="columns medium-6">\n         <p>\n          Typeahead is a AngularJS version of\n          <a href="http://getbootstrap.com/2.3.2/javascript.html#typeahead">\n           Bootstrap v2\'s typeahead plugin\n          </a>\n          .\nThis directive can be used to quickly create elegant typeaheads with any form text input.\n         </p>\n         <p>\n          It is very well integrated into AngularJS as it uses a subset of the\n          <a href="http://docs.angularjs.org/api/ng.directive:select">\n           select directive\n          </a>\n          syntax, which is very flexible. Supported expressions are:\n         </p>\n         <ul>\n          <li>\n           <em>\n            label\n           </em>\n           for\n           <em>\n            value\n           </em>\n           in\n           <em>\n            sourceArray\n           </em>\n          </li>\n          <li>\n           <em>\n            select\n           </em>\n           as\n           <em>\n            label\n           </em>\n           for\n           <em>\n            value\n           </em>\n           in\n           <em>\n            sourceArray\n           </em>\n          </li>\n         </ul>\n         <p>\n          The\n          <code>\n           sourceArray\n          </code>\n          expression can use a special\n          <code>\n           $viewValue\n          </code>\n          variable that corresponds to the value entered inside the input.\n         </p>\n         <p>\n          This directive works with promises, meaning you can retrieve matches using the\n          <code>\n           $http\n          </code>\n          service with minimal effort.\n         </p>\n         <p>\n          The typeahead directives provide several attributes:\n         </p>\n         <ul>\n          <li>\n           <p>\n            <code>\n             ng-model\n            </code>\n            <i class="glyphicon glyphicon-eye-open">\n            </i>\n            :\nAssignable angular expression to data-bind to\n           </p>\n          </li>\n          <li>\n           <p>\n            <code>\n             typeahead\n            </code>\n            <i class="glyphicon glyphicon-eye-open">\n            </i>\n            :\nComprehension Angular expression (see\n            <a href="http://docs.angularjs.org/api/ng.directive:select">\n             select directive\n            </a>\n            )\n           </p>\n          </li>\n          <li>\n           <p>\n            <code>\n             typeahead-editable\n            </code>\n            <i class="glyphicon glyphicon-eye-open">\n            </i>\n            <em>\n             (Defaults: true)\n            </em>\n            :\nShould it restrict model values to the ones selected from the popup only ?\n           </p>\n          </li>\n          <li>\n           <p>\n            <code>\n             typeahead-input-formatter\n            </code>\n            <i class="glyphicon glyphicon-eye-open">\n            </i>\n            <em>\n             (Defaults: undefined)\n            </em>\n            :\nFormat the ng-model result after selection\n           </p>\n          </li>\n          <li>\n           <p>\n            <code>\n             typeahead-loading\n            </code>\n            <i class="glyphicon glyphicon-eye-open">\n            </i>\n            <em>\n             (Defaults: angular.noop)\n            </em>\n            :\nBinding to a variable that indicates if matches are being retrieved asynchronously\n           </p>\n          </li>\n          <li>\n           <p>\n            <code>\n             typeahead-min-length\n            </code>\n            <i class="glyphicon glyphicon-eye-open">\n            </i>\n            <em>\n             (Defaults: 1)\n            </em>\n            :\nMinimal no of characters that needs to be entered before typeahead kicks-in\n           </p>\n          </li>\n          <li>\n           <p>\n            <code>\n             typeahead-on-select\n            </code>\n            <i class="glyphicon glyphicon-eye-open">\n            </i>\n            <em>\n             (Defaults: null)\n            </em>\n            :\nA callback executed when a match is selected\n           </p>\n          </li>\n          <li>\n           <p>\n            <code>\n             typeahead-template-url\n            </code>\n            <i class="glyphicon glyphicon-eye-open">\n            </i>\n            :\nSet custom item template\n           </p>\n          </li>\n          <li>\n           <p>\n            <code>\n             typeahead-wait-ms\n            </code>\n            <i class="glyphicon glyphicon-eye-open">\n            </i>\n            <em>\n             (Defaults: 0)\n            </em>\n            :\nMinimal wait time after last character typed before typeahead kicks-in\n           </p>\n          </li>\n         </ul>\n        </div>\n       </div>\n       <hr/>\n       <div class="row code">\n        <div class="columns medium-12 ng-scope" ng-controller="PlunkerCtrl">\n         <div class="right">\n          <button class="button secondary" id="plunk-btn" ng-click="edit(\'1.4.6\', \'5.5.2\', \'0.8.0\', \'typeahead\')">\n           <i class="fa fa-edit">\n           </i>\n           Edit in plunker\n          </button>\n         </div>\n         <div class="tabbable ng-isolate-scope">\n          <dl class="tabs" ng-class="{\'vertical\': vertical}" ng-transclude="">\n           <dd class="ng-isolate-scope active" heading="Markup" ng-class="{active: active}">\n            <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n             Markup\n            </a>\n           </dd>\n           <dd class="ng-isolate-scope" heading="JavaScript" ng-class="{active: active}">\n            <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n             JavaScript\n            </a>\n           </dd>\n          </dl>\n          <div class="tabs-content" ng-class="{\'vertical\': vertical}">\n           <!-- ngRepeat: tab in tabs -->\n           <div class="content ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs">\n            <div tab-content-transclude="tab">\n             <div class="ng-scope" plunker-content="markup">\n              <pre ng-non-bindable=""><code class="rainbow" data-language="html"><span class="source js embedded"><span class="support tag script">&lt;</span><span class="entity tag script">script</span> <span class="entity tag script">type</span>=<span class="string">"text/ng-template"</span> <span class="entity tag script">id</span>=<span class="string">"customTemplate.html"</span><span class="support tag script">&gt;</span>\n  <span class="keyword operator">&lt;</span>a<span class="keyword operator">&gt;</span>\n      <span class="keyword operator">&lt;</span>img ng<span class="keyword operator">-</span>src<span class="keyword operator">=</span><span class="string">"http://upload.wikimedia.org/wikipedia/commons/thumb/{{match.model.flag}}"</span> width<span class="keyword operator">=</span><span class="string">"16"</span><span class="keyword operator">&gt;</span>\n      <span class="keyword operator">&lt;</span>span bind<span class="keyword operator">-</span>html<span class="keyword operator">-</span>unsafe<span class="keyword operator">=</span><span class="string">"match.label | typeaheadHighlight:query"</span><span class="keyword operator">&gt;</span><span class="keyword operator">&lt;</span>/span<span class="keyword operator">&gt;</span>\n  <span class="keyword operator">&lt;</span>/a<span class="keyword operator">&gt;</span>\n<span class="support tag script">&lt;/</span><span class="entity tag script">script</span><span class="support tag script">&gt;</span></span>\n<span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">div</span></span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">\'</span><span class="string value">container-fluid</span><span class="string quote">\'</span> <span class="support attribute">ng-controller</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">TypeaheadCtrl</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">h4</span></span><span class="support tag cclose">&gt;</span>Static arrays<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">h4</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">pre</span></span><span class="support tag cclose">&gt;</span>Model: {{selected | json}}<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">pre</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">input</span></span> <span class="support attribute">type</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">text</span><span class="string quote">"</span> <span class="support attribute">ng-model</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">selected</span><span class="string quote">"</span> <span class="support attribute">typeahead</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">state for state in states | filter:$viewValue | limitTo:8</span><span class="string quote">"</span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">form-control</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">h4</span></span><span class="support tag cclose">&gt;</span>Asynchronous results<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">h4</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">pre</span></span><span class="support tag cclose">&gt;</span>Model: {{asyncSelected | json}}<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">pre</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">input</span></span> <span class="support attribute">type</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">text</span><span class="string quote">"</span> <span class="support attribute">ng-model</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">asyncSelected</span><span class="string quote">"</span> <span class="support attribute">placeholder</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">Locations loaded via $http</span><span class="string quote">"</span> <span class="support attribute">typeahead</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">address for address in getLocation($viewValue)</span><span class="string quote">"</span> <span class="support attribute">typeahead-loading</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">loadingLocations</span><span class="string quote">"</span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">form-control</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">i</span></span> <span class="support attribute">ng-show</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">loadingLocations</span><span class="string quote">"</span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">glyphicon glyphicon-refresh</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">i</span></span><span class="support tag cclose">&gt;</span>\n\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">h4</span></span><span class="support tag cclose">&gt;</span>Custom templates for results<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">h4</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">pre</span></span><span class="support tag cclose">&gt;</span>Model: {{customSelected | json}}<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">pre</span></span><span class="support tag cclose">&gt;</span>\n    <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">input</span></span> <span class="support attribute">type</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">text</span><span class="string quote">"</span> <span class="support attribute">ng-model</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">customSelected</span><span class="string quote">"</span> <span class="support attribute">placeholder</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">Custom template</span><span class="string quote">"</span> <span class="support attribute">typeahead</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">state as state.name for state in statesWithFlags | filter:{name:$viewValue}</span><span class="string quote">"</span> <span class="support attribute">typeahead-template-url</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">customTemplate.html</span><span class="string quote">"</span> <span class="support attribute">class</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">form-control</span><span class="string quote">"</span><span class="support tag cclose">&gt;</span>\n<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">div</span></span><span class="support tag cclose">&gt;</span>\n</code></pre>\n             </div>\n            </div>\n           </div>\n           <!-- end ngRepeat: tab in tabs -->\n           <div class="content ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs">\n            <div tab-content-transclude="tab">\n             <div class="ng-scope" plunker-content="javascript">\n              <pre ng-non-bindable=""><code class="rainbow" data-language="javascript">angular.<span class="function call">module</span>(<span class="string">\'foundationDemoApp\'</span>).<span class="function call">controller</span>(<span class="string">\'TypeaheadCtrl\'</span>, <span class="keyword">function</span>($scope, $http) {\n\n  $scope.selected <span class="keyword operator">=</span> undefined;\n  $scope.states <span class="keyword operator">=</span> [<span class="string">\'Alabama\'</span>, <span class="string">\'Alaska\'</span>, <span class="string">\'Arizona\'</span>, <span class="string">\'Arkansas\'</span>, <span class="string">\'California\'</span>, <span class="string">\'Colorado\'</span>, <span class="string">\'Connecticut\'</span>, <span class="string">\'Delaware\'</span>, <span class="string">\'Florida\'</span>, <span class="string">\'Georgia\'</span>, <span class="string">\'Hawaii\'</span>, <span class="string">\'Idaho\'</span>, <span class="string">\'Illinois\'</span>, <span class="string">\'Indiana\'</span>, <span class="string">\'Iowa\'</span>, <span class="string">\'Kansas\'</span>, <span class="string">\'Kentucky\'</span>, <span class="string">\'Louisiana\'</span>, <span class="string">\'Maine\'</span>, <span class="string">\'Maryland\'</span>, <span class="string">\'Massachusetts\'</span>, <span class="string">\'Michigan\'</span>, <span class="string">\'Minnesota\'</span>, <span class="string">\'Mississippi\'</span>, <span class="string">\'Missouri\'</span>, <span class="string">\'Montana\'</span>, <span class="string">\'Nebraska\'</span>, <span class="string">\'Nevada\'</span>, <span class="string">\'New Hampshire\'</span>, <span class="string">\'New Jersey\'</span>, <span class="string">\'New Mexico\'</span>, <span class="string">\'New York\'</span>, <span class="string">\'North Dakota\'</span>, <span class="string">\'North Carolina\'</span>, <span class="string">\'Ohio\'</span>, <span class="string">\'Oklahoma\'</span>, <span class="string">\'Oregon\'</span>, <span class="string">\'Pennsylvania\'</span>, <span class="string">\'Rhode Island\'</span>, <span class="string">\'South Carolina\'</span>, <span class="string">\'South Dakota\'</span>, <span class="string">\'Tennessee\'</span>, <span class="string">\'Texas\'</span>, <span class="string">\'Utah\'</span>, <span class="string">\'Vermont\'</span>, <span class="string">\'Virginia\'</span>, <span class="string">\'Washington\'</span>, <span class="string">\'West Virginia\'</span>, <span class="string">\'Wisconsin\'</span>, <span class="string">\'Wyoming\'</span>];\n  <span class="comment">// Any function returning a promise object can be used to load values asynchronously</span>\n<span class="entity function">  $scope.getLocation </span><span class="keyword operator">=</span> <span class="keyword">function</span>(val) {\n    <span class="keyword">return</span> $http.<span class="function call">get</span>(<span class="string">\'http://maps.googleapis.com/maps/api/geocode/json\'</span>, {\n      params: {\n        address: val,\n        sensor: <span class="constant language">false</span>\n      }\n    }).<span class="keyword">then</span>(<span class="keyword">function</span>(res){\n      <span class="keyword">var</span> addresses <span class="keyword operator">=</span> [];\n      angular.<span class="keyword">forEach</span>(res.data.results, <span class="keyword">function</span>(item){\n        addresses.<span class="support method">push</span>(item.formatted_address);\n      });\n      <span class="keyword">return</span> addresses;\n    });\n  };\n\n  $scope.statesWithFlags <span class="keyword operator">=</span> [{"name":<span class="string">"Alabama"</span>,"flag":"<span class="constant numeric">5</span><span class="string regexp"><span class="string regexp open">/</span>5c/Flag_of_Alabama.svg/45px-Flag_of_Alabama.svg.png"},{"name":"Alaska","flag":"e/e6/Flag_of_Alaska.svg/43px-Flag_of_Alaska.svg.png"},{"name":"Arizona","flag":"9/9d/Flag_of_Arizona.svg/45px-Flag_of_Arizona.svg.png"},{"name":"Arkansas","flag":"9/9d/Flag_of_Arkansas.svg/45px-Flag_of_Arkansas.svg.png"},{"name":"California","flag":"0/01/Flag_of_California.svg/45px-Flag_of_California.svg.png"},{"name":"Colorado","flag":"4/46/Flag_of_Colorado.svg/45px-Flag_of_Colorado.svg.png"},{"name":"Connecticut","flag":"9/96/Flag_of_Connecticut.svg/39px-Flag_of_Connecticut.svg.png"},{"name":"Delaware","flag":"c/c6/Flag_of_Delaware.svg/45px-Flag_of_Delaware.svg.png"},{"name":"Florida","flag":"f/f7/Flag_of_Florida.svg/45px-Flag_of_Florida.svg.png"},{"name":"Georgia","flag":"5/54/Flag_of_Georgia_%28U.S._state%29.svg/46px-Flag_of_Georgia_%28U.S._state%29.svg.png"},{"name":"Hawaii","flag":"e/ef/Flag_of_Hawaii.svg/46px-Flag_of_Hawaii.svg.png"},{"name":"Idaho","flag":"a/a4/Flag_of_Idaho.svg/38px-Flag_of_Idaho.svg.png"},{"name":"Illinois","flag":"0/01/Flag_of_Illinois.svg/46px-Flag_of_Illinois.svg.png"},{"name":"Indiana","flag":"a/ac/Flag_of_Indiana.svg/45px-Flag_of_Indiana.svg.png"},{"name":"Iowa","flag":"a/aa/Flag_of_Iowa.svg/44px-Flag_of_Iowa.svg.png"},{"name":"Kansas","flag":"d/da/Flag_of_Kansas.svg/46px-Flag_of_Kansas.svg.png"},{"name":"Kentucky","flag":"8/8d/Flag_of_Kentucky.svg/46px-Flag_of_Kentucky.svg.png"},{"name":"Louisiana","flag":"e/e0/Flag_of_Louisiana.svg/46px-Flag_of_Louisiana.svg.png"},{"name":"Maine","flag":"3/35/Flag_of_Maine.svg/45px-Flag_of_Maine.svg.png"},{"name":"Maryland","flag":"a/a0/Flag_of_Maryland.svg/45px-Flag_of_Maryland.svg.png"},{"name":"Massachusetts","flag":"f/f2/Flag_of_Massachusetts.svg/46px-Flag_of_Massachusetts.svg.png"},{"name":"Michigan","flag":"b/b5/Flag_of_Michigan.svg/45px-Flag_of_Michigan.svg.png"},{"name":"Minnesota","flag":"b/b9/Flag_of_Minnesota.svg/46px-Flag_of_Minnesota.svg.png"},{"name":"Mississippi","flag":"4/42/Flag_of_Mississippi.svg/45px-Flag_of_Mississippi.svg.png"},{"name":"Missouri","flag":"5/5a/Flag_of_Missouri.svg/46px-Flag_of_Missouri.svg.png"},{"name":"Montana","flag":"c/cb/Flag_of_Montana.svg/45px-Flag_of_Montana.svg.png"},{"name":"Nebraska","flag":"4/4d/Flag_of_Nebraska.svg/46px-Flag_of_Nebraska.svg.png"},{"name":"Nevada","flag":"f/f1/Flag_of_Nevada.svg/45px-Flag_of_Nevada.svg.png"},{"name":"New Hampshire","flag":"2/28/Flag_of_New_Hampshire.svg/45px-Flag_of_New_Hampshire.svg.png"},{"name":"New Jersey","flag":"9/92/Flag_of_New_Jersey.svg/45px-Flag_of_New_Jersey.svg.png"},{"name":"New Mexico","flag":"c/c3/Flag_of_New_Mexico.svg/45px-Flag_of_New_Mexico.svg.png"},{"name":"New York","flag":"1/1a/Flag_of_New_York.svg/46px-Flag_of_New_York.svg.png"},{"name":"North Carolina","flag":"b/bb/Flag_of_North_Carolina.svg/45px-Flag_of_North_Carolina.svg.png"},{"name":"North Dakota","flag":"e/ee/Flag_of_North_Dakota.svg/38px-Flag_of_North_Dakota.svg.png"},{"name":"Ohio","flag":"4/4c/Flag_of_Ohio.svg/46px-Flag_of_Ohio.svg.png"},{"name":"Oklahoma","flag":"6/6e/Flag_of_Oklahoma.svg/45px-Flag_of_Oklahoma.svg.png"},{"name":"Oregon","flag":"b/b9/Flag_of_Oregon.svg/46px-Flag_of_Oregon.svg.png"},{"name":"Pennsylvania","flag":"f/f7/Flag_of_Pennsylvania.svg/45px-Flag_of_Pennsylvania.svg.png"},{"name":"Rhode Island","flag":"f/f3/Flag_of_Rhode_Island.svg/32px-Flag_of_Rhode_Island.svg.png"},{"name":"South Carolina","flag":"6/69/Flag_of_South_Carolina.svg/45px-Flag_of_South_Carolina.svg.png"},{"name":"South Dakota","flag":"1/1a/Flag_of_South_Dakota.svg/46px-Flag_of_South_Dakota.svg.png"},{"name":"Tennessee","flag":"9/9e/Flag_of_Tennessee.svg/46px-Flag_of_Tennessee.svg.png"},{"name":"Texas","flag":"f/f7/Flag_of_Texas.svg/45px-Flag_of_Texas.svg.png"},{"name":"Utah","flag":"f/f6/Flag_of_Utah.svg/45px-Flag_of_Utah.svg.png"},{"name":"Vermont","flag":"4/49/Flag_of_Vermont.svg/46px-Flag_of_Vermont.svg.png"},{"name":"Virginia","flag":"4/47/Flag_of_Virginia.svg/44px-Flag_of_Virginia.svg.png"},{"name":"Washington","flag":"5/54/Flag_of_Washington.svg/46px-Flag_of_Washington.svg.png"},{"name":"West Virginia","flag":"2/22/Flag_of_West_Virginia.svg/46px-Flag_of_West_Virginia.svg.png"},{"name":"Wisconsin","flag":"2/22/Flag_of_Wisconsin.svg/45px-Flag_of_Wisconsin.svg.png"},{"name":"Wyoming","flag":"b/bc/Flag_of_Wyoming.svg<span class="string regexp cclose">/</span></span>43px<span class="keyword operator">-</span>Flag_of_Wyoming.svg.png"}];\n});</code></pre>\n             </div>\n            </div>\n           </div>\n           <!-- end ngRepeat: tab in tabs -->\n          </div>\n         </div>\n        </div>\n       </div>\n      </section>\n      <script>\n       angular.module(\'foundationDemoApp\').controller(\'TypeaheadCtrl\', function($scope, $http) {\n\n  $scope.selected = undefined;\n  $scope.states = [\'Alabama\', \'Alaska\', \'Arizona\', \'Arkansas\', \'California\', \'Colorado\', \'Connecticut\', \'Delaware\', \'Florida\', \'Georgia\', \'Hawaii\', \'Idaho\', \'Illinois\', \'Indiana\', \'Iowa\', \'Kansas\', \'Kentucky\', \'Louisiana\', \'Maine\', \'Maryland\', \'Massachusetts\', \'Michigan\', \'Minnesota\', \'Mississippi\', \'Missouri\', \'Montana\', \'Nebraska\', \'Nevada\', \'New Hampshire\', \'New Jersey\', \'New Mexico\', \'New York\', \'North Dakota\', \'North Carolina\', \'Ohio\', \'Oklahoma\', \'Oregon\', \'Pennsylvania\', \'Rhode Island\', \'South Carolina\', \'South Dakota\', \'Tennessee\', \'Texas\', \'Utah\', \'Vermont\', \'Virginia\', \'Washington\', \'West Virginia\', \'Wisconsin\', \'Wyoming\'];\n  // Any function returning a promise object can be used to load values asynchronously\n  $scope.getLocation = function(val) {\n    return $http.get(\'http://maps.googleapis.com/maps/api/geocode/json\', {\n      params: {\n        address: val,\n        sensor: false\n      }\n    }).then(function(res){\n      var addresses = [];\n      angular.forEach(res.data.results, function(item){\n        addresses.push(item.formatted_address);\n      });\n      return addresses;\n    });\n  };\n\n  $scope.statesWithFlags = [{"name":"Alabama","flag":"5/5c/Flag_of_Alabama.svg/45px-Flag_of_Alabama.svg.png"},{"name":"Alaska","flag":"e/e6/Flag_of_Alaska.svg/43px-Flag_of_Alaska.svg.png"},{"name":"Arizona","flag":"9/9d/Flag_of_Arizona.svg/45px-Flag_of_Arizona.svg.png"},{"name":"Arkansas","flag":"9/9d/Flag_of_Arkansas.svg/45px-Flag_of_Arkansas.svg.png"},{"name":"California","flag":"0/01/Flag_of_California.svg/45px-Flag_of_California.svg.png"},{"name":"Colorado","flag":"4/46/Flag_of_Colorado.svg/45px-Flag_of_Colorado.svg.png"},{"name":"Connecticut","flag":"9/96/Flag_of_Connecticut.svg/39px-Flag_of_Connecticut.svg.png"},{"name":"Delaware","flag":"c/c6/Flag_of_Delaware.svg/45px-Flag_of_Delaware.svg.png"},{"name":"Florida","flag":"f/f7/Flag_of_Florida.svg/45px-Flag_of_Florida.svg.png"},{"name":"Georgia","flag":"5/54/Flag_of_Georgia_%28U.S._state%29.svg/46px-Flag_of_Georgia_%28U.S._state%29.svg.png"},{"name":"Hawaii","flag":"e/ef/Flag_of_Hawaii.svg/46px-Flag_of_Hawaii.svg.png"},{"name":"Idaho","flag":"a/a4/Flag_of_Idaho.svg/38px-Flag_of_Idaho.svg.png"},{"name":"Illinois","flag":"0/01/Flag_of_Illinois.svg/46px-Flag_of_Illinois.svg.png"},{"name":"Indiana","flag":"a/ac/Flag_of_Indiana.svg/45px-Flag_of_Indiana.svg.png"},{"name":"Iowa","flag":"a/aa/Flag_of_Iowa.svg/44px-Flag_of_Iowa.svg.png"},{"name":"Kansas","flag":"d/da/Flag_of_Kansas.svg/46px-Flag_of_Kansas.svg.png"},{"name":"Kentucky","flag":"8/8d/Flag_of_Kentucky.svg/46px-Flag_of_Kentucky.svg.png"},{"name":"Louisiana","flag":"e/e0/Flag_of_Louisiana.svg/46px-Flag_of_Louisiana.svg.png"},{"name":"Maine","flag":"3/35/Flag_of_Maine.svg/45px-Flag_of_Maine.svg.png"},{"name":"Maryland","flag":"a/a0/Flag_of_Maryland.svg/45px-Flag_of_Maryland.svg.png"},{"name":"Massachusetts","flag":"f/f2/Flag_of_Massachusetts.svg/46px-Flag_of_Massachusetts.svg.png"},{"name":"Michigan","flag":"b/b5/Flag_of_Michigan.svg/45px-Flag_of_Michigan.svg.png"},{"name":"Minnesota","flag":"b/b9/Flag_of_Minnesota.svg/46px-Flag_of_Minnesota.svg.png"},{"name":"Mississippi","flag":"4/42/Flag_of_Mississippi.svg/45px-Flag_of_Mississippi.svg.png"},{"name":"Missouri","flag":"5/5a/Flag_of_Missouri.svg/46px-Flag_of_Missouri.svg.png"},{"name":"Montana","flag":"c/cb/Flag_of_Montana.svg/45px-Flag_of_Montana.svg.png"},{"name":"Nebraska","flag":"4/4d/Flag_of_Nebraska.svg/46px-Flag_of_Nebraska.svg.png"},{"name":"Nevada","flag":"f/f1/Flag_of_Nevada.svg/45px-Flag_of_Nevada.svg.png"},{"name":"New Hampshire","flag":"2/28/Flag_of_New_Hampshire.svg/45px-Flag_of_New_Hampshire.svg.png"},{"name":"New Jersey","flag":"9/92/Flag_of_New_Jersey.svg/45px-Flag_of_New_Jersey.svg.png"},{"name":"New Mexico","flag":"c/c3/Flag_of_New_Mexico.svg/45px-Flag_of_New_Mexico.svg.png"},{"name":"New York","flag":"1/1a/Flag_of_New_York.svg/46px-Flag_of_New_York.svg.png"},{"name":"North Carolina","flag":"b/bb/Flag_of_North_Carolina.svg/45px-Flag_of_North_Carolina.svg.png"},{"name":"North Dakota","flag":"e/ee/Flag_of_North_Dakota.svg/38px-Flag_of_North_Dakota.svg.png"},{"name":"Ohio","flag":"4/4c/Flag_of_Ohio.svg/46px-Flag_of_Ohio.svg.png"},{"name":"Oklahoma","flag":"6/6e/Flag_of_Oklahoma.svg/45px-Flag_of_Oklahoma.svg.png"},{"name":"Oregon","flag":"b/b9/Flag_of_Oregon.svg/46px-Flag_of_Oregon.svg.png"},{"name":"Pennsylvania","flag":"f/f7/Flag_of_Pennsylvania.svg/45px-Flag_of_Pennsylvania.svg.png"},{"name":"Rhode Island","flag":"f/f3/Flag_of_Rhode_Island.svg/32px-Flag_of_Rhode_Island.svg.png"},{"name":"South Carolina","flag":"6/69/Flag_of_South_Carolina.svg/45px-Flag_of_South_Carolina.svg.png"},{"name":"South Dakota","flag":"1/1a/Flag_of_South_Dakota.svg/46px-Flag_of_South_Dakota.svg.png"},{"name":"Tennessee","flag":"9/9e/Flag_of_Tennessee.svg/46px-Flag_of_Tennessee.svg.png"},{"name":"Texas","flag":"f/f7/Flag_of_Texas.svg/45px-Flag_of_Texas.svg.png"},{"name":"Utah","flag":"f/f6/Flag_of_Utah.svg/45px-Flag_of_Utah.svg.png"},{"name":"Vermont","flag":"4/49/Flag_of_Vermont.svg/46px-Flag_of_Vermont.svg.png"},{"name":"Virginia","flag":"4/47/Flag_of_Virginia.svg/44px-Flag_of_Virginia.svg.png"},{"name":"Washington","flag":"5/54/Flag_of_Washington.svg/46px-Flag_of_Washington.svg.png"},{"name":"West Virginia","flag":"2/22/Flag_of_West_Virginia.svg/46px-Flag_of_West_Virginia.svg.png"},{"name":"Wisconsin","flag":"2/22/Flag_of_Wisconsin.svg/45px-Flag_of_Wisconsin.svg.png"},{"name":"Wyoming","flag":"b/bc/Flag_of_Wyoming.svg/43px-Flag_of_Wyoming.svg.png"}];\n});\n      </script>\n      <section id="animations">\n       <div class="page-header">\n        <h1>\n         Animations\n        </h1>\n        <p>\n         Foundation includes animations in its JavaScript files but\n            the components above don\'t use Foundation\'s JavaScript.\n            You can use the official Angular module ngAnimate in your project\n            or simple CSS animations like the example below.\n        </p>\n       </div>\n       <div class="row">\n        <div class="columns medium-12">\n        </div>\n       </div>\n       <hr/>\n       <div class="row code">\n        <div class="columns medium-12">\n         <pre><code class="rainbow" data-language="css">.fade {\n  opacity: <span class="constant numeric">0</span>;\n  <span class="keyword operator">-</span>webkit<span class="keyword operator">-</span>transition: opacity .15s linear;\n          transition: opacity .15s linear;\n}\n.fade.in {\n  opacity: <span class="constant numeric">1</span>;\n}\n\n.reveal<span class="keyword operator">-</span>modal.fade {\n  <span class="keyword operator">-</span>webkit<span class="keyword operator">-</span>transition: <span class="keyword operator">-</span>webkit<span class="keyword operator">-</span>transform .3s ease<span class="keyword operator">-</span>out;\n     <span class="keyword operator">-</span>moz<span class="keyword operator">-</span>transition:    <span class="keyword operator">-</span>moz<span class="keyword operator">-</span>transform .3s ease<span class="keyword operator">-</span>out;\n       <span class="keyword operator">-</span>o<span class="keyword operator">-</span>transition:      <span class="keyword operator">-</span>o<span class="keyword operator">-</span>transform .3s ease<span class="keyword operator">-</span>out;\n          transition:         transform .3s ease<span class="keyword operator">-</span>out;\n  <span class="keyword operator">-</span>webkit<span class="keyword operator">-</span>transform: <span class="function call">translate</span>(<span class="constant numeric">0</span>, <span class="keyword operator">-</span><span class="constant numeric">25</span>%);\n      <span class="keyword operator">-</span>ms<span class="keyword operator">-</span>transform: <span class="function call">translate</span>(<span class="constant numeric">0</span>, <span class="keyword operator">-</span><span class="constant numeric">25</span>%);\n          transform: <span class="function call">translate</span>(<span class="constant numeric">0</span>, <span class="keyword operator">-</span><span class="constant numeric">25</span>%);\n}\n.reveal<span class="keyword operator">-</span>modal.in {\n  <span class="keyword operator">-</span>webkit<span class="keyword operator">-</span>transform: <span class="function call">translate</span>(<span class="constant numeric">0</span>, <span class="constant numeric">0</span>);\n      <span class="keyword operator">-</span>ms<span class="keyword operator">-</span>transform: <span class="function call">translate</span>(<span class="constant numeric">0</span>, <span class="constant numeric">0</span>);\n          transform: <span class="function call">translate</span>(<span class="constant numeric">0</span>, <span class="constant numeric">0</span>);\n}\n\n.reveal<span class="keyword operator">-</span>modal<span class="keyword operator">-</span>bg.fade {\n  filter: <span class="function call">alpha</span>(opacity<span class="keyword operator">=</span><span class="constant numeric">0</span>);\n  opacity: <span class="constant numeric">0</span>;\n}\n.reveal<span class="keyword operator">-</span>modal<span class="keyword operator">-</span>bg.in {\n  filter: <span class="function call">alpha</span>(opacity<span class="keyword operator">=</span><span class="constant numeric">50</span>);\n  opacity: .<span class="constant numeric">5</span>;\n}</code></pre>\n        </div>\n       </div>\n      </section>\n     </div>\n    </div>\n   </div>\n   <!-- /.container -->\n  </div>\n  <!-- /.main -->\n  <footer class="footer">\n   <div class="container">\n    <p>\n     Code licensed under\n     <a href="https://github.com/pineconellc/angular-foundation/blob/master/LICENSE">\n      MIT License\n     </a>\n     .\n    </p>\n    <p>\n     <a href="https://github.com/pineconellc/angular-foundation/issues?state=open">\n      Issues\n     </a>\n    </p>\n   </div>\n  </footer>\n  <script src="assets/rainbow.js">\n  </script>\n  <script src="assets/rainbow-generic.js">\n  </script>\n  <script src="assets/rainbow-javascript.js">\n  </script>\n  <script src="assets/rainbow-html.js">\n  </script>\n  <script id="downloadModal.html" type="text/ng-template">\n   <div class="modal-header"><h4 class="modal-title">Download Angular UI Bootstrap</h4></div>\n  <div class="modal-body">\n    <form class="form-horizontal">\n      <div class="form-group">\n        <label class="col-sm-3 control-label"><strong>Build</strong></label>\n        <div class="col-sm-9">\n          <span class="button-group">\n            <button type="button" class="button" ng-model="options.minified" btn-radio="true">Minified</button>\n            <button type="button" class="button" ng-model="options.minified" btn-radio="false">Uncompressed</button>\n          </span>\n          <small class="help-block">Use <b>Minified</b> version in your deployed application. <b>Uncompressed</b> source code is useful only for debugging and development purpose.</small>\n        </div>\n      </div>\n      <div class="form-group">\n        <label class="col-sm-3 control-label"><strong>Include Templates</strong></label>\n        <div class="col-sm-9">\n          <span class="button-group">\n            <button type="button" class="button" ng-model="options.tpls" btn-radio="true">Yes</button>\n            <button type="button" class="button" ng-model="options.tpls" btn-radio="false">No</button>\n          </span>\n          <small class="help-block">Whether you want to include the <i>default templates</i>, bundled with most of the directives. These templates are based on Bootstrap\'s markup and CSS.</small>\n        </div>\n      </div>\n      <div class="form-group">\n        <label class="col-sm-3 control-label"><strong>Bower</strong></label>\n        <div class="col-sm-9">\n          <small>If you are using Bower just run:</small>\n          <pre>bower install angular-foundation</pre>\n          <small class="help-block"><a href="http://bower.io/" target="_blank">Bower</a> is a package manager for the web.</small>\n        </div>\n      </div>\n    </form>\n  </div>\n  <div class="modal-footer">\n    <a class="button" ng-click="cancel()">Cancel</a>\n    <a class="button" ng-click="download(\'0.8.0\')"><i class="fa fa-download"></i> Download 0.8.0</a>\n  </div>\n  </script>\n  <script src="assets/smoothscroll-angular-custom.js">\n  </script>\n  <iframe style="display: none;">\n  </iframe>\n </body>\n</html>'