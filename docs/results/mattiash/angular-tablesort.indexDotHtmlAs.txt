b'<!DOCTYPE html>\n<html lang="en" xmlns="http://www.w3.org/1999/xhtml">\n <head>\n  <style type="text/css">\n   @charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide{display:none !important;}ng\\:form{display:block;}.ng-animate-block-transitions{transition:0s all!important;-webkit-transition:0s all!important;}.ng-hide-add-active,.ng-hide-remove{display:block!important;}\n  </style>\n  <meta charset="utf-8"/>\n  <meta content="width=device-width, initial-scale=1.0" name="viewport"/>\n  <meta content="" name="description"/>\n  <meta content="" name="author"/>\n  <link href="../../assets/ico/favicon.png" rel="shortcut icon"/>\n  <title>\n   angular-tablesort\n  </title>\n  <link href="http://netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css" rel="stylesheet"/>\n  <link href="http://netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap-theme.min.css" rel="stylesheet"/>\n  <link href="tablesort.css" rel="stylesheet"/>\n </head>\n <body>\n  <div class="navbar navbar-inverse navbar-fixed-top">\n   <div class="container">\n    <div class="navbar-header">\n     <button class="navbar-toggle" data-target=".navbar-collapse" data-toggle="collapse" type="button">\n      <span class="icon-bar">\n      </span>\n      <span class="icon-bar">\n      </span>\n      <span class="icon-bar">\n      </span>\n     </button>\n     <a class="navbar-brand" href="#">\n      angular-tablesort\n     </a>\n    </div>\n   </div>\n  </div>\n  <!-- Main jumbotron for a primary marketing message or call to action -->\n  <div class="jumbotron">\n   <div class="container">\n    <h1>\n     AngularJS tablesort made easy\n    </h1>\n    <p>\n     Make it possible to sort your AngularJS tables without\n            writing any javascript code.\n    </p>\n   </div>\n  </div>\n  <div class="container">\n   <div class="row">\n    <div class="col-lg-12">\n     <h2>\n      Introduction\n     </h2>\n     <p>\n      I use tables a lot to present data to the user. Most of the time, I want to allow the user to sort the\n                table on the data in the columns by clicking on the table headers. When I used jQuery as the basis for\n                my web-pages, I used\n      <a href="http://tablesorter.com/docs/">\n       jQuery tablesorter\n      </a>\n      to make most of the\n                tables sortable. For simple tables, this meant adding one line of javascript to tell jQuery tablesorter\n                which tables to sort.\n     </p>\n     <p>\n      With AngularJS, it is fairly easy to make tables sortable, but I wanted something as simple as jQuery\n                tablesorter. This is why I wrote angular-tablesort.\n     </p>\n     <h2>\n      Features\n     </h2>\n     <ul>\n      <li>\n       Sort by a column by clicking the header for that column\n      </li>\n      <li>\n       Toggle between ascending and descending order by clicking the header again\n      </li>\n      <li>\n       Sort by multiple columns by holding shift while clicking\n      </li>\n      <li>\n       The sort expression is decoupled from the content of the cells. This allows you to sort for example\n                    dates in correct order\n      </li>\n      <li>\n       Add a default row to empty tables to signal that the table shall be empty\n      </li>\n     </ul>\n     <h2>\n      Sample table\n     </h2>\n     <div class="ng-scope" ng-app="myApp">\n      <div class="ng-scope" ng-controller="tableTestCtrl">\n       <table class="table ng-scope" ts-wrapper="">\n        <thead>\n         <tr>\n          <th class="tablesort-sortable" ts-criteria="Id">\n           Id\n          </th>\n          <th class="tablesort-sortable tablesort-asc" ts-criteria="Name|lowercase" ts-default="">\n           Name\n          </th>\n          <th class="tablesort-sortable" ts-criteria="Price|parseFloat">\n           Price\n          </th>\n          <th class="tablesort-sortable" ts-criteria="Quantity|parseInt">\n           Quantity\n          </th>\n         </tr>\n        </thead>\n        <tbody>\n         <tr class=" showIfLast" ng-repeat="item in items track by item.Id" ts-repeat="">\n          <td colspan="4">\n          </td>\n         </tr>\n         <!-- ngRepeat: item in items | tablesortOrderBy:sortFun track by item.Id -->\n         <tr class="ng-scope" ng-repeat="item in items | tablesortOrderBy:sortFun track by item.Id">\n          <td class="ng-binding">\n           01\n          </td>\n          <td class="ng-binding">\n           A\n          </td>\n          <td class="ng-binding">\n           $1.00\n          </td>\n          <td class="ng-binding">\n           1\n          </td>\n         </tr>\n         <!-- end ngRepeat: item in items | tablesortOrderBy:sortFun track by item.Id -->\n         <tr class="ng-scope" ng-repeat="item in items | tablesortOrderBy:sortFun track by item.Id">\n          <td class="ng-binding">\n           03\n          </td>\n          <td class="ng-binding">\n           a\n          </td>\n          <td class="ng-binding">\n           $9.00\n          </td>\n          <td class="ng-binding">\n           2\n          </td>\n         </tr>\n         <!-- end ngRepeat: item in items | tablesortOrderBy:sortFun track by item.Id -->\n         <tr class="ng-scope" ng-repeat="item in items | tablesortOrderBy:sortFun track by item.Id">\n          <td class="ng-binding">\n           02\n          </td>\n          <td class="ng-binding">\n           B\n          </td>\n          <td class="ng-binding">\n           $10.00\n          </td>\n          <td class="ng-binding">\n           1\n          </td>\n         </tr>\n         <!-- end ngRepeat: item in items | tablesortOrderBy:sortFun track by item.Id -->\n         <tr class="ng-scope" ng-repeat="item in items | tablesortOrderBy:sortFun track by item.Id">\n          <td class="ng-binding">\n           06\n          </td>\n          <td class="ng-binding">\n           b\n          </td>\n          <td class="ng-binding">\n           $100.00\n          </td>\n          <td class="ng-binding">\n           2\n          </td>\n         </tr>\n         <!-- end ngRepeat: item in items | tablesortOrderBy:sortFun track by item.Id -->\n         <tr class="ng-scope" ng-repeat="item in items | tablesortOrderBy:sortFun track by item.Id">\n          <td class="ng-binding">\n           04\n          </td>\n          <td class="ng-binding">\n           C\n          </td>\n          <td class="ng-binding">\n           $9.50\n          </td>\n          <td class="ng-binding">\n           10\n          </td>\n         </tr>\n         <!-- end ngRepeat: item in items | tablesortOrderBy:sortFun track by item.Id -->\n         <tr class="ng-scope" ng-repeat="item in items | tablesortOrderBy:sortFun track by item.Id">\n          <td class="ng-binding">\n           05\n          </td>\n          <td class="ng-binding">\n           c\n          </td>\n          <td class="ng-binding">\n           $1.20\n          </td>\n          <td class="ng-binding">\n           2\n          </td>\n         </tr>\n         <!-- end ngRepeat: item in items | tablesortOrderBy:sortFun track by item.Id -->\n        </tbody>\n       </table>\n       <br/>\n      </div>\n     </div>\n     <h2>\n      Usage\n     </h2>\n     <p>\n      The table shown above was generated by the following code:\n     </p>\n     <pre>&lt;table class="table" <b>ts-wrapper</b>&gt;\n  &lt;thead&gt;\n    &lt;tr&gt;\n      &lt;th <b>ts-criteria</b>="Id"&gt;Id&lt;/th&gt;\n      &lt;th <b>ts-criteria</b>="Name|lowercase" <b>ts-default</b>&gt;Name&lt;/th&gt;\n      &lt;th <b>ts-criteria</b>="Price|parseFloat"&gt;Price&lt;/th&gt;\n      &lt;th <b>ts-criteria</b>="Quantity|parseInt"&gt;Quantity&lt;/th&gt;\n    &lt;/tr&gt;\n  &lt;/thead&gt;\n  &lt;tbody&gt;\n    &lt;tr ng-repeat="item in items track by item.Id" <b>ts-repeat</b>&gt;\n      &lt;td&gt;{{item.Name}}&lt;/td&gt;\n      &lt;td&gt;{{item.Price | currency}}&lt;/td&gt;\n      &lt;td&gt;{{item.Quantity}}&lt;/td&gt;\n    &lt;/tr&gt;\n  &lt;/tbody&gt;\n&lt;/table&gt;\n</pre>\n     <p>\n      The\n      <code>\n       ts-wrapper\n      </code>\n      attribute must be set on\n                element that surrounds both the headings and the ng-repeat\n                statement.\n     </p>\n     <p>\n      The\n      <code>\n       ts-criteria\n      </code>\n      attribute tells tablesort\n                which expression it should sort on when that element is\n                clicked. Normally, the ts-criteria is the same as the\n                expression that is shown in the column, but it doesn\'t\n                have to be. The ts-criteria can also be filtered using the\n                normal AngularJS filter syntax. Tablesort includes two\n                filters parseInt and parseFloat that use the javascript\n                functions of the same name, but any filter can be\n                used.\n     </p>\n     <p>\n      The\n      <code>\n       ts-default\n      </code>\n      attribute can be set on one\n                or more columns to sort on them by default. To sort in descending order,\n                set\n      <code>\n       ts-default\n      </code>\n      to "descending"\n     </p>\n     <p>\n      The\n      <code>\n       ts-repeat\n      </code>\n      attribute must be set on the\n                element with ng-repeat.\n     </p>\n     <p>\n      You must also make sure that your app depends on\n      <code>\n       tableSort\n      </code>\n      :\n     </p>\n     <pre>var myApp = angular.module( \'myApp\', [\'tableSort\' ] );\n</pre>\n     <h2>\n      CSS\n     </h2>\n     <p>\n      All table headings that can be sorted on is styled with\n                css-class\n      <code>\n       tablesort-sortable\n      </code>\n      . The table\n                headings that the table is currently sorted on is styled\n                with\n      <code>\n       tablesort-asc\n      </code>\n      or\n      <code>\n       tablesort-desc\n      </code>\n      classes depending on the\n                sort-direction. A stylesheet is included to show that it\n                works, but you probably want to build your own.\n     </p>\n     <p>\n      The content and look of the default data for empty tables\n                is controlled via css. It is inserted as one empty\n      <code>\n       &lt;td&gt;\n      </code>\n      spanning all columns and placed inside a\n      <code>\n       &lt;tr&gt;\n      </code>\n      with class\n      <code>\n       showIfLast\n      </code>\n      . The\n      <code>\n       &lt;tr&gt;\n      </code>\n      is placed at the top of\n                each table. A sample style for showIfLast can be found in\n      <code>\n       <a href="tablesort.css">\n        tablesort.css\n       </a>\n      </code>\n     </p>\n     <h2>\n      License\n     </h2>\n     <pre>The MIT License\n\nCopyright (c) 2013 Mattias Holmlund, <a href="http://www.holmlund.se/mattias">http://www.holmlund.se/mattias</a>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the "Software"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n</pre>\n     <h2>\n      Download\n     </h2>\n     <p>\n      The code is available\n                on\n      <a href="https://github.com/mattiash/angular-tablesort">\n       github\n      </a>\n      .\n     </p>\n     <h2>\n      bower\n     </h2>\n     <pre>bower install angular-tablesort\n</pre>\n    </div>\n   </div>\n  </div>\n  <!-- /container -->\n  <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.2.22/angular.min.js">\n  </script>\n  <script src="js/angular-tablesort.js">\n  </script>\n  <script>\n   var myApp = angular.module(\'myApp\', [\'tableSort\' ]);\n\n    function tableTestCtrl($scope) {\n        $scope.items = [\n            {Id: "01", Name: "A", Price: "1.00", Quantity: "1"},\n            {Id: "02", Name: "B", Price: "10.00", Quantity: "1"},\n            {Id: "04", Name: "C", Price: "9.50", Quantity: "10"},\n            {Id: "03", Name: "a", Price: "9.00", Quantity: "2"},\n            {Id: "06", Name: "b", Price: "100.00", Quantity: "2"},\n            {Id: "05", Name: "c", Price: "1.20", Quantity: "2"}\n        ];\n    }\n  </script>\n </body>\n</html>'b'<!DOCTYPE html>\n<html lang="en" xmlns="http://www.w3.org/1999/xhtml">\n <head>\n  <style type="text/css">\n   @charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide{display:none !important;}ng\\:form{display:block;}.ng-animate-block-transitions{transition:0s all!important;-webkit-transition:0s all!important;}.ng-hide-add-active,.ng-hide-remove{display:block!important;}\n  </style>\n  <meta charset="utf-8"/>\n  <meta content="width=device-width, initial-scale=1.0" name="viewport"/>\n  <meta content="" name="description"/>\n  <meta content="" name="author"/>\n  <link href="../../assets/ico/favicon.png" rel="shortcut icon"/>\n  <title>\n   angular-tablesort\n  </title>\n  <link href="http://netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css" rel="stylesheet"/>\n  <link href="http://netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap-theme.min.css" rel="stylesheet"/>\n  <link href="tablesort.css" rel="stylesheet"/>\n </head>\n <body>\n  <div class="navbar navbar-inverse navbar-fixed-top">\n   <div class="container">\n    <div class="navbar-header">\n     <button class="navbar-toggle" data-target=".navbar-collapse" data-toggle="collapse" type="button">\n      <span class="icon-bar">\n      </span>\n      <span class="icon-bar">\n      </span>\n      <span class="icon-bar">\n      </span>\n     </button>\n     <a class="navbar-brand" href="#">\n      angular-tablesort\n     </a>\n    </div>\n   </div>\n  </div>\n  <!-- Main jumbotron for a primary marketing message or call to action -->\n  <div class="jumbotron">\n   <div class="container">\n    <h1>\n     AngularJS tablesort made easy\n    </h1>\n    <p>\n     Make it possible to sort your AngularJS tables without\n            writing any javascript code.\n    </p>\n   </div>\n  </div>\n  <div class="container">\n   <div class="row">\n    <div class="col-lg-12">\n     <h2>\n      Introduction\n     </h2>\n     <p>\n      I use tables a lot to present data to the user. Most of the time, I want to allow the user to sort the\n                table on the data in the columns by clicking on the table headers. When I used jQuery as the basis for\n                my web-pages, I used\n      <a href="http://tablesorter.com/docs/">\n       jQuery tablesorter\n      </a>\n      to make most of the\n                tables sortable. For simple tables, this meant adding one line of javascript to tell jQuery tablesorter\n                which tables to sort.\n     </p>\n     <p>\n      With AngularJS, it is fairly easy to make tables sortable, but I wanted something as simple as jQuery\n                tablesorter. This is why I wrote angular-tablesort.\n     </p>\n     <h2>\n      Features\n     </h2>\n     <ul>\n      <li>\n       Sort by a column by clicking the header for that column\n      </li>\n      <li>\n       Toggle between ascending and descending order by clicking the header again\n      </li>\n      <li>\n       Sort by multiple columns by holding shift while clicking\n      </li>\n      <li>\n       The sort expression is decoupled from the content of the cells. This allows you to sort for example\n                    dates in correct order\n      </li>\n      <li>\n       Add a default row to empty tables to signal that the table shall be empty\n      </li>\n     </ul>\n     <h2>\n      Sample table\n     </h2>\n     <div class="ng-scope" ng-app="myApp">\n      <div class="ng-scope" ng-controller="tableTestCtrl">\n       <table class="table ng-scope" ts-wrapper="">\n        <thead>\n         <tr>\n          <th class="tablesort-sortable" ts-criteria="Id">\n           Id\n          </th>\n          <th class="tablesort-sortable tablesort-asc" ts-criteria="Name|lowercase" ts-default="">\n           Name\n          </th>\n          <th class="tablesort-sortable" ts-criteria="Price|parseFloat">\n           Price\n          </th>\n          <th class="tablesort-sortable" ts-criteria="Quantity|parseInt">\n           Quantity\n          </th>\n         </tr>\n        </thead>\n        <tbody>\n         <tr class=" showIfLast" ng-repeat="item in items track by item.Id" ts-repeat="">\n          <td colspan="4">\n          </td>\n         </tr>\n         <!-- ngRepeat: item in items | tablesortOrderBy:sortFun track by item.Id -->\n         <tr class="ng-scope" ng-repeat="item in items | tablesortOrderBy:sortFun track by item.Id">\n          <td class="ng-binding">\n           01\n          </td>\n          <td class="ng-binding">\n           A\n          </td>\n          <td class="ng-binding">\n           $1.00\n          </td>\n          <td class="ng-binding">\n           1\n          </td>\n         </tr>\n         <!-- end ngRepeat: item in items | tablesortOrderBy:sortFun track by item.Id -->\n         <tr class="ng-scope" ng-repeat="item in items | tablesortOrderBy:sortFun track by item.Id">\n          <td class="ng-binding">\n           03\n          </td>\n          <td class="ng-binding">\n           a\n          </td>\n          <td class="ng-binding">\n           $9.00\n          </td>\n          <td class="ng-binding">\n           2\n          </td>\n         </tr>\n         <!-- end ngRepeat: item in items | tablesortOrderBy:sortFun track by item.Id -->\n         <tr class="ng-scope" ng-repeat="item in items | tablesortOrderBy:sortFun track by item.Id">\n          <td class="ng-binding">\n           02\n          </td>\n          <td class="ng-binding">\n           B\n          </td>\n          <td class="ng-binding">\n           $10.00\n          </td>\n          <td class="ng-binding">\n           1\n          </td>\n         </tr>\n         <!-- end ngRepeat: item in items | tablesortOrderBy:sortFun track by item.Id -->\n         <tr class="ng-scope" ng-repeat="item in items | tablesortOrderBy:sortFun track by item.Id">\n          <td class="ng-binding">\n           06\n          </td>\n          <td class="ng-binding">\n           b\n          </td>\n          <td class="ng-binding">\n           $100.00\n          </td>\n          <td class="ng-binding">\n           2\n          </td>\n         </tr>\n         <!-- end ngRepeat: item in items | tablesortOrderBy:sortFun track by item.Id -->\n         <tr class="ng-scope" ng-repeat="item in items | tablesortOrderBy:sortFun track by item.Id">\n          <td class="ng-binding">\n           04\n          </td>\n          <td class="ng-binding">\n           C\n          </td>\n          <td class="ng-binding">\n           $9.50\n          </td>\n          <td class="ng-binding">\n           10\n          </td>\n         </tr>\n         <!-- end ngRepeat: item in items | tablesortOrderBy:sortFun track by item.Id -->\n         <tr class="ng-scope" ng-repeat="item in items | tablesortOrderBy:sortFun track by item.Id">\n          <td class="ng-binding">\n           05\n          </td>\n          <td class="ng-binding">\n           c\n          </td>\n          <td class="ng-binding">\n           $1.20\n          </td>\n          <td class="ng-binding">\n           2\n          </td>\n         </tr>\n         <!-- end ngRepeat: item in items | tablesortOrderBy:sortFun track by item.Id -->\n        </tbody>\n       </table>\n       <br/>\n      </div>\n     </div>\n     <h2>\n      Usage\n     </h2>\n     <p>\n      The table shown above was generated by the following code:\n     </p>\n     <pre>&lt;table class="table" <b>ts-wrapper</b>&gt;\n  &lt;thead&gt;\n    &lt;tr&gt;\n      &lt;th <b>ts-criteria</b>="Id"&gt;Id&lt;/th&gt;\n      &lt;th <b>ts-criteria</b>="Name|lowercase" <b>ts-default</b>&gt;Name&lt;/th&gt;\n      &lt;th <b>ts-criteria</b>="Price|parseFloat"&gt;Price&lt;/th&gt;\n      &lt;th <b>ts-criteria</b>="Quantity|parseInt"&gt;Quantity&lt;/th&gt;\n    &lt;/tr&gt;\n  &lt;/thead&gt;\n  &lt;tbody&gt;\n    &lt;tr ng-repeat="item in items track by item.Id" <b>ts-repeat</b>&gt;\n      &lt;td&gt;{{item.Name}}&lt;/td&gt;\n      &lt;td&gt;{{item.Price | currency}}&lt;/td&gt;\n      &lt;td&gt;{{item.Quantity}}&lt;/td&gt;\n    &lt;/tr&gt;\n  &lt;/tbody&gt;\n&lt;/table&gt;\n</pre>\n     <p>\n      The\n      <code>\n       ts-wrapper\n      </code>\n      attribute must be set on\n                element that surrounds both the headings and the ng-repeat\n                statement.\n     </p>\n     <p>\n      The\n      <code>\n       ts-criteria\n      </code>\n      attribute tells tablesort\n                which expression it should sort on when that element is\n                clicked. Normally, the ts-criteria is the same as the\n                expression that is shown in the column, but it doesn\'t\n                have to be. The ts-criteria can also be filtered using the\n                normal AngularJS filter syntax. Tablesort includes two\n                filters parseInt and parseFloat that use the javascript\n                functions of the same name, but any filter can be\n                used.\n     </p>\n     <p>\n      The\n      <code>\n       ts-default\n      </code>\n      attribute can be set on one\n                or more columns to sort on them by default. To sort in descending order,\n                set\n      <code>\n       ts-default\n      </code>\n      to "descending"\n     </p>\n     <p>\n      The\n      <code>\n       ts-repeat\n      </code>\n      attribute must be set on the\n                element with ng-repeat.\n     </p>\n     <p>\n      You must also make sure that your app depends on\n      <code>\n       tableSort\n      </code>\n      :\n     </p>\n     <pre>var myApp = angular.module( \'myApp\', [\'tableSort\' ] );\n</pre>\n     <h2>\n      CSS\n     </h2>\n     <p>\n      All table headings that can be sorted on is styled with\n                css-class\n      <code>\n       tablesort-sortable\n      </code>\n      . The table\n                headings that the table is currently sorted on is styled\n                with\n      <code>\n       tablesort-asc\n      </code>\n      or\n      <code>\n       tablesort-desc\n      </code>\n      classes depending on the\n                sort-direction. A stylesheet is included to show that it\n                works, but you probably want to build your own.\n     </p>\n     <p>\n      The content and look of the default data for empty tables\n                is controlled via css. It is inserted as one empty\n      <code>\n       &lt;td&gt;\n      </code>\n      spanning all columns and placed inside a\n      <code>\n       &lt;tr&gt;\n      </code>\n      with class\n      <code>\n       showIfLast\n      </code>\n      . The\n      <code>\n       &lt;tr&gt;\n      </code>\n      is placed at the top of\n                each table. A sample style for showIfLast can be found in\n      <code>\n       <a href="tablesort.css">\n        tablesort.css\n       </a>\n      </code>\n     </p>\n     <h2>\n      License\n     </h2>\n     <pre>The MIT License\n\nCopyright (c) 2013 Mattias Holmlund, <a href="http://www.holmlund.se/mattias">http://www.holmlund.se/mattias</a>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the "Software"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n</pre>\n     <h2>\n      Download\n     </h2>\n     <p>\n      The code is available\n                on\n      <a href="https://github.com/mattiash/angular-tablesort">\n       github\n      </a>\n      .\n     </p>\n     <h2>\n      bower\n     </h2>\n     <pre>bower install angular-tablesort\n</pre>\n    </div>\n   </div>\n  </div>\n  <!-- /container -->\n  <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.2.22/angular.min.js">\n  </script>\n  <script src="js/angular-tablesort.js">\n  </script>\n  <script>\n   var myApp = angular.module(\'myApp\', [\'tableSort\' ]);\n\n    function tableTestCtrl($scope) {\n        $scope.items = [\n            {Id: "01", Name: "A", Price: "1.00", Quantity: "1"},\n            {Id: "02", Name: "B", Price: "10.00", Quantity: "1"},\n            {Id: "04", Name: "C", Price: "9.50", Quantity: "10"},\n            {Id: "03", Name: "a", Price: "9.00", Quantity: "2"},\n            {Id: "06", Name: "b", Price: "100.00", Quantity: "2"},\n            {Id: "05", Name: "c", Price: "1.20", Quantity: "2"}\n        ];\n    }\n  </script>\n </body>\n</html>'