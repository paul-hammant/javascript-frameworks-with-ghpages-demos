b'<html lang="en">\n <head>\n  <style type="text/css">\n   @charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}\n  </style>\n  <meta charset="utf-8"/>\n  <title>\n   Drag &amp; Drop Lists for angular.js\n  </title>\n  <!-- jQuery is not required -->\n  <!-- <script src="//code.jquery.com/jquery-1.11.0.min.js"></script> -->\n  <!-- angular is the only dependency! -->\n  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.4.3/angular.min.js">\n  </script>\n  <script src="../angular-drag-and-drop-lists.js">\n  </script>\n  <!-- Stuff that is only required in this demo (no need to copy) -->\n  <link href="framework/vendor/bootstrap.min.css" rel="stylesheet"/>\n  <link href="framework/vendor/bootstrap-theme.min.css" rel="stylesheet"/>\n  <link href="framework/vendor/prism.css" rel="stylesheet"/>\n  <link href="framework/demo-framework.css" rel="stylesheet"/>\n  <link href="simple/simple.css" rel="stylesheet" type="text/css"/>\n  <link href="nested/nested.css" rel="stylesheet" type="text/css"/>\n  <link href="types/types.css" rel="stylesheet" type="text/css"/>\n  <link href="advanced/advanced.css" rel="stylesheet" type="text/css"/>\n  <link href="multi/multi.css" rel="stylesheet" type="text/css"/>\n  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.2.16/angular-route.min.js">\n  </script>\n  <script src="framework/vendor/prism.js">\n  </script>\n  <script src="framework/demo-framework.js">\n  </script>\n  <script src="framework/view-source.js">\n  </script>\n  <script src="simple/simple.js">\n  </script>\n  <script src="nested/nested.js">\n  </script>\n  <script src="types/types.js">\n  </script>\n  <script src="advanced/advanced.js">\n  </script>\n  <script src="multi/multi.js">\n  </script>\n </head>\n <body class="ng-scope" ng-app="demo">\n  <div class="navbar navbar-default navbar-fixed-top" role="navigation">\n   <div class="container">\n    <div class="navbar-header">\n     <a class="navbar-brand" href="#">\n      angular-drag-and-drop-lists\n     </a>\n    </div>\n    <div class="navbar-collapse collapse">\n     <ul class="nav navbar-nav" navigation="">\n      <!-- ngRepeat: option in options -->\n      <li class="ng-scope active" ng-class="{active: isActive(option)}" ng-repeat="option in options">\n       <a class="ng-binding" href="#/nested" ng-href="#/nested">\n        Nested Containers\n       </a>\n      </li>\n      <!-- end ngRepeat: option in options -->\n      <li class="ng-scope" ng-class="{active: isActive(option)}" ng-repeat="option in options">\n       <a class="ng-binding" href="#/simple" ng-href="#/simple">\n        Simple Demo\n       </a>\n      </li>\n      <!-- end ngRepeat: option in options -->\n      <li class="ng-scope" ng-class="{active: isActive(option)}" ng-repeat="option in options">\n       <a class="ng-binding" href="#/types" ng-href="#/types">\n        Item Types\n       </a>\n      </li>\n      <!-- end ngRepeat: option in options -->\n      <li class="ng-scope" ng-class="{active: isActive(option)}" ng-repeat="option in options">\n       <a class="ng-binding" href="#/advanced" ng-href="#/advanced">\n        Advanced Demo\n       </a>\n      </li>\n      <!-- end ngRepeat: option in options -->\n      <li class="ng-scope" ng-class="{active: isActive(option)}" ng-repeat="option in options">\n       <a class="ng-binding" href="#/multi" ng-href="#/multi">\n        Multiselection\n       </a>\n      </li>\n      <!-- end ngRepeat: option in options -->\n      <li class="ng-scope" ng-class="{active: isActive(option)}" ng-repeat="option in options">\n       <a class="ng-binding" href="https://github.com/marceljuenemann/angular-drag-and-drop-lists" ng-href="https://github.com/marceljuenemann/angular-drag-and-drop-lists">\n        Github\n       </a>\n      </li>\n      <!-- end ngRepeat: option in options -->\n     </ul>\n    </div>\n   </div>\n  </div>\n  <div class="container">\n   <div class="jumbotron">\n    <h1>\n     Angular drag &amp; drop with HTML5\n    </h1>\n    <p>\n     Directives for modifying lists with the HTML5 drag &amp; drop API.\n                Supports nested lists for building trees and other fancy structures.\n                No boilerplate code, no jQuery, just a few KB!\n    </p>\n    <p>\n     <a class="btn btn-success btn-lg" href="https://github.com/marceljuenemann/angular-drag-and-drop-lists" role="button">\n      Code on github \xc2\xbb\n     </a>\n    </p>\n   </div>\n   <!-- ngView:  -->\n   <div class="ng-scope" ng-view="">\n    <h1 class="ng-scope">\n     Demo: Nested Containers\n    </h1>\n    <div class="alert alert-success ng-scope">\n     <strong>\n      Instructions:\n     </strong>\n     In this demo you can not only drag &amp; drop list items, but also containers, which\n    can contain list items or other containers themselves. To create new elements, use the toolbar on the right.\n    If this is more than you need, check out the\n     <a href="#/simple">\n      simple list demo\n     </a>\n    </div>\n    <!-- ngInclude: \'nested/nested.html\' -->\n    <div class="nestedDemo row ng-scope" ng-include="\'nested/nested.html\'">\n     <!-- Markup for lists inside the dropzone. It\'s inside a seperate template\n     because it will be used recursively. The dnd-list directive enables\n     to drop elements into the referenced array. The dnd-draggable directive\n     makes an element draggable and will transfer the object that was\n     assigned to it. If an element was dragged away, you have to remove\n     it from the original list yourself using the dnd-moved attribute -->\n     <script class="ng-scope" id="list.html" type="text/ng-template">\n      <ul dnd-list="list">\n        <li ng-repeat="item in list"\n            dnd-draggable="item"\n            dnd-effect-allowed="move"\n            dnd-moved="list.splice($index, 1)"\n            dnd-selected="models.selected = item"\n            ng-class="{selected: models.selected === item}"\n            ng-include="item.type + \'.html\'">\n        </li>\n    </ul>\n     </script>\n     <!-- This template is responsible for rendering a container element. It uses\n     the above list template to render each container column -->\n     <script class="ng-scope" id="container.html" type="text/ng-template">\n      <div class="container-element box box-blue">\n        <h3>Container {{item.id}}</h3>\n        <div class="column" ng-repeat="list in item.columns" ng-include="\'list.html\'"></div>\n        <div class="clearfix"></div>\n    </div>\n     </script>\n     <!-- Template for a normal list item -->\n     <script class="ng-scope" id="item.html" type="text/ng-template">\n      <div class="item">Item {{item.id}}</div>\n     </script>\n     <!-- Main area with dropzones and source code -->\n     <div class="col-md-10 ng-scope">\n      <div class="row">\n       <!-- ngRepeat: (zone, list) in models.dropzones -->\n       <div class="col-md-6 ng-scope" ng-repeat="(zone, list) in models.dropzones">\n        <div class="dropzone box box-yellow">\n         <!-- The dropzone also uses the list template -->\n         <h3 class="ng-binding">\n          Dropzone A\n         </h3>\n         <!-- ngInclude: \'list.html\' -->\n         <div class="ng-scope" ng-include="\'list.html\'">\n          <ul class="ng-scope" dnd-list="list">\n           <!-- ngRepeat: item in list -->\n           <!-- ngInclude: item.type + \'.html\' -->\n           <li class="ng-scope" dnd-draggable="item" dnd-effect-allowed="move" dnd-moved="list.splice($index, 1)" dnd-selected="models.selected = item" draggable="true" ng-class="{selected: models.selected === item}" ng-include="item.type + \'.html\'" ng-repeat="item in list">\n            <div class="container-element box box-blue ng-scope">\n             <h3 class="ng-binding">\n              Container 1\n             </h3>\n             <!-- ngRepeat: list in item.columns -->\n             <!-- ngInclude: \'list.html\' -->\n             <div class="column ng-scope" ng-include="\'list.html\'" ng-repeat="list in item.columns">\n              <ul class="ng-scope" dnd-list="list">\n               <!-- ngRepeat: item in list -->\n               <!-- ngInclude: item.type + \'.html\' -->\n               <li class="ng-scope" dnd-draggable="item" dnd-effect-allowed="move" dnd-moved="list.splice($index, 1)" dnd-selected="models.selected = item" draggable="true" ng-class="{selected: models.selected === item}" ng-include="item.type + \'.html\'" ng-repeat="item in list">\n                <div class="item ng-binding ng-scope">\n                 Item 1\n                </div>\n               </li>\n               <!-- end ngRepeat: item in list -->\n               <!-- ngInclude: item.type + \'.html\' -->\n               <li class="ng-scope" dnd-draggable="item" dnd-effect-allowed="move" dnd-moved="list.splice($index, 1)" dnd-selected="models.selected = item" draggable="true" ng-class="{selected: models.selected === item}" ng-include="item.type + \'.html\'" ng-repeat="item in list">\n                <div class="item ng-binding ng-scope">\n                 Item 2\n                </div>\n               </li>\n               <!-- end ngRepeat: item in list -->\n              </ul>\n             </div>\n             <!-- end ngRepeat: list in item.columns -->\n             <!-- ngInclude: \'list.html\' -->\n             <div class="column ng-scope" ng-include="\'list.html\'" ng-repeat="list in item.columns">\n              <ul class="ng-scope" dnd-list="list">\n               <!-- ngRepeat: item in list -->\n               <!-- ngInclude: item.type + \'.html\' -->\n               <li class="ng-scope" dnd-draggable="item" dnd-effect-allowed="move" dnd-moved="list.splice($index, 1)" dnd-selected="models.selected = item" draggable="true" ng-class="{selected: models.selected === item}" ng-include="item.type + \'.html\'" ng-repeat="item in list">\n                <div class="item ng-binding ng-scope">\n                 Item 3\n                </div>\n               </li>\n               <!-- end ngRepeat: item in list -->\n              </ul>\n             </div>\n             <!-- end ngRepeat: list in item.columns -->\n             <div class="clearfix">\n             </div>\n            </div>\n           </li>\n           <!-- end ngRepeat: item in list -->\n           <!-- ngInclude: item.type + \'.html\' -->\n           <li class="ng-scope" dnd-draggable="item" dnd-effect-allowed="move" dnd-moved="list.splice($index, 1)" dnd-selected="models.selected = item" draggable="true" ng-class="{selected: models.selected === item}" ng-include="item.type + \'.html\'" ng-repeat="item in list">\n            <div class="item ng-binding ng-scope">\n             Item 4\n            </div>\n           </li>\n           <!-- end ngRepeat: item in list -->\n           <!-- ngInclude: item.type + \'.html\' -->\n           <li class="ng-scope" dnd-draggable="item" dnd-effect-allowed="move" dnd-moved="list.splice($index, 1)" dnd-selected="models.selected = item" draggable="true" ng-class="{selected: models.selected === item}" ng-include="item.type + \'.html\'" ng-repeat="item in list">\n            <div class="item ng-binding ng-scope">\n             Item 5\n            </div>\n           </li>\n           <!-- end ngRepeat: item in list -->\n           <!-- ngInclude: item.type + \'.html\' -->\n           <li class="ng-scope" dnd-draggable="item" dnd-effect-allowed="move" dnd-moved="list.splice($index, 1)" dnd-selected="models.selected = item" draggable="true" ng-class="{selected: models.selected === item}" ng-include="item.type + \'.html\'" ng-repeat="item in list">\n            <div class="item ng-binding ng-scope">\n             Item 6\n            </div>\n           </li>\n           <!-- end ngRepeat: item in list -->\n          </ul>\n         </div>\n        </div>\n       </div>\n       <!-- end ngRepeat: (zone, list) in models.dropzones -->\n       <div class="col-md-6 ng-scope" ng-repeat="(zone, list) in models.dropzones">\n        <div class="dropzone box box-yellow">\n         <!-- The dropzone also uses the list template -->\n         <h3 class="ng-binding">\n          Dropzone B\n         </h3>\n         <!-- ngInclude: \'list.html\' -->\n         <div class="ng-scope" ng-include="\'list.html\'">\n          <ul class="ng-scope" dnd-list="list">\n           <!-- ngRepeat: item in list -->\n           <!-- ngInclude: item.type + \'.html\' -->\n           <li class="ng-scope" dnd-draggable="item" dnd-effect-allowed="move" dnd-moved="list.splice($index, 1)" dnd-selected="models.selected = item" draggable="true" ng-class="{selected: models.selected === item}" ng-include="item.type + \'.html\'" ng-repeat="item in list">\n            <div class="item ng-binding ng-scope">\n             Item 7\n            </div>\n           </li>\n           <!-- end ngRepeat: item in list -->\n           <!-- ngInclude: item.type + \'.html\' -->\n           <li class="ng-scope" dnd-draggable="item" dnd-effect-allowed="move" dnd-moved="list.splice($index, 1)" dnd-selected="models.selected = item" draggable="true" ng-class="{selected: models.selected === item}" ng-include="item.type + \'.html\'" ng-repeat="item in list">\n            <div class="item ng-binding ng-scope">\n             Item 8\n            </div>\n           </li>\n           <!-- end ngRepeat: item in list -->\n           <!-- ngInclude: item.type + \'.html\' -->\n           <li class="ng-scope" dnd-draggable="item" dnd-effect-allowed="move" dnd-moved="list.splice($index, 1)" dnd-selected="models.selected = item" draggable="true" ng-class="{selected: models.selected === item}" ng-include="item.type + \'.html\'" ng-repeat="item in list">\n            <div class="container-element box box-blue ng-scope">\n             <h3 class="ng-binding">\n              Container 2\n             </h3>\n             <!-- ngRepeat: list in item.columns -->\n             <!-- ngInclude: \'list.html\' -->\n             <div class="column ng-scope" ng-include="\'list.html\'" ng-repeat="list in item.columns">\n              <ul class="ng-scope" dnd-list="list">\n               <!-- ngRepeat: item in list -->\n               <!-- ngInclude: item.type + \'.html\' -->\n               <li class="ng-scope" dnd-draggable="item" dnd-effect-allowed="move" dnd-moved="list.splice($index, 1)" dnd-selected="models.selected = item" draggable="true" ng-class="{selected: models.selected === item}" ng-include="item.type + \'.html\'" ng-repeat="item in list">\n                <div class="item ng-binding ng-scope">\n                 Item 9\n                </div>\n               </li>\n               <!-- end ngRepeat: item in list -->\n               <!-- ngInclude: item.type + \'.html\' -->\n               <li class="ng-scope" dnd-draggable="item" dnd-effect-allowed="move" dnd-moved="list.splice($index, 1)" dnd-selected="models.selected = item" draggable="true" ng-class="{selected: models.selected === item}" ng-include="item.type + \'.html\'" ng-repeat="item in list">\n                <div class="item ng-binding ng-scope">\n                 Item 10\n                </div>\n               </li>\n               <!-- end ngRepeat: item in list -->\n               <!-- ngInclude: item.type + \'.html\' -->\n               <li class="ng-scope" dnd-draggable="item" dnd-effect-allowed="move" dnd-moved="list.splice($index, 1)" dnd-selected="models.selected = item" draggable="true" ng-class="{selected: models.selected === item}" ng-include="item.type + \'.html\'" ng-repeat="item in list">\n                <div class="item ng-binding ng-scope">\n                 Item 11\n                </div>\n               </li>\n               <!-- end ngRepeat: item in list -->\n              </ul>\n             </div>\n             <!-- end ngRepeat: list in item.columns -->\n             <!-- ngInclude: \'list.html\' -->\n             <div class="column ng-scope" ng-include="\'list.html\'" ng-repeat="list in item.columns">\n              <ul class="ng-scope" dnd-list="list">\n               <!-- ngRepeat: item in list -->\n               <!-- ngInclude: item.type + \'.html\' -->\n               <li class="ng-scope" dnd-draggable="item" dnd-effect-allowed="move" dnd-moved="list.splice($index, 1)" dnd-selected="models.selected = item" draggable="true" ng-class="{selected: models.selected === item}" ng-include="item.type + \'.html\'" ng-repeat="item in list">\n                <div class="item ng-binding ng-scope">\n                 Item 12\n                </div>\n               </li>\n               <!-- end ngRepeat: item in list -->\n               <!-- ngInclude: item.type + \'.html\' -->\n               <li class="ng-scope" dnd-draggable="item" dnd-effect-allowed="move" dnd-moved="list.splice($index, 1)" dnd-selected="models.selected = item" draggable="true" ng-class="{selected: models.selected === item}" ng-include="item.type + \'.html\'" ng-repeat="item in list">\n                <div class="container-element box box-blue ng-scope">\n                 <h3 class="ng-binding">\n                  Container 3\n                 </h3>\n                 <!-- ngRepeat: list in item.columns -->\n                 <!-- ngInclude: \'list.html\' -->\n                 <div class="column ng-scope" ng-include="\'list.html\'" ng-repeat="list in item.columns">\n                  <ul class="ng-scope" dnd-list="list">\n                   <!-- ngRepeat: item in list -->\n                   <!-- ngInclude: item.type + \'.html\' -->\n                   <li class="ng-scope" dnd-draggable="item" dnd-effect-allowed="move" dnd-moved="list.splice($index, 1)" dnd-selected="models.selected = item" draggable="true" ng-class="{selected: models.selected === item}" ng-include="item.type + \'.html\'" ng-repeat="item in list">\n                    <div class="item ng-binding ng-scope">\n                     Item 13\n                    </div>\n                   </li>\n                   <!-- end ngRepeat: item in list -->\n                  </ul>\n                 </div>\n                 <!-- end ngRepeat: list in item.columns -->\n                 <!-- ngInclude: \'list.html\' -->\n                 <div class="column ng-scope" ng-include="\'list.html\'" ng-repeat="list in item.columns">\n                  <ul class="ng-scope" dnd-list="list">\n                   <!-- ngRepeat: item in list -->\n                   <!-- ngInclude: item.type + \'.html\' -->\n                   <li class="ng-scope" dnd-draggable="item" dnd-effect-allowed="move" dnd-moved="list.splice($index, 1)" dnd-selected="models.selected = item" draggable="true" ng-class="{selected: models.selected === item}" ng-include="item.type + \'.html\'" ng-repeat="item in list">\n                    <div class="item ng-binding ng-scope">\n                     Item 14\n                    </div>\n                   </li>\n                   <!-- end ngRepeat: item in list -->\n                  </ul>\n                 </div>\n                 <!-- end ngRepeat: list in item.columns -->\n                 <div class="clearfix">\n                 </div>\n                </div>\n               </li>\n               <!-- end ngRepeat: item in list -->\n               <!-- ngInclude: item.type + \'.html\' -->\n               <li class="ng-scope" dnd-draggable="item" dnd-effect-allowed="move" dnd-moved="list.splice($index, 1)" dnd-selected="models.selected = item" draggable="true" ng-class="{selected: models.selected === item}" ng-include="item.type + \'.html\'" ng-repeat="item in list">\n                <div class="item ng-binding ng-scope">\n                 Item 15\n                </div>\n               </li>\n               <!-- end ngRepeat: item in list -->\n               <!-- ngInclude: item.type + \'.html\' -->\n               <li class="ng-scope" dnd-draggable="item" dnd-effect-allowed="move" dnd-moved="list.splice($index, 1)" dnd-selected="models.selected = item" draggable="true" ng-class="{selected: models.selected === item}" ng-include="item.type + \'.html\'" ng-repeat="item in list">\n                <div class="item ng-binding ng-scope">\n                 Item 16\n                </div>\n               </li>\n               <!-- end ngRepeat: item in list -->\n              </ul>\n             </div>\n             <!-- end ngRepeat: list in item.columns -->\n             <div class="clearfix">\n             </div>\n            </div>\n           </li>\n           <!-- end ngRepeat: item in list -->\n           <!-- ngInclude: item.type + \'.html\' -->\n           <li class="ng-scope" dnd-draggable="item" dnd-effect-allowed="move" dnd-moved="list.splice($index, 1)" dnd-selected="models.selected = item" draggable="true" ng-class="{selected: models.selected === item}" ng-include="item.type + \'.html\'" ng-repeat="item in list">\n            <div class="item ng-binding ng-scope">\n             Item 16\n            </div>\n           </li>\n           <!-- end ngRepeat: item in list -->\n          </ul>\n         </div>\n        </div>\n       </div>\n       <!-- end ngRepeat: (zone, list) in models.dropzones -->\n      </div>\n      <div class="ng-isolate-scope" view-source="nested">\n       <h2>\n        Source Code\n       </h2>\n       <ul class="nav nav-tabs">\n        <!-- ngRepeat: type in models.types -->\n        <li class="ng-scope active" ng-class="{active: models.activeTab === type.language}" ng-click="models.activeTab = type.language" ng-repeat="type in models.types">\n         <a class="ng-binding" style="cursor:pointer;">\n          Markup\n         </a>\n        </li>\n        <!-- end ngRepeat: type in models.types -->\n        <li class="ng-scope" ng-class="{active: models.activeTab === type.language}" ng-click="models.activeTab = type.language" ng-repeat="type in models.types">\n         <a class="ng-binding" style="cursor:pointer;">\n          CSS\n         </a>\n        </li>\n        <!-- end ngRepeat: type in models.types -->\n        <li class="ng-scope" ng-class="{active: models.activeTab === type.language}" ng-click="models.activeTab = type.language" ng-repeat="type in models.types">\n         <a class="ng-binding" style="cursor:pointer;">\n          Javascript\n         </a>\n        </li>\n        <!-- end ngRepeat: type in models.types -->\n       </ul>\n       <div class="tab-content">\n        <!-- ngRepeat: type in models.types -->\n        <div class="tab-pane ng-scope active" ng-class="{active: models.activeTab === type.language}" ng-repeat="type in models.types">\n         <pre class="line-numbers language-markup" data-line=""><code class="language-markup"><span class="token comment" spellcheck="true">&lt;!-- Markup for lists inside the dropzone. It\'s inside a seperate template\n     because it will be used recursively. The dnd-list directive enables\n     to drop elements into the referenced array. The dnd-draggable directive\n     makes an element draggable and will transfer the object that was\n     assigned to it. If an element was dragged away, you have to remove\n     it from the original list yourself using the dnd-moved attribute --&gt;</span>\n<span class="token script"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/ng-template<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>list.html<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token operator">&lt;</span>ul dnd<span class="token operator">-</span>list<span class="token operator">=</span><span class="token string">"list"</span><span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>li ng<span class="token operator">-</span>repeat<span class="token operator">=</span><span class="token string">"item in list"</span>\n            dnd<span class="token operator">-</span>draggable<span class="token operator">=</span><span class="token string">"item"</span>\n            dnd<span class="token operator">-</span>effect<span class="token operator">-</span>allowed<span class="token operator">=</span><span class="token string">"move"</span>\n            dnd<span class="token operator">-</span>moved<span class="token operator">=</span><span class="token string">"list.splice($index, 1)"</span>\n            dnd<span class="token operator">-</span>selected<span class="token operator">=</span><span class="token string">"models.selected = item"</span>\n            ng<span class="token operator">-</span>class<span class="token operator">=</span><span class="token string">"{selected: models.selected === item}"</span>\n            ng<span class="token operator">-</span>include<span class="token operator">=</span><span class="token string">"item.type + \'.html\'"</span><span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>\n\n<span class="token comment" spellcheck="true">&lt;!-- This template is responsible for rendering a container element. It uses\n     the above list template to render each container column --&gt;</span>\n<span class="token script"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/ng-template<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>container.html<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token operator">&lt;</span>div class<span class="token operator">=</span><span class="token string">"container-element box box-blue"</span><span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>h3<span class="token operator">&gt;</span>Container <span class="token punctuation">{</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>id<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>div class<span class="token operator">=</span><span class="token string">"column"</span> ng<span class="token operator">-</span>repeat<span class="token operator">=</span><span class="token string">"list in item.columns"</span> ng<span class="token operator">-</span>include<span class="token operator">=</span><span class="token string">"\'list.html\'"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>div class<span class="token operator">=</span><span class="token string">"clearfix"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>\n\n<span class="token comment" spellcheck="true">&lt;!-- Template for a normal list item --&gt;</span>\n<span class="token script"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/ng-template<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item.html<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token operator">&lt;</span>div class<span class="token operator">=</span><span class="token string">"item"</span><span class="token operator">&gt;</span>Item <span class="token punctuation">{</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>id<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>\n\n<span class="token comment" spellcheck="true">&lt;!-- Main area with dropzones and source code --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-md-10<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">ng-repeat</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>(zone, list) in models.dropzones<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-md-6<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dropzone box box-yellow<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>\n                <span class="token comment" spellcheck="true">&lt;!-- The dropzone also uses the list template --&gt;</span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>Dropzone {{zone}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">ng-include</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>\'list.html\'<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">view-source</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>nested<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>Generated Model<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span><span class="token punctuation">&gt;</span></span>{{modelAsJson}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token comment" spellcheck="true">&lt;!-- Sidebar --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-md-2<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>toolbox box box-grey box-padding<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>New Elements<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>\n            <span class="token comment" spellcheck="true">&lt;!-- The toolbox only allows to copy objects, not move it. After a new\n                 element was created, dnd-copied is invoked and we generate the next id --&gt;</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">ng-repeat</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item in models.templates<span class="token punctuation">"</span></span>\n                <span class="token attr-name">dnd-draggable</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span>\n                <span class="token attr-name">dnd-effect-allowed</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>copy<span class="token punctuation">"</span></span>\n                <span class="token attr-name">dnd-copied</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item.id <span class="token punctuation">=</span> item.id + 1<span class="token punctuation">"</span></span>\n                <span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-default btn-lg<span class="token punctuation">"</span></span> <span class="token attr-name">disabled</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>disabled<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>{{item.type}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">ng-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>models.selected<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box box-grey box-padding<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>Selected<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>Type: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span> {{models.selected.type}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">ng-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>models.selected.id<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>margin-top: 5px<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>trashcan box box-grey box-padding<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment" spellcheck="true">&lt;!-- If you use [] as referenced list, the dropped elements will be lost --&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>Trashcan<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">dnd-list</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>[]<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>nested/trashcan.jpg<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n        </div>\n        <!-- end ngRepeat: type in models.types -->\n        <div class="tab-pane ng-scope" ng-class="{active: models.activeTab === type.language}" ng-repeat="type in models.types">\n         <pre class="line-numbers language-css" data-line=""><code class="language-css"><span class="token comment" spellcheck="true">/***************************** Dropzone Styling *****************************/</span>\n\n<span class="token comment" spellcheck="true">/**\n * The dnd-list should always have a min-height,\n * otherwise you can\'t drop to it once it\'s empty\n */</span>\n<span class="token selector">.nestedDemo .dropzone ul[dnd-list] </span><span class="token punctuation">{</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>\n    <span class="token property">min-height</span><span class="token punctuation">:</span> 42px<span class="token punctuation">;</span>\n    <span class="token property">padding-left</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.nestedDemo .dropzone li </span><span class="token punctuation">{</span>\n    <span class="token property">background-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>\n    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #ddd<span class="token punctuation">;</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">/**\n * Reduce opacity of elements during the drag operation. This allows the user\n * to see where he is dropping his element, even if the element is huge. The\n * .dndDragging class is automatically set during the drag operation.\n */</span>\n<span class="token selector">.nestedDemo .dropzone .dndDragging </span><span class="token punctuation">{</span>\n    <span class="token property">opacity</span><span class="token punctuation">:</span> 0.7<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">/**\n * The dndDraggingSource class will be applied to the source element of a drag\n * operation. It makes sense to hide it to give the user the feeling that he\'s\n * actually moving it. Note that the source element has also .dndDragging class.\n */</span>\n<span class="token selector">.nestedDemo .dropzone .dndDraggingSource </span><span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">/**\n * An element with .dndPlaceholder class will be added as child of the dnd-list\n * while the user is dragging over it.\n */</span>\n<span class="token selector">.nestedDemo .dropzone .dndPlaceholder </span><span class="token punctuation">{</span>\n    <span class="token property">background-color</span><span class="token punctuation">:</span> #ddd<span class="token punctuation">;</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>\n    <span class="token property">min-height</span><span class="token punctuation">:</span> 42px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">/***************************** Element Selection *****************************/</span>\n\n<span class="token selector">.nestedDemo .dropzone .selected .item </span><span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #3c763d<span class="token punctuation">;</span>\n    <span class="token property">background-color</span><span class="token punctuation">:</span> #dff0d8<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.nestedDemo .dropzone .selected .box </span><span class="token punctuation">{</span>\n    <span class="token property">border-color</span><span class="token punctuation">:</span> #d6e9c6<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.nestedDemo .dropzone .selected .box &gt; h3 </span><span class="token punctuation">{</span>\n    <span class="token property">background-color</span><span class="token punctuation">:</span> #dff0d8<span class="token punctuation">;</span>\n    <span class="token property">background-image</span><span class="token punctuation">:</span> linear-gradient(to bottom,#dff0d8 0,#d0e9c6 100%)<span class="token punctuation">;</span>\n    <span class="token property">border-color</span><span class="token punctuation">:</span> #d6e9c6<span class="token punctuation">;</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #3c763d<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">/***************************** Element type specific styles *****************************/</span>\n\n<span class="token selector">.nestedDemo .dropzone .item </span><span class="token punctuation">{</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 10px 15px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.nestedDemo .dropzone .container-element </span><span class="token punctuation">{</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.nestedDemo .dropzone .container-element .column </span><span class="token punctuation">{</span>\n    <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">/***************************** Toolbox *****************************/</span>\n\n<span class="token selector">.nestedDemo .toolbox ul </span><span class="token punctuation">{</span>\n    <span class="token property">cursor</span><span class="token punctuation">:</span> move<span class="token punctuation">;</span>\n    <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n    <span class="token property">padding-left</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.nestedDemo .toolbox button </span><span class="token punctuation">{</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>\n    <span class="token property">opacity</span><span class="token punctuation">:</span> 1.0<span class="token punctuation">;</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 123px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.nestedDemo .toolbox .dndDragging </span><span class="token punctuation">{</span>\n    <span class="token property">opacity</span><span class="token punctuation">:</span> 0.5<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.nestedDemo .toolbox .dndDraggingSource </span><span class="token punctuation">{</span>\n    <span class="token property">opacity</span><span class="token punctuation">:</span> 1.0<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">/***************************** Trashcan *****************************/</span>\n\n<span class="token selector">.nestedDemo .trashcan ul </span><span class="token punctuation">{</span>\n    <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n    <span class="token property">padding-left</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.nestedDemo .trashcan img </span><span class="token punctuation">{</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n    <span class="token property">-webkit-filter</span><span class="token punctuation">:</span> grayscale(100%)<span class="token punctuation">;</span>\n    <span class="token property">-moz-filter</span><span class="token punctuation">:</span> grayscale(100%)<span class="token punctuation">;</span>\n    <span class="token property">filter</span><span class="token punctuation">:</span> grayscale(100%)<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.nestedDemo .trashcan .dndDragover img </span><span class="token punctuation">{</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n    <span class="token property">-webkit-filter</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n    <span class="token property">-moz-filter</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n    <span class="token property">filter</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.nestedDemo .trashcan .dndPlaceholder </span><span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n        </div>\n        <!-- end ngRepeat: type in models.types -->\n        <div class="tab-pane ng-scope" ng-class="{active: models.activeTab === type.language}" ng-repeat="type in models.types">\n         <pre class="line-numbers language-javascript" data-line=""><code class="language-javascript"><span class="token comment" spellcheck="true">/**\n * The controller doesn\'t do much more than setting the initial data model\n */</span>\nangular<span class="token punctuation">.</span><span class="token function">module<span class="token punctuation">(</span></span><span class="token string">"demo"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">controller<span class="token punctuation">(</span></span><span class="token string">"NestedListsDemoController"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>$scope<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n    $scope<span class="token punctuation">.</span>models <span class="token operator">=</span> <span class="token punctuation">{</span>\n        selected<span class="token punctuation">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n        templates<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n            <span class="token punctuation">{</span>type<span class="token punctuation">:</span> <span class="token string">"item"</span><span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span>type<span class="token punctuation">:</span> <span class="token string">"container"</span><span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> columns<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">}</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        dropzones<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n            <span class="token string">"A"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>\n                <span class="token punctuation">{</span>\n                    <span class="token string">"type"</span><span class="token punctuation">:</span> <span class="token string">"container"</span><span class="token punctuation">,</span>\n                    <span class="token string">"id"</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n                    <span class="token string">"columns"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>\n                        <span class="token punctuation">[</span>\n                            <span class="token punctuation">{</span>\n                                <span class="token string">"type"</span><span class="token punctuation">:</span> <span class="token string">"item"</span><span class="token punctuation">,</span>\n                                <span class="token string">"id"</span><span class="token punctuation">:</span> <span class="token string">"1"</span>\n                            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                            <span class="token punctuation">{</span>\n                                <span class="token string">"type"</span><span class="token punctuation">:</span> <span class="token string">"item"</span><span class="token punctuation">,</span>\n                                <span class="token string">"id"</span><span class="token punctuation">:</span> <span class="token string">"2"</span>\n                            <span class="token punctuation">}</span>\n                        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n                        <span class="token punctuation">[</span>\n                            <span class="token punctuation">{</span>\n                                <span class="token string">"type"</span><span class="token punctuation">:</span> <span class="token string">"item"</span><span class="token punctuation">,</span>\n                                <span class="token string">"id"</span><span class="token punctuation">:</span> <span class="token string">"3"</span>\n                            <span class="token punctuation">}</span>\n                        <span class="token punctuation">]</span>\n                    <span class="token punctuation">]</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">{</span>\n                    <span class="token string">"type"</span><span class="token punctuation">:</span> <span class="token string">"item"</span><span class="token punctuation">,</span>\n                    <span class="token string">"id"</span><span class="token punctuation">:</span> <span class="token string">"4"</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">{</span>\n                    <span class="token string">"type"</span><span class="token punctuation">:</span> <span class="token string">"item"</span><span class="token punctuation">,</span>\n                    <span class="token string">"id"</span><span class="token punctuation">:</span> <span class="token string">"5"</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">{</span>\n                    <span class="token string">"type"</span><span class="token punctuation">:</span> <span class="token string">"item"</span><span class="token punctuation">,</span>\n                    <span class="token string">"id"</span><span class="token punctuation">:</span> <span class="token string">"6"</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token string">"B"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>\n                <span class="token punctuation">{</span>\n                    <span class="token string">"type"</span><span class="token punctuation">:</span> <span class="token string">"item"</span><span class="token punctuation">,</span>\n                    <span class="token string">"id"</span><span class="token punctuation">:</span> <span class="token number">7</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">{</span>\n                    <span class="token string">"type"</span><span class="token punctuation">:</span> <span class="token string">"item"</span><span class="token punctuation">,</span>\n                    <span class="token string">"id"</span><span class="token punctuation">:</span> <span class="token string">"8"</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">{</span>\n                    <span class="token string">"type"</span><span class="token punctuation">:</span> <span class="token string">"container"</span><span class="token punctuation">,</span>\n                    <span class="token string">"id"</span><span class="token punctuation">:</span> <span class="token string">"2"</span><span class="token punctuation">,</span>\n                    <span class="token string">"columns"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>\n                        <span class="token punctuation">[</span>\n                            <span class="token punctuation">{</span>\n                                <span class="token string">"type"</span><span class="token punctuation">:</span> <span class="token string">"item"</span><span class="token punctuation">,</span>\n                                <span class="token string">"id"</span><span class="token punctuation">:</span> <span class="token string">"9"</span>\n                            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                            <span class="token punctuation">{</span>\n                                <span class="token string">"type"</span><span class="token punctuation">:</span> <span class="token string">"item"</span><span class="token punctuation">,</span>\n                                <span class="token string">"id"</span><span class="token punctuation">:</span> <span class="token string">"10"</span>\n                            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                            <span class="token punctuation">{</span>\n                                <span class="token string">"type"</span><span class="token punctuation">:</span> <span class="token string">"item"</span><span class="token punctuation">,</span>\n                                <span class="token string">"id"</span><span class="token punctuation">:</span> <span class="token string">"11"</span>\n                            <span class="token punctuation">}</span>\n                        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n                        <span class="token punctuation">[</span>\n                            <span class="token punctuation">{</span>\n                                <span class="token string">"type"</span><span class="token punctuation">:</span> <span class="token string">"item"</span><span class="token punctuation">,</span>\n                                <span class="token string">"id"</span><span class="token punctuation">:</span> <span class="token string">"12"</span>\n                            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                            <span class="token punctuation">{</span>\n                                <span class="token string">"type"</span><span class="token punctuation">:</span> <span class="token string">"container"</span><span class="token punctuation">,</span>\n                                <span class="token string">"id"</span><span class="token punctuation">:</span> <span class="token string">"3"</span><span class="token punctuation">,</span>\n                                <span class="token string">"columns"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>\n                                    <span class="token punctuation">[</span>\n                                        <span class="token punctuation">{</span>\n                                            <span class="token string">"type"</span><span class="token punctuation">:</span> <span class="token string">"item"</span><span class="token punctuation">,</span>\n                                            <span class="token string">"id"</span><span class="token punctuation">:</span> <span class="token string">"13"</span>\n                                        <span class="token punctuation">}</span>\n                                    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n                                    <span class="token punctuation">[</span>\n                                        <span class="token punctuation">{</span>\n                                            <span class="token string">"type"</span><span class="token punctuation">:</span> <span class="token string">"item"</span><span class="token punctuation">,</span>\n                                            <span class="token string">"id"</span><span class="token punctuation">:</span> <span class="token string">"14"</span>\n                                        <span class="token punctuation">}</span>\n                                    <span class="token punctuation">]</span>\n                                <span class="token punctuation">]</span>\n                            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                            <span class="token punctuation">{</span>\n                                <span class="token string">"type"</span><span class="token punctuation">:</span> <span class="token string">"item"</span><span class="token punctuation">,</span>\n                                <span class="token string">"id"</span><span class="token punctuation">:</span> <span class="token string">"15"</span>\n                            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                            <span class="token punctuation">{</span>\n                                <span class="token string">"type"</span><span class="token punctuation">:</span> <span class="token string">"item"</span><span class="token punctuation">,</span>\n                                <span class="token string">"id"</span><span class="token punctuation">:</span> <span class="token string">"16"</span>\n                            <span class="token punctuation">}</span>\n                        <span class="token punctuation">]</span>\n                    <span class="token punctuation">]</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">{</span>\n                    <span class="token string">"type"</span><span class="token punctuation">:</span> <span class="token string">"item"</span><span class="token punctuation">,</span>\n                    <span class="token string">"id"</span><span class="token punctuation">:</span> <span class="token number">16</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">]</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    $scope<span class="token punctuation">.</span>$<span class="token function">watch<span class="token punctuation">(</span></span><span class="token string">\'models.dropzones\'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>model<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        $scope<span class="token punctuation">.</span>modelAsJson <span class="token operator">=</span> angular<span class="token punctuation">.</span><span class="token function">toJson<span class="token punctuation">(</span></span>model<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n        </div>\n        <!-- end ngRepeat: type in models.types -->\n       </div>\n      </div>\n      <h2>\n       Generated Model\n      </h2>\n      <pre class="ng-binding">{\n  "A": [\n    {\n      "type": "container",\n      "id": 1,\n      "columns": [\n        [\n          {\n            "type": "item",\n            "id": "1"\n          },\n          {\n            "type": "item",\n            "id": "2"\n          }\n        ],\n        [\n          {\n            "type": "item",\n            "id": "3"\n          }\n        ]\n      ]\n    },\n    {\n      "type": "item",\n      "id": "4"\n    },\n    {\n      "type": "item",\n      "id": "5"\n    },\n    {\n      "type": "item",\n      "id": "6"\n    }\n  ],\n  "B": [\n    {\n      "type": "item",\n      "id": 7\n    },\n    {\n      "type": "item",\n      "id": "8"\n    },\n    {\n      "type": "container",\n      "id": "2",\n      "columns": [\n        [\n          {\n            "type": "item",\n            "id": "9"\n          },\n          {\n            "type": "item",\n            "id": "10"\n          },\n          {\n            "type": "item",\n            "id": "11"\n          }\n        ],\n        [\n          {\n            "type": "item",\n            "id": "12"\n          },\n          {\n            "type": "container",\n            "id": "3",\n            "columns": [\n              [\n                {\n                  "type": "item",\n                  "id": "13"\n                }\n              ],\n              [\n                {\n                  "type": "item",\n                  "id": "14"\n                }\n              ]\n            ]\n          },\n          {\n            "type": "item",\n            "id": "15"\n          },\n          {\n            "type": "item",\n            "id": "16"\n          }\n        ]\n      ]\n    },\n    {\n      "type": "item",\n      "id": 16\n    }\n  ]\n}</pre>\n     </div>\n     <!-- Sidebar -->\n     <div class="col-md-2 ng-scope">\n      <div class="toolbox box box-grey box-padding">\n       <h3>\n        New Elements\n       </h3>\n       <ul>\n        <!-- The toolbox only allows to copy objects, not move it. After a new\n                 element was created, dnd-copied is invoked and we generate the next id -->\n        <!-- ngRepeat: item in models.templates -->\n        <li class="ng-scope" dnd-copied="item.id = item.id + 1" dnd-draggable="item" dnd-effect-allowed="copy" draggable="true" ng-repeat="item in models.templates">\n         <button class="btn btn-default btn-lg ng-binding" disabled="disabled" type="button">\n          item\n         </button>\n        </li>\n        <!-- end ngRepeat: item in models.templates -->\n        <li class="ng-scope" dnd-copied="item.id = item.id + 1" dnd-draggable="item" dnd-effect-allowed="copy" draggable="true" ng-repeat="item in models.templates">\n         <button class="btn btn-default btn-lg ng-binding" disabled="disabled" type="button">\n          container\n         </button>\n        </li>\n        <!-- end ngRepeat: item in models.templates -->\n       </ul>\n      </div>\n      <!-- ngIf: models.selected -->\n      <div class="trashcan box box-grey box-padding">\n       <!-- If you use [] as referenced list, the dropped elements will be lost -->\n       <h3>\n        Trashcan\n       </h3>\n       <ul dnd-list="[]">\n        <li>\n         <img src="nested/trashcan.jpg"/>\n        </li>\n       </ul>\n      </div>\n     </div>\n    </div>\n   </div>\n  </div>\n </body>\n</html>'