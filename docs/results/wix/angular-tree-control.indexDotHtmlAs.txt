b'<html>\n <head>\n  <style type="text/css">\n   @charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide{display:none !important;}ng\\:form{display:block;}.ng-animate-block-transitions{transition:0s all!important;-webkit-transition:0s all!important;}.ng-hide-add-active,.ng-hide-remove{display:block!important;}\n  </style>\n  <title>\n   Angular Tree\n  </title>\n  <script src="demo/jquery-2.2.2.js">\n  </script>\n  <script src="demo/angular.1.2.29.js">\n  </script>\n  <script src="demo/bootstrap.3.1.1.js">\n  </script>\n  <script src="demo/ui-bootstrap-tpls.0.11.2.js">\n  </script>\n  <script src="demo/prettify.1.0.1.js">\n  </script>\n  <link href="demo/bootstrap.3.1.1.css" rel="stylesheet" type="text/css"/>\n  <link href="demo/prettify-style.css" rel="stylesheet" type="text/css"/>\n  <script src="angular-tree-control.js">\n  </script>\n  <script src="context-menu.js">\n  </script>\n  <link href="css/tree-control.css" rel="stylesheet" type="text/css"/>\n  <link href="css/tree-control-attribute.css" rel="stylesheet" type="text/css"/>\n  <style>\n   .header{padding-top: 50px; padding-bottom:50px; background-color: #444980;}\n        .head-container{width: 1140px; margin:auto;}\n        .header h1 {color: #fffffa; font-size: 60px}\n        .header h2 {color: #fffffa; font-size: 24px; font-style: normal}\n        .example-caption {color: #bbb; font-size: 12px}\n        .docs-body{width: 1140px; margin: auto auto 50px; }\n        .docs-footer{background-color: #F5F5F5; text-align: center; padding: 30px 0; border-top: #e5e5e5}\n        .tab-pane{background-color: #f8f8f8; border-right: 1px solid #ccc;border-left: 1px solid #ccc;border-bottom: 1px solid #ccc; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px }\n        .nav li.active a{background-color: #f8f8f8}\n        pre.code {border:none; background-color: #f8f8f8; padding: 10px; margin: 0; font-family: Consolas, \'Liberation Mono\', Courier, monospace;}\n        .docs-sidenav { margin-top: 45px; margin-bottom: 0; }\n        .docs-sidenav > li > a {display: block; font-size: 13px; font-weight: 500; color: #999; padding: 4px 20px;}\n        .docs-sidenav > li.active > a {font-weight: 700; color: #563d7c; border-left: 2px solid #563d7c;padding-left: 18px;}\n        .docs-sidenav > li > a:hover {background-color: transparent; color: #563d7c; border-left: 1px solid #563d7c;padding-left: 19px;}\n        .type-hint-object {background:#999;}\n        .type-hint-boolean {background:rgb(18, 131, 39);}\n        .type-hint-function {background: rgb(36, 53, 131);}\n        .type-hint-number {background:rgb(189, 63, 66);}\n\t.dropdown-menu li a.disabled { pointer-events: none; cursor: default; color:#bbb; }\n  </style>\n </head>\n <body class="ng-scope" ng-app="example">\n  <a href="https://github.com/wix/angular-tree-control">\n   <img alt="Fork me on GitHub" data-canonical-src="https://s3.amazonaws.com/github/ribbons/forkme_right_orange_ff7600.png" src="https://camo.githubusercontent.com/652c5b9acfaddf3a9c326fa6bde407b87f7be0f4/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f6f72616e67655f6666373630302e706e67" style="position: absolute; top: 0; right: 0; border: 0;"/>\n  </a>\n  <div class="header">\n   <div class="head-container">\n    <h1>\n     Angular Tree\n    </h1>\n    <h2>\n     The AngularJS tree component\n    </h2>\n   </div>\n  </div>\n  <div class="row docs-body">\n   <div class="col-md-9">\n    <section class="ng-scope" id="classic" ng-controller="Classic">\n     <div class="page-header">\n      <h1>\n       Basic Usage\n       <small>\n        (Classic style, default configuration)\n       </small>\n      </h1>\n     </div>\n     <div class="row">\n      <div class="col-md-6 show-grid">\n       <div class="panel panel-default">\n        <div class="panel-body">\n         <div class="example-caption">\n          EXAMPLE:\n         </div>\n         <div save-content="classic-html">\n          <treecontrol class="tree-classic ng-isolate-scope" on-selection="showSelected(node)" tree-model="treedata">\n           <ul class="ng-scope">\n            <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 1 (id1)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 2 (id2)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 3 (id3)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 4 (id4)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n           </ul>\n          </treecontrol>\n         </div>\n        </div>\n       </div>\n      </div>\n      <div class="col-md-6">\n       <p>\n        Classic style of the tree control, set using the class\n        <code>\n         tree-classic\n        </code>\n        .\n       </p>\n       <p>\n        Click on the folder icons to open and close the tree nodes. Click on the node label to select a node in the tree. A Second click on the node label will unselect the node.\n       </p>\n       <p>\n        The tree data is set using the\n        <code>\n         tree-model\n        </code>\n        attribute, which accepts either a node object or an array of node objects.\n                A Node object is a regular javascript object which has a\n        <code>\n         children\n        </code>\n        array property (children is the default name,\n                it can be overridden using the tree options).\n       </p>\n       <p>\n        Selected node:\n        <code class="ng-binding">\n         N/A\n        </code>\n       </p>\n      </div>\n     </div>\n     <div class="row">\n      <div class="ng-isolate-scope">\n       <ul class="nav nav-tabs" ng-class="{\'nav-stacked\': vertical, \'nav-justified\': justified}" ng-transclude="">\n        <li class="ng-isolate-scope active" heading="Markup" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          Markup\n         </a>\n        </li>\n        <li class="ng-isolate-scope" heading="JavaScript" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          JavaScript\n         </a>\n        </li>\n       </ul>\n       <div class="tab-content">\n        <!-- ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="classic-html" class="code ng-scope" highlight-lang="html"><span class="pln"> </span><span class="tag">&lt;treecontrol</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"tree-classic"</span><span class="pln"> </span><span class="atn">tree-model</span><span class="pun">=</span><span class="atv">"treedata"</span><span class="pln"> </span><span class="atn">on-selection</span><span class="pun">=</span><span class="atv">"showSelected(node)"</span><span class="tag">&gt;</span><span class="pln">\n     </span><span class="tag">&lt;button</span><span class="pln"> </span><span class="atn">ng-click</span><span class="pun">=</span><span class="atv">"buttonClick($event, node)"</span><span class="tag">&gt;</span><span class="pln">Click Me!</span><span class="tag">&lt;/button&gt;</span><span class="pln"> label: {{node.label}} ({{node.id}} ) {{$index}}\n </span><span class="tag">&lt;/treecontrol&gt;</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="classic-js" class="code ng-scope" highlight-lang="js"><span class="pln"> </span><span class="kwd">function</span><span class="pln"> </span><span class="typ">Parent</span><span class="pun">(</span><span class="pln">$scope</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">treedata</span><span class="pun">=</span><span class="pln">createSubTree</span><span class="pun">(</span><span class="lit">3</span><span class="pun">,</span><span class="pln"> </span><span class="lit">4</span><span class="pun">,</span><span class="pln"> </span><span class="str">""</span><span class="pun">);</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">lastClicked </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">buttonClick </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">$event</span><span class="pun">,</span><span class="pln"> node</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n         $scope</span><span class="pun">.</span><span class="pln">lastClicked </span><span class="pun">=</span><span class="pln"> node</span><span class="pun">;</span><span class="pln">\n         $event</span><span class="pun">.</span><span class="pln">stopPropagation</span><span class="pun">();</span><span class="pln">\n     </span><span class="pun">}</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">showSelected </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">sel</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n         $scope</span><span class="pun">.</span><span class="pln">selectedNode </span><span class="pun">=</span><span class="pln"> sel</span><span class="pun">;</span><span class="pln">\n     </span><span class="pun">};</span><span class="pln">\n </span><span class="pun">}</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n       </div>\n      </div>\n     </div>\n     <script save-content="classic-js">\n      function Classic($scope) {\n            $scope.treedata=createSubTree(3, 4, "");\n            $scope.showSelected = function(sel) {\n                $scope.selectedNode = sel;\n            };\n        }\n     </script>\n    </section>\n    <section class="ng-scope" id="as-attribute" ng-controller="AsAttribute">\n     <div class="page-header">\n      <h1>\n       As an Attribute\n       <small>\n        (Alternative to a Custom Element)\n       </small>\n      </h1>\n     </div>\n     <div class="row">\n      <div class="col-md-6 show-grid">\n       <div class="panel panel-default">\n        <div class="panel-body">\n         <div class="example-caption">\n          EXAMPLE:\n         </div>\n         <div save-content="as-attribute-html">\n          <div class="tree-classic ng-isolate-scope" on-selection="showSelected(node)" tree-model="treedata" treecontrol="">\n           <ul class="ng-scope">\n            <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 1 (id1)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 2 (id2)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 3 (id3)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 4 (id4)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n           </ul>\n          </div>\n         </div>\n        </div>\n       </div>\n      </div>\n      <div class="col-md-6">\n       <p>\n        Using the tree control as an attribute is as easy as using a div and adding a\n        <code>\n         treecontrol\n        </code>\n        attribute to it\n       </p>\n       <p>\n        Note that you have to include the\n        <code>\n         tree-control-attribute.css\n        </code>\n        file instead of the\n        <code>\n         tree-control.css\n        </code>\n        as the CSS selectors are quite different between the two styles of usage.\n       </p>\n       <p>\n        Selected node:\n        <code class="ng-binding">\n         N/A\n        </code>\n       </p>\n      </div>\n     </div>\n     <div class="row">\n      <div class="ng-isolate-scope">\n       <ul class="nav nav-tabs" ng-class="{\'nav-stacked\': vertical, \'nav-justified\': justified}" ng-transclude="">\n        <li class="ng-isolate-scope active" heading="Markup" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          Markup\n         </a>\n        </li>\n        <li class="ng-isolate-scope" heading="JavaScript" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          JavaScript\n         </a>\n        </li>\n       </ul>\n       <div class="tab-content">\n        <!-- ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="as-attribute-html" class="code ng-scope" highlight-lang="html"><span class="pln"> </span><span class="tag">&lt;div</span><span class="pln"> </span><span class="atn">treecontrol</span><span class="pun">=</span><span class="atv">""</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"tree-classic"</span><span class="pln"> </span><span class="atn">tree-model</span><span class="pun">=</span><span class="atv">"treedata"</span><span class="pln"> </span><span class="atn">on-selection</span><span class="pun">=</span><span class="atv">"showSelected(node)"</span><span class="tag">&gt;</span><span class="pln">\n     label: {{node.label}} ({{node.id}})\n </span><span class="tag">&lt;/div&gt;</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="as-attribute-js" class="code ng-scope" highlight-lang="js"><span class="pln"> </span><span class="kwd">function</span><span class="pln"> </span><span class="typ">AsAttribute</span><span class="pun">(</span><span class="pln">$scope</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">treedata</span><span class="pun">=</span><span class="pln">createSubTree</span><span class="pun">(</span><span class="lit">3</span><span class="pun">,</span><span class="pln"> </span><span class="lit">4</span><span class="pun">,</span><span class="pln"> </span><span class="str">""</span><span class="pun">);</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">showSelected </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">sel</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n         $scope</span><span class="pun">.</span><span class="pln">selectedNode </span><span class="pun">=</span><span class="pln"> sel</span><span class="pun">;</span><span class="pln">\n     </span><span class="pun">};</span><span class="pln">\n </span><span class="pun">}</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n       </div>\n      </div>\n     </div>\n     <script save-content="as-attribute-js">\n      function AsAttribute($scope) {\n            $scope.treedata=createSubTree(3, 4, "");\n            $scope.showSelected = function(sel) {\n                $scope.selectedNode = sel;\n            };\n        }\n     </script>\n    </section>\n    <section class="ng-scope" id="labels-template" ng-controller="LabelsTemplate">\n     <div class="page-header">\n      <h1>\n       Tree Label Templates\n       <small>\n        (Customize the tree labels)\n       </small>\n      </h1>\n     </div>\n     <div class="row">\n      <div class="col-md-6 show-grid">\n       <div class="panel panel-default">\n        <div class="panel-body">\n         <div class="example-caption">\n          EXAMPLE:\n         </div>\n         <div save-content="labels-template-html">\n          <treecontrol class="tree-classic ng-isolate-scope" on-selection="showSelected(node)" tree-model="treedata">\n           <ul class="ng-scope">\n            <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope" style="color: #04a">\n               Node 1 - index: 0\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope" style="color: #990">\n               Node 2 - index: 1\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope" style="color: #0a4">\n               Node 3 - index: 2\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope" style="color: #a40">\n               Node 4 - index: 3\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n           </ul>\n          </treecontrol>\n         </div>\n        </div>\n       </div>\n      </div>\n      <div class="col-md-6">\n       <p>\n        Taking control of the tree labels is as simple as with\n        <code>\n         ng-repeat\n        </code>\n        - you include a template in the tree control tag.\n       </p>\n       <p>\n        Special properties are exposed to the local scope of each template, including the current node as\n        <code>\n         node\n        </code>\n        .\n       </p>\n       <p>\n        Selected node:\n        <code class="ng-binding">\n         N/A\n        </code>\n       </p>\n      </div>\n     </div>\n     <table class="table table-bordered table-striped">\n      <thead>\n       <tr>\n        <td>\n         Variable\n        </td>\n        <td>\n         Type\n        </td>\n        <td>\n         Details\n        </td>\n       </tr>\n      </thead>\n      <tbody>\n       <tr>\n        <td>\n         <code>\n          node\n         </code>\n        </td>\n        <td>\n         <span class="label type-hint-object">\n          Object\n         </span>\n        </td>\n        <td>\n         The current node the label represents.\n        </td>\n       </tr>\n       <tr>\n        <td>\n         <code>\n          $parentNode\n         </code>\n        </td>\n        <td>\n         <span class="label type-hint-object">\n          Object\n         </span>\n        </td>\n        <td>\n         The parent of the current node.\n        </td>\n       </tr>\n       <tr>\n        <td>\n         <code>\n          $index\n         </code>\n        </td>\n        <td>\n         <span class="label type-hint-number">\n          number\n         </span>\n        </td>\n        <td>\n         iterator offset of the repeated element under one parent node(0..length-1).\n        </td>\n       </tr>\n       <tr>\n        <td>\n         <code>\n          $first\n         </code>\n        </td>\n        <td>\n         <span class="label type-hint-boolean">\n          boolean\n         </span>\n        </td>\n        <td>\n         true if the repeated element is first in the iterator.\n        </td>\n       </tr>\n       <tr>\n        <td>\n         <code>\n          $middle\n         </code>\n        </td>\n        <td>\n         <span class="label type-hint-boolean">\n          boolean\n         </span>\n        </td>\n        <td>\n         true if the repeated element is between the first and last in the iterator.\n        </td>\n       </tr>\n       <tr>\n        <td>\n         <code>\n          $last\n         </code>\n        </td>\n        <td>\n         <span class="label type-hint-boolean">\n          boolean\n         </span>\n        </td>\n        <td>\n         true if the repeated element is last in the iterator.\n        </td>\n       </tr>\n       <tr>\n        <td>\n         <code>\n          $odd\n         </code>\n        </td>\n        <td>\n         <span class="label type-hint-boolean">\n          boolean\n         </span>\n        </td>\n        <td>\n         true if the iterator position $index is even (otherwise false).\n        </td>\n       </tr>\n       <tr>\n        <td>\n         <code>\n          $even\n         </code>\n        </td>\n        <td>\n         <span class="label type-hint-boolean">\n          boolean\n         </span>\n        </td>\n        <td>\n         true if the iterator position $index is odd (otherwise false).\n        </td>\n       </tr>\n       <tr>\n        <td>\n         <code>\n          $path\n         </code>\n        </td>\n        <td>\n         <span class="label type-hint-function">\n          function\n         </span>\n        </td>\n        <td>\n         a function that when called, returns the path to the current node.\n        </td>\n       </tr>\n      </tbody>\n     </table>\n     <div class="row">\n      <div class="ng-isolate-scope">\n       <ul class="nav nav-tabs" ng-class="{\'nav-stacked\': vertical, \'nav-justified\': justified}" ng-transclude="">\n        <li class="ng-isolate-scope active" heading="Markup" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          Markup\n         </a>\n        </li>\n        <li class="ng-isolate-scope" heading="JavaScript" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          JavaScript\n         </a>\n        </li>\n       </ul>\n       <div class="tab-content">\n        <!-- ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="labels-template-html" class="code ng-scope" highlight-lang="html"><span class="pln"> </span><span class="tag">&lt;treecontrol</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"tree-classic"</span><span class="pln"> </span><span class="atn">tree-model</span><span class="pun">=</span><span class="atv">"treedata"</span><span class="pln"> </span><span class="atn">on-selection</span><span class="pun">=</span><span class="atv">"showSelected(node)"</span><span class="tag">&gt;</span><span class="pln">\n     </span><span class="tag">&lt;span</span><span class="pln"> </span><span class="atn">style</span><span class="pun">=</span><span class="atv">"</span><span class="pln">color</span><span class="pun">:</span><span class="pln"> </span><span class="pun">{{</span><span class="pln">getColor</span><span class="pun">(</span><span class="pln">node</span><span class="pun">)}}</span><span class="atv">"</span><span class="tag">&gt;</span><span class="pln">{{node.label}} - index: {{$index}}</span><span class="tag">&lt;/span&gt;</span><span class="pln">\n </span><span class="tag">&lt;/treecontrol&gt;</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="labels-template-js" class="code ng-scope" highlight-lang="js"><span class="pln"> </span><span class="kwd">function</span><span class="pln"> </span><span class="typ">LabelsTemplate</span><span class="pun">(</span><span class="pln">$scope</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">treedata</span><span class="pun">=</span><span class="pln">createSubTree</span><span class="pun">(</span><span class="lit">3</span><span class="pun">,</span><span class="pln"> </span><span class="lit">4</span><span class="pun">,</span><span class="pln"> </span><span class="str">""</span><span class="pun">);</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">getColor </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">node</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n         </span><span class="kwd">return</span><span class="pln"> </span><span class="pun">[</span><span class="str">"#a40"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"#04a"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"#990"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"#0a4"</span><span class="pun">][</span><span class="pln">node</span><span class="pun">.</span><span class="pln">i </span><span class="pun">%</span><span class="pln"> </span><span class="lit">4</span><span class="pun">];</span><span class="pln">\n     </span><span class="pun">};</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">showSelected </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">sel</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n         $scope</span><span class="pun">.</span><span class="pln">selectedNode </span><span class="pun">=</span><span class="pln"> sel</span><span class="pun">;</span><span class="pln">\n     </span><span class="pun">};</span><span class="pln">\n </span><span class="pun">}</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n       </div>\n      </div>\n     </div>\n     <script save-content="labels-template-js">\n      function LabelsTemplate($scope) {\n            $scope.treedata=createSubTree(3, 4, "");\n            $scope.getColor = function(node) {\n                return ["#a40", "#04a", "#990", "#0a4"][node.i % 4];\n            };\n            $scope.showSelected = function(sel) {\n                $scope.selectedNode = sel;\n            };\n        }\n     </script>\n    </section>\n    <section class="ng-scope" id="parent" ng-controller="Parent">\n     <div class="page-header">\n      <h1>\n       Tree Label Scope\n       <small>\n        (as a child of the controller scope)\n       </small>\n      </h1>\n     </div>\n     <div class="row">\n      <div class="col-md-6 show-grid">\n       <div class="panel panel-default">\n        <div class="panel-body">\n         <div class="example-caption">\n          EXAMPLE:\n         </div>\n         <div save-content="classic-html">\n          <treecontrol class="tree-classic ng-isolate-scope" on-selection="showSelected(node)" tree-model="treedata">\n           <ul class="ng-scope">\n            <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <button class="ng-scope" ng-click="buttonClick($event, node)">\n               Click Me!\n              </button>\n              <span class="ng-binding ng-scope">\n               label: Node 1 (id1 ) 0\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <button class="ng-scope" ng-click="buttonClick($event, node)">\n               Click Me!\n              </button>\n              <span class="ng-binding ng-scope">\n               label: Node 2 (id2 ) 1\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <button class="ng-scope" ng-click="buttonClick($event, node)">\n               Click Me!\n              </button>\n              <span class="ng-binding ng-scope">\n               label: Node 3 (id3 ) 2\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <button class="ng-scope" ng-click="buttonClick($event, node)">\n               Click Me!\n              </button>\n              <span class="ng-binding ng-scope">\n               label: Node 4 (id4 ) 3\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n           </ul>\n          </treecontrol>\n         </div>\n        </div>\n       </div>\n      </div>\n      <div class="col-md-6">\n       <p>\n        The scope used to compile the tree labels is a child scope of the controller (used to compile the tree-control directive).\n                As such, in the tree label scope you have access to all the properties and methods defined in the controller scope.\n                This example shows how to access a method in the parent scope from the label template.\n       </p>\n       <p>\n        Selected node:\n        <code class="ng-binding">\n         N/A\n        </code>\n       </p>\n       <p>\n        Last clicked:\n        <code class="ng-binding">\n         N/A\n        </code>\n       </p>\n      </div>\n     </div>\n     <div class="row">\n      <div class="ng-isolate-scope">\n       <ul class="nav nav-tabs" ng-class="{\'nav-stacked\': vertical, \'nav-justified\': justified}" ng-transclude="">\n        <li class="ng-isolate-scope active" heading="Markup" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          Markup\n         </a>\n        </li>\n        <li class="ng-isolate-scope" heading="JavaScript" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          JavaScript\n         </a>\n        </li>\n       </ul>\n       <div class="tab-content">\n        <!-- ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="classic-html" class="code ng-scope" highlight-lang="html"><span class="pln"> </span><span class="tag">&lt;treecontrol</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"tree-classic"</span><span class="pln"> </span><span class="atn">tree-model</span><span class="pun">=</span><span class="atv">"treedata"</span><span class="pln"> </span><span class="atn">on-selection</span><span class="pun">=</span><span class="atv">"showSelected(node)"</span><span class="tag">&gt;</span><span class="pln">\n     </span><span class="tag">&lt;button</span><span class="pln"> </span><span class="atn">ng-click</span><span class="pun">=</span><span class="atv">"buttonClick($event, node)"</span><span class="tag">&gt;</span><span class="pln">Click Me!</span><span class="tag">&lt;/button&gt;</span><span class="pln"> label: {{node.label}} ({{node.id}} ) {{$index}}\n </span><span class="tag">&lt;/treecontrol&gt;</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="classic-js" class="code ng-scope" highlight-lang="js"><span class="pln"> </span><span class="kwd">function</span><span class="pln"> </span><span class="typ">Parent</span><span class="pun">(</span><span class="pln">$scope</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">treedata</span><span class="pun">=</span><span class="pln">createSubTree</span><span class="pun">(</span><span class="lit">3</span><span class="pun">,</span><span class="pln"> </span><span class="lit">4</span><span class="pun">,</span><span class="pln"> </span><span class="str">""</span><span class="pun">);</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">lastClicked </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">buttonClick </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">$event</span><span class="pun">,</span><span class="pln"> node</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n         $scope</span><span class="pun">.</span><span class="pln">lastClicked </span><span class="pun">=</span><span class="pln"> node</span><span class="pun">;</span><span class="pln">\n         $event</span><span class="pun">.</span><span class="pln">stopPropagation</span><span class="pun">();</span><span class="pln">\n     </span><span class="pun">}</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">showSelected </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">sel</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n         $scope</span><span class="pun">.</span><span class="pln">selectedNode </span><span class="pun">=</span><span class="pln"> sel</span><span class="pun">;</span><span class="pln">\n     </span><span class="pun">};</span><span class="pln">\n </span><span class="pun">}</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n       </div>\n      </div>\n     </div>\n     <script save-content="classic-js">\n      function Parent($scope) {\n            $scope.treedata=createSubTree(3, 4, "");\n            $scope.lastClicked = null;\n            $scope.buttonClick = function($event, node) {\n                $scope.lastClicked = node;\n                $event.stopPropagation();\n            }\n            $scope.showSelected = function(sel) {\n                $scope.selectedNode = sel;\n            };\n        }\n     </script>\n    </section>\n    <section class="ng-scope" id="changing" ng-controller="Changing">\n     <div class="page-header">\n      <h1>\n       Changing the live tree\n       <small>\n        (adding and removing nodes)\n       </small>\n      </h1>\n     </div>\n     <div class="row">\n      <div class="col-md-6 show-grid">\n       <div class="panel panel-default">\n        <div class="panel-body">\n         <div class="example-caption">\n          EXAMPLE:\n         </div>\n         <div save-content="changing-html">\n          <treecontrol class="tree-classic ng-isolate-scope" tree-model="treedata">\n           <ul class="ng-scope">\n            <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 1 (id1)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 2 (id2)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 3 (id3)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 4 (id4)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n           </ul>\n          </treecontrol>\n         </div>\n        </div>\n       </div>\n      </div>\n      <div class="col-md-6">\n       <p>\n        You can modify the\n        <code>\n         tree-model\n        </code>\n        bound tree, and the tree will update with the new structure\n       </p>\n       <p>\n        For instance, adding nodes:\n       </p>\n       <ul>\n        <li>\n         <a ng-click="addRoot()">\n          Add a new root\n         </a>\n        </li>\n        <li>\n         <a ng-click="addChildToSecondRoot()">\n          Add a child to the 2nd node\n         </a>\n        </li>\n       </ul>\n      </div>\n     </div>\n     <div class="row">\n      <div class="ng-isolate-scope">\n       <ul class="nav nav-tabs" ng-class="{\'nav-stacked\': vertical, \'nav-justified\': justified}" ng-transclude="">\n        <li class="ng-isolate-scope active" heading="Markup" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          Markup\n         </a>\n        </li>\n        <li class="ng-isolate-scope" heading="JavaScript" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          JavaScript\n         </a>\n        </li>\n       </ul>\n       <div class="tab-content">\n        <!-- ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="changing-html" class="code ng-scope" highlight-lang="html"><span class="pln"> </span><span class="tag">&lt;treecontrol</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"tree-classic"</span><span class="pln"> </span><span class="atn">tree-model</span><span class="pun">=</span><span class="atv">"treedata"</span><span class="tag">&gt;</span><span class="pln">\n     label: {{node.label}} ({{node.id}})\n </span><span class="tag">&lt;/treecontrol&gt;</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="changing-js" class="code ng-scope" highlight-lang="js"><span class="pln"> </span><span class="kwd">function</span><span class="pln"> </span><span class="typ">Changing</span><span class="pun">(</span><span class="pln">$scope</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">treedata</span><span class="pun">=</span><span class="pln">createSubTree</span><span class="pun">(</span><span class="lit">3</span><span class="pun">,</span><span class="pln"> </span><span class="lit">4</span><span class="pun">,</span><span class="pln"> </span><span class="str">""</span><span class="pun">);</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">addRoot </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n         $scope</span><span class="pun">.</span><span class="pln">treedata</span><span class="pun">.</span><span class="pln">push</span><span class="pun">({</span><span class="pln">label</span><span class="pun">:</span><span class="pln"> </span><span class="str">"New Root"</span><span class="pun">,</span><span class="pln"> id</span><span class="pun">:</span><span class="str">"some id"</span><span class="pun">,</span><span class="pln"> children</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[]})</span><span class="pln">\n     </span><span class="pun">};</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">addChildToSecondRoot </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n         $scope</span><span class="pun">.</span><span class="pln">treedata</span><span class="pun">[</span><span class="lit">1</span><span class="pun">].</span><span class="pln">children</span><span class="pun">.</span><span class="pln">push</span><span class="pun">({</span><span class="pln">label</span><span class="pun">:</span><span class="pln"> </span><span class="str">"New Child"</span><span class="pun">,</span><span class="pln"> id</span><span class="pun">:</span><span class="str">"some id"</span><span class="pun">,</span><span class="pln"> children</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[]})</span><span class="pln">\n     </span><span class="pun">};</span><span class="pln">\n </span><span class="pun">}</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n       </div>\n      </div>\n     </div>\n     <script save-content="changing-js">\n      function Changing($scope) {\n            $scope.treedata=createSubTree(3, 4, "");\n            $scope.addRoot = function() {\n                $scope.treedata.push({label: "New Root", id:"some id", children: []})\n            };\n            $scope.addChildToSecondRoot = function() {\n                $scope.treedata[1].children.push({label: "New Child", id:"some id", children: []})\n            };\n        }\n     </script>\n    </section>\n    <section class="ng-scope" id="selected" ng-controller="Selected">\n     <div class="page-header">\n      <h1>\n       Selected Node Binding\n       <small>\n        (selected-node)\n       </small>\n      </h1>\n     </div>\n     <div class="row">\n      <div class="col-md-6 show-grid">\n       <div class="panel panel-default">\n        <div class="panel-body">\n         <div class="example-caption">\n          EXAMPLE:\n         </div>\n         <div save-content="selected-html">\n          <treecontrol class="tree-classic ng-isolate-scope" selected-node="selected" tree-model="treedata">\n           <ul class="ng-scope">\n            <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 1 (id1)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 2 (id2)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label tree-selected" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 3 (id3)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 4 (id4)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n           </ul>\n          </treecontrol>\n         </div>\n        </div>\n       </div>\n      </div>\n      <div class="col-md-6">\n       <p>\n        The\n        <code>\n         selected-node\n        </code>\n        attribute of\n        <code>\n         treecontrol\n        </code>\n        is bound to the currently selected node object of the tree.\n                Like any other Angular bound value, updating selected-node will set the tree selection, and clicking the tree (selecting a node) will\n                update back the selected-node.\n       </p>\n       <p>\n        Setting\n        <code>\n         selected-node\n        </code>\n        can also be used to set the default selected node of the tree.\n       </p>\n       <p>\n        Note that if using multiple selection, the selected nodes are bound to an Array property\n        <code>\n         selected-nodes\n        </code>\n        instead of\n        <code>\n         selected-node\n        </code>\n        .\n       </p>\n       <p>\n        <a ng-click="selectNode(0)">\n         select node 1\n        </a>\n        <br/>\n        <a ng-click="selectNode(1)">\n         select node 2\n        </a>\n        <br/>\n        <a ng-click="selectNode(2)">\n         select node 3\n        </a>\n        <br/>\n        <a ng-click="selectNode(3)">\n         select node 4\n        </a>\n        <br/>\n        <a ng-click="clearSelected()">\n         clear Selected\n        </a>\n       </p>\n       <p>\n        Selected node:\n        <code class="ng-binding">\n         Node 3\n        </code>\n       </p>\n      </div>\n     </div>\n     <div class="row">\n      <div class="ng-isolate-scope">\n       <ul class="nav nav-tabs" ng-class="{\'nav-stacked\': vertical, \'nav-justified\': justified}" ng-transclude="">\n        <li class="ng-isolate-scope active" heading="Markup" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          Markup\n         </a>\n        </li>\n        <li class="ng-isolate-scope" heading="JavaScript" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          JavaScript\n         </a>\n        </li>\n       </ul>\n       <div class="tab-content">\n        <!-- ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="selected-html" class="code ng-scope" highlight-lang="html"><span class="pln"> </span><span class="tag">&lt;treecontrol</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"tree-classic"</span><span class="pln"> </span><span class="atn">tree-model</span><span class="pun">=</span><span class="atv">"treedata"</span><span class="pln"> </span><span class="atn">selected-node</span><span class="pun">=</span><span class="atv">"selected"</span><span class="tag">&gt;</span><span class="pln">\n     label: {{node.label}} ({{node.id}})\n </span><span class="tag">&lt;/treecontrol&gt;</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="selected-js" class="code ng-scope" highlight-lang="js"><span class="pln"> </span><span class="kwd">function</span><span class="pln"> </span><span class="typ">Selected</span><span class="pun">(</span><span class="pln">$scope</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">treedata</span><span class="pun">=</span><span class="pln">createSubTree</span><span class="pun">(</span><span class="lit">3</span><span class="pun">,</span><span class="pln"> </span><span class="lit">4</span><span class="pun">,</span><span class="pln"> </span><span class="str">""</span><span class="pun">);</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">selected </span><span class="pun">=</span><span class="pln"> $scope</span><span class="pun">.</span><span class="pln">treedata</span><span class="pun">[</span><span class="lit">2</span><span class="pun">];</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">selectNode </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">num</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n         $scope</span><span class="pun">.</span><span class="pln">selected </span><span class="pun">=</span><span class="pln"> $scope</span><span class="pun">.</span><span class="pln">treedata</span><span class="pun">[</span><span class="pln">num</span><span class="pun">];</span><span class="pln">\n     </span><span class="pun">};</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">clearSelected </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n         $scope</span><span class="pun">.</span><span class="pln">selected </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">undefined</span><span class="pun">;</span><span class="pln">\n     </span><span class="pun">}</span><span class="pln">\n </span><span class="pun">}</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n       </div>\n      </div>\n     </div>\n     <script save-content="selected-js">\n      function Selected($scope) {\n            $scope.treedata=createSubTree(3, 4, "");\n            $scope.selected = $scope.treedata[2];\n            $scope.selectNode = function(num) {\n                $scope.selected = $scope.treedata[num];\n            };\n            $scope.clearSelected = function() {\n                $scope.selected = undefined;\n            }\n        }\n     </script>\n    </section>\n    <section class="ng-scope" id="expandedNodes" ng-controller="ExpandedNodes">\n     <div class="page-header">\n      <h1>\n       Expanded Nodes Binding\n       <small>\n        (expanded-nodes)\n       </small>\n      </h1>\n     </div>\n     <div class="row">\n      <div class="col-md-6 show-grid">\n       <div class="panel panel-default">\n        <div class="panel-body">\n         <div class="example-caption">\n          EXAMPLE:\n         </div>\n         <div save-content="default-expanded-html">\n          <treecontrol class="tree-classic ng-isolate-scope" expanded-nodes="expandedNodes" options="opts" tree-model="treedata">\n           <ul class="ng-scope">\n            <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 1 (id1)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-expanded" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 2 (id2)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n             <treeitem class="ng-scope" ng-if="nodeExpanded()">\n              <ul class="ng-scope">\n               <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n               <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                </i>\n                <i class="tree-leaf-head">\n                </i>\n                <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n                 <span class="ng-binding ng-scope">\n                  label: Node 2.1 (id2.1)\n                 </span>\n                </div>\n                <!-- ngIf: nodeExpanded() -->\n               </li>\n               <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n               <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                </i>\n                <i class="tree-leaf-head">\n                </i>\n                <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n                 <span class="ng-binding ng-scope">\n                  label: Node 2.2 (id2.2)\n                 </span>\n                </div>\n                <!-- ngIf: nodeExpanded() -->\n               </li>\n               <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n               <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                </i>\n                <i class="tree-leaf-head">\n                </i>\n                <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n                 <span class="ng-binding ng-scope">\n                  label: Node 2.3 (id2.3)\n                 </span>\n                </div>\n                <!-- ngIf: nodeExpanded() -->\n               </li>\n               <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n               <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                </i>\n                <i class="tree-leaf-head">\n                </i>\n                <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n                 <span class="ng-binding ng-scope">\n                  label: Node 2.4 (id2.4)\n                 </span>\n                </div>\n                <!-- ngIf: nodeExpanded() -->\n               </li>\n               <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n              </ul>\n             </treeitem>\n             <!-- end ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 3 (id3)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-expanded" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 4 (id4)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n             <treeitem class="ng-scope" ng-if="nodeExpanded()">\n              <ul class="ng-scope">\n               <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n               <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                </i>\n                <i class="tree-leaf-head">\n                </i>\n                <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n                 <span class="ng-binding ng-scope">\n                  label: Node 4.1 (id4.1)\n                 </span>\n                </div>\n                <!-- ngIf: nodeExpanded() -->\n               </li>\n               <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n               <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                </i>\n                <i class="tree-leaf-head">\n                </i>\n                <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n                 <span class="ng-binding ng-scope">\n                  label: Node 4.2 (id4.2)\n                 </span>\n                </div>\n                <!-- ngIf: nodeExpanded() -->\n               </li>\n               <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n               <li class="ng-scope tree-expanded" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                </i>\n                <i class="tree-leaf-head">\n                </i>\n                <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n                 <span class="ng-binding ng-scope">\n                  label: Node 4.3 (id4.3)\n                 </span>\n                </div>\n                <!-- ngIf: nodeExpanded() -->\n                <treeitem class="ng-scope" ng-if="nodeExpanded()">\n                 <ul class="ng-scope">\n                  <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n                    <span class="ng-binding ng-scope">\n                     label: Node 4.3.1 (id4.3.1)\n                    </span>\n                   </div>\n                   <!-- ngIf: nodeExpanded() -->\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n                    <span class="ng-binding ng-scope">\n                     label: Node 4.3.2 (id4.3.2)\n                    </span>\n                   </div>\n                   <!-- ngIf: nodeExpanded() -->\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n                    <span class="ng-binding ng-scope">\n                     label: Node 4.3.3 (id4.3.3)\n                    </span>\n                   </div>\n                   <!-- ngIf: nodeExpanded() -->\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n                    <span class="ng-binding ng-scope">\n                     label: Node 4.3.4 (id4.3.4)\n                    </span>\n                   </div>\n                   <!-- ngIf: nodeExpanded() -->\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                 </ul>\n                </treeitem>\n                <!-- end ngIf: nodeExpanded() -->\n               </li>\n               <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n               <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                </i>\n                <i class="tree-leaf-head">\n                </i>\n                <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n                 <span class="ng-binding ng-scope">\n                  label: Node 4.4 (id4.4)\n                 </span>\n                </div>\n                <!-- ngIf: nodeExpanded() -->\n               </li>\n               <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n              </ul>\n             </treeitem>\n             <!-- end ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n           </ul>\n          </treecontrol>\n         </div>\n        </div>\n       </div>\n      </div>\n      <div class="col-md-6">\n       <p>\n        The\n        <code>\n         expanded-nodes\n        </code>\n        attribute of\n        <code>\n         treecontrol\n        </code>\n        is bound to the currently selected node object of the tree.\n                Like any other Angular bound value, updating\n        <code>\n         expanded-nodes\n        </code>\n        will set the expanded nodes in the tree,\n                and expanding or contracting nodes in the tree will update the\n        <code>\n         expanded-nodes\n        </code>\n        property.\n       </p>\n       <p>\n        Setting\n        <code>\n         expanded-nodes\n        </code>\n        can also be used to set the default expanded nodes of the tree.\n       </p>\n       <p>\n        <a ng-click="setExpanded()">\n         Expand 2, 3 and 3.3 (only)\n        </a>\n       </p>\n       <p>\n        The currently expanded nodes:\n       </p>\n       <ul>\n        <!-- ngRepeat: node in expandedNodes -->\n        <li class="ng-binding ng-scope" ng-repeat="node in expandedNodes">\n         Node 2\n        </li>\n        <!-- end ngRepeat: node in expandedNodes -->\n        <li class="ng-binding ng-scope" ng-repeat="node in expandedNodes">\n         Node 4\n        </li>\n        <!-- end ngRepeat: node in expandedNodes -->\n        <li class="ng-binding ng-scope" ng-repeat="node in expandedNodes">\n         Node 4.3\n        </li>\n        <!-- end ngRepeat: node in expandedNodes -->\n        <li class="ng-binding ng-scope" ng-repeat="node in expandedNodes">\n         Node 4.3.2\n        </li>\n        <!-- end ngRepeat: node in expandedNodes -->\n       </ul>\n      </div>\n     </div>\n     <div class="row">\n      <div class="ng-isolate-scope">\n       <ul class="nav nav-tabs" ng-class="{\'nav-stacked\': vertical, \'nav-justified\': justified}" ng-transclude="">\n        <li class="ng-isolate-scope active" heading="Markup" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          Markup\n         </a>\n        </li>\n        <li class="ng-isolate-scope" heading="JavaScript" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          JavaScript\n         </a>\n        </li>\n       </ul>\n       <div class="tab-content">\n        <!-- ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="default-expanded-html" class="code ng-scope" highlight-lang="html"><span class="pln"> </span><span class="tag">&lt;treecontrol</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"tree-classic"</span><span class="pln"> </span><span class="atn">tree-model</span><span class="pun">=</span><span class="atv">"treedata"</span><span class="pln"> </span><span class="atn">expanded-nodes</span><span class="pun">=</span><span class="atv">"expandedNodes"</span><span class="pln"> </span><span class="atn">options</span><span class="pun">=</span><span class="atv">"opts"</span><span class="tag">&gt;</span><span class="pln">\n     label: {{node.label}} ({{node.id}})\n </span><span class="tag">&lt;/treecontrol&gt;</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="default-expanded-js" class="code ng-scope" highlight-lang="js"><span class="pln"> </span><span class="kwd">function</span><span class="pln"> </span><span class="typ">ExpandedNodes</span><span class="pun">(</span><span class="pln">$scope</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">treedata</span><span class="pun">=</span><span class="pln">createSubTree</span><span class="pun">(</span><span class="lit">3</span><span class="pun">,</span><span class="pln"> </span><span class="lit">4</span><span class="pun">,</span><span class="pln"> </span><span class="str">""</span><span class="pun">);</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">expandedNodes </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[</span><span class="pln">$scope</span><span class="pun">.</span><span class="pln">treedata</span><span class="pun">[</span><span class="lit">1</span><span class="pun">],</span><span class="pln">\n         $scope</span><span class="pun">.</span><span class="pln">treedata</span><span class="pun">[</span><span class="lit">3</span><span class="pun">],</span><span class="pln">\n         $scope</span><span class="pun">.</span><span class="pln">treedata</span><span class="pun">[</span><span class="lit">3</span><span class="pun">].</span><span class="pln">children</span><span class="pun">[</span><span class="lit">2</span><span class="pun">],</span><span class="pln">\n         $scope</span><span class="pun">.</span><span class="pln">treedata</span><span class="pun">[</span><span class="lit">3</span><span class="pun">].</span><span class="pln">children</span><span class="pun">[</span><span class="lit">2</span><span class="pun">].</span><span class="pln">children</span><span class="pun">[</span><span class="lit">1</span><span class="pun">]];</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">setExpanded </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n         $scope</span><span class="pun">.</span><span class="pln">expandedNodes </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[</span><span class="pln">$scope</span><span class="pun">.</span><span class="pln">treedata</span><span class="pun">[</span><span class="lit">1</span><span class="pun">],</span><span class="pln">\n             $scope</span><span class="pun">.</span><span class="pln">treedata</span><span class="pun">[</span><span class="lit">2</span><span class="pun">],</span><span class="pln">\n             $scope</span><span class="pun">.</span><span class="pln">treedata</span><span class="pun">[</span><span class="lit">2</span><span class="pun">].</span><span class="pln">children</span><span class="pun">[</span><span class="lit">2</span><span class="pun">]</span><span class="pln">\n         </span><span class="pun">];</span><span class="pln">\n     </span><span class="pun">};</span><span class="pln">\n </span><span class="pun">}</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n       </div>\n      </div>\n     </div>\n     <script save-content="default-expanded-js">\n      function ExpandedNodes($scope) {\n            $scope.treedata=createSubTree(3, 4, "");\n            $scope.expandedNodes = [$scope.treedata[1],\n                $scope.treedata[3],\n                $scope.treedata[3].children[2],\n                $scope.treedata[3].children[2].children[1]];\n            $scope.setExpanded = function() {\n                $scope.expandedNodes = [$scope.treedata[1],\n                    $scope.treedata[2],\n                    $scope.treedata[2].children[2]\n                ];\n            };\n        }\n     </script>\n    </section>\n    <section class="ng-scope" id="events" ng-controller="Events">\n     <div class="page-header">\n      <h1>\n       Events\n       <small>\n        (on-expand &amp; on-selection)\n       </small>\n      </h1>\n     </div>\n     <div class="row">\n      <div class="col-md-6 show-grid">\n       <div class="panel panel-default">\n        <div class="panel-body">\n         <div class="example-caption">\n          EXAMPLE:\n         </div>\n         <div save-content="events-html">\n          <treecontrol class="tree-classic ng-isolate-scope" on-node-toggle="showToggle(node, expanded, $parentNode, $index, $first, $middle, $last, $odd, $even, $path)" on-selection="showSelected(node, selected, $parentNode, $index, $first, $middle, $last, $odd, $even, $path)" tree-model="treedata">\n           <ul class="ng-scope">\n            <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 1 (id1)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 2 (id2)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 3 (id3)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 4 (id4)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n           </ul>\n          </treecontrol>\n         </div>\n        </div>\n       </div>\n      </div>\n      <div class="col-md-6">\n       <p>\n        The tree supports events for selection and expansion of nodes. The events are set using the\n        <code>\n         on-selection\n        </code>\n        and\n        <code>\n         on-node-toggle\n        </code>\n        attributes\n            which values are evaluated as angular expressions (like\n        <code>\n         ng-click\n        </code>\n        value). The expression can use the\n        <code>\n         node\n        </code>\n        and\n        <code>\n         selected\n        </code>\n        variables (for on-selection) or\n                the\n        <code>\n         node\n        </code>\n        and\n        <code>\n         expanded\n        </code>\n        variables (for on-node-toggle) for context of the clicked node and if it was selected / deselected or expanded / collapsed.\n       </p>\n       <p>\n        Note the events are fired only on the clicked node. If using the tree in single selection mode and one node is selected, when selecting a different node\n            only one on-selection event will be fired for the newly selected node. The old selected node will not be selected anymore without an on-selected event.\n       </p>\n       <p>\n        In order to prevent selection of branches (folders) in the tree, set the\n        <code>\n         options.dirSelectable\n        </code>\n        to\n        <code>\n         false\n        </code>\n        .\n                Clicking folder labels at this point will expand and contract the node.\n       </p>\n       <p>\n        Events fired:\n       </p>\n       <ul id="events-listing">\n       </ul>\n      </div>\n     </div>\n     <table class="table table-bordered table-striped">\n      <thead>\n       <tr>\n        <td>\n         Variable\n        </td>\n        <td>\n         Type\n        </td>\n        <td>\n         Details\n        </td>\n       </tr>\n      </thead>\n      <tbody>\n       <tr>\n        <td>\n         <code>\n          node\n         </code>\n        </td>\n        <td>\n         <span class="label type-hint-object">\n          Object\n         </span>\n        </td>\n        <td>\n         The current node the label represents.\n        </td>\n       </tr>\n       <tr>\n        <td>\n         <code>\n          $parentNode\n         </code>\n        </td>\n        <td>\n         <span class="label type-hint-object">\n          Object\n         </span>\n        </td>\n        <td>\n         The parent of the current node.\n        </td>\n       </tr>\n       <tr>\n        <td>\n         <code>\n          $index\n         </code>\n        </td>\n        <td>\n         <span class="label type-hint-number">\n          number\n         </span>\n        </td>\n        <td>\n         iterator offset of the repeated element under one parent node(0..length-1).\n        </td>\n       </tr>\n       <tr>\n        <td>\n         <code>\n          $first\n         </code>\n        </td>\n        <td>\n         <span class="label type-hint-boolean">\n          boolean\n         </span>\n        </td>\n        <td>\n         true if the repeated element is first in the iterator.\n        </td>\n       </tr>\n       <tr>\n        <td>\n         <code>\n          $middle\n         </code>\n        </td>\n        <td>\n         <span class="label type-hint-boolean">\n          boolean\n         </span>\n        </td>\n        <td>\n         true if the repeated element is between the first and last in the iterator.\n        </td>\n       </tr>\n       <tr>\n        <td>\n         <code>\n          $last\n         </code>\n        </td>\n        <td>\n         <span class="label type-hint-boolean">\n          boolean\n         </span>\n        </td>\n        <td>\n         true if the repeated element is last in the iterator.\n        </td>\n       </tr>\n       <tr>\n        <td>\n         <code>\n          $odd\n         </code>\n        </td>\n        <td>\n         <span class="label type-hint-boolean">\n          boolean\n         </span>\n        </td>\n        <td>\n         true if the iterator position $index is even (otherwise false).\n        </td>\n       </tr>\n       <tr>\n        <td>\n         <code>\n          $even\n         </code>\n        </td>\n        <td>\n         <span class="label type-hint-boolean">\n          boolean\n         </span>\n        </td>\n        <td>\n         true if the iterator position $index is odd (otherwise false).\n        </td>\n       </tr>\n       <tr>\n        <td>\n         <code>\n          $path\n         </code>\n        </td>\n        <td>\n         <span class="label type-hint-function">\n          function\n         </span>\n        </td>\n        <td>\n         a function that when called, returns the path to the current node.\n        </td>\n       </tr>\n       <tr>\n        <td>\n         <code>\n          selected\n         </code>\n        </td>\n        <td>\n         <span class="label type-hint-boolean">\n          boolean\n         </span>\n        </td>\n        <td>\n         true if the node is selected, false if it is de-selected. Only applies to the on-selection event.\n        </td>\n       </tr>\n       <tr>\n        <td>\n         <code>\n          expanded\n         </code>\n        </td>\n        <td>\n         <span class="label type-hint-boolean">\n          boolean\n         </span>\n        </td>\n        <td>\n         true if the node is expanding, false if the node is contracting. Only applies to the on-node-toggle event.\n        </td>\n       </tr>\n      </tbody>\n     </table>\n     <div class="row">\n      <div class="ng-isolate-scope">\n       <ul class="nav nav-tabs" ng-class="{\'nav-stacked\': vertical, \'nav-justified\': justified}" ng-transclude="">\n        <li class="ng-isolate-scope active" heading="Markup" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          Markup\n         </a>\n        </li>\n        <li class="ng-isolate-scope" heading="JavaScript" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          JavaScript\n         </a>\n        </li>\n       </ul>\n       <div class="tab-content">\n        <!-- ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="events-html" class="code ng-scope" highlight-lang="html"><span class="pln"> </span><span class="tag">&lt;treecontrol</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"tree-classic"</span><span class="pln"> </span><span class="atn">tree-model</span><span class="pun">=</span><span class="atv">"treedata"</span><span class="pln"> </span><span class="atn">on-selection</span><span class="pun">=</span><span class="atv">"showSelected(node, selected, $parentNode, $index, $first, $middle, $last, $odd, $even, $path)"</span><span class="pln"> </span><span class="atn">on-node-toggle</span><span class="pun">=</span><span class="atv">"showToggle(node, expanded, $parentNode, $index, $first, $middle, $last, $odd, $even, $path)"</span><span class="tag">&gt;</span><span class="pln">\n     label: {{node.label}} ({{node.id}})\n </span><span class="tag">&lt;/treecontrol&gt;</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="events-js" class="code ng-scope" highlight-lang="js"><span class="pln"> </span><span class="kwd">function</span><span class="pln"> </span><span class="typ">Events</span><span class="pun">(</span><span class="pln">$scope</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">treedata</span><span class="pun">=</span><span class="pln">createSubTree</span><span class="pun">(</span><span class="lit">3</span><span class="pun">,</span><span class="pln"> </span><span class="lit">4</span><span class="pun">,</span><span class="pln"> </span><span class="str">""</span><span class="pun">);</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">showToggle </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">node</span><span class="pun">,</span><span class="pln"> expanded</span><span class="pun">,</span><span class="pln"> $parentNode</span><span class="pun">,</span><span class="pln"> $index</span><span class="pun">,</span><span class="pln"> $first</span><span class="pun">,</span><span class="pln"> $middle</span><span class="pun">,</span><span class="pln"> $last</span><span class="pun">,</span><span class="pln"> $odd</span><span class="pun">,</span><span class="pln"> $even</span><span class="pun">,</span><span class="pln"> $path</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n         </span><span class="kwd">var</span><span class="pln"> parent </span><span class="pun">=</span><span class="pln"> $parentNode</span><span class="pun">?(</span><span class="str">"child of: "</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> $parentNode</span><span class="pun">.</span><span class="pln">label</span><span class="pun">):</span><span class="str">"root node"</span><span class="pun">;</span><span class="pln">\n         </span><span class="kwd">var</span><span class="pln"> location </span><span class="pun">=</span><span class="pln"> $first</span><span class="pun">?</span><span class="str">"first"</span><span class="pun">:(</span><span class="pln">$last</span><span class="pun">?</span><span class="str">"last"</span><span class="pun">:(</span><span class="str">"middle node at index "</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> $index</span><span class="pun">));</span><span class="pln">\n         </span><span class="kwd">var</span><span class="pln"> oddEven </span><span class="pun">=</span><span class="pln"> $odd</span><span class="pun">?</span><span class="str">"odd"</span><span class="pun">:</span><span class="str">"even"</span><span class="pun">;</span><span class="pln">\n         </span><span class="kwd">var</span><span class="pln"> path </span><span class="pun">=</span><span class="pln"> $path</span><span class="pun">().</span><span class="pln">map</span><span class="pun">(</span><span class="kwd">function</span><span class="pun">(</span><span class="pln">node</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="kwd">return</span><span class="pln"> node</span><span class="pun">.</span><span class="pln">label</span><span class="pun">});</span><span class="pln">\n         $</span><span class="pun">(</span><span class="str">"#events-listing"</span><span class="pun">).</span><span class="pln">append</span><span class="pun">(</span><span class="str">"</span><li><span class="str">"</span><span class="pun">+</span><span class="pln">node</span><span class="pun">.</span><span class="pln">label</span><span class="pun">+</span><span class="pln"> </span><span class="pun">(</span><span class="pln">expanded</span><span class="pun">?</span><span class="str">" expanded"</span><span class="pun">:</span><span class="str">" collapsed"</span><span class="pun">)</span><span class="pln"> </span><span class="pun">+</span><span class="str">" ("</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> parent </span><span class="pun">+</span><span class="pln"> </span><span class="str">", "</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> location </span><span class="pun">+</span><span class="str">", "</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> oddEven </span><span class="pun">+</span><span class="pln"> </span><span class="str">", ["</span><span class="pun">+</span><span class="pln"> path</span><span class="pun">+</span><span class="str">"])</span></li><span class="str">");</span><span class="pln">\n     </span><span class="pun">};</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">showSelected </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">node</span><span class="pun">,</span><span class="pln"> selected</span><span class="pun">,</span><span class="pln"> $parentNode</span><span class="pun">,</span><span class="pln"> $index</span><span class="pun">,</span><span class="pln"> $first</span><span class="pun">,</span><span class="pln"> $middle</span><span class="pun">,</span><span class="pln"> $last</span><span class="pun">,</span><span class="pln"> $odd</span><span class="pun">,</span><span class="pln"> $even</span><span class="pun">,</span><span class="pln"> $path</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n         </span><span class="kwd">var</span><span class="pln"> parent </span><span class="pun">=</span><span class="pln"> $parentNode</span><span class="pun">?(</span><span class="str">"child of: "</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> $parentNode</span><span class="pun">.</span><span class="pln">label</span><span class="pun">):</span><span class="str">"root node"</span><span class="pun">;</span><span class="pln">\n         </span><span class="kwd">var</span><span class="pln"> location </span><span class="pun">=</span><span class="pln"> $first</span><span class="pun">?</span><span class="str">"first"</span><span class="pun">:(</span><span class="pln">$last</span><span class="pun">?</span><span class="str">"last"</span><span class="pun">:(</span><span class="str">"middle node at index "</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> $index</span><span class="pun">));</span><span class="pln">\n         </span><span class="kwd">var</span><span class="pln"> oddEven </span><span class="pun">=</span><span class="pln"> $odd</span><span class="pun">?</span><span class="str">"odd"</span><span class="pun">:</span><span class="str">"even"</span><span class="pun">;</span><span class="pln">\n         </span><span class="kwd">var</span><span class="pln"> path </span><span class="pun">=</span><span class="pln"> $path</span><span class="pun">().</span><span class="pln">map</span><span class="pun">(</span><span class="kwd">function</span><span class="pun">(</span><span class="pln">node</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="kwd">return</span><span class="pln"> node</span><span class="pun">.</span><span class="pln">label</span><span class="pun">});</span><span class="pln">\n         $</span><span class="pun">(</span><span class="str">"#events-listing"</span><span class="pun">).</span><span class="pln">append</span><span class="pun">(</span><span class="str">"</span><li><span class="str">"</span><span class="pun">+</span><span class="pln">node</span><span class="pun">.</span><span class="pln">label</span><span class="pun">+</span><span class="pln"> </span><span class="pun">(</span><span class="pln">selected</span><span class="pun">?</span><span class="str">" selected"</span><span class="pun">:</span><span class="str">" deselected"</span><span class="pun">)</span><span class="pln"> </span><span class="pun">+</span><span class="str">" ("</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> parent </span><span class="pun">+</span><span class="pln"> </span><span class="str">", "</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> location </span><span class="pun">+</span><span class="str">", "</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> oddEven </span><span class="pun">+</span><span class="pln"> </span><span class="str">", ["</span><span class="pun">+</span><span class="pln"> path </span><span class="pun">+</span><span class="str">"])</span></li><span class="str">");</span><span class="pln">\n     </span><span class="pun">};</span><span class="pln">\n </span><span class="pun">}</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n       </div>\n      </div>\n     </div>\n     <script save-content="events-js">\n      function Events($scope) {\n            $scope.treedata=createSubTree(3, 4, "");\n            $scope.showToggle = function(node, expanded, $parentNode, $index, $first, $middle, $last, $odd, $even, $path) {\n                var parent = $parentNode?("child of: " + $parentNode.label):"root node";\n                var location = $first?"first":($last?"last":("middle node at index " + $index));\n                var oddEven = $odd?"odd":"even";\n                var path = $path().map(function(node) {return node.label});\n                $("#events-listing").append("<li>"+node.label+ (expanded?" expanded":" collapsed") +" (" + parent + ", " + location +", " + oddEven + ", ["+ path+"])</li>");\n            };\n            $scope.showSelected = function(node, selected, $parentNode, $index, $first, $middle, $last, $odd, $even, $path) {\n                var parent = $parentNode?("child of: " + $parentNode.label):"root node";\n                var location = $first?"first":($last?"last":("middle node at index " + $index));\n                var oddEven = $odd?"odd":"even";\n                var path = $path().map(function(node) {return node.label});\n                $("#events-listing").append("<li>"+node.label+ (selected?" selected":" deselected") +" (" + parent + ", " + location +", " + oddEven + ", ["+ path +"])</li>");\n            };\n        }\n     </script>\n    </section>\n    <section class="ng-scope" id="multi-selection" ng-controller="MultiSelection">\n     <div class="page-header">\n      <h1>\n       Multi Selection\n       <small>\n        (options.multiSelect &amp; selected-nodes)\n       </small>\n      </h1>\n     </div>\n     <div class="row">\n      <div class="col-md-6 show-grid">\n       <div class="panel panel-default">\n        <div class="panel-body">\n         <div class="example-caption">\n          EXAMPLE:\n         </div>\n         <div save-content="multi-selection-html">\n          <treecontrol class="tree-classic ng-isolate-scope" on-selection="showSelected(node, selected)" options="treeOptions" selected-nodes="selectedNodes" tree-model="treedata">\n           <ul class="ng-scope">\n            <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 1 (id1)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 2 (id2)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 3 (id3)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 4 (id4)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n           </ul>\n          </treecontrol>\n         </div>\n        </div>\n       </div>\n      </div>\n      <div class="col-md-6">\n       <p>\n        The tree control supports multi-selection using the\n        <code>\n         options.multiSelect\n        </code>\n        option and the\n        <code>\n         selected-nodes\n        </code>\n        attribute (instead of the\n        <code>\n         selected-node\n        </code>\n        attribute in single selection mode).\n        <code>\n         selected-nodes\n        </code>\n        is expected to be an Array which will contain the selected nodes.\n            When using multi-selection, selecting a node adds it to the selected-nodes array and a second click remove it from the array.\n       </p>\n       <div class="row">\n        <div class="col-md-6">\n         <p>\n          Selected Nodes:\n         </p>\n         <ul id="multi-selection-listing">\n          <!-- ngRepeat: node in selectedNodes -->\n         </ul>\n        </div>\n        <div class="col-md-6">\n         <p>\n          Selection Events:\n         </p>\n         <ul id="multi-selection-events-listing">\n         </ul>\n        </div>\n       </div>\n      </div>\n     </div>\n     <div class="row">\n      <div class="ng-isolate-scope">\n       <ul class="nav nav-tabs" ng-class="{\'nav-stacked\': vertical, \'nav-justified\': justified}" ng-transclude="">\n        <li class="ng-isolate-scope active" heading="Markup" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          Markup\n         </a>\n        </li>\n        <li class="ng-isolate-scope" heading="JavaScript" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          JavaScript\n         </a>\n        </li>\n       </ul>\n       <div class="tab-content">\n        <!-- ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="multi-selection-html" class="code ng-scope" highlight-lang="html"><span class="pln"> </span><span class="tag">&lt;treecontrol</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"tree-classic"</span><span class="pln"> </span><span class="atn">tree-model</span><span class="pun">=</span><span class="atv">"treedata"</span><span class="pln"> </span><span class="atn">selected-nodes</span><span class="pun">=</span><span class="atv">"selectedNodes"</span><span class="pln"> </span><span class="atn">on-selection</span><span class="pun">=</span><span class="atv">"showSelected(node, selected)"</span><span class="pln"> </span><span class="atn">options</span><span class="pun">=</span><span class="atv">"treeOptions"</span><span class="tag">&gt;</span><span class="pln">\n     label: {{node.label}} ({{node.id}})\n </span><span class="tag">&lt;/treecontrol&gt;</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="multi-selection-js" class="code ng-scope" highlight-lang="js"><span class="pln"> </span><span class="kwd">function</span><span class="pln"> </span><span class="typ">MultiSelection</span><span class="pun">(</span><span class="pln">$scope</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">treeOptions </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{</span><span class="pln">multiSelection</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">};</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">treedata</span><span class="pun">=</span><span class="pln">createSubTree</span><span class="pun">(</span><span class="lit">3</span><span class="pun">,</span><span class="pln"> </span><span class="lit">4</span><span class="pun">,</span><span class="pln"> </span><span class="str">""</span><span class="pun">);</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">selectedNodes </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[];</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">showSelected </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">node</span><span class="pun">,</span><span class="pln"> selected</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n         $</span><span class="pun">(</span><span class="str">"#multi-selection-events-listing"</span><span class="pun">).</span><span class="pln">append</span><span class="pun">(</span><span class="str">"</span><li><span class="str">"</span><span class="pun">+</span><span class="pln">node</span><span class="pun">.</span><span class="pln">label</span><span class="pun">+</span><span class="pln"> </span><span class="pun">(</span><span class="pln">selected</span><span class="pun">?</span><span class="str">" selected"</span><span class="pun">:</span><span class="str">" deselected"</span><span class="pun">)</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="str">"</span></li><span class="str">");</span><span class="pln">\n     </span><span class="pun">};</span><span class="pln">\n </span><span class="pun">}</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n       </div>\n      </div>\n     </div>\n     <script save-content="multi-selection-js">\n      function MultiSelection($scope) {\n            $scope.treeOptions = {multiSelection: true};\n            $scope.treedata=createSubTree(3, 4, "");\n            $scope.selectedNodes = [];\n            $scope.showSelected = function(node, selected) {\n                $("#multi-selection-events-listing").append("<li>"+node.label+ (selected?" selected":" deselected") + "</li>");\n            };\n        }\n     </script>\n    </section>\n    <section class="ng-scope" id="dirSelection" ng-controller="DirSelection">\n     <div class="page-header">\n      <h1>\n       Clicking Labels Expand &amp; Collapse\n       <small>\n        (options.dirSelectable)\n       </small>\n      </h1>\n     </div>\n     <div class="row">\n      <div class="col-md-6 show-grid">\n       <div class="panel panel-default">\n        <div class="panel-body">\n         <div class="example-caption">\n          EXAMPLE:\n         </div>\n         <div save-content="dir-selection-html">\n          <treecontrol class="tree-classic ng-isolate-scope" on-selection="showSelected(node)" options="opts" tree-model="treedata">\n           <ul class="ng-scope">\n            <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 1 (id1)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 2 (id2)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 3 (id3)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 4 (id4)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n           </ul>\n          </treecontrol>\n         </div>\n        </div>\n       </div>\n      </div>\n      <div class="col-md-6">\n       <p>\n        In order to prevent selection of branches (folders) in the tree, set the\n        <code>\n         options.dirSelectable\n        </code>\n        to\n        <code>\n         false\n        </code>\n        .\n                Clicking folder labels at this point will expand and contract the node.\n       </p>\n       <p>\n        Selected node:\n        <code class="ng-binding">\n         N/A\n        </code>\n       </p>\n      </div>\n     </div>\n     <div class="row">\n      <div class="ng-isolate-scope">\n       <ul class="nav nav-tabs" ng-class="{\'nav-stacked\': vertical, \'nav-justified\': justified}" ng-transclude="">\n        <li class="ng-isolate-scope active" heading="Markup" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          Markup\n         </a>\n        </li>\n        <li class="ng-isolate-scope" heading="JavaScript" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          JavaScript\n         </a>\n        </li>\n       </ul>\n       <div class="tab-content">\n        <!-- ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="dir-selection-html" class="code ng-scope" highlight-lang="html"><span class="pln"> </span><span class="tag">&lt;treecontrol</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"tree-classic"</span><span class="pln"> </span><span class="atn">tree-model</span><span class="pun">=</span><span class="atv">"treedata"</span><span class="pln"> </span><span class="atn">options</span><span class="pun">=</span><span class="atv">"opts"</span><span class="pln"> </span><span class="atn">on-selection</span><span class="pun">=</span><span class="atv">"showSelected(node)"</span><span class="tag">&gt;</span><span class="pln">\n     label: {{node.label}} ({{node.id}})\n </span><span class="tag">&lt;/treecontrol&gt;</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="dir-selection-js" class="code ng-scope" highlight-lang="js"><span class="pln"> </span><span class="kwd">function</span><span class="pln"> </span><span class="typ">IsSelectable</span><span class="pun">(</span><span class="pln">$scope</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">treedata</span><span class="pun">=</span><span class="pln">createSubTree</span><span class="pun">(</span><span class="lit">3</span><span class="pun">,</span><span class="pln"> </span><span class="lit">4</span><span class="pun">,</span><span class="pln"> </span><span class="str">""</span><span class="pun">);</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">opts </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n         isSelectable</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">node</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n             </span><span class="kwd">return</span><span class="pln"> node</span><span class="pun">.</span><span class="pln">label</span><span class="pun">.</span><span class="pln">indexOf</span><span class="pun">(</span><span class="str">"Node 1"</span><span class="pun">)</span><span class="pln"> </span><span class="pun">!==</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">\n         </span><span class="pun">}</span><span class="pln">\n     </span><span class="pun">};</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">showSelected </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">sel</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n         $scope</span><span class="pun">.</span><span class="pln">selectedNode </span><span class="pun">=</span><span class="pln"> sel</span><span class="pun">;</span><span class="pln">\n     </span><span class="pun">};</span><span class="pln">\n </span><span class="pun">}</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n       </div>\n      </div>\n     </div>\n     <script save-content="dir-selection-js">\n      function DirSelection($scope) {\n            $scope.treedata=createSubTree(3, 4, "");\n            $scope.opts = {\n                dirSelectable: false\n            };\n            $scope.showSelected = function(sel) {\n                $scope.selectedNode = sel;\n            };\n        }\n     </script>\n    </section>\n    <section class="ng-scope" id="isSelectable" ng-controller="IsSelectable">\n     <div class="page-header">\n      <h1>\n       Disabling Selection of Nodes\n       <small>\n        (options.isSelectable)\n       </small>\n      </h1>\n     </div>\n     <div class="row">\n      <div class="col-md-6 show-grid">\n       <div class="panel panel-default">\n        <div class="panel-body">\n         <div class="example-caption">\n          EXAMPLE:\n         </div>\n         <div save-content="dir-selection-html">\n          <treecontrol class="tree-classic ng-isolate-scope" on-selection="showSelected(node)" options="opts" tree-model="treedata">\n           <ul class="ng-scope">\n            <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label tree-unselectable" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 1 (id1)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 2 (id2)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 3 (id3)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 4 (id4)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n           </ul>\n          </treecontrol>\n         </div>\n        </div>\n       </div>\n      </div>\n      <div class="col-md-6">\n       <p>\n        To restrict which nodes are selectable on the tree, define the\n        <code>\n         options.isSelectable(node)\n        </code>\n        function.\n       </p>\n       <p>\n        Example disables the selection of any node on or under the\n        <code>\n         Node 1\n        </code>\n        node\n       </p>\n       <p>\n        Selected node:\n        <code class="ng-binding">\n         N/A\n        </code>\n       </p>\n      </div>\n     </div>\n     <div class="row">\n      <div class="ng-isolate-scope">\n       <ul class="nav nav-tabs" ng-class="{\'nav-stacked\': vertical, \'nav-justified\': justified}" ng-transclude="">\n        <li class="ng-isolate-scope active" heading="Markup" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          Markup\n         </a>\n        </li>\n        <li class="ng-isolate-scope" heading="JavaScript" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          JavaScript\n         </a>\n        </li>\n       </ul>\n       <div class="tab-content">\n        <!-- ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="dir-selection-html" class="code ng-scope" highlight-lang="html"><span class="pln"> </span><span class="tag">&lt;treecontrol</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"tree-classic"</span><span class="pln"> </span><span class="atn">tree-model</span><span class="pun">=</span><span class="atv">"treedata"</span><span class="pln"> </span><span class="atn">options</span><span class="pun">=</span><span class="atv">"opts"</span><span class="pln"> </span><span class="atn">on-selection</span><span class="pun">=</span><span class="atv">"showSelected(node)"</span><span class="tag">&gt;</span><span class="pln">\n     label: {{node.label}} ({{node.id}})\n </span><span class="tag">&lt;/treecontrol&gt;</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="dir-selection-js" class="code ng-scope" highlight-lang="js"><span class="pln"> </span><span class="kwd">function</span><span class="pln"> </span><span class="typ">IsSelectable</span><span class="pun">(</span><span class="pln">$scope</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">treedata</span><span class="pun">=</span><span class="pln">createSubTree</span><span class="pun">(</span><span class="lit">3</span><span class="pun">,</span><span class="pln"> </span><span class="lit">4</span><span class="pun">,</span><span class="pln"> </span><span class="str">""</span><span class="pun">);</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">opts </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n         isSelectable</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">node</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n             </span><span class="kwd">return</span><span class="pln"> node</span><span class="pun">.</span><span class="pln">label</span><span class="pun">.</span><span class="pln">indexOf</span><span class="pun">(</span><span class="str">"Node 1"</span><span class="pun">)</span><span class="pln"> </span><span class="pun">!==</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">\n         </span><span class="pun">}</span><span class="pln">\n     </span><span class="pun">};</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">showSelected </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">sel</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n         $scope</span><span class="pun">.</span><span class="pln">selectedNode </span><span class="pun">=</span><span class="pln"> sel</span><span class="pun">;</span><span class="pln">\n     </span><span class="pun">};</span><span class="pln">\n </span><span class="pun">}</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n       </div>\n      </div>\n     </div>\n     <script save-content="dir-selection-js">\n      function IsSelectable($scope) {\n            $scope.treedata=createSubTree(3, 4, "");\n            $scope.opts = {\n                isSelectable: function(node) {\n                    return node.label.indexOf("Node 1") !== 0;\n                }\n            };\n            $scope.showSelected = function(sel) {\n                $scope.selectedNode = sel;\n            };\n        }\n     </script>\n    </section>\n    <section class="ng-scope" id="light" ng-controller="Light">\n     <div class="page-header">\n      <h1>\n       Light Style\n       <small>\n        (Basic style, default configuration)\n       </small>\n      </h1>\n     </div>\n     <div class="row">\n      <div class="col-md-6 show-grid">\n       <div class="panel panel-default">\n        <div class="panel-body">\n         <div class="example-caption">\n          EXAMPLE:\n         </div>\n         <div save-content="light-html">\n          <treecontrol class="tree-light ng-isolate-scope" on-selection="showSelected(node)" tree-model="treedata">\n           <ul class="ng-scope">\n            <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 1 (id1)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 2 (id2)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 3 (id3)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 4 (id4)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n           </ul>\n          </treecontrol>\n         </div>\n        </div>\n       </div>\n      </div>\n      <div class="col-md-6">\n       <p>\n        Light style of the tree control, set using the class\n        <code>\n         tree-light\n        </code>\n        .\n       </p>\n       <p>\n        Click on the folder icons to open and close the tree nodes. Click on the node label to select a node in the tree.\n       </p>\n       <p>\n        Selected node:\n        <code class="ng-binding">\n         N/A\n        </code>\n       </p>\n      </div>\n     </div>\n     <div class="row">\n      <div class="ng-isolate-scope">\n       <ul class="nav nav-tabs" ng-class="{\'nav-stacked\': vertical, \'nav-justified\': justified}" ng-transclude="">\n        <li class="ng-isolate-scope active" heading="Markup" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          Markup\n         </a>\n        </li>\n        <li class="ng-isolate-scope" heading="JavaScript" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          JavaScript\n         </a>\n        </li>\n       </ul>\n       <div class="tab-content">\n        <!-- ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="light-html" class="code ng-scope" highlight-lang="html"><span class="pln"> </span><span class="tag">&lt;treecontrol</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"tree-light"</span><span class="pln"> </span><span class="atn">tree-model</span><span class="pun">=</span><span class="atv">"treedata"</span><span class="pln"> </span><span class="atn">on-selection</span><span class="pun">=</span><span class="atv">"showSelected(node)"</span><span class="tag">&gt;</span><span class="pln">\n     label: {{node.label}} ({{node.id}})\n </span><span class="tag">&lt;/treecontrol&gt;</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="light-js" class="code ng-scope" highlight-lang="js"><span class="pln"> </span><span class="kwd">function</span><span class="pln"> </span><span class="typ">Light</span><span class="pun">(</span><span class="pln">$scope</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">treedata</span><span class="pun">=</span><span class="pln">createSubTree</span><span class="pun">(</span><span class="lit">3</span><span class="pun">,</span><span class="pln"> </span><span class="lit">4</span><span class="pun">,</span><span class="pln"> </span><span class="str">""</span><span class="pun">);</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">showSelected </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">sel</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n         $scope</span><span class="pun">.</span><span class="pln">selectedNode </span><span class="pun">=</span><span class="pln"> sel</span><span class="pun">;</span><span class="pln">\n     </span><span class="pun">};</span><span class="pln">\n </span><span class="pun">}</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n       </div>\n      </div>\n     </div>\n     <script save-content="light-js">\n      function Light($scope) {\n            $scope.treedata=createSubTree(3, 4, "");\n            $scope.showSelected = function(sel) {\n                $scope.selectedNode = sel;\n            };\n        }\n     </script>\n    </section>\n    <section class="ng-scope" id="dark" ng-controller="Dark">\n     <div class="page-header">\n      <h1>\n       Dark Style\n       <small>\n        (Basic style, default configuration)\n       </small>\n      </h1>\n     </div>\n     <div class="row">\n      <div class="col-md-6 show-grid">\n       <div class="panel panel-default">\n        <div class="panel-body" style="background-color: #555;">\n         <div class="example-caption">\n          EXAMPLE:\n         </div>\n         <div save-content="dark-html">\n          <!-- Note that the tree does not set the background color. We inject it from the wrapper div. -->\n          <div style="background-color: #555;">\n           <treecontrol class="tree-dark ng-isolate-scope" on-selection="showSelected(node)" tree-model="treedata">\n            <ul class="ng-scope">\n             <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n             <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n              <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n              </i>\n              <i class="tree-leaf-head">\n              </i>\n              <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n               <span class="ng-binding ng-scope">\n                label: Node 1 (id1)\n               </span>\n              </div>\n              <!-- ngIf: nodeExpanded() -->\n             </li>\n             <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n             <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n              <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n              </i>\n              <i class="tree-leaf-head">\n              </i>\n              <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n               <span class="ng-binding ng-scope">\n                label: Node 2 (id2)\n               </span>\n              </div>\n              <!-- ngIf: nodeExpanded() -->\n             </li>\n             <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n             <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n              <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n              </i>\n              <i class="tree-leaf-head">\n              </i>\n              <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n               <span class="ng-binding ng-scope">\n                label: Node 3 (id3)\n               </span>\n              </div>\n              <!-- ngIf: nodeExpanded() -->\n             </li>\n             <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n             <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n              <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n              </i>\n              <i class="tree-leaf-head">\n              </i>\n              <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n               <span class="ng-binding ng-scope">\n                label: Node 4 (id4)\n               </span>\n              </div>\n              <!-- ngIf: nodeExpanded() -->\n             </li>\n             <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            </ul>\n           </treecontrol>\n          </div>\n         </div>\n        </div>\n       </div>\n      </div>\n      <div class="col-md-6">\n       <p>\n        Dark style of the tree control, set using the class\n        <code>\n         tree-dark\n        </code>\n        . The style does not include the background color, instead,\n                inject your own background color using a wrapper div element.\n       </p>\n       <p>\n        Click on the folder icons to open and close the tree nodes. Click on the node label to select a node in the tree.\n       </p>\n       <p>\n        Selected node:\n        <code class="ng-binding">\n         N/A\n        </code>\n       </p>\n      </div>\n     </div>\n     <div class="row">\n      <div class="ng-isolate-scope">\n       <ul class="nav nav-tabs" ng-class="{\'nav-stacked\': vertical, \'nav-justified\': justified}" ng-transclude="">\n        <li class="ng-isolate-scope active" heading="Markup" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          Markup\n         </a>\n        </li>\n        <li class="ng-isolate-scope" heading="JavaScript" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          JavaScript\n         </a>\n        </li>\n       </ul>\n       <div class="tab-content">\n        <!-- ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="dark-html" class="code ng-scope" highlight-lang="html"><span class="pln"> </span><span class="com">&lt;!-- Note that the tree does not set the background color. We inject it from the wrapper div. --&gt;</span><span class="pln">\n </span><span class="tag">&lt;div</span><span class="pln"> </span><span class="atn">style</span><span class="pun">=</span><span class="atv">"</span><span class="pln">background</span><span class="pun">-</span><span class="pln">color</span><span class="pun">:</span><span class="pln"> </span><span class="com">#555;</span><span class="atv">"</span><span class="tag">&gt;</span><span class="pln">\n     </span><span class="tag">&lt;treecontrol</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"tree-dark"</span><span class="pln"> </span><span class="atn">tree-model</span><span class="pun">=</span><span class="atv">"treedata"</span><span class="pln"> </span><span class="atn">on-selection</span><span class="pun">=</span><span class="atv">"showSelected(node)"</span><span class="tag">&gt;</span><span class="pln">\n         label: {{node.label}} ({{node.id}})\n     </span><span class="tag">&lt;/treecontrol&gt;</span><span class="pln">\n </span><span class="tag">&lt;/div&gt;</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="dark-js" class="code ng-scope" highlight-lang="js"><span class="pln"> </span><span class="kwd">function</span><span class="pln"> </span><span class="typ">Dark</span><span class="pun">(</span><span class="pln">$scope</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">treedata</span><span class="pun">=</span><span class="pln">createSubTree</span><span class="pun">(</span><span class="lit">3</span><span class="pun">,</span><span class="pln"> </span><span class="lit">4</span><span class="pun">,</span><span class="pln"> </span><span class="str">""</span><span class="pun">);</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">showSelected </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">sel</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n         $scope</span><span class="pun">.</span><span class="pln">selectedNode </span><span class="pun">=</span><span class="pln"> sel</span><span class="pun">;</span><span class="pln">\n     </span><span class="pun">};</span><span class="pln">\n </span><span class="pun">}</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n       </div>\n      </div>\n     </div>\n     <script save-content="dark-js">\n      function Dark($scope) {\n            $scope.treedata=createSubTree(3, 4, "");\n            $scope.showSelected = function(sel) {\n                $scope.selectedNode = sel;\n            };\n        }\n     </script>\n    </section>\n    <section class="ng-scope" id="boot" ng-controller="Boot">\n     <div class="page-header">\n      <h1>\n       Bootstrap Style\n       <small>\n        (Basic style, default configuration)\n       </small>\n      </h1>\n     </div>\n     <div class="row">\n      <div class="col-md-6 show-grid">\n       <div class="panel panel-default">\n        <div class="panel-body" style="background-color: #f5f5f5;">\n         <div class="example-caption">\n          EXAMPLE:\n         </div>\n         <div save-content="boot-html">\n          <!-- Note that the tree does not set the background color. We inject it from the wrapper div. -->\n          <div style="background-color: #f5f5f5;">\n           <treecontrol class="tree-boot ng-isolate-scope" on-selection="showSelected(node)" tree-model="treedata">\n            <ul class="ng-scope">\n             <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n             <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n              <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n              </i>\n              <i class="tree-leaf-head">\n              </i>\n              <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n               <span class="ng-binding ng-scope">\n                label: Node 1 (id1)\n               </span>\n              </div>\n              <!-- ngIf: nodeExpanded() -->\n             </li>\n             <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n             <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n              <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n              </i>\n              <i class="tree-leaf-head">\n              </i>\n              <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n               <span class="ng-binding ng-scope">\n                label: Node 2 (id2)\n               </span>\n              </div>\n              <!-- ngIf: nodeExpanded() -->\n             </li>\n             <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n             <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n              <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n              </i>\n              <i class="tree-leaf-head">\n              </i>\n              <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n               <span class="ng-binding ng-scope">\n                label: Node 3 (id3)\n               </span>\n              </div>\n              <!-- ngIf: nodeExpanded() -->\n             </li>\n             <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n             <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n              <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n              </i>\n              <i class="tree-leaf-head">\n              </i>\n              <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n               <span class="ng-binding ng-scope">\n                label: Node 4 (id4)\n               </span>\n              </div>\n              <!-- ngIf: nodeExpanded() -->\n             </li>\n             <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            </ul>\n           </treecontrol>\n          </div>\n         </div>\n        </div>\n       </div>\n      </div>\n      <div class="col-md-6">\n       <p>\n        Bootstrap style of the tree control, set using the class\n        <code>\n         tree-boot\n        </code>\n        . The style does not include the background color, instead,\n                inject your own background color using a wrapper div element.\n       </p>\n       <p>\n        Click on the folder icons to open and close the tree nodes. Click on the node label to select a node in the tree.\n       </p>\n       <p>\n        Selected node:\n        <code class="ng-binding">\n         N/A\n        </code>\n       </p>\n      </div>\n     </div>\n     <div class="row">\n      <div class="ng-isolate-scope">\n       <ul class="nav nav-tabs" ng-class="{\'nav-stacked\': vertical, \'nav-justified\': justified}" ng-transclude="">\n        <li class="ng-isolate-scope active" heading="Markup" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          Markup\n         </a>\n        </li>\n        <li class="ng-isolate-scope" heading="JavaScript" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          JavaScript\n         </a>\n        </li>\n       </ul>\n       <div class="tab-content">\n        <!-- ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="boot-html" class="code ng-scope" highlight-lang="html"><span class="pln"> </span><span class="com">&lt;!-- Note that the tree does not set the background color. We inject it from the wrapper div. --&gt;</span><span class="pln">\n </span><span class="tag">&lt;div</span><span class="pln"> </span><span class="atn">style</span><span class="pun">=</span><span class="atv">"</span><span class="pln">background</span><span class="pun">-</span><span class="pln">color</span><span class="pun">:</span><span class="pln"> </span><span class="com">#f5f5f5;</span><span class="atv">"</span><span class="tag">&gt;</span><span class="pln">\n     </span><span class="tag">&lt;treecontrol</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"tree-boot"</span><span class="pln"> </span><span class="atn">tree-model</span><span class="pun">=</span><span class="atv">"treedata"</span><span class="pln"> </span><span class="atn">on-selection</span><span class="pun">=</span><span class="atv">"showSelected(node)"</span><span class="tag">&gt;</span><span class="pln">\n         label: {{node.label}} ({{node.id}})\n     </span><span class="tag">&lt;/treecontrol&gt;</span><span class="pln">\n </span><span class="tag">&lt;/div&gt;</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="boot-js" class="code ng-scope" highlight-lang="js"><span class="pln"> </span><span class="kwd">function</span><span class="pln"> </span><span class="typ">Boot</span><span class="pun">(</span><span class="pln">$scope</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">treedata</span><span class="pun">=</span><span class="pln">createSubTree</span><span class="pun">(</span><span class="lit">3</span><span class="pun">,</span><span class="pln"> </span><span class="lit">4</span><span class="pun">,</span><span class="pln"> </span><span class="str">""</span><span class="pun">);</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">showSelected </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">sel</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n         $scope</span><span class="pun">.</span><span class="pln">selectedNode </span><span class="pun">=</span><span class="pln"> sel</span><span class="pun">;</span><span class="pln">\n     </span><span class="pun">};</span><span class="pln">\n </span><span class="pun">}</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n       </div>\n      </div>\n     </div>\n     <script save-content="boot-js">\n      function Boot($scope) {\n            $scope.treedata=createSubTree(3, 4, "");\n            $scope.showSelected = function(sel) {\n                $scope.selectedNode = sel;\n            };\n        }\n     </script>\n    </section>\n    <section class="ng-scope" id="file-style" ng-controller="FileStyle">\n     <div class="page-header">\n      <h1>\n       File Style using Tree Label Templates\n       <small>\n        (Basic style, default configuration)\n       </small>\n      </h1>\n     </div>\n     <div class="row">\n      <div class="col-md-6 show-grid">\n       <div class="panel panel-default">\n        <div class="panel-body" style="background-color: #555;">\n         <div class="example-caption">\n          EXAMPLE:\n         </div>\n         <div save-content="file-style-html">\n          <!-- Note that the tree does not set the background color. We inject it from the wrapper div. -->\n          <div style="background-color: #555;">\n           <treecontrol class="tree-dark ng-isolate-scope" on-selection="showSelected(node)" tree-model="treedata">\n            <ul class="ng-scope">\n             <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n             <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n              <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n              </i>\n              <i class="tree-leaf-head">\n              </i>\n              <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n               <span class="ng-scope" ng-switch="" on="node.type">\n                <!-- ngSwitchWhen: folder -->\n                <span aria-hidden="true" class="glyphicon glyphicon-folder-open ng-scope" ng-switch-when="folder">\n                </span>\n                <!-- ngSwitchWhen: pic -->\n                <!-- ngSwitchWhen: doc -->\n                <!-- ngSwitchWhen: file -->\n                <!-- ngSwitchWhen: movie -->\n                <!-- ngSwitchWhen: email -->\n                <!-- ngSwitchWhen: home -->\n                <!-- ngSwitchWhen: trash -->\n               </span>\n               <span class="ng-binding ng-scope">\n                label: Documents\n               </span>\n              </div>\n              <!-- ngIf: nodeExpanded() -->\n             </li>\n             <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n             <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n              <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n              </i>\n              <i class="tree-leaf-head">\n              </i>\n              <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n               <span class="ng-scope" ng-switch="" on="node.type">\n                <!-- ngSwitchWhen: folder -->\n                <span aria-hidden="true" class="glyphicon glyphicon-folder-open ng-scope" ng-switch-when="folder">\n                </span>\n                <!-- ngSwitchWhen: pic -->\n                <!-- ngSwitchWhen: doc -->\n                <!-- ngSwitchWhen: file -->\n                <!-- ngSwitchWhen: movie -->\n                <!-- ngSwitchWhen: email -->\n                <!-- ngSwitchWhen: home -->\n                <!-- ngSwitchWhen: trash -->\n               </span>\n               <span class="ng-binding ng-scope">\n                label: My Computer\n               </span>\n              </div>\n              <!-- ngIf: nodeExpanded() -->\n             </li>\n             <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n             <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n              <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n              </i>\n              <i class="tree-leaf-head">\n              </i>\n              <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n               <span class="ng-scope" ng-switch="" on="node.type">\n                <!-- ngSwitchWhen: folder -->\n                <!-- ngSwitchWhen: pic -->\n                <!-- ngSwitchWhen: doc -->\n                <!-- ngSwitchWhen: file -->\n                <!-- ngSwitchWhen: movie -->\n                <!-- ngSwitchWhen: email -->\n                <!-- ngSwitchWhen: home -->\n                <!-- ngSwitchWhen: trash -->\n                <span aria-hidden="true" class="glyphicon glyphicon-trash ng-scope" ng-switch-when="trash">\n                </span>\n               </span>\n               <span class="ng-binding ng-scope">\n                label: trash\n               </span>\n              </div>\n              <!-- ngIf: nodeExpanded() -->\n             </li>\n             <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            </ul>\n           </treecontrol>\n          </div>\n         </div>\n        </div>\n       </div>\n      </div>\n      <div class="col-md-6">\n       <p>\n        When using the tree control to display file like structures it is required to display the file type on each of the nodes. To achive that\n            we have to use a second icon using the Tree Label Templates with a\n        <code>\n         ng-switch\n        </code>\n        or equivalent directive, as shown in this example.\n       </p>\n       <p>\n        The tree control does not support replacing the expand / contract icons with a file type icon - it is design decision we made as we designed\n            the tree control.\n       </p>\n      </div>\n     </div>\n     <div class="row">\n      <div class="ng-isolate-scope">\n       <ul class="nav nav-tabs" ng-class="{\'nav-stacked\': vertical, \'nav-justified\': justified}" ng-transclude="">\n        <li class="ng-isolate-scope active" heading="Markup" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          Markup\n         </a>\n        </li>\n        <li class="ng-isolate-scope" heading="JavaScript" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          JavaScript\n         </a>\n        </li>\n       </ul>\n       <div class="tab-content">\n        <!-- ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="file-style-html" class="code ng-scope" highlight-lang="html"><span class="pln"> </span><span class="com">&lt;!-- Note that the tree does not set the background color. We inject it from the wrapper div. --&gt;</span><span class="pln">\n </span><span class="tag">&lt;div</span><span class="pln"> </span><span class="atn">style</span><span class="pun">=</span><span class="atv">"</span><span class="pln">background</span><span class="pun">-</span><span class="pln">color</span><span class="pun">:</span><span class="pln"> </span><span class="com">#555;</span><span class="atv">"</span><span class="tag">&gt;</span><span class="pln">\n     </span><span class="tag">&lt;treecontrol</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"tree-dark"</span><span class="pln"> </span><span class="atn">tree-model</span><span class="pun">=</span><span class="atv">"treedata"</span><span class="pln"> </span><span class="atn">on-selection</span><span class="pun">=</span><span class="atv">"showSelected(node)"</span><span class="tag">&gt;</span><span class="pln">\n         </span><span class="tag">&lt;span</span><span class="pln"> </span><span class="atn">ng-switch</span><span class="pun">=</span><span class="atv">""</span><span class="pln"> </span><span class="atn">on</span><span class="pun">=</span><span class="atv">"node.type"</span><span class="tag">&gt;</span><span class="pln">\n             </span><span class="tag">&lt;span</span><span class="pln"> </span><span class="atn">ng-switch-when</span><span class="pun">=</span><span class="atv">"folder"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"glyphicon glyphicon-folder-open"</span><span class="pln"> </span><span class="atn">aria-hidden</span><span class="pun">=</span><span class="atv">"true"</span><span class="tag">&gt;&lt;/span&gt;</span><span class="pln">\n             </span><span class="tag">&lt;span</span><span class="pln"> </span><span class="atn">ng-switch-when</span><span class="pun">=</span><span class="atv">"pic"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"glyphicon glyphicon-picture"</span><span class="pln"> </span><span class="atn">aria-hidden</span><span class="pun">=</span><span class="atv">"true"</span><span class="tag">&gt;&lt;/span&gt;</span><span class="pln">\n             </span><span class="tag">&lt;span</span><span class="pln"> </span><span class="atn">ng-switch-when</span><span class="pun">=</span><span class="atv">"doc"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"glyphicon glyphicon-file"</span><span class="pln"> </span><span class="atn">aria-hidden</span><span class="pun">=</span><span class="atv">"true"</span><span class="tag">&gt;&lt;/span&gt;</span><span class="pln">\n             </span><span class="tag">&lt;span</span><span class="pln"> </span><span class="atn">ng-switch-when</span><span class="pun">=</span><span class="atv">"file"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"glyphicon glyphicon-floppy-disk"</span><span class="pln"> </span><span class="atn">aria-hidden</span><span class="pun">=</span><span class="atv">"true"</span><span class="tag">&gt;&lt;/span&gt;</span><span class="pln">\n             </span><span class="tag">&lt;span</span><span class="pln"> </span><span class="atn">ng-switch-when</span><span class="pun">=</span><span class="atv">"movie"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"glyphicon glyphicon-film"</span><span class="pln"> </span><span class="atn">aria-hidden</span><span class="pun">=</span><span class="atv">"true"</span><span class="tag">&gt;&lt;/span&gt;</span><span class="pln">\n             </span><span class="tag">&lt;span</span><span class="pln"> </span><span class="atn">ng-switch-when</span><span class="pun">=</span><span class="atv">"email"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"glyphicon glyphicon-envelope"</span><span class="pln"> </span><span class="atn">aria-hidden</span><span class="pun">=</span><span class="atv">"true"</span><span class="tag">&gt;&lt;/span&gt;</span><span class="pln">\n             </span><span class="tag">&lt;span</span><span class="pln"> </span><span class="atn">ng-switch-when</span><span class="pun">=</span><span class="atv">"home"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"glyphicon glyphicon-home"</span><span class="pln"> </span><span class="atn">aria-hidden</span><span class="pun">=</span><span class="atv">"true"</span><span class="tag">&gt;&lt;/span&gt;</span><span class="pln">\n             </span><span class="tag">&lt;span</span><span class="pln"> </span><span class="atn">ng-switch-when</span><span class="pun">=</span><span class="atv">"trash"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"glyphicon glyphicon-trash"</span><span class="pln"> </span><span class="atn">aria-hidden</span><span class="pun">=</span><span class="atv">"true"</span><span class="tag">&gt;&lt;/span&gt;</span><span class="pln">\n         </span><span class="tag">&lt;/span&gt;</span><span class="pln"> label: {{node.label}}\n     </span><span class="tag">&lt;/treecontrol&gt;</span><span class="pln">\n </span><span class="tag">&lt;/div&gt;</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="file-style-js" class="code ng-scope" highlight-lang="js"><span class="pln"> </span><span class="kwd">function</span><span class="pln"> </span><span class="typ">FileStyle</span><span class="pun">(</span><span class="pln">$scope</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">treedata</span><span class="pun">=[</span><span class="pln">\n         </span><span class="pun">{</span><span class="pln">label</span><span class="pun">:</span><span class="pln"> </span><span class="str">"Documents"</span><span class="pun">,</span><span class="pln"> type</span><span class="pun">:</span><span class="pln"> </span><span class="str">"folder"</span><span class="pun">,</span><span class="pln"> children</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln">\n             </span><span class="pun">{</span><span class="pln">label</span><span class="pun">:</span><span class="pln"> </span><span class="str">"a picture"</span><span class="pun">,</span><span class="pln"> type</span><span class="pun">:</span><span class="pln"> </span><span class="str">"pic"</span><span class="pun">},</span><span class="pln">\n             </span><span class="pun">{</span><span class="pln">label</span><span class="pun">:</span><span class="pln"> </span><span class="str">"another picture"</span><span class="pun">,</span><span class="pln"> type</span><span class="pun">:</span><span class="pln"> </span><span class="str">"pic"</span><span class="pun">},</span><span class="pln">\n             </span><span class="pun">{</span><span class="pln">label</span><span class="pun">:</span><span class="pln"> </span><span class="str">"a doc"</span><span class="pun">,</span><span class="pln"> type</span><span class="pun">:</span><span class="pln"> </span><span class="str">"doc"</span><span class="pun">},</span><span class="pln">\n             </span><span class="pun">{</span><span class="pln">label</span><span class="pun">:</span><span class="pln"> </span><span class="str">"a file"</span><span class="pun">,</span><span class="pln"> type</span><span class="pun">:</span><span class="pln"> </span><span class="str">"file"</span><span class="pun">},</span><span class="pln">\n             </span><span class="pun">{</span><span class="pln">label</span><span class="pun">:</span><span class="pln"> </span><span class="str">"a movie"</span><span class="pun">,</span><span class="pln"> type</span><span class="pun">:</span><span class="pln"> </span><span class="str">"movie"</span><span class="pun">}</span><span class="pln">\n         </span><span class="pun">]},</span><span class="pln">\n         </span><span class="pun">{</span><span class="pln">label</span><span class="pun">:</span><span class="pln"> </span><span class="str">"My Computer"</span><span class="pun">,</span><span class="pln"> type</span><span class="pun">:</span><span class="pln"> </span><span class="str">"folder"</span><span class="pun">,</span><span class="pln"> children</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln">\n             </span><span class="pun">{</span><span class="pln">label</span><span class="pun">:</span><span class="pln"> </span><span class="str">"email"</span><span class="pun">,</span><span class="pln"> type</span><span class="pun">:</span><span class="pln"> </span><span class="str">"email"</span><span class="pun">},</span><span class="pln">\n             </span><span class="pun">{</span><span class="pln">label</span><span class="pun">:</span><span class="pln"> </span><span class="str">"home"</span><span class="pun">,</span><span class="pln"> type</span><span class="pun">:</span><span class="pln"> </span><span class="str">"home"</span><span class="pun">}</span><span class="pln">\n         </span><span class="pun">]},</span><span class="pln">\n         </span><span class="pun">{</span><span class="pln">label</span><span class="pun">:</span><span class="pln"> </span><span class="str">"trash"</span><span class="pun">,</span><span class="pln"> type</span><span class="pun">:</span><span class="pln"> </span><span class="str">"trash"</span><span class="pun">}</span><span class="pln">\n\n     </span><span class="pun">];</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">showSelected </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">sel</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n         $scope</span><span class="pun">.</span><span class="pln">selectedNode </span><span class="pun">=</span><span class="pln"> sel</span><span class="pun">;</span><span class="pln">\n     </span><span class="pun">};</span><span class="pln">\n </span><span class="pun">}</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n       </div>\n      </div>\n     </div>\n     <script save-content="file-style-js">\n      function FileStyle($scope) {\n            $scope.treedata=[\n                {label: "Documents", type: "folder", children: [\n                    {label: "a picture", type: "pic"},\n                    {label: "another picture", type: "pic"},\n                    {label: "a doc", type: "doc"},\n                    {label: "a file", type: "file"},\n                    {label: "a movie", type: "movie"}\n                ]},\n                {label: "My Computer", type: "folder", children: [\n                    {label: "email", type: "email"},\n                    {label: "home", type: "home"}\n                ]},\n                {label: "trash", type: "trash"}\n\n            ];\n            $scope.showSelected = function(sel) {\n                $scope.selectedNode = sel;\n            };\n        }\n     </script>\n    </section>\n    <section class="ng-scope" id="custom-css" ng-controller="CustomCss">\n     <div class="page-header">\n      <h1>\n       Custom Css Classes\n       <small>\n        (options.injectClasses)\n       </small>\n      </h1>\n     </div>\n     <div class="row">\n      <div class="col-md-6 show-grid">\n       <div class="panel panel-default">\n        <div class="panel-body">\n         <div class="example-caption">\n          EXAMPLE:\n         </div>\n         <div save-content="custom-css-html">\n          <style>\n           .c-ul {border: 1px solid #abcdef;}\n                            .c-li {background-color: #defacb}\n                            .c-liSelected {background-color: #fedbca}\n                            .c-iExpanded {border: 1px solid #77a}\n                            .c-iCollapsed {border: 1px solid #7c7}\n                            .c-iLeaf {border: 1px solid #a77}\n                            treecontrol.tree-classic li .tree-label.c-label {color: #44c}\n                            treecontrol.tree-classic li .tree-selected.c-labelSelected {background-color: yellow}\n          </style>\n          <treecontrol class="tree-classic ng-isolate-scope" options="opts" tree-model="treedata">\n           <ul class="c-ul ng-scope">\n            <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="c-li ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head c-iCollapsed" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head c-iLeaf">\n             </i>\n             <div class="tree-label c-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 1 (id1)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="c-li ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head c-iCollapsed" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head c-iLeaf">\n             </i>\n             <div class="tree-label c-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 2 (id2)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="c-li ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head c-iCollapsed" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head c-iLeaf">\n             </i>\n             <div class="tree-label c-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 3 (id3)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="c-li ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head c-iCollapsed" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head c-iLeaf">\n             </i>\n             <div class="tree-label c-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 4 (id4)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n           </ul>\n          </treecontrol>\n         </div>\n        </div>\n       </div>\n      </div>\n      <div class="col-md-6">\n       <p>\n        The\n        <code>\n         options.injectClasses\n        </code>\n        option allows to add custom CSS classes on the tree DOM. The selected classes are\n       </p>\n       <ul>\n        <li>\n         <code>\n          ul\n         </code>\n         - inject classes into the ul elements (branch elements)\n        </li>\n        <li>\n         <code>\n          li\n         </code>\n         - inject classes into the li elements (both branch and leaf elements)\n        </li>\n        <li>\n         <code>\n          liSelected\n         </code>\n         - inject classes into the li elements of the selected node\n        </li>\n        <li>\n         <code>\n          iExpanded\n         </code>\n         - inject classes into the \'i\' element for the expanded nodes (the icon)\n        </li>\n        <li>\n         <code>\n          iCollapsed\n         </code>\n         - inject classes into the \'i\' element for the collapsed nodes\n        </li>\n        <li>\n         <code>\n          iLeaf\n         </code>\n         - inject classes into the \'i\' element for leaf nodes\n        </li>\n        <li>\n         <code>\n          label\n         </code>\n         - inject classes into the div element around the label\n        </li>\n        <li>\n         <code>\n          labelSelected\n         </code>\n         - inject classes into the div element around the label only when the node is selected\n        </li>\n       </ul>\n      </div>\n     </div>\n     <div class="row">\n      <div class="ng-isolate-scope">\n       <ul class="nav nav-tabs" ng-class="{\'nav-stacked\': vertical, \'nav-justified\': justified}" ng-transclude="">\n        <li class="ng-isolate-scope active" heading="Markup" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          Markup\n         </a>\n        </li>\n        <li class="ng-isolate-scope" heading="JavaScript" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          JavaScript\n         </a>\n        </li>\n       </ul>\n       <div class="tab-content">\n        <!-- ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="custom-css-html" class="code ng-scope" highlight-lang="html"><span class="pln"> </span><span class="tag">&lt;style&gt;</span><span class="pln">\n     </span><span class="pun">.</span><span class="pln">c</span><span class="pun">-</span><span class="pln">ul </span><span class="pun">{</span><span class="pln">border</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1px</span><span class="pln"> solid </span><span class="com">#abcdef;}</span><span class="pln">\n     </span><span class="pun">.</span><span class="pln">c</span><span class="pun">-</span><span class="pln">li </span><span class="pun">{</span><span class="pln">background</span><span class="pun">-</span><span class="pln">color</span><span class="pun">:</span><span class="pln"> </span><span class="com">#defacb}</span><span class="pln">\n     </span><span class="pun">.</span><span class="pln">c</span><span class="pun">-</span><span class="pln">liSelected </span><span class="pun">{</span><span class="pln">background</span><span class="pun">-</span><span class="pln">color</span><span class="pun">:</span><span class="pln"> </span><span class="com">#fedbca}</span><span class="pln">\n     </span><span class="pun">.</span><span class="pln">c</span><span class="pun">-</span><span class="pln">iExpanded </span><span class="pun">{</span><span class="pln">border</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1px</span><span class="pln"> solid </span><span class="com">#77a}</span><span class="pln">\n     </span><span class="pun">.</span><span class="pln">c</span><span class="pun">-</span><span class="pln">iCollapsed </span><span class="pun">{</span><span class="pln">border</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1px</span><span class="pln"> solid </span><span class="com">#7c7}</span><span class="pln">\n     </span><span class="pun">.</span><span class="pln">c</span><span class="pun">-</span><span class="pln">iLeaf </span><span class="pun">{</span><span class="pln">border</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1px</span><span class="pln"> solid </span><span class="com">#a77}</span><span class="pln">\n     treecontrol</span><span class="pun">.</span><span class="pln">tree</span><span class="pun">-</span><span class="pln">classic li </span><span class="pun">.</span><span class="pln">tree</span><span class="pun">-</span><span class="pln">label</span><span class="pun">.</span><span class="pln">c</span><span class="pun">-</span><span class="pln">label </span><span class="pun">{</span><span class="pln">color</span><span class="pun">:</span><span class="pln"> </span><span class="com">#44c}</span><span class="pln">\n     treecontrol</span><span class="pun">.</span><span class="pln">tree</span><span class="pun">-</span><span class="pln">classic li </span><span class="pun">.</span><span class="pln">tree</span><span class="pun">-</span><span class="pln">selected</span><span class="pun">.</span><span class="pln">c</span><span class="pun">-</span><span class="pln">labelSelected </span><span class="pun">{</span><span class="pln">background</span><span class="pun">-</span><span class="pln">color</span><span class="pun">:</span><span class="pln"> yellow</span><span class="pun">}</span><span class="pln">\n </span><span class="tag">&lt;/style&gt;</span><span class="pln">\n </span><span class="tag">&lt;treecontrol</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"tree-classic"</span><span class="pln"> </span><span class="atn">tree-model</span><span class="pun">=</span><span class="atv">"treedata"</span><span class="pln"> </span><span class="atn">options</span><span class="pun">=</span><span class="atv">"opts"</span><span class="tag">&gt;</span><span class="pln">\n     label: {{node.label}} ({{node.id}})\n </span><span class="tag">&lt;/treecontrol&gt;</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="custom-css-js" class="code ng-scope" highlight-lang="js"><span class="pln"> </span><span class="kwd">function</span><span class="pln"> </span><span class="typ">CustomCss</span><span class="pun">(</span><span class="pln">$scope</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">treedata</span><span class="pun">=</span><span class="pln">createSubTree</span><span class="pun">(</span><span class="lit">3</span><span class="pun">,</span><span class="pln"> </span><span class="lit">4</span><span class="pun">,</span><span class="pln"> </span><span class="str">""</span><span class="pun">);</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">opts </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n         injectClasses</span><span class="pun">:</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n             </span><span class="str">"ul"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"c-ul"</span><span class="pun">,</span><span class="pln">\n             </span><span class="str">"li"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"c-li"</span><span class="pun">,</span><span class="pln">\n             </span><span class="str">"liSelected"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"c-liSelected"</span><span class="pun">,</span><span class="pln">\n             </span><span class="str">"iExpanded"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"c-iExpanded"</span><span class="pun">,</span><span class="pln">\n             </span><span class="str">"iCollapsed"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"c-iCollapsed"</span><span class="pun">,</span><span class="pln">\n             </span><span class="str">"iLeaf"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"c-iLeaf"</span><span class="pun">,</span><span class="pln">\n             </span><span class="str">"label"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"c-label"</span><span class="pun">,</span><span class="pln">\n             </span><span class="str">"labelSelected"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"c-labelSelected"</span><span class="pln">\n         </span><span class="pun">}</span><span class="pln">\n     </span><span class="pun">};</span><span class="pln">\n </span><span class="pun">}</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n       </div>\n      </div>\n     </div>\n     <script save-content="custom-css-js">\n      function CustomCss($scope) {\n            $scope.treedata=createSubTree(3, 4, "");\n            $scope.opts = {\n                injectClasses: {\n                    "ul": "c-ul",\n                    "li": "c-li",\n                    "liSelected": "c-liSelected",\n                    "iExpanded": "c-iExpanded",\n                    "iCollapsed": "c-iCollapsed",\n                    "iLeaf": "c-iLeaf",\n                    "label": "c-label",\n                    "labelSelected": "c-labelSelected"\n                }\n            };\n        }\n     </script>\n    </section>\n    <section class="ng-scope" id="children" ng-controller="Children">\n     <div class="page-header">\n      <h1>\n       Custom Children\n       <small>\n        (options.nodeChildren)\n       </small>\n      </h1>\n     </div>\n     <div class="row">\n      <div class="col-md-6 show-grid">\n       <div class="panel panel-default">\n        <div class="panel-body">\n         <div class="example-caption">\n          EXAMPLE:\n         </div>\n         <div save-content="children-html">\n          <treecontrol class="tree-classic ng-isolate-scope" options="opts" tree-model="treedata">\n           <ul class="ng-scope">\n            <!-- ngRepeat: node in node.links | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.links | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 1 (id1)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.links | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.links | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 2 (id2)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.links | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.links | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 3 (id3)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.links | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.links | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 4 (id4)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.links | filter:filterExpression:filterComparator -->\n           </ul>\n          </treecontrol>\n         </div>\n        </div>\n       </div>\n      </div>\n      <div class="col-md-6">\n       <p>\n        Angular tree control assumes that the tree nodes have a\n        <code>\n         children\n        </code>\n        array property for the children of the node.\n                You can override the children property name using the tree\n        <code>\n         nodeChildren\n        </code>\n        property of the tree options.\n       </p>\n      </div>\n     </div>\n     <div class="row">\n      <div class="ng-isolate-scope">\n       <ul class="nav nav-tabs" ng-class="{\'nav-stacked\': vertical, \'nav-justified\': justified}" ng-transclude="">\n        <li class="ng-isolate-scope active" heading="Markup" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          Markup\n         </a>\n        </li>\n        <li class="ng-isolate-scope" heading="JavaScript" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          JavaScript\n         </a>\n        </li>\n       </ul>\n       <div class="tab-content">\n        <!-- ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="children-html" class="code ng-scope" highlight-lang="html"><span class="pln"> </span><span class="tag">&lt;treecontrol</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"tree-classic"</span><span class="pln"> </span><span class="atn">tree-model</span><span class="pun">=</span><span class="atv">"treedata"</span><span class="pln"> </span><span class="atn">options</span><span class="pun">=</span><span class="atv">"opts"</span><span class="tag">&gt;</span><span class="pln">\n     label: {{node.label}} ({{node.id}})\n </span><span class="tag">&lt;/treecontrol&gt;</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="children-js" class="code ng-scope" highlight-lang="js"><span class="pln"> </span><span class="kwd">function</span><span class="pln"> </span><span class="typ">Children</span><span class="pun">(</span><span class="pln">$scope</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">treedata</span><span class="pun">=[</span><span class="pln">\n         </span><span class="pun">{</span><span class="pln">id</span><span class="pun">:</span><span class="str">"id1"</span><span class="pun">,</span><span class="pln"> label</span><span class="pun">:</span><span class="pln"> </span><span class="str">"Node 1"</span><span class="pun">,</span><span class="pln"> links</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln">\n             </span><span class="pun">{</span><span class="pln">id</span><span class="pun">:</span><span class="str">"id1.1"</span><span class="pun">,</span><span class="pln"> label</span><span class="pun">:</span><span class="pln"> </span><span class="str">"Node 1.1"</span><span class="pun">,</span><span class="pln"> links</span><span class="pun">:</span><span class="pln"> </span><span class="pun">{}},</span><span class="pln">\n             </span><span class="pun">{</span><span class="pln">id</span><span class="pun">:</span><span class="str">"id1.2"</span><span class="pun">,</span><span class="pln"> label</span><span class="pun">:</span><span class="pln"> </span><span class="str">"Node 1.1"</span><span class="pun">,</span><span class="pln"> links</span><span class="pun">:</span><span class="pln"> </span><span class="pun">{}}</span><span class="pln">\n         </span><span class="pun">]},</span><span class="pln">\n         </span><span class="pun">{</span><span class="pln">id</span><span class="pun">:</span><span class="str">"id2"</span><span class="pun">,</span><span class="pln"> label</span><span class="pun">:</span><span class="pln"> </span><span class="str">"Node 2"</span><span class="pun">,</span><span class="pln"> links</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[]},</span><span class="pln">\n         </span><span class="pun">{</span><span class="pln">id</span><span class="pun">:</span><span class="str">"id3"</span><span class="pun">,</span><span class="pln"> label</span><span class="pun">:</span><span class="pln"> </span><span class="str">"Node 3"</span><span class="pun">,</span><span class="pln"> links</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[]},</span><span class="pln">\n         </span><span class="pun">{</span><span class="pln">id</span><span class="pun">:</span><span class="str">"id4"</span><span class="pun">,</span><span class="pln"> label</span><span class="pun">:</span><span class="pln"> </span><span class="str">"Node 4"</span><span class="pun">,</span><span class="pln"> links</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[]}</span><span class="pln">\n     </span><span class="pun">];</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">opts </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n         nodeChildren</span><span class="pun">:</span><span class="pln"> </span><span class="str">"links"</span><span class="pln">\n     </span><span class="pun">};</span><span class="pln">\n </span><span class="pun">}</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n       </div>\n      </div>\n     </div>\n     <script save-content="children-js">\n      function Children($scope) {\n            $scope.treedata=[\n                {id:"id1", label: "Node 1", links: [\n                    {id:"id1.1", label: "Node 1.1", links: {}},\n                    {id:"id1.2", label: "Node 1.1", links: {}}\n                ]},\n                {id:"id2", label: "Node 2", links: []},\n                {id:"id3", label: "Node 3", links: []},\n                {id:"id4", label: "Node 4", links: []}\n            ];\n            $scope.opts = {\n                nodeChildren: "links"\n            };\n        }\n     </script>\n    </section>\n    <section class="ng-scope" id="isleaf" ng-controller="Isleaf">\n     <div class="page-header">\n      <h1>\n       Custom Branch / Leaf\n       <small>\n        (options.isLeaf)\n       </small>\n      </h1>\n     </div>\n     <div class="row">\n      <div class="col-md-6 show-grid">\n       <div class="panel panel-default">\n        <div class="panel-body">\n         <div class="example-caption">\n          EXAMPLE:\n         </div>\n         <div save-content="isleaf-html">\n          <treecontrol class="tree-classic ng-isolate-scope" options="opts" tree-model="treedata">\n           <ul class="ng-scope">\n            <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 1 (id1)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 2 (id2)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 3 (id3)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 4 (id4)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n           </ul>\n          </treecontrol>\n         </div>\n        </div>\n       </div>\n      </div>\n      <div class="col-md-6">\n       <p>\n        the\n        <code>\n         isLeaf\n        </code>\n        option allows taking control of the selection if a node is a branch (folder) or a leaf (File).\n                This method returns a boolean, where\n        <code>\n         true\n        </code>\n        indicates a leaf,\n        <code>\n         false\n        </code>\n        indicates a branch.\n       </p>\n      </div>\n     </div>\n     <div class="row">\n      <div class="ng-isolate-scope">\n       <ul class="nav nav-tabs" ng-class="{\'nav-stacked\': vertical, \'nav-justified\': justified}" ng-transclude="">\n        <li class="ng-isolate-scope active" heading="Markup" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          Markup\n         </a>\n        </li>\n        <li class="ng-isolate-scope" heading="JavaScript" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          JavaScript\n         </a>\n        </li>\n       </ul>\n       <div class="tab-content">\n        <!-- ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="isleaf-html" class="code ng-scope" highlight-lang="html"><span class="pln"> </span><span class="tag">&lt;treecontrol</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"tree-classic"</span><span class="pln"> </span><span class="atn">tree-model</span><span class="pun">=</span><span class="atv">"treedata"</span><span class="pln"> </span><span class="atn">options</span><span class="pun">=</span><span class="atv">"opts"</span><span class="tag">&gt;</span><span class="pln">\n     label: {{node.label}} ({{node.id}})\n </span><span class="tag">&lt;/treecontrol&gt;</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="isleaf-js" class="code ng-scope" highlight-lang="js"><span class="pln"> </span><span class="kwd">function</span><span class="pln"> </span><span class="typ">Isleaf</span><span class="pun">(</span><span class="pln">$scope</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">treedata</span><span class="pun">=</span><span class="pln">createSubTree</span><span class="pun">(</span><span class="lit">3</span><span class="pun">,</span><span class="pln"> </span><span class="lit">4</span><span class="pun">,</span><span class="pln"> </span><span class="str">""</span><span class="pun">);</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">opts </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n         isLeaf</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">node</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n             </span><span class="kwd">return</span><span class="pln"> node</span><span class="pun">.</span><span class="pln">i </span><span class="pun">%</span><span class="pln"> </span><span class="lit">2</span><span class="pln"> </span><span class="pun">==</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">\n         </span><span class="pun">}</span><span class="pln">\n     </span><span class="pun">};</span><span class="pln">\n </span><span class="pun">}</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n       </div>\n      </div>\n     </div>\n     <script save-content="isleaf-js">\n      function Isleaf($scope) {\n            $scope.treedata=createSubTree(3, 4, "");\n            $scope.opts = {\n                isLeaf: function(node) {\n                    return node.i % 2 == 0;\n                }\n            };\n        }\n     </script>\n    </section>\n    <section class="ng-scope" id="sorting" ng-controller="Sorting">\n     <div class="page-header">\n      <h1>\n       Sorting tree nodes\n       <small>\n        (order-by, reverse-order)\n       </small>\n      </h1>\n     </div>\n     <div class="row">\n      <div class="col-md-6 show-grid">\n       <div class="panel panel-default">\n        <div class="panel-body">\n         <div class="example-caption">\n          EXAMPLE:\n         </div>\n         <div save-content="sorting-html">\n          <treecontrol class="tree-classic ng-isolate-scope" order-by="orderby" reverse-order="true" tree-model="treedata">\n           <ul class="ng-scope">\n            <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator  | orderBy:orderByFunc():isReverse() -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator  | orderBy:orderByFunc():isReverse()" set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 9 Mo (id9)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator  | orderBy:orderByFunc():isReverse() -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator  | orderBy:orderByFunc():isReverse()" set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 8 Lisa (id8)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator  | orderBy:orderByFunc():isReverse() -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator  | orderBy:orderByFunc():isReverse()" set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 7 Bart (id7)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator  | orderBy:orderByFunc():isReverse() -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator  | orderBy:orderByFunc():isReverse()" set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 6 Marge (id6)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator  | orderBy:orderByFunc():isReverse() -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator  | orderBy:orderByFunc():isReverse()" set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 5 Homer (id5)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator  | orderBy:orderByFunc():isReverse() -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator  | orderBy:orderByFunc():isReverse()" set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 4 Mo (id4)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator  | orderBy:orderByFunc():isReverse() -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator  | orderBy:orderByFunc():isReverse()" set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 3 Lisa (id3)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator  | orderBy:orderByFunc():isReverse() -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator  | orderBy:orderByFunc():isReverse()" set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 2 Bart (id2)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator  | orderBy:orderByFunc():isReverse() -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator  | orderBy:orderByFunc():isReverse()" set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 12 Bart (id12)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator  | orderBy:orderByFunc():isReverse() -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator  | orderBy:orderByFunc():isReverse()" set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 11 Marge (id11)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator  | orderBy:orderByFunc():isReverse() -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator  | orderBy:orderByFunc():isReverse()" set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 10 Homer (id10)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator  | orderBy:orderByFunc():isReverse() -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator  | orderBy:orderByFunc():isReverse()" set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 1 Marge (id1)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator  | orderBy:orderByFunc():isReverse() -->\n           </ul>\n          </treecontrol>\n         </div>\n        </div>\n       </div>\n      </div>\n      <div class="col-md-6">\n       <p>\n        The\n        <code>\n         order-by\n        </code>\n        and\n        <code>\n         reverse-order\n        </code>\n        properties allows\n\t      controlling the sorting of the tree nodes.\n                The value of those attributes is used with the\n        <code>\n         ng-repeat\n        </code>\n        orderBy filter -\n                see more details at the\n        <a href="https://code.angularjs.org/1.2.0-rc.3/docs/api/ng.filter:orderBy">\n         Angular JS orderBy\n        </a>\n        docs.\n       </p>\n       <p>\n        The sorting is done for each branch individually (sorting does not change the structure of the tree itself).\n       </p>\n       <p>\n        Note that since 0.2.24 the order-by property has changed from a \'&amp;\' binding to a \'=?\' binding to allow support for arrays and functions.\n                This means that 0.2.23 and earlier usage like\n        <code class="ng-binding">\n         order-by="{{predicate}}"\n        </code>\n        should be changed to\n        <code>\n         order-by="predicate"\n        </code>\n        .\n       </p>\n       <p>\n        Sort:\n       </p>\n       <a ng-click="byLabel()">\n        by label\n       </a>\n       <br/>\n       <a ng-click="byName()">\n        by name\n       </a>\n       <br/>\n       <a ng-click="byNameAndLabel()">\n        by name &amp; label (multi-field)\n       </a>\n       <br/>\n       <a ng-click="byFunction()">\n        by label number (using a function)\n       </a>\n       <br/>\n       <input class="ng-pristine ng-valid" ng-model="reverse" type="checkbox"/>\n       Reverse Order\n       <br/>\n      </div>\n     </div>\n     <div class="row">\n      <div class="ng-isolate-scope">\n       <ul class="nav nav-tabs" ng-class="{\'nav-stacked\': vertical, \'nav-justified\': justified}" ng-transclude="">\n        <li class="ng-isolate-scope active" heading="Markup" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          Markup\n         </a>\n        </li>\n        <li class="ng-isolate-scope" heading="JavaScript" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          JavaScript\n         </a>\n        </li>\n       </ul>\n       <div class="tab-content">\n        <!-- ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="sorting-html" class="code ng-scope" highlight-lang="html"><span class="pln"> </span><span class="tag">&lt;treecontrol</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"tree-classic"</span><span class="pln"> </span><span class="atn">tree-model</span><span class="pun">=</span><span class="atv">"treedata"</span><span class="pln"> </span><span class="atn">order-by</span><span class="pun">=</span><span class="atv">"orderby"</span><span class="pln"> </span><span class="atn">reverse-order</span><span class="pun">=</span><span class="atv">"{{reverse}}"</span><span class="tag">&gt;</span><span class="pln">\n     label: {{node.label}} {{node.name}} ({{node.id}})\n </span><span class="tag">&lt;/treecontrol&gt;</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="sorting-js" class="code ng-scope" highlight-lang="js"><span class="pln"> </span><span class="kwd">function</span><span class="pln"> </span><span class="typ">Sorting</span><span class="pun">(</span><span class="pln">$scope</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">before </span><span class="pun">=</span><span class="pln"> </span><span class="str">\'{{predicate}}\'</span><span class="pun">;</span><span class="pln">\n\n     $scope</span><span class="pun">.</span><span class="pln">treedata</span><span class="pun">=</span><span class="pln">createSubTree</span><span class="pun">(</span><span class="lit">3</span><span class="pun">,</span><span class="pln"> </span><span class="lit">12</span><span class="pun">,</span><span class="pln"> </span><span class="str">""</span><span class="pun">);</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">reverse </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">;</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">orderby </span><span class="pun">=</span><span class="pln"> </span><span class="str">\'label\'</span><span class="pun">;</span><span class="pln">\n\n     $scope</span><span class="pun">.</span><span class="pln">byLabel </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pln"> </span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">$scope</span><span class="pun">.</span><span class="pln">orderby </span><span class="pun">=</span><span class="pln"> </span><span class="str">\'label\'</span><span class="pun">};</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">byName </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pln"> </span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">$scope</span><span class="pun">.</span><span class="pln">orderby </span><span class="pun">=</span><span class="pln"> </span><span class="str">\'name\'</span><span class="pun">};</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">byNameAndLabel </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pln"> </span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">$scope</span><span class="pun">.</span><span class="pln">orderby </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[</span><span class="str">\'name\'</span><span class="pun">,</span><span class="pln"> </span><span class="str">\'label\'</span><span class="pun">]};</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">byFunction </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pln"> </span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">$scope</span><span class="pun">.</span><span class="pln">orderby </span><span class="pun">=</span><span class="pln"> $scope</span><span class="pun">.</span><span class="pln">getLabelNumber</span><span class="pun">};</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">getLabelNumber </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">obj</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n         </span><span class="kwd">return</span><span class="pln"> </span><span class="typ">Number</span><span class="pun">(</span><span class="pln">obj</span><span class="pun">.</span><span class="pln">label</span><span class="pun">.</span><span class="pln">substring</span><span class="pun">(</span><span class="lit">5</span><span class="pun">));</span><span class="pln">\n     </span><span class="pun">}</span><span class="pln">\n </span><span class="pun">}</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n       </div>\n      </div>\n     </div>\n     <script save-content="sorting-js">\n      function Sorting($scope) {\n            $scope.before = \'{{predicate}}\';\n\n            $scope.treedata=createSubTree(3, 12, "");\n            $scope.reverse = true;\n            $scope.orderby = \'label\';\n\n            $scope.byLabel = function () {$scope.orderby = \'label\'};\n            $scope.byName = function () {$scope.orderby = \'name\'};\n            $scope.byNameAndLabel = function () {$scope.orderby = [\'name\', \'label\']};\n            $scope.byFunction = function () {$scope.orderby = $scope.getLabelNumber};\n            $scope.getLabelNumber = function(obj) {\n                return Number(obj.label.substring(5));\n            }\n        }\n     </script>\n    </section>\n    <section class="ng-scope" id="filtering" ng-controller="Filtering">\n     <div class="page-header">\n      <h1>\n       Filtering tree nodes\n       <small>\n        (filter-expression, filter-comparator)\n       </small>\n      </h1>\n     </div>\n     <div class="row">\n      <div class="col-md-6 show-grid">\n       <div class="panel panel-default">\n        <div class="panel-body">\n         <div class="example-caption">\n          EXAMPLE:\n         </div>\n         <div save-content="filtering-html">\n          <treecontrol class="tree-classic ng-isolate-scope" filter-comparator="comparator" filter-expression="predicate" tree-model="treedata">\n           <ul class="ng-scope">\n            <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Node 1 (id1)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n           </ul>\n          </treecontrol>\n         </div>\n        </div>\n       </div>\n      </div>\n      <div class="col-md-6">\n       <p>\n        The\n        <code>\n         filter-expression\n        </code>\n        and\n        <code>\n         filter-comparator\n        </code>\n        properties allows filtering the nodes of the tree.\n                The value of those attributes is used with the\n        <code>\n         ng-repeat\n        </code>\n        Filter filter -\n                see more details at the\n        <a href="https://code.angularjs.org/1.2.25/docs/api/ng/filter/filter">\n         Angular JS Filter\n        </a>\n        docs.\n       </p>\n       <p>\n        The filter is done for each branch individually.\n       </p>\n       <p>\n        The filter expression (predicate) is used for selecting nodes from the tree to display.\n                It can be a string, object or a function. If a string, it is used to match values of the node properties.\n                If an object, each property of the expression object is used to match values of the node properties with the same name.\n                A function can be used to write arbitrary filters, and will be invoked for each node of the tree.\n       </p>\n       <p>\n        The filter comparator is used in determining if the expected value (from the filter expression) and actual value (from the object in the array) should be considered a match.\n                If false, it looks for substring match in a case insensitive way (the default).\n                If true, it looks for exact match.\n                If a function, the function will be given the object value and the predicate value to compare and should return true if the item should be included in filtered result.\n       </p>\n       <input class="ng-pristine ng-valid" ng-model="predicate" type="text"/>\n       Filter expression (string)\n       <br/>\n       <input class="ng-pristine ng-valid" ng-model="comparator" type="checkbox"/>\n       Filter comparator (true or false)\n      </div>\n     </div>\n     <div class="row">\n      <div class="ng-isolate-scope">\n       <ul class="nav nav-tabs" ng-class="{\'nav-stacked\': vertical, \'nav-justified\': justified}" ng-transclude="">\n        <li class="ng-isolate-scope active" heading="Markup" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          Markup\n         </a>\n        </li>\n        <li class="ng-isolate-scope" heading="JavaScript" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          JavaScript\n         </a>\n        </li>\n       </ul>\n       <div class="tab-content">\n        <!-- ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="filtering-html" class="code ng-scope" highlight-lang="html"><span class="pln"> </span><span class="tag">&lt;treecontrol</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"tree-classic"</span><span class="pln"> </span><span class="atn">tree-model</span><span class="pun">=</span><span class="atv">"treedata"</span><span class="pln"> </span><span class="atn">filter-expression</span><span class="pun">=</span><span class="atv">"predicate"</span><span class="pln"> </span><span class="atn">filter-comparator</span><span class="pun">=</span><span class="atv">"comparator"</span><span class="tag">&gt;</span><span class="pln">\n     label: {{node.label}} ({{node.id}})\n </span><span class="tag">&lt;/treecontrol&gt;</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="filtering-js" class="code ng-scope" highlight-lang="js"><span class="pln"> </span><span class="kwd">function</span><span class="pln"> </span><span class="typ">Filtering</span><span class="pun">(</span><span class="pln">$scope</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">treedata</span><span class="pun">=</span><span class="pln">createSubTree</span><span class="pun">(</span><span class="lit">3</span><span class="pun">,</span><span class="pln"> </span><span class="lit">4</span><span class="pun">,</span><span class="pln"> </span><span class="str">""</span><span class="pun">);</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">predicate </span><span class="pun">=</span><span class="pln"> </span><span class="str">"Node 1"</span><span class="pun">;</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">comparator </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">;</span><span class="pln">\n </span><span class="pun">}</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n       </div>\n      </div>\n     </div>\n     <script save-content="filtering-js">\n      function Filtering($scope) {\n            $scope.treedata=createSubTree(3, 4, "");\n            $scope.predicate = "Node 1";\n            $scope.comparator = false;\n        }\n     </script>\n    </section>\n    <section class="ng-scope" id="equality" ng-controller="Equality">\n     <div class="page-header">\n      <h1>\n       Custom Equality\n       <small>\n        (options.equality)\n       </small>\n      </h1>\n     </div>\n     <div class="row">\n      <div class="col-md-6 show-grid">\n       <div class="panel panel-default">\n        <div class="panel-body">\n         <div class="example-caption">\n          EXAMPLE:\n         </div>\n         <div save-content="equality-html">\n          <treecontrol class="tree-classic ng-isolate-scope" options="opts" tree-model="treedata">\n           <ul class="ng-scope">\n            <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Joe (21)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Albert (33)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               label: Ron (29)\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n           </ul>\n          </treecontrol>\n         </div>\n        </div>\n       </div>\n      </div>\n      <div class="col-md-6">\n       <p>\n        The angular tree control is using an equality function to determine if two nodes are equal,\n                The build it function checks for equality of the node members, ignoring the children property.\n       </p>\n       <p>\n        In some cases, it is required to replace the equality function. Some examples include\n       </p>\n       <ul>\n        <li>\n         If multiple nodes exist in the three that are identical except for their parents and children, the default function\n                    will confuse between them. In such as case, it is recommended to replace the function with the === operator (as in this example).\n        </li>\n        <li>\n         If you have an id property for nodes that can be relayed on for node uniqueness and identification,\n                    using a custom equality function that checks for that id will result in better performance.\n        </li>\n       </ul>\n      </div>\n     </div>\n     <div class="row">\n      <div class="ng-isolate-scope">\n       <ul class="nav nav-tabs" ng-class="{\'nav-stacked\': vertical, \'nav-justified\': justified}" ng-transclude="">\n        <li class="ng-isolate-scope active" heading="Markup" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          Markup\n         </a>\n        </li>\n        <li class="ng-isolate-scope" heading="JavaScript" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          JavaScript\n         </a>\n        </li>\n       </ul>\n       <div class="tab-content">\n        <!-- ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="equality-html" class="code ng-scope" highlight-lang="html"><span class="pln"> </span><span class="tag">&lt;treecontrol</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"tree-classic"</span><span class="pln"> </span><span class="atn">tree-model</span><span class="pun">=</span><span class="atv">"treedata"</span><span class="pln"> </span><span class="atn">options</span><span class="pun">=</span><span class="atv">"opts"</span><span class="tag">&gt;</span><span class="pln">\n     label: {{node.name}} ({{node.age}})\n </span><span class="tag">&lt;/treecontrol&gt;</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="equality-js" class="code ng-scope" highlight-lang="js"><span class="pln"> </span><span class="kwd">function</span><span class="pln"> </span><span class="typ">Equality</span><span class="pun">(</span><span class="pln">$scope</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">treedata</span><span class="pun">=[</span><span class="pln">\n         </span><span class="pun">{</span><span class="pln"> </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Joe"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"age"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"21"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"children"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln">\n             </span><span class="pun">{</span><span class="pln"> </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Smith"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"age"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"42"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"children"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="pun">[]</span><span class="pln"> </span><span class="pun">},</span><span class="pln">\n             </span><span class="pun">{</span><span class="pln"> </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Joe"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"age"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"21"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"children"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln">\n                 </span><span class="pun">{</span><span class="pln"> </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Jenifer"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"age"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"23"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"children"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln">\n                     </span><span class="pun">{</span><span class="pln"> </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Dani"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"age"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"32"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"children"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="pun">[]</span><span class="pln"> </span><span class="pun">},</span><span class="pln">\n                     </span><span class="pun">{</span><span class="pln"> </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Max"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"age"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"34"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"children"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="pun">[]</span><span class="pln"> </span><span class="pun">}</span><span class="pln">\n                 </span><span class="pun">]}</span><span class="pln">\n             </span><span class="pun">]}</span><span class="pln">\n         </span><span class="pun">]},</span><span class="pln">\n         </span><span class="pun">{</span><span class="pln"> </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Albert"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"age"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"33"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"children"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="pun">[]</span><span class="pln"> </span><span class="pun">},</span><span class="pln">\n         </span><span class="pun">{</span><span class="pln"> </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Ron"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"age"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"29"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"children"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="pun">[]</span><span class="pln"> </span><span class="pun">}</span><span class="pln">\n     </span><span class="pun">];</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">opts </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n         equality</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">node1</span><span class="pun">,</span><span class="pln"> node2</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n             </span><span class="kwd">return</span><span class="pln"> node1 </span><span class="pun">===</span><span class="pln"> node2</span><span class="pun">;</span><span class="pln">\n         </span><span class="pun">}</span><span class="pln">\n     </span><span class="pun">}</span><span class="pln">\n </span><span class="pun">}</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n       </div>\n      </div>\n     </div>\n     <script save-content="equality-js">\n      function Equality($scope) {\n            $scope.treedata=[\n                { "name" : "Joe", "age" : "21", "children" : [\n                    { "name" : "Smith", "age" : "42", "children" : [] },\n                    { "name" : "Joe", "age" : "21", "children" : [\n                        { "name" : "Jenifer", "age" : "23", "children" : [\n                            { "name" : "Dani", "age" : "32", "children" : [] },\n                            { "name" : "Max", "age" : "34", "children" : [] }\n                        ]}\n                    ]}\n                ]},\n                { "name" : "Albert", "age" : "33", "children" : [] },\n                { "name" : "Ron", "age" : "29", "children" : [] }\n            ];\n            $scope.opts = {\n                equality: function(node1, node2) {\n                    return node1 === node2;\n                }\n            }\n        }\n     </script>\n    </section>\n    <section class="ng-scope" id="rightclick" ng-controller="RightClick">\n     <div class="page-header">\n      <h1>\n       Right Click &amp; Context Menu\n       <small>\n        (on-right-click &amp; menu-id)\n       </small>\n      </h1>\n     </div>\n     <div class="row">\n      <div class="col-md-6 show-grid">\n       <div class="panel panel-default">\n        <div class="panel-body">\n         <div class="example-caption">\n          EXAMPLE:\n         </div>\n         <div save-content="rightclick-html">\n          <treecontrol class="tree-classic ng-isolate-scope" expanded-nodes="expandedNodes" menu-id="ctxMenu" on-right-click="doRightClick(node)" on-selection="doSelect(node)" tree-model="treedata">\n           <ul class="ng-scope">\n            <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-expanded" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" context-menu-id="ctxMenu" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               Vegetables\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n             <treeitem class="ng-scope" ng-if="nodeExpanded()">\n              <ul class="ng-scope">\n               <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n               <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                </i>\n                <i class="tree-leaf-head">\n                </i>\n                <div class="tree-label" context-menu-id="ctxMenu" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n                 <span class="ng-binding ng-scope">\n                  Vegetable:Carrot (Orange)\n                 </span>\n                </div>\n                <!-- ngIf: nodeExpanded() -->\n               </li>\n               <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n               <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                </i>\n                <i class="tree-leaf-head">\n                </i>\n                <div class="tree-label" context-menu-id="ctxMenu" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n                 <span class="ng-binding ng-scope">\n                  Vegetable:Cabbbage (Green)\n                 </span>\n                </div>\n                <!-- ngIf: nodeExpanded() -->\n               </li>\n               <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n               <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                </i>\n                <i class="tree-leaf-head">\n                </i>\n                <div class="tree-label" context-menu-id="ctxMenu" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n                 <span class="ng-binding ng-scope">\n                  Vegetable:Potato (Brown)\n                 </span>\n                </div>\n                <!-- ngIf: nodeExpanded() -->\n               </li>\n               <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n              </ul>\n             </treeitem>\n             <!-- end ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-expanded" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <div class="tree-label" context-menu-id="ctxMenu" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n              <span class="ng-binding ng-scope">\n               Fruit\n              </span>\n             </div>\n             <!-- ngIf: nodeExpanded() -->\n             <treeitem class="ng-scope" ng-if="nodeExpanded()">\n              <ul class="ng-scope">\n               <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n               <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                </i>\n                <i class="tree-leaf-head">\n                </i>\n                <div class="tree-label" context-menu-id="ctxMenu" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n                 <span class="ng-binding ng-scope">\n                  Fruit:Apricot (Orange)\n                 </span>\n                </div>\n                <!-- ngIf: nodeExpanded() -->\n               </li>\n               <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n               <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                </i>\n                <i class="tree-leaf-head">\n                </i>\n                <div class="tree-label" context-menu-id="ctxMenu" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n                 <span class="ng-binding ng-scope">\n                  Fruit:Apple (Red)\n                 </span>\n                </div>\n                <!-- ngIf: nodeExpanded() -->\n               </li>\n               <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n               <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                </i>\n                <i class="tree-leaf-head">\n                </i>\n                <div class="tree-label" context-menu-id="ctxMenu" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-right-click="rightClickNodeLabel(node)" tree-transclude="">\n                 <span class="ng-binding ng-scope">\n                  Fruit:Grape (Green)\n                 </span>\n                </div>\n                <!-- ngIf: nodeExpanded() -->\n               </li>\n               <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n              </ul>\n             </treeitem>\n             <!-- end ngIf: nodeExpanded() -->\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n           </ul>\n          </treecontrol>\n          <ul class="dropdown-menu" id="ctxMenu" style="display: none;">\n           <li>\n            <a class="ng-binding disabled" ng-class="isLeaf() ? \'\' : \'disabled\'" ng-click="doCook()">\n             Cook\n            </a>\n           </li>\n           <li class="divider">\n           </li>\n           <li>\n            <a class="disabled" context-submenu-id="ctxSubMenuOrange" ng-class="selectedFood.color == \'Orange\' ? \'\' : \'disabled\'">\n             Orange...\n            </a>\n           </li>\n           <li>\n            <a class="disabled" context-submenu-id="ctxSubMenuGreen" ng-class="selectedFood.color == \'Green\' ? \'\' : \'disabled\'">\n             Green...\n            </a>\n           </li>\n          </ul>\n          <ul class="dropdown-menu" id="ctxSubMenuOrange" style="display: none;">\n           <li>\n            <a class="ng-binding" ng-click="doAction(\'juice\' + selectedFood.name)">\n             Juice\n            </a>\n           </li>\n           <li>\n            <a ng-click="doAction(\'peel orange food\')">\n             Peel Orange Food\n            </a>\n           </li>\n          </ul>\n          <ul class="dropdown-menu" id="ctxSubMenuGreen" style="display: none;">\n           <li>\n            <a class="ng-binding" ng-click="doAction(\'chop\' + selectedFood.name)">\n             Chop\n            </a>\n           </li>\n           <li>\n            <a ng-click="doAction(\'shred green food\')">\n             Shred Green Food\n            </a>\n           </li>\n          </ul>\n         </div>\n        </div>\n       </div>\n      </div>\n      <div class="col-md-6">\n       <p>\n        The angular tree control provides right-click and context menu functionality:\n       </p>\n       <ul>\n        <li>\n         <code>\n          on-right-click\n         </code>\n         is evaluated as an angular expression (like\n         <code>\n          ng-click\n         </code>\n         value) when\n\t\t  a right-click event is detected.  If context menu is enabled, then this will be\n\t\t  evaluated before the context menu is opened.\n        </li>\n        <li>\n         <code>\n          menu-id\n         </code>\n         is the\n         <strong>\n          id\n         </strong>\n         for an\n         <code>\n          &lt;ul&gt;\n         </code>\n         element which will be displayed after a right-click has been detected.\n        </li>\n       </ul>\n       <p>\n       </p>\n       <p>\n        The last right-click was on the\n        <code class="ng-binding">\n        </code>\n        node\n       </p>\n       <p>\n        The last food to be cooked was\n        <code class="ng-binding">\n        </code>\n       </p>\n       <p>\n        The last context menu action was\n        <code class="ng-binding">\n        </code>\n       </p>\n      </div>\n     </div>\n     <div class="row">\n      <div class="ng-isolate-scope">\n       <ul class="nav nav-tabs" ng-class="{\'nav-stacked\': vertical, \'nav-justified\': justified}" ng-transclude="">\n        <li class="ng-isolate-scope active" heading="Markup" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          Markup\n         </a>\n        </li>\n        <li class="ng-isolate-scope" heading="JavaScript" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          JavaScript\n         </a>\n        </li>\n       </ul>\n       <div class="tab-content">\n        <!-- ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="rightclick-html" class="code ng-scope" highlight-lang="html"><span class="pln"> </span><span class="tag">&lt;treecontrol</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"tree-classic"</span><span class="pln"> </span><span class="atn">tree-model</span><span class="pun">=</span><span class="atv">"treedata"</span><span class="pln"> </span><span class="atn">expanded-nodes</span><span class="pun">=</span><span class="atv">"expandedNodes"</span><span class="pln"> </span><span class="atn">on-selection</span><span class="pun">=</span><span class="atv">"doSelect(node)"</span><span class="pln"> </span><span class="atn">on-right-click</span><span class="pun">=</span><span class="atv">"doRightClick(node)"</span><span class="pln"> </span><span class="atn">menu-id</span><span class="pun">=</span><span class="atv">"ctxMenu"</span><span class="tag">&gt;</span><span class="pln">\n     {{node.label}}\n </span><span class="tag">&lt;/treecontrol&gt;</span><span class="pln">\t\n\n\n </span><span class="tag">&lt;ul</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"ctxMenu"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"dropdown-menu"</span><span class="tag">&gt;</span><span class="pln">\n   </span><span class="tag">&lt;li&gt;&lt;a</span><span class="pln"> </span><span class="atn">ng-click</span><span class="pun">=</span><span class="atv">"doCook()"</span><span class="pln"> </span><span class="atn">ng-class</span><span class="pun">=</span><span class="atv">"isLeaf() ? \'\' : \'disabled\'"</span><span class="tag">&gt;</span><span class="pln">Cook {{selectedFood.name}}</span><span class="tag">&lt;/a&gt;&lt;/li&gt;</span><span class="pln">\n   </span><span class="tag">&lt;li</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"divider"</span><span class="tag">&gt;&lt;/li&gt;</span><span class="pln">  \n   </span><span class="tag">&lt;li&gt;&lt;a</span><span class="pln"> </span><span class="atn">context-submenu-id</span><span class="pun">=</span><span class="atv">"ctxSubMenuOrange"</span><span class="pln"> </span><span class="atn">ng-class</span><span class="pun">=</span><span class="atv">"selectedFood.color == \'Orange\' ? \'\' : \'disabled\'"</span><span class="tag">&gt;</span><span class="pln">Orange...</span><span class="tag">&lt;/a&gt;&lt;/li&gt;</span><span class="pln">\n   </span><span class="tag">&lt;li&gt;&lt;a</span><span class="pln"> </span><span class="atn">context-submenu-id</span><span class="pun">=</span><span class="atv">"ctxSubMenuGreen"</span><span class="pln"> </span><span class="atn">ng-class</span><span class="pun">=</span><span class="atv">"selectedFood.color == \'Green\' ? \'\' : \'disabled\'"</span><span class="tag">&gt;</span><span class="pln">Green...</span><span class="tag">&lt;/a&gt;&lt;/li&gt;</span><span class="pln">\n </span><span class="tag">&lt;/ul&gt;</span><span class="pln">\n\n\n </span><span class="tag">&lt;ul</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"ctxSubMenuOrange"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"dropdown-menu"</span><span class="tag">&gt;</span><span class="pln">\n   </span><span class="tag">&lt;li&gt;&lt;a</span><span class="pln"> </span><span class="atn">ng-click</span><span class="pun">=</span><span class="atv">"doAction(\'juice\' + selectedFood.name)"</span><span class="tag">&gt;</span><span class="pln">Juice {{selectedFood.name}}</span><span class="tag">&lt;/a&gt;&lt;/li&gt;</span><span class="pln">\n   </span><span class="tag">&lt;li&gt;&lt;a</span><span class="pln"> </span><span class="atn">ng-click</span><span class="pun">=</span><span class="atv">"doAction(\'peel orange food\')"</span><span class="tag">&gt;</span><span class="pln">Peel Orange Food</span><span class="tag">&lt;/a&gt;&lt;/li&gt;</span><span class="pln">\n </span><span class="tag">&lt;/ul&gt;</span><span class="pln">\n\n\n </span><span class="tag">&lt;ul</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"ctxSubMenuGreen"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"dropdown-menu"</span><span class="tag">&gt;</span><span class="pln">\n   </span><span class="tag">&lt;li&gt;&lt;a</span><span class="pln"> </span><span class="atn">ng-click</span><span class="pun">=</span><span class="atv">"doAction(\'chop\' + selectedFood.name)"</span><span class="tag">&gt;</span><span class="pln">Chop {{selectedFood.name}}</span><span class="tag">&lt;/a&gt;&lt;/li&gt;</span><span class="pln">\n   </span><span class="tag">&lt;li&gt;&lt;a</span><span class="pln"> </span><span class="atn">ng-click</span><span class="pun">=</span><span class="atv">"doAction(\'shred green food\')"</span><span class="tag">&gt;</span><span class="pln">Shred Green Food</span><span class="tag">&lt;/a&gt;&lt;/li&gt;</span><span class="pln">\n </span><span class="tag">&lt;/ul&gt;</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="rightclick-js" class="code ng-scope" highlight-lang="js"><span class="pln"> </span><span class="kwd">function</span><span class="pln"> </span><span class="typ">RightClick</span><span class="pun">(</span><span class="pln">$scope</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n   $scope</span><span class="pun">.</span><span class="pln">treedata</span><span class="pun">=[</span><span class="pln">\n       </span><span class="pun">{</span><span class="pln"> </span><span class="str">"label"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Vegetables"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"children"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln">\n         </span><span class="pun">{</span><span class="pln"> </span><span class="str">"label"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"Vegetable:Carrot (Orange)"</span><span class="pun">,</span><span class="pln">  </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Carrot"</span><span class="pun">,</span><span class="pln">  </span><span class="str">"color"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Orange"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"class"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Vegetable"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"children"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="pun">[]</span><span class="pln"> </span><span class="pun">},</span><span class="pln">\n         </span><span class="pun">{</span><span class="pln"> </span><span class="str">"label"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"Vegetable:Cabbbage (Green)"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Cabbage"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"color"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Green"</span><span class="pun">,</span><span class="pln">  </span><span class="str">"class"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Vegetable"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"children"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="pun">[]</span><span class="pln"> </span><span class="pun">},</span><span class="pln">\n         </span><span class="pun">{</span><span class="pln"> </span><span class="str">"label"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"Vegetable:Potato (Brown)"</span><span class="pun">,</span><span class="pln">   </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Potato"</span><span class="pun">,</span><span class="pln">  </span><span class="str">"color"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Brown"</span><span class="pun">,</span><span class="pln">  </span><span class="str">"class"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Vegetable"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"children"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="pun">[]</span><span class="pln"> </span><span class="pun">}</span><span class="pln"> \n       </span><span class="pun">]},</span><span class="pln">\n       </span><span class="pun">{</span><span class="pln"> </span><span class="str">"label"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Fruit"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"children"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln">\n         </span><span class="pun">{</span><span class="pln"> </span><span class="str">"label"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"Fruit:Apricot (Orange)"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Apricot"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"color"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Orange"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"class"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Fruit"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"children"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="pun">[]</span><span class="pln"> </span><span class="pun">},</span><span class="pln">\n         </span><span class="pun">{</span><span class="pln"> </span><span class="str">"label"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"Fruit:Apple (Red)"</span><span class="pun">,</span><span class="pln">      </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Apple"</span><span class="pun">,</span><span class="pln">   </span><span class="str">"color"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Red"</span><span class="pun">,</span><span class="pln">    </span><span class="str">"class"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Fruit"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"children"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="pun">[]</span><span class="pln"> </span><span class="pun">},</span><span class="pln">\n         </span><span class="pun">{</span><span class="pln"> </span><span class="str">"label"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"Fruit:Grape (Green)"</span><span class="pun">,</span><span class="pln">    </span><span class="str">"name"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Grape"</span><span class="pun">,</span><span class="pln">   </span><span class="str">"color"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Green"</span><span class="pun">,</span><span class="pln">  </span><span class="str">"class"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">"Fruit"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"children"</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="pun">[]</span><span class="pln"> </span><span class="pun">}</span><span class="pln">\n       </span><span class="pun">]}</span><span class="pln">\n   </span><span class="pun">];</span><span class="pln">\n   $scope</span><span class="pun">.</span><span class="pln">expandedNodes</span><span class="pun">=[</span><span class="pln">$scope</span><span class="pun">.</span><span class="pln">treedata</span><span class="pun">[</span><span class="lit">0</span><span class="pun">],</span><span class="pln"> $scope</span><span class="pun">.</span><span class="pln">treedata</span><span class="pun">[</span><span class="lit">1</span><span class="pun">]];</span><span class="pln">\n\n   $scope</span><span class="pun">.</span><span class="pln">selectedFood </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span><span class="pln">\n   $scope</span><span class="pun">.</span><span class="pln">doSelect </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">node</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> $scope</span><span class="pun">.</span><span class="pln">selectedFood </span><span class="pun">=</span><span class="pln"> node</span><span class="pun">;};</span><span class="pln">\n\n   $scope</span><span class="pun">.</span><span class="pln">lastRightClickNode </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span><span class="pln">\n   $scope</span><span class="pun">.</span><span class="pln">doRightClick </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">node</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> $scope</span><span class="pun">.</span><span class="pln">lastRightClickNode </span><span class="pun">=</span><span class="pln"> node</span><span class="pun">.</span><span class="pln">label</span><span class="pun">;</span><span class="pln"> </span><span class="pun">}</span><span class="pln">\n\n   $scope</span><span class="pun">.</span><span class="pln">lastCookedFood </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span><span class="pln">\n   $scope</span><span class="pun">.</span><span class="pln">doCook </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> $scope</span><span class="pun">.</span><span class="pln">lastCookedFood </span><span class="pun">=</span><span class="pln"> $scope</span><span class="pun">.</span><span class="pln">selectedFood</span><span class="pun">.</span><span class="pln">name</span><span class="pun">;</span><span class="pln"> </span><span class="pun">};</span><span class="pln">\n \n   $scope</span><span class="pun">.</span><span class="pln">lastAction </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span><span class="pln">\n   $scope</span><span class="pun">.</span><span class="pln">doAction </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">cmd</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> $scope</span><span class="pun">.</span><span class="pln">lastAction </span><span class="pun">=</span><span class="pln"> cmd</span><span class="pun">;</span><span class="pln"> </span><span class="pun">};</span><span class="pln">\n\n   $scope</span><span class="pun">.</span><span class="pln">isLeaf </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">return</span><span class="pln"> $scope</span><span class="pun">.</span><span class="pln">selectedFood </span><span class="pun">&amp;&amp;</span><span class="pln"> $scope</span><span class="pun">.</span><span class="pln">selectedFood</span><span class="pun">.</span><span class="pln">children</span><span class="pun">.</span><span class="pln">length </span><span class="pun">==</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;};</span><span class="pln">\n</span><span class="pun">}</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n       </div>\n      </div>\n     </div>\n     <script save-content="rightclick-js">\n      function RightClick($scope) {\n        $scope.treedata=[\n            { "label" : "Vegetables", "children" : [\n              { "label": "Vegetable:Carrot (Orange)",  "name" : "Carrot",  "color" : "Orange", "class" : "Vegetable", "children" : [] },\n              { "label": "Vegetable:Cabbbage (Green)", "name" : "Cabbage", "color" : "Green",  "class" : "Vegetable", "children" : [] },\n              { "label": "Vegetable:Potato (Brown)",   "name" : "Potato",  "color" : "Brown",  "class" : "Vegetable", "children" : [] } \n            ]},\n            { "label" : "Fruit", "children" : [\n              { "label": "Fruit:Apricot (Orange)", "name" : "Apricot", "color" : "Orange", "class" : "Fruit", "children" : [] },\n              { "label": "Fruit:Apple (Red)",      "name" : "Apple",   "color" : "Red",    "class" : "Fruit", "children" : [] },\n              { "label": "Fruit:Grape (Green)",    "name" : "Grape",   "color" : "Green",  "class" : "Fruit", "children" : [] }\n            ]}\n        ];\n        $scope.expandedNodes=[$scope.treedata[0], $scope.treedata[1]];\n\n        $scope.selectedFood = null;\n        $scope.doSelect = function(node) { $scope.selectedFood = node;};\n\n        $scope.lastRightClickNode = null;\n        $scope.doRightClick = function(node) { $scope.lastRightClickNode = node.label; }\n\n        $scope.lastCookedFood = null;\n        $scope.doCook = function() { $scope.lastCookedFood = $scope.selectedFood.name; };\n      \n        $scope.lastAction = null;\n        $scope.doAction = function(cmd) { $scope.lastAction = cmd; };\n\n        $scope.isLeaf = function() { return $scope.selectedFood && $scope.selectedFood.children.length == 0;};\n     }\n     </script>\n    </section>\n    <section class="ng-scope" id="externalTemplate" ng-controller="ExternalTemplate">\n     <div class="page-header">\n      <h1>\n       External Template\n       <small>\n        (options.templateUrl, treeConfig.templateUrl)\n       </small>\n      </h1>\n     </div>\n     <div class="row">\n      <div class="col-md-6 show-grid">\n       <div class="panel panel-default">\n        <div class="panel-body">\n         <div class="example-caption">\n          EXAMPLE:\n         </div>\n         <div save-content="external-template-html">\n          <treecontrol class="tree-classic ng-isolate-scope" options="opts" tree-model="treedata">\n           <ul class="ng-scope">\n            <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <i>\n              <b>\n               <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                <span class="ng-binding ng-scope">\n                 label: Node 1 (id1)\n                </span>\n               </div>\n              </b>\n             </i>\n             <treeitem class="ng-hide" ng-show="nodeExpanded()">\n              <ul class="ng-scope">\n               <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n               <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                </i>\n                <i class="tree-leaf-head">\n                </i>\n                <i>\n                 <b>\n                  <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                   <span class="ng-binding ng-scope">\n                    label: Node 1.1 (id1.1)\n                   </span>\n                  </div>\n                 </b>\n                </i>\n                <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                 <ul class="ng-scope">\n                  <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 1.1.1 (id1.1.1)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 1.1.2 (id1.1.2)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 1.1.3 (id1.1.3)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 1.1.4 (id1.1.4)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                 </ul>\n                </treeitem>\n               </li>\n               <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n               <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                </i>\n                <i class="tree-leaf-head">\n                </i>\n                <i>\n                 <b>\n                  <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                   <span class="ng-binding ng-scope">\n                    label: Node 1.2 (id1.2)\n                   </span>\n                  </div>\n                 </b>\n                </i>\n                <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                 <ul class="ng-scope">\n                  <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 1.2.1 (id1.2.1)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 1.2.2 (id1.2.2)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 1.2.3 (id1.2.3)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 1.2.4 (id1.2.4)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                 </ul>\n                </treeitem>\n               </li>\n               <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n               <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                </i>\n                <i class="tree-leaf-head">\n                </i>\n                <i>\n                 <b>\n                  <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                   <span class="ng-binding ng-scope">\n                    label: Node 1.3 (id1.3)\n                   </span>\n                  </div>\n                 </b>\n                </i>\n                <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                 <ul class="ng-scope">\n                  <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 1.3.1 (id1.3.1)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 1.3.2 (id1.3.2)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 1.3.3 (id1.3.3)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 1.3.4 (id1.3.4)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                 </ul>\n                </treeitem>\n               </li>\n               <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n               <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                </i>\n                <i class="tree-leaf-head">\n                </i>\n                <i>\n                 <b>\n                  <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                   <span class="ng-binding ng-scope">\n                    label: Node 1.4 (id1.4)\n                   </span>\n                  </div>\n                 </b>\n                </i>\n                <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                 <ul class="ng-scope">\n                  <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 1.4.1 (id1.4.1)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 1.4.2 (id1.4.2)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 1.4.3 (id1.4.3)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 1.4.4 (id1.4.4)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                 </ul>\n                </treeitem>\n               </li>\n               <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n              </ul>\n             </treeitem>\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <i>\n              <b>\n               <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                <span class="ng-binding ng-scope">\n                 label: Node 2 (id2)\n                </span>\n               </div>\n              </b>\n             </i>\n             <treeitem class="ng-hide" ng-show="nodeExpanded()">\n              <ul class="ng-scope">\n               <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n               <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                </i>\n                <i class="tree-leaf-head">\n                </i>\n                <i>\n                 <b>\n                  <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                   <span class="ng-binding ng-scope">\n                    label: Node 2.1 (id2.1)\n                   </span>\n                  </div>\n                 </b>\n                </i>\n                <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                 <ul class="ng-scope">\n                  <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 2.1.1 (id2.1.1)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 2.1.2 (id2.1.2)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 2.1.3 (id2.1.3)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 2.1.4 (id2.1.4)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                 </ul>\n                </treeitem>\n               </li>\n               <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n               <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                </i>\n                <i class="tree-leaf-head">\n                </i>\n                <i>\n                 <b>\n                  <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                   <span class="ng-binding ng-scope">\n                    label: Node 2.2 (id2.2)\n                   </span>\n                  </div>\n                 </b>\n                </i>\n                <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                 <ul class="ng-scope">\n                  <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 2.2.1 (id2.2.1)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 2.2.2 (id2.2.2)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 2.2.3 (id2.2.3)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 2.2.4 (id2.2.4)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                 </ul>\n                </treeitem>\n               </li>\n               <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n               <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                </i>\n                <i class="tree-leaf-head">\n                </i>\n                <i>\n                 <b>\n                  <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                   <span class="ng-binding ng-scope">\n                    label: Node 2.3 (id2.3)\n                   </span>\n                  </div>\n                 </b>\n                </i>\n                <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                 <ul class="ng-scope">\n                  <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 2.3.1 (id2.3.1)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 2.3.2 (id2.3.2)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 2.3.3 (id2.3.3)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 2.3.4 (id2.3.4)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                 </ul>\n                </treeitem>\n               </li>\n               <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n               <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                </i>\n                <i class="tree-leaf-head">\n                </i>\n                <i>\n                 <b>\n                  <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                   <span class="ng-binding ng-scope">\n                    label: Node 2.4 (id2.4)\n                   </span>\n                  </div>\n                 </b>\n                </i>\n                <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                 <ul class="ng-scope">\n                  <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 2.4.1 (id2.4.1)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 2.4.2 (id2.4.2)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 2.4.3 (id2.4.3)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 2.4.4 (id2.4.4)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                 </ul>\n                </treeitem>\n               </li>\n               <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n              </ul>\n             </treeitem>\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <i>\n              <b>\n               <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                <span class="ng-binding ng-scope">\n                 label: Node 3 (id3)\n                </span>\n               </div>\n              </b>\n             </i>\n             <treeitem class="ng-hide" ng-show="nodeExpanded()">\n              <ul class="ng-scope">\n               <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n               <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                </i>\n                <i class="tree-leaf-head">\n                </i>\n                <i>\n                 <b>\n                  <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                   <span class="ng-binding ng-scope">\n                    label: Node 3.1 (id3.1)\n                   </span>\n                  </div>\n                 </b>\n                </i>\n                <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                 <ul class="ng-scope">\n                  <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 3.1.1 (id3.1.1)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 3.1.2 (id3.1.2)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 3.1.3 (id3.1.3)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 3.1.4 (id3.1.4)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                 </ul>\n                </treeitem>\n               </li>\n               <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n               <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                </i>\n                <i class="tree-leaf-head">\n                </i>\n                <i>\n                 <b>\n                  <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                   <span class="ng-binding ng-scope">\n                    label: Node 3.2 (id3.2)\n                   </span>\n                  </div>\n                 </b>\n                </i>\n                <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                 <ul class="ng-scope">\n                  <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 3.2.1 (id3.2.1)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 3.2.2 (id3.2.2)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 3.2.3 (id3.2.3)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 3.2.4 (id3.2.4)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                 </ul>\n                </treeitem>\n               </li>\n               <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n               <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                </i>\n                <i class="tree-leaf-head">\n                </i>\n                <i>\n                 <b>\n                  <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                   <span class="ng-binding ng-scope">\n                    label: Node 3.3 (id3.3)\n                   </span>\n                  </div>\n                 </b>\n                </i>\n                <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                 <ul class="ng-scope">\n                  <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 3.3.1 (id3.3.1)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 3.3.2 (id3.3.2)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 3.3.3 (id3.3.3)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 3.3.4 (id3.3.4)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                 </ul>\n                </treeitem>\n               </li>\n               <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n               <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                </i>\n                <i class="tree-leaf-head">\n                </i>\n                <i>\n                 <b>\n                  <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                   <span class="ng-binding ng-scope">\n                    label: Node 3.4 (id3.4)\n                   </span>\n                  </div>\n                 </b>\n                </i>\n                <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                 <ul class="ng-scope">\n                  <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 3.4.1 (id3.4.1)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 3.4.2 (id3.4.2)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 3.4.3 (id3.4.3)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 3.4.4 (id3.4.4)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                 </ul>\n                </treeitem>\n               </li>\n               <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n              </ul>\n             </treeitem>\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n            <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n             <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n             </i>\n             <i class="tree-leaf-head">\n             </i>\n             <i>\n              <b>\n               <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                <span class="ng-binding ng-scope">\n                 label: Node 4 (id4)\n                </span>\n               </div>\n              </b>\n             </i>\n             <treeitem class="ng-hide" ng-show="nodeExpanded()">\n              <ul class="ng-scope">\n               <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n               <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                </i>\n                <i class="tree-leaf-head">\n                </i>\n                <i>\n                 <b>\n                  <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                   <span class="ng-binding ng-scope">\n                    label: Node 4.1 (id4.1)\n                   </span>\n                  </div>\n                 </b>\n                </i>\n                <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                 <ul class="ng-scope">\n                  <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 4.1.1 (id4.1.1)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 4.1.2 (id4.1.2)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 4.1.3 (id4.1.3)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 4.1.4 (id4.1.4)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                 </ul>\n                </treeitem>\n               </li>\n               <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n               <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                </i>\n                <i class="tree-leaf-head">\n                </i>\n                <i>\n                 <b>\n                  <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                   <span class="ng-binding ng-scope">\n                    label: Node 4.2 (id4.2)\n                   </span>\n                  </div>\n                 </b>\n                </i>\n                <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                 <ul class="ng-scope">\n                  <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 4.2.1 (id4.2.1)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 4.2.2 (id4.2.2)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 4.2.3 (id4.2.3)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 4.2.4 (id4.2.4)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                 </ul>\n                </treeitem>\n               </li>\n               <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n               <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                </i>\n                <i class="tree-leaf-head">\n                </i>\n                <i>\n                 <b>\n                  <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                   <span class="ng-binding ng-scope">\n                    label: Node 4.3 (id4.3)\n                   </span>\n                  </div>\n                 </b>\n                </i>\n                <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                 <ul class="ng-scope">\n                  <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 4.3.1 (id4.3.1)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 4.3.2 (id4.3.2)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 4.3.3 (id4.3.3)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 4.3.4 (id4.3.4)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                 </ul>\n                </treeitem>\n               </li>\n               <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n               <li class="ng-scope tree-collapsed" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                </i>\n                <i class="tree-leaf-head">\n                </i>\n                <i>\n                 <b>\n                  <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                   <span class="ng-binding ng-scope">\n                    label: Node 4.4 (id4.4)\n                   </span>\n                  </div>\n                 </b>\n                </i>\n                <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                 <ul class="ng-scope">\n                  <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 4.4.1 (id4.4.1)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 4.4.2 (id4.4.2)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 4.4.3 (id4.4.3)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                  <li class="ng-scope tree-leaf" ng-class="headClass(node)" ng-repeat="node in node.children | filter:filterExpression:filterComparator " set-node-to-data="">\n                   <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)">\n                   </i>\n                   <i class="tree-leaf-head">\n                   </i>\n                   <i>\n                    <b>\n                     <div class="tree-label" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude="">\n                      <span class="ng-binding ng-scope">\n                       label: Node 4.4.4 (id4.4.4)\n                      </span>\n                     </div>\n                    </b>\n                   </i>\n                   <treeitem class="ng-hide" ng-show="nodeExpanded()">\n                    <ul class="ng-scope">\n                     <!-- ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                    </ul>\n                   </treeitem>\n                  </li>\n                  <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n                 </ul>\n                </treeitem>\n               </li>\n               <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n              </ul>\n             </treeitem>\n            </li>\n            <!-- end ngRepeat: node in node.children | filter:filterExpression:filterComparator -->\n           </ul>\n          </treecontrol>\n         </div>\n        </div>\n       </div>\n      </div>\n      <div class="col-md-6">\n       <p>\n        By default the angular tree control uses internal template to define control structure.\n       </p>\n       <p>\n        However, user is able to specify his own template via:\n       </p>\n       <ul>\n        <li>\n         <code>\n          options.templateUrl\n         </code>\n         for individual tree control.\n        </li>\n        <li>\n         <p>\n          <code>\n           treeConfig.templateUrl\n          </code>\n          for all tree controls during application\n          <code>\n           config\n          </code>\n          or\n          <code>\n           run\n          </code>\n          step.\n                        (\n          <code>\n           treeConfig\n          </code>\n          is global injectable value provider)\n         </p>\n        </li>\n       </ul>\n       <p>\n        If user defined template could not be found, default template will be used.\n       </p>\n       <p>\n        Example above, applies italic bold style for element label, and uses ng-show instead of ng-if (as defined in default template)\n       </p>\n      </div>\n     </div>\n     <div class="row">\n      <div class="ng-isolate-scope">\n       <ul class="nav nav-tabs" ng-class="{\'nav-stacked\': vertical, \'nav-justified\': justified}" ng-transclude="">\n        <li class="ng-isolate-scope active" heading="Markup" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          Markup\n         </a>\n        </li>\n        <li class="ng-isolate-scope" heading="JavaScript (instance template)" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          JavaScript (instance template)\n         </a>\n        </li>\n        <li class="ng-isolate-scope" heading="JavaScript (global template)" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          JavaScript (global template)\n         </a>\n        </li>\n        <li class="ng-isolate-scope" heading="Template" ng-class="{active: active, disabled: disabled}">\n         <a class="ng-binding" ng-click="select()" tab-heading-transclude="">\n          Template\n         </a>\n        </li>\n       </ul>\n       <div class="tab-content">\n        <!-- ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope active" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="external-template-html" class="code ng-scope" highlight-lang="html"><span class="pln"> </span><span class="tag">&lt;treecontrol</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"tree-classic"</span><span class="pln"> </span><span class="atn">tree-model</span><span class="pun">=</span><span class="atv">"treedata"</span><span class="pln"> </span><span class="atn">options</span><span class="pun">=</span><span class="atv">"opts"</span><span class="tag">&gt;</span><span class="pln">\n     label: {{node.label}} ({{node.id}})\n </span><span class="tag">&lt;/treecontrol&gt;</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="external-template-js" class="code ng-scope" highlight-lang="js"><span class="pln"> </span><span class="kwd">function</span><span class="pln"> </span><span class="typ">ExternalTemplate</span><span class="pun">(</span><span class="pln">$scope</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n     $scope</span><span class="pun">.</span><span class="pln">treedata </span><span class="pun">=</span><span class="pln"> createSubTree</span><span class="pun">(</span><span class="lit">3</span><span class="pun">,</span><span class="pln"> </span><span class="lit">4</span><span class="pun">,</span><span class="pln"> </span><span class="str">""</span><span class="pun">);</span><span class="pln">\n\n     $scope</span><span class="pun">.</span><span class="pln">opts </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n         templateUrl</span><span class="pun">:</span><span class="pln"> </span><span class="str">\'treeControlExternalTemplate.html\'</span><span class="pln">\n     </span><span class="pun">}</span><span class="pln">\n </span><span class="pun">}</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="external-template-global" class="code ng-scope" highlight-lang="js"><span class="pln"> </span><span class="com">// this code snippet is just to show how to use the global external template option but is not used for</span><span class="pln">\n </span><span class="com">// this specific example. this specific example is using the instance template option</span><span class="pln">\n angular</span><span class="pun">.</span><span class="pln">module</span><span class="pun">(</span><span class="str">\'app\'</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span><span class="str">\'treeControl\'</span><span class="pun">])</span><span class="pln">\n         </span><span class="pun">.</span><span class="pln">run</span><span class="pun">(</span><span class="kwd">function</span><span class="pln"> </span><span class="pun">(</span><span class="pln">treeConfig</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n             treeConfig</span><span class="pun">.</span><span class="pln">templateUrl </span><span class="pun">=</span><span class="pln"> </span><span class="str">\'treeControlExternalTemplate.html\'</span><span class="pun">;</span><span class="pln">\n         </span><span class="pun">});</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n        <div class="tab-pane ng-scope" ng-class="{active: tab.active}" ng-repeat="tab in tabs" tab-content-transclude="tab">\n         <pre apply-content="external-template-tmpl" class="code ng-scope" highlight-lang="html"><span class="pln"> </span><span class="tag">&lt;ul</span><span class="pln"> {{</span><span class="atn">options</span><span class="pln">.</span><span class="atn">ulClass</span><span class="pln">}}</span><span class="tag">&gt;</span><span class="pln">\n     </span><span class="tag">&lt;li</span><span class="pln"> </span><span class="atn">ng-repeat</span><span class="pun">=</span><span class="atv">"node in node.{{options.nodeChildren}} | filter:filterExpression:filterComparator {{options.orderBy}}"</span><span class="pln">\n         </span><span class="atn">ng-class</span><span class="pun">=</span><span class="atv">"headClass(node)"</span><span class="pln">\n         {{</span><span class="atn">options</span><span class="pln">.</span><span class="atn">liClass</span><span class="pln">}}\n         </span><span class="atn">set-node-to-data</span><span class="tag">&gt;</span><span class="pln">\n         </span><span class="tag">&lt;i</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"tree-branch-head"</span><span class="pln"> </span><span class="atn">ng-class</span><span class="pun">=</span><span class="atv">"iBranchClass()"</span><span class="pln"> </span><span class="atn">ng-click</span><span class="pun">=</span><span class="atv">"selectNodeHead(node)"</span><span class="tag">&gt;&lt;/i&gt;</span><span class="pln">\n         </span><span class="tag">&lt;i</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"tree-leaf-head {{options.iLeafClass}}"</span><span class="tag">&gt;&lt;/i&gt;</span><span class="pln">\n\n         </span><span class="tag">&lt;i&gt;</span><span class="pln">\n             </span><span class="tag">&lt;b&gt;</span><span class="pln">\n                 </span><span class="tag">&lt;div</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"tree-label {{options.labelClass}}"</span><span class="pln"> </span><span class="atn">ng-class</span><span class="pun">=</span><span class="atv">"[selectedClass(), unselectableClass()]"</span><span class="pln">\n                      </span><span class="atn">ng-click</span><span class="pun">=</span><span class="atv">"selectNodeLabel(node)"</span><span class="pln"> </span><span class="atn">tree-transclude</span><span class="tag">&gt;&lt;/div&gt;</span><span class="pln">\n             </span><span class="tag">&lt;/b&gt;</span><span class="pln">\n         </span><span class="tag">&lt;/i&gt;</span><span class="pln">\n\n         </span><span class="tag">&lt;treeitem</span><span class="pln"> </span><span class="atn">ng-show</span><span class="pun">=</span><span class="atv">"nodeExpanded()"</span><span class="tag">&gt;&lt;/treeitem&gt;</span><span class="pln">\n\n     </span><span class="tag">&lt;/li&gt;</span><span class="pln">\n </span><span class="tag">&lt;/ul&gt;</span></pre>\n        </div>\n        <!-- end ngRepeat: tab in tabs -->\n       </div>\n      </div>\n     </div>\n     <script save-content="external-template-js">\n      function ExternalTemplate($scope) {\n            $scope.treedata = createSubTree(3, 4, "");\n\n            $scope.opts = {\n                templateUrl: \'treeControlExternalTemplate.html\'\n            }\n        }\n     </script>\n     <script save-content="external-template-global" type="text/ecmascript">\n      // this code snippet is just to show how to use the global external template option but is not used for\n        // this specific example. this specific example is using the instance template option\n        angular.module(\'app\', [\'treeControl\'])\n                .run(function (treeConfig) {\n                    treeConfig.templateUrl = \'treeControlExternalTemplate.html\';\n                });\n     </script>\n     <script id="treeControlExternalTemplate.html" save-content="external-template-tmpl" type="text/ng-template">\n      <ul {{options.ulClass}}>\n            <li ng-repeat="node in node.{{options.nodeChildren}} | filter:filterExpression:filterComparator {{options.orderBy}}"\n                ng-class="headClass(node)"\n                {{options.liClass}}\n                set-node-to-data>\n                <i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)"></i>\n                <i class="tree-leaf-head {{options.iLeafClass}}"></i>\n\n                <i>\n                    <b>\n                        <div class="tree-label {{options.labelClass}}" ng-class="[selectedClass(), unselectableClass()]"\n                             ng-click="selectNodeLabel(node)" tree-transclude></div>\n                    </b>\n                </i>\n\n                <treeitem ng-show="nodeExpanded()"></treeitem>\n\n            </li>\n        </ul>\n     </script>\n    </section>\n   </div>\n   <div class="col-md-3">\n    <ul class="nav docs-sidenav" nav="">\n     <!--<li class="active"><a href="#as-attribute">classic</a></li>-->\n     <li>\n      <a href="#classic">\n       Basic Usage\n      </a>\n     </li>\n     <li>\n      <a href="#as-attribute">\n       As an Attribute\n      </a>\n     </li>\n     <li>\n      <a href="#labels-template">\n       Tree Label Templates\n      </a>\n     </li>\n     <li>\n      <a href="#parent">\n       Tree Label Scope\n      </a>\n     </li>\n     <li>\n      <a href="#changing">\n       Changing the live tree\n      </a>\n     </li>\n     <li>\n      <a href="#selected">\n       Selected Node Binding\n      </a>\n     </li>\n     <li>\n      <a href="#expandedNodes">\n       Expanded Nodes Binding\n      </a>\n     </li>\n     <li>\n      <a href="#events">\n       Events\n      </a>\n     </li>\n     <li>\n      <a href="#multi-selection">\n       Multi Selection\n      </a>\n     </li>\n     <li>\n      <a href="#dirSelection">\n       Clicking Labels Expand &amp; Collapse\n      </a>\n     </li>\n     <li>\n      <a href="#isSelectable">\n       Disabling Selection of Nodes\n      </a>\n     </li>\n     <li>\n      <a href="#light">\n       Light Style\n      </a>\n     </li>\n     <li>\n      <a href="#dark">\n       Dark Style\n      </a>\n     </li>\n     <li>\n      <a href="#boot">\n       Bootstrap Style\n      </a>\n     </li>\n     <li>\n      <a href="#file-style">\n       File Style using Tree Label Templates\n      </a>\n     </li>\n     <li>\n      <a href="#custom-css">\n       Custom Css Classes\n      </a>\n     </li>\n     <li>\n      <a href="#children">\n       Custom Children\n      </a>\n     </li>\n     <li>\n      <a href="#isleaf">\n       Custom Branch / Leaf\n      </a>\n     </li>\n     <li>\n      <a href="#sorting">\n       Sorting tree nodes\n      </a>\n     </li>\n     <li>\n      <a href="#filtering">\n       Filtering tree nodes\n      </a>\n     </li>\n     <li>\n      <a href="#equality">\n       Custom Equality\n      </a>\n     </li>\n     <li>\n      <a href="#rightclick">\n       Right Click &amp; Context Menu\n      </a>\n     </li>\n     <li>\n      <a href="#externalTemplate">\n       External Template\n      </a>\n     </li>\n    </ul>\n   </div>\n  </div>\n  <footer class="docs-footer">\n   <p>\n    Designed and built by\n    <a href="http://wix.com">\n     Wix.com\n    </a>\n    team.\n   </p>\n   <p>\n    Code licensed under\n    <a href="https://github.com/angular-ui/bootstrap/blob/master/LICENSE">\n     MIT License\n    </a>\n    .\n   </p>\n   <p>\n    Checkout Wix developer resources\n    <a href="http://dev.wix.com">\n     dev.wix.com\n    </a>\n    and\n    <a href="http://wix.io">\n     wix.io\n    </a>\n    .\n   </p>\n  </footer>\n  <script>\n   var entityMap = {\n        "&": "&amp;",\n        "<": "&lt;",\n        ">": "&gt;",\n        \'"\': \'&quot;\',\n        "\'": \'&#39;\',\n        "/": \'&#x2F;\'\n    };\n    function escapeHtml(string) {\n        return String(string).replace(/[&<>"\'\\/]/g, function (s) {\n            return entityMap[s];\n        });\n    }\n    var nonSpace = /\\S/;\n    function trimIndent(content) {\n        var lines = content.split("\\n");\n        var begin = 0;\n        var end = lines.length-1;\n        while ((nonSpace.exec(lines[begin]) == null) && (begin < lines.length))\n            begin = begin + 1;\n        while ((nonSpace.exec(lines[end]) == null) && end >= begin)\n            end = end - 1;\n        var ident = nonSpace.exec(lines[begin]).index;\n        var formatted = "";\n        for (var i = begin; i <= end; i++) {\n            formatted = formatted + lines[i].slice(ident-1) + ((i < end)?"\\n":"");\n        }\n        return formatted;\n    }\n    var example = angular.module("example", ["treeControl", "ui.bootstrap", "template/tabs/tab.html", "template/tabs/tabset.html"])\n                    .factory("$savedContent", function() {\n                        return [];\n                    })\n                    .directive("saveContent", function($savedContent) {\n                        return {\n                            restrict: "A",\n                            compile: function($element, $attrs) {\n                                var content = $element.html();\n                                $savedContent[$attrs.saveContent] = content;\n                            }\n                        }\n                    })\n                    .directive("applyContent", function($savedContent) {\n                        return {\n                            restrict: "EAC",\n                            compile: function($element, $attrs) {\n                                return function($scope, $element, $attrs) {\n                                    var content = $savedContent[$attrs.applyContent];\n                                    var lang = $attrs.highlightLang;\n                                    if (lang == "html")\n                                        content = escapeHtml(content);\n                                    content = trimIndent(content);\n                                    var pre = prettyPrintOne(content, lang);\n                                    $element.html(pre);\n                                }\n                            }\n                        }\n                    })\n                    .directive("nav", function() {\n                        return {\n                            restrict: "A",\n                            compile: function($element) {\n                                var sections = $("section");\n                                angular.forEach(sections, function(section) {\n                                    var $section = $(section);\n                                    var id = $section.attr(\'id\');\n                                    var titleHtml = $section.find("h1").html();\n                                    titleHtml = titleHtml.slice(0, titleHtml.indexOf("<")).trim();\n                                    $element.append("<li><a href=\'#"+id+"\'>"+titleHtml+"</a></li>")\n                                })\n                            }\n                        }\n                    })\n            ;\n    var names = [\'Homer\', \'Marge\', \'Bart\', \'Lisa\', \'Mo\'];\n    function createSubTree(level, width, prefix) {\n        if (level > 0) {\n            var res = [];\n            for (var i=1; i <= width; i++)\n                res.push({ "label" : "Node " + prefix + i, "id" : "id"+prefix + i, "i": i, "children": createSubTree(level-1, width, prefix + i +"."), "name": names[i%names.length] });\n            return res;\n        }\n        else\n            return [];\n    }\n  </script>\n </body>\n</html>'