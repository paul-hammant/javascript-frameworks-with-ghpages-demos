b'<!DOCTYPE html>\n<html xmlns="http://www.w3.org/1999/xhtml">\n <head>\n  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>\n  <meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible"/>\n  <title>\n   Knockout Choose - A modern, lean, and powerful select replacement as a knockout component\n  </title>\n  <link href="page.css" rel="stylesheet" type="text/css"/>\n  <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.9.1/highlight.min.js">\n  </script>\n  <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.9.1/languages/javascript.min.js">\n  </script>\n  <link href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.9.1/styles/hybrid.min.css" rel="stylesheet" type="text/css"/>\n  <link href="https://fonts.googleapis.com/css?family=Roboto+Mono|Julius+Sans+One|Oxygen:400,300|Muli:400,300|Raleway:400,300" rel="stylesheet" type="text/css"/>\n  <script>\n   hljs.initHighlightingOnLoad();\n  </script>\n </head>\n <body>\n  <main>\n   <article>\n    <h1>\n     Knockout Choose\n    </h1>\n    <p>\n     A lightweight and powerful select alternative to let users choose items from many options as a modern Knockout component\n    </p>\n    <h2>\n     Examples\n    </h2>\n    <h3>\n     Single select of strings\n    </h3>\n    <pre><code class="html hljs xml"><span class="hljs-tag">&lt;<span class="hljs-title">choose</span> <span class="hljs-attribute">params</span>=<span class="hljs-value">"options: fruits, selected: selected"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">choose</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-title">script</span>&gt;</span><span class="javascript">\n  ko.applyBindings({\n    fruits: [<span class="hljs-string">\'banana\'</span>, <span class="hljs-string">\'apple\'</span>, <span class="hljs-string">\'strawberry\'</span>, <span class="hljs-string">\'pineapple\'</span>],\n    selected: ko.observable()\n  })\n</span><span class="hljs-tag">&lt;/<span class="hljs-title">script</span>&gt;</span></code></pre>\n    <script src="https://cdnjs.cloudflare.com/ajax/libs/knockout/3.3.0/knockout-debug.js">\n    </script>\n    <script src="aria-listbox-0.1.3.js">\n    </script>\n    <script src="knockout-css3-animation-0.1.1.js">\n    </script>\n    <script src="choose-0.6.5.js">\n    </script>\n    <choose class="single-strings" params="options: fruits, selected: selected" role="listbox" tabindex="0">\n     <div class="choose-match choose-no-selection" data-bind="template: { nodes: matchTemplate, data: selected }, click: toggleDropdown, css: { \'choose-no-selection\': !hasSelection() }">\n      <span data-bind="text: $component.selected() != null ? $component.selected() : $component.placeholder">\n       Choose...\n      </span>\n     </div>\n     <div class="choose-dropdown">\n      <div class="choose-search-wrapper" data-bind="visible: showSearch()" style="display: none;">\n       <input data-bind="value: searchTerm, valueUpdate: \'afterkeydown\', attr: { placeholder: searchPlaceholder }, event: { blur: closeOnBlur }" name="choose-search" type="text"/>\n      </div>\n      <ul class="choose-items" data-bind="template: { nodes: itemTemplate, foreach: filteredItems() }, css: outerUlClass">\n       <li data-bind=\'event: { blur: $component.closeOnBlur }, attr: { "aria-selected": $data === $component.selected() }\' role="option">\n        <span data-bind="text: $data">\n         banana\n        </span>\n       </li>\n       <li data-bind=\'event: { blur: $component.closeOnBlur }, attr: { "aria-selected": $data === $component.selected() }\' role="option">\n        <span data-bind="text: $data">\n         apple\n        </span>\n       </li>\n       <li data-bind=\'event: { blur: $component.closeOnBlur }, attr: { "aria-selected": $data === $component.selected() }\' role="option">\n        <span data-bind="text: $data">\n         strawberry\n        </span>\n       </li>\n       <li data-bind=\'event: { blur: $component.closeOnBlur }, attr: { "aria-selected": $data === $component.selected() }\' role="option">\n        <span data-bind="text: $data">\n         pineapple\n        </span>\n       </li>\n      </ul>\n     </div>\n    </choose>\n    <script>\n     ko.applyBindings({\n          fruits: [\'banana\', \'apple\', \'strawberry\', \'pineapple\'],\n          selected: ko.observable()\n        }, document.body.querySelector(\'choose.single-strings\'))\n    </script>\n    <h3>\n     Single select of objects\n    </h3>\n    <p>\n     (try tabbing and using the keyboard too! thanks to\n     <a href="https://github.com/nathanboktae/aria-listbox">\n      aria-listbox\n     </a>\n     )\n    </p>\n    <pre><code class="html hljs xml"><span class="hljs-tag">&lt;<span class="hljs-title">choose</span> <span class="hljs-attribute">params</span>=<span class="hljs-value">"options: people, selected: selected"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">choose-match</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">span</span> <span class="hljs-attribute">data-bind</span>=<span class="hljs-value">"text: $data ? name + \' is \' + age : \'Select a person\'"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">choose-match</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">choose-item</span>&gt;</span><span class="hljs-comment">&lt;!-- ko text: name --&gt;</span><span class="hljs-comment">&lt;!-- /ko --&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">choose-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-title">choose</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-title">script</span>&gt;</span><span class="javascript">\n  ko.applyBindings({\n    people: [{\n      name: <span class="hljs-string">\'Bob\'</span>,\n      age: <span class="hljs-number">31</span>\n    }, {\n      name: <span class="hljs-string">\'Jane\'</span>,\n      age: <span class="hljs-number">25</span>\n    }, {\n      name: <span class="hljs-string">\'Anne\'</span>,\n      age: <span class="hljs-number">42</span>\n    }],\n    selected: ko.observable()\n  })\n</span><span class="hljs-tag">&lt;/<span class="hljs-title">script</span>&gt;</span></code></pre>\n    <choose class="single-objects" params="options: people, selected: selected" role="listbox" tabindex="0">\n     <div class="choose-match choose-no-selection" data-bind="template: { nodes: matchTemplate, data: selected }, click: toggleDropdown, css: { \'choose-no-selection\': !hasSelection() }">\n      <span data-bind="text: $data ? name + \' is \' + age : \'Select a person\'">\n       Select a person\n      </span>\n     </div>\n     <div class="choose-dropdown">\n      <div class="choose-search-wrapper" data-bind="visible: showSearch()" style="display: none;">\n       <input data-bind="value: searchTerm, valueUpdate: \'afterkeydown\', attr: { placeholder: searchPlaceholder }, event: { blur: closeOnBlur }" name="choose-search" type="text"/>\n      </div>\n      <ul class="choose-items" data-bind="template: { nodes: itemTemplate, foreach: filteredItems() }, css: outerUlClass">\n       <li data-bind=\'event: { blur: $component.closeOnBlur }, attr: { "aria-selected": $data === $component.selected() }\' role="option">\n        <!-- ko text: name -->\n        Bob\n        <!-- /ko -->\n       </li>\n       <li data-bind=\'event: { blur: $component.closeOnBlur }, attr: { "aria-selected": $data === $component.selected() }\' role="option">\n        <!-- ko text: name -->\n        Jane\n        <!-- /ko -->\n       </li>\n       <li data-bind=\'event: { blur: $component.closeOnBlur }, attr: { "aria-selected": $data === $component.selected() }\' role="option">\n        <!-- ko text: name -->\n        Anne\n        <!-- /ko -->\n       </li>\n      </ul>\n     </div>\n    </choose>\n    <script>\n     ko.applyBindings({\n          people: [{\n            name: \'Bob\',\n            age: 31\n          }, {\n            name: \'Jane\',\n            age: 25\n          }, {\n            name: \'Anne\',\n            age: 42\n          }],\n          selected: ko.observable()\n        }, document.body.querySelector(\'choose.single-objects\'))\n    </script>\n    <h3>\n     Multiple select of objects\n    </h3>\n    <pre><code class="html hljs xml"><span class="hljs-tag">&lt;<span class="hljs-title">choose</span> <span class="hljs-attribute">params</span>=<span class="hljs-value">"options: people, selected: selected, multiple: true"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">choose-match</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">span</span> <span class="hljs-attribute">data-bind</span>=<span class="hljs-value">"text: $root.selectionText($data)"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">choose-match</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">choose-item</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">span</span> <span class="hljs-attribute">data-bind</span>=<span class="hljs-value">"text: $data.name"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">span</span>&gt;</span> is <span class="hljs-tag">&lt;<span class="hljs-title">span</span> <span class="hljs-attribute">data-bind</span>=<span class="hljs-value">"text: $data.age"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">choose-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-title">choose</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-title">script</span>&gt;</span><span class="javascript">\n  ko.applyBindings({\n    people: [{\n      name: <span class="hljs-string">\'Bob\'</span>,\n      age: <span class="hljs-number">31</span>\n    }, {\n      name: <span class="hljs-string">\'Jane\'</span>,\n      age: <span class="hljs-number">25</span>\n    }, {\n      name: <span class="hljs-string">\'Anne\'</span>,\n      age: <span class="hljs-number">42</span>\n    }],\n    selected: ko.observableArray(),\n\n    selectionText: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>) </span>{\n      <span class="hljs-keyword">return</span> data.length ?\n        data.length + <span class="hljs-string">\' people selected: \'</span> + data.map(p =&gt; p.name).join(<span class="hljs-string">\', \'</span>) :\n        <span class="hljs-string">\'Nobody selected\'</span>\n    }\n  })\n</span><span class="hljs-tag">&lt;/<span class="hljs-title">script</span>&gt;</span></code>\n      </pre>\n    <choose aria-multiselect="true" class="multiple" params="options: people, selected: selected, multiple: true" role="listbox" tabindex="0">\n     <div class="choose-match choose-no-selection" data-bind="template: { nodes: matchTemplate, data: selected }, click: toggleDropdown, css: { \'choose-no-selection\': !hasSelection() }">\n      <span data-bind="text: $root.selectionText($data)">\n       No one is selected\n      </span>\n     </div>\n     <div class="choose-dropdown">\n      <div class="choose-search-wrapper" data-bind="visible: showSearch()" style="display: none;">\n       <input data-bind="value: searchTerm, valueUpdate: \'afterkeydown\', attr: { placeholder: searchPlaceholder }, event: { blur: closeOnBlur }" name="choose-search" type="text"/>\n      </div>\n      <ul class="choose-items" data-bind="template: { nodes: itemTemplate, foreach: filteredItems() }, css: outerUlClass">\n       <li data-bind=\'event: { blur: $component.closeOnBlur }, attr: { "aria-selected": $component.selected().indexOf($data) !== -1 }\' role="option">\n        <span data-bind="text: $data.name">\n         Bob\n        </span>\n        is\n        <span data-bind="text: $data.age">\n         31\n        </span>\n       </li>\n       <li data-bind=\'event: { blur: $component.closeOnBlur }, attr: { "aria-selected": $component.selected().indexOf($data) !== -1 }\' role="option">\n        <span data-bind="text: $data.name">\n         Jane\n        </span>\n        is\n        <span data-bind="text: $data.age">\n         25\n        </span>\n       </li>\n       <li data-bind=\'event: { blur: $component.closeOnBlur }, attr: { "aria-selected": $component.selected().indexOf($data) !== -1 }\' role="option">\n        <span data-bind="text: $data.name">\n         Anne\n        </span>\n        is\n        <span data-bind="text: $data.age">\n         42\n        </span>\n       </li>\n      </ul>\n     </div>\n    </choose>\n    <script>\n     ko.applyBindings({\n          people: [{\n            name: \'Bob\',\n            age: 31\n          }, {\n            name: \'Jane\',\n            age: 25\n          }, {\n            name: \'Anne\',\n            age: 42\n          }],\n          selected: ko.observableArray(),\n\n          selectionText: function(data) {\n            if (data.length === 0) return \'No one is selected\'\n            return data.length === 1 ?\n              data[0].name + \' is \' + data[0].age :\n              data.length + \' people selected: \' + data.map(p =&gt; p.name).join(\', \')\n          }\n        }, document.body.querySelector(\'choose.multiple\'))\n    </script>\n    <h3>\n     Style as a radio, tabs, or whatever via only CSS\n    </h3>\n    <p>\n     knockout-choose uses clean, semantic styling, so anywhere you need the user to choose one or many options from a fix set of options, it can be used. No more separate code paths for a radio, dropdown, or even tabs - it\'s all the same! Those are styling concerns.\n    </p>\n    <div class="semantic">\n     <choose class="styling radio" params="options: [\'dropdown\', \'radio\', \'tabs\'], selected: style" role="listbox" tabindex="0">\n      <div class="choose-match" data-bind="template: { nodes: matchTemplate, data: selected }, click: toggleDropdown, css: { \'choose-no-selection\': !hasSelection() }">\n       <span data-bind="text: $component.selected() != null ? $component.selected() : $component.placeholder">\n        dropdown\n       </span>\n      </div>\n      <div class="choose-dropdown">\n       <div class="choose-search-wrapper" data-bind="visible: showSearch()" style="display: none;">\n        <input data-bind="value: searchTerm, valueUpdate: \'afterkeydown\', attr: { placeholder: searchPlaceholder }, event: { blur: closeOnBlur }" name="choose-search" type="text"/>\n       </div>\n       <ul class="choose-items" data-bind="template: { nodes: itemTemplate, foreach: filteredItems() }, css: outerUlClass">\n        <li aria-selected="true" data-bind=\'event: { blur: $component.closeOnBlur }, attr: { "aria-selected": $data === $component.selected() }\' role="option">\n         <span data-bind="text: $data">\n          dropdown\n         </span>\n        </li>\n        <li data-bind=\'event: { blur: $component.closeOnBlur }, attr: { "aria-selected": $data === $component.selected() }\' role="option">\n         <span data-bind="text: $data">\n          radio\n         </span>\n        </li>\n        <li data-bind=\'event: { blur: $component.closeOnBlur }, attr: { "aria-selected": $data === $component.selected() }\' role="option">\n         <span data-bind="text: $data">\n          tabs\n         </span>\n        </li>\n       </ul>\n      </div>\n     </choose>\n     <choose class="fruit dropdown" data-bind="css: style" params="options: fruits, selected: selected, disabledItems: [\'watermelon\']" role="listbox" tabindex="0">\n      <div class="choose-match" data-bind="template: { nodes: matchTemplate, data: selected }, click: toggleDropdown, css: { \'choose-no-selection\': !hasSelection() }">\n       <span data-bind="text: $component.selected() != null ? $component.selected() : $component.placeholder">\n        apple\n       </span>\n      </div>\n      <div class="choose-dropdown">\n       <div class="choose-search-wrapper" data-bind="visible: showSearch()" style="display: none;">\n        <input data-bind="value: searchTerm, valueUpdate: \'afterkeydown\', attr: { placeholder: searchPlaceholder }, event: { blur: closeOnBlur }" name="choose-search" type="text"/>\n       </div>\n       <ul class="choose-items" data-bind="template: { nodes: itemTemplate, foreach: filteredItems() }, css: outerUlClass">\n        <li data-bind=\'event: { blur: $component.closeOnBlur }, attr: { "aria-selected": $data === $component.selected(), "aria-disabled": $component.isDisabled($data) }\' role="option">\n         <span data-bind="text: $data">\n          banana\n         </span>\n        </li>\n        <li aria-selected="true" data-bind=\'event: { blur: $component.closeOnBlur }, attr: { "aria-selected": $data === $component.selected(), "aria-disabled": $component.isDisabled($data) }\' role="option">\n         <span data-bind="text: $data">\n          apple\n         </span>\n        </li>\n        <li data-bind=\'event: { blur: $component.closeOnBlur }, attr: { "aria-selected": $data === $component.selected(), "aria-disabled": $component.isDisabled($data) }\' role="option">\n         <span data-bind="text: $data">\n          strawberry\n         </span>\n        </li>\n        <li aria-disabled="true" data-bind=\'event: { blur: $component.closeOnBlur }, attr: { "aria-selected": $data === $component.selected(), "aria-disabled": $component.isDisabled($data) }\' role="option">\n         <span data-bind="text: $data">\n          watermelon\n         </span>\n        </li>\n        <li data-bind=\'event: { blur: $component.closeOnBlur }, attr: { "aria-selected": $data === $component.selected(), "aria-disabled": $component.isDisabled($data) }\' role="option">\n         <span data-bind="text: $data">\n          pineapple\n         </span>\n        </li>\n       </ul>\n      </div>\n     </choose>\n    </div>\n    <script>\n     ko.applyBindings({\n          style: ko.observable(\'dropdown\'),\n          fruits: [\'banana\', \'apple\', \'strawberry\', \'watermelon\', \'pineapple\'],\n          selected: ko.observable(\'apple\')\n        }, document.body.querySelector(\'div.semantic\'))\n    </script>\n    <h2>\n     Installation\n    </h2>\n    <h4>\n     <a href="https://www.npmjs.com/package/knockout-choose">\n      npm\n     </a>\n    </h4>\n    <h4>\n     <pre><code class="hljs sql">npm <span class="hljs-operator"><span class="hljs-keyword">install</span> <span class="hljs-comment">--save knockout-choose</span></span></code></pre>\n    </h4>\n    <h4>\n     <a href="http://bower.io/search/?q=knockout-choose">\n      bower\n     </a>\n    </h4>\n    <h4>\n     <pre><code class="hljs sql">bower <span class="hljs-operator"><span class="hljs-keyword">install</span> <span class="hljs-comment">--save knockout-choose</span></span></code></pre>\n     <p>\n      Source on\n      <a href="https://github.com/nathanboktae/knockout-choose">\n       GitHub\n      </a>\n     </p>\n    </h4>\n   </article>\n  </main>\n </body>\n</html>'b'<!DOCTYPE html>\n<html xmlns="http://www.w3.org/1999/xhtml">\n <head>\n  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>\n  <meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible"/>\n  <title>\n   Knockout Choose - A modern, lean, and powerful select replacement as a knockout component\n  </title>\n  <link href="page.css" rel="stylesheet" type="text/css"/>\n  <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.9.1/highlight.min.js">\n  </script>\n  <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.9.1/languages/javascript.min.js">\n  </script>\n  <link href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.9.1/styles/hybrid.min.css" rel="stylesheet" type="text/css"/>\n  <link href="https://fonts.googleapis.com/css?family=Roboto+Mono|Julius+Sans+One|Oxygen:400,300|Muli:400,300|Raleway:400,300" rel="stylesheet" type="text/css"/>\n  <script>\n   hljs.initHighlightingOnLoad();\n  </script>\n </head>\n <body>\n  <main>\n   <article>\n    <h1>\n     Knockout Choose\n    </h1>\n    <p>\n     A lightweight and powerful select alternative to let users choose items from many options as a modern Knockout component\n    </p>\n    <h2>\n     Examples\n    </h2>\n    <h3>\n     Single select of strings\n    </h3>\n    <pre><code class="html hljs xml"><span class="hljs-tag">&lt;<span class="hljs-title">choose</span> <span class="hljs-attribute">params</span>=<span class="hljs-value">"options: fruits, selected: selected"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">choose</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-title">script</span>&gt;</span><span class="javascript">\n  ko.applyBindings({\n    fruits: [<span class="hljs-string">\'banana\'</span>, <span class="hljs-string">\'apple\'</span>, <span class="hljs-string">\'strawberry\'</span>, <span class="hljs-string">\'pineapple\'</span>],\n    selected: ko.observable()\n  })\n</span><span class="hljs-tag">&lt;/<span class="hljs-title">script</span>&gt;</span></code></pre>\n    <script src="https://cdnjs.cloudflare.com/ajax/libs/knockout/3.3.0/knockout-debug.js">\n    </script>\n    <script src="aria-listbox-0.1.3.js">\n    </script>\n    <script src="knockout-css3-animation-0.1.1.js">\n    </script>\n    <script src="choose-0.6.5.js">\n    </script>\n    <choose class="single-strings" params="options: fruits, selected: selected" role="listbox" tabindex="0">\n     <div class="choose-match choose-no-selection" data-bind="template: { nodes: matchTemplate, data: selected }, click: toggleDropdown, css: { \'choose-no-selection\': !hasSelection() }">\n      <span data-bind="text: $component.selected() != null ? $component.selected() : $component.placeholder">\n       Choose...\n      </span>\n     </div>\n     <div class="choose-dropdown">\n      <div class="choose-search-wrapper" data-bind="visible: showSearch()" style="display: none;">\n       <input data-bind="value: searchTerm, valueUpdate: \'afterkeydown\', attr: { placeholder: searchPlaceholder }, event: { blur: closeOnBlur }" name="choose-search" type="text"/>\n      </div>\n      <ul class="choose-items" data-bind="template: { nodes: itemTemplate, foreach: filteredItems() }, css: outerUlClass">\n       <li data-bind=\'event: { blur: $component.closeOnBlur }, attr: { "aria-selected": $data === $component.selected() }\' role="option">\n        <span data-bind="text: $data">\n         banana\n        </span>\n       </li>\n       <li data-bind=\'event: { blur: $component.closeOnBlur }, attr: { "aria-selected": $data === $component.selected() }\' role="option">\n        <span data-bind="text: $data">\n         apple\n        </span>\n       </li>\n       <li data-bind=\'event: { blur: $component.closeOnBlur }, attr: { "aria-selected": $data === $component.selected() }\' role="option">\n        <span data-bind="text: $data">\n         strawberry\n        </span>\n       </li>\n       <li data-bind=\'event: { blur: $component.closeOnBlur }, attr: { "aria-selected": $data === $component.selected() }\' role="option">\n        <span data-bind="text: $data">\n         pineapple\n        </span>\n       </li>\n      </ul>\n     </div>\n    </choose>\n    <script>\n     ko.applyBindings({\n          fruits: [\'banana\', \'apple\', \'strawberry\', \'pineapple\'],\n          selected: ko.observable()\n        }, document.body.querySelector(\'choose.single-strings\'))\n    </script>\n    <h3>\n     Single select of objects\n    </h3>\n    <p>\n     (try tabbing and using the keyboard too! thanks to\n     <a href="https://github.com/nathanboktae/aria-listbox">\n      aria-listbox\n     </a>\n     )\n    </p>\n    <pre><code class="html hljs xml"><span class="hljs-tag">&lt;<span class="hljs-title">choose</span> <span class="hljs-attribute">params</span>=<span class="hljs-value">"options: people, selected: selected"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">choose-match</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">span</span> <span class="hljs-attribute">data-bind</span>=<span class="hljs-value">"text: $data ? name + \' is \' + age : \'Select a person\'"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">choose-match</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">choose-item</span>&gt;</span><span class="hljs-comment">&lt;!-- ko text: name --&gt;</span><span class="hljs-comment">&lt;!-- /ko --&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">choose-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-title">choose</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-title">script</span>&gt;</span><span class="javascript">\n  ko.applyBindings({\n    people: [{\n      name: <span class="hljs-string">\'Bob\'</span>,\n      age: <span class="hljs-number">31</span>\n    }, {\n      name: <span class="hljs-string">\'Jane\'</span>,\n      age: <span class="hljs-number">25</span>\n    }, {\n      name: <span class="hljs-string">\'Anne\'</span>,\n      age: <span class="hljs-number">42</span>\n    }],\n    selected: ko.observable()\n  })\n</span><span class="hljs-tag">&lt;/<span class="hljs-title">script</span>&gt;</span></code></pre>\n    <choose class="single-objects" params="options: people, selected: selected" role="listbox" tabindex="0">\n     <div class="choose-match choose-no-selection" data-bind="template: { nodes: matchTemplate, data: selected }, click: toggleDropdown, css: { \'choose-no-selection\': !hasSelection() }">\n      <span data-bind="text: $data ? name + \' is \' + age : \'Select a person\'">\n       Select a person\n      </span>\n     </div>\n     <div class="choose-dropdown">\n      <div class="choose-search-wrapper" data-bind="visible: showSearch()" style="display: none;">\n       <input data-bind="value: searchTerm, valueUpdate: \'afterkeydown\', attr: { placeholder: searchPlaceholder }, event: { blur: closeOnBlur }" name="choose-search" type="text"/>\n      </div>\n      <ul class="choose-items" data-bind="template: { nodes: itemTemplate, foreach: filteredItems() }, css: outerUlClass">\n       <li data-bind=\'event: { blur: $component.closeOnBlur }, attr: { "aria-selected": $data === $component.selected() }\' role="option">\n        <!-- ko text: name -->\n        Bob\n        <!-- /ko -->\n       </li>\n       <li data-bind=\'event: { blur: $component.closeOnBlur }, attr: { "aria-selected": $data === $component.selected() }\' role="option">\n        <!-- ko text: name -->\n        Jane\n        <!-- /ko -->\n       </li>\n       <li data-bind=\'event: { blur: $component.closeOnBlur }, attr: { "aria-selected": $data === $component.selected() }\' role="option">\n        <!-- ko text: name -->\n        Anne\n        <!-- /ko -->\n       </li>\n      </ul>\n     </div>\n    </choose>\n    <script>\n     ko.applyBindings({\n          people: [{\n            name: \'Bob\',\n            age: 31\n          }, {\n            name: \'Jane\',\n            age: 25\n          }, {\n            name: \'Anne\',\n            age: 42\n          }],\n          selected: ko.observable()\n        }, document.body.querySelector(\'choose.single-objects\'))\n    </script>\n    <h3>\n     Multiple select of objects\n    </h3>\n    <pre><code class="html hljs xml"><span class="hljs-tag">&lt;<span class="hljs-title">choose</span> <span class="hljs-attribute">params</span>=<span class="hljs-value">"options: people, selected: selected, multiple: true"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">choose-match</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">span</span> <span class="hljs-attribute">data-bind</span>=<span class="hljs-value">"text: $root.selectionText($data)"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">choose-match</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">choose-item</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-title">span</span> <span class="hljs-attribute">data-bind</span>=<span class="hljs-value">"text: $data.name"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">span</span>&gt;</span> is <span class="hljs-tag">&lt;<span class="hljs-title">span</span> <span class="hljs-attribute">data-bind</span>=<span class="hljs-value">"text: $data.age"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-title">choose-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-title">choose</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-title">script</span>&gt;</span><span class="javascript">\n  ko.applyBindings({\n    people: [{\n      name: <span class="hljs-string">\'Bob\'</span>,\n      age: <span class="hljs-number">31</span>\n    }, {\n      name: <span class="hljs-string">\'Jane\'</span>,\n      age: <span class="hljs-number">25</span>\n    }, {\n      name: <span class="hljs-string">\'Anne\'</span>,\n      age: <span class="hljs-number">42</span>\n    }],\n    selected: ko.observableArray(),\n\n    selectionText: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>) </span>{\n      <span class="hljs-keyword">return</span> data.length ?\n        data.length + <span class="hljs-string">\' people selected: \'</span> + data.map(p =&gt; p.name).join(<span class="hljs-string">\', \'</span>) :\n        <span class="hljs-string">\'Nobody selected\'</span>\n    }\n  })\n</span><span class="hljs-tag">&lt;/<span class="hljs-title">script</span>&gt;</span></code>\n      </pre>\n    <choose aria-multiselect="true" class="multiple" params="options: people, selected: selected, multiple: true" role="listbox" tabindex="0">\n     <div class="choose-match choose-no-selection" data-bind="template: { nodes: matchTemplate, data: selected }, click: toggleDropdown, css: { \'choose-no-selection\': !hasSelection() }">\n      <span data-bind="text: $root.selectionText($data)">\n       No one is selected\n      </span>\n     </div>\n     <div class="choose-dropdown">\n      <div class="choose-search-wrapper" data-bind="visible: showSearch()" style="display: none;">\n       <input data-bind="value: searchTerm, valueUpdate: \'afterkeydown\', attr: { placeholder: searchPlaceholder }, event: { blur: closeOnBlur }" name="choose-search" type="text"/>\n      </div>\n      <ul class="choose-items" data-bind="template: { nodes: itemTemplate, foreach: filteredItems() }, css: outerUlClass">\n       <li data-bind=\'event: { blur: $component.closeOnBlur }, attr: { "aria-selected": $component.selected().indexOf($data) !== -1 }\' role="option">\n        <span data-bind="text: $data.name">\n         Bob\n        </span>\n        is\n        <span data-bind="text: $data.age">\n         31\n        </span>\n       </li>\n       <li data-bind=\'event: { blur: $component.closeOnBlur }, attr: { "aria-selected": $component.selected().indexOf($data) !== -1 }\' role="option">\n        <span data-bind="text: $data.name">\n         Jane\n        </span>\n        is\n        <span data-bind="text: $data.age">\n         25\n        </span>\n       </li>\n       <li data-bind=\'event: { blur: $component.closeOnBlur }, attr: { "aria-selected": $component.selected().indexOf($data) !== -1 }\' role="option">\n        <span data-bind="text: $data.name">\n         Anne\n        </span>\n        is\n        <span data-bind="text: $data.age">\n         42\n        </span>\n       </li>\n      </ul>\n     </div>\n    </choose>\n    <script>\n     ko.applyBindings({\n          people: [{\n            name: \'Bob\',\n            age: 31\n          }, {\n            name: \'Jane\',\n            age: 25\n          }, {\n            name: \'Anne\',\n            age: 42\n          }],\n          selected: ko.observableArray(),\n\n          selectionText: function(data) {\n            if (data.length === 0) return \'No one is selected\'\n            return data.length === 1 ?\n              data[0].name + \' is \' + data[0].age :\n              data.length + \' people selected: \' + data.map(p =&gt; p.name).join(\', \')\n          }\n        }, document.body.querySelector(\'choose.multiple\'))\n    </script>\n    <h3>\n     Style as a radio, tabs, or whatever via only CSS\n    </h3>\n    <p>\n     knockout-choose uses clean, semantic styling, so anywhere you need the user to choose one or many options from a fix set of options, it can be used. No more separate code paths for a radio, dropdown, or even tabs - it\'s all the same! Those are styling concerns.\n    </p>\n    <div class="semantic">\n     <choose class="styling radio" params="options: [\'dropdown\', \'radio\', \'tabs\'], selected: style" role="listbox" tabindex="0">\n      <div class="choose-match" data-bind="template: { nodes: matchTemplate, data: selected }, click: toggleDropdown, css: { \'choose-no-selection\': !hasSelection() }">\n       <span data-bind="text: $component.selected() != null ? $component.selected() : $component.placeholder">\n        dropdown\n       </span>\n      </div>\n      <div class="choose-dropdown">\n       <div class="choose-search-wrapper" data-bind="visible: showSearch()" style="display: none;">\n        <input data-bind="value: searchTerm, valueUpdate: \'afterkeydown\', attr: { placeholder: searchPlaceholder }, event: { blur: closeOnBlur }" name="choose-search" type="text"/>\n       </div>\n       <ul class="choose-items" data-bind="template: { nodes: itemTemplate, foreach: filteredItems() }, css: outerUlClass">\n        <li aria-selected="true" data-bind=\'event: { blur: $component.closeOnBlur }, attr: { "aria-selected": $data === $component.selected() }\' role="option">\n         <span data-bind="text: $data">\n          dropdown\n         </span>\n        </li>\n        <li data-bind=\'event: { blur: $component.closeOnBlur }, attr: { "aria-selected": $data === $component.selected() }\' role="option">\n         <span data-bind="text: $data">\n          radio\n         </span>\n        </li>\n        <li data-bind=\'event: { blur: $component.closeOnBlur }, attr: { "aria-selected": $data === $component.selected() }\' role="option">\n         <span data-bind="text: $data">\n          tabs\n         </span>\n        </li>\n       </ul>\n      </div>\n     </choose>\n     <choose class="fruit dropdown" data-bind="css: style" params="options: fruits, selected: selected, disabledItems: [\'watermelon\']" role="listbox" tabindex="0">\n      <div class="choose-match" data-bind="template: { nodes: matchTemplate, data: selected }, click: toggleDropdown, css: { \'choose-no-selection\': !hasSelection() }">\n       <span data-bind="text: $component.selected() != null ? $component.selected() : $component.placeholder">\n        apple\n       </span>\n      </div>\n      <div class="choose-dropdown">\n       <div class="choose-search-wrapper" data-bind="visible: showSearch()" style="display: none;">\n        <input data-bind="value: searchTerm, valueUpdate: \'afterkeydown\', attr: { placeholder: searchPlaceholder }, event: { blur: closeOnBlur }" name="choose-search" type="text"/>\n       </div>\n       <ul class="choose-items" data-bind="template: { nodes: itemTemplate, foreach: filteredItems() }, css: outerUlClass">\n        <li data-bind=\'event: { blur: $component.closeOnBlur }, attr: { "aria-selected": $data === $component.selected(), "aria-disabled": $component.isDisabled($data) }\' role="option">\n         <span data-bind="text: $data">\n          banana\n         </span>\n        </li>\n        <li aria-selected="true" data-bind=\'event: { blur: $component.closeOnBlur }, attr: { "aria-selected": $data === $component.selected(), "aria-disabled": $component.isDisabled($data) }\' role="option">\n         <span data-bind="text: $data">\n          apple\n         </span>\n        </li>\n        <li data-bind=\'event: { blur: $component.closeOnBlur }, attr: { "aria-selected": $data === $component.selected(), "aria-disabled": $component.isDisabled($data) }\' role="option">\n         <span data-bind="text: $data">\n          strawberry\n         </span>\n        </li>\n        <li aria-disabled="true" data-bind=\'event: { blur: $component.closeOnBlur }, attr: { "aria-selected": $data === $component.selected(), "aria-disabled": $component.isDisabled($data) }\' role="option">\n         <span data-bind="text: $data">\n          watermelon\n         </span>\n        </li>\n        <li data-bind=\'event: { blur: $component.closeOnBlur }, attr: { "aria-selected": $data === $component.selected(), "aria-disabled": $component.isDisabled($data) }\' role="option">\n         <span data-bind="text: $data">\n          pineapple\n         </span>\n        </li>\n       </ul>\n      </div>\n     </choose>\n    </div>\n    <script>\n     ko.applyBindings({\n          style: ko.observable(\'dropdown\'),\n          fruits: [\'banana\', \'apple\', \'strawberry\', \'watermelon\', \'pineapple\'],\n          selected: ko.observable(\'apple\')\n        }, document.body.querySelector(\'div.semantic\'))\n    </script>\n    <h2>\n     Installation\n    </h2>\n    <h4>\n     <a href="https://www.npmjs.com/package/knockout-choose">\n      npm\n     </a>\n    </h4>\n    <h4>\n     <pre><code class="hljs sql">npm <span class="hljs-operator"><span class="hljs-keyword">install</span> <span class="hljs-comment">--save knockout-choose</span></span></code></pre>\n    </h4>\n    <h4>\n     <a href="http://bower.io/search/?q=knockout-choose">\n      bower\n     </a>\n    </h4>\n    <h4>\n     <pre><code class="hljs sql">bower <span class="hljs-operator"><span class="hljs-keyword">install</span> <span class="hljs-comment">--save knockout-choose</span></span></code></pre>\n     <p>\n      Source on\n      <a href="https://github.com/nathanboktae/knockout-choose">\n       GitHub\n      </a>\n     </p>\n    </h4>\n   </article>\n  </main>\n </body>\n</html>'