b'<!DOCTYPE html>\n<html xmlns="http://www.w3.org/1999/xhtml">\n <head>\n  <meta charset="utf-8"/>\n  <title>\n   MSX Transformer\n  </title>\n  <script src="https://cdnjs.cloudflare.com/ajax/libs/mithril/0.2.0/mithril.js">\n  </script>\n  <script src="https://cdn.rawgit.com/insin/msx/master/dist/MSXTransformer.js">\n  </script>\n  <script>\n   void function() { \'use strict\';\n\n// JSX version of the Mithril Getting Started documentation\'s TODO example.\n// http://lhorie.github.io/mithril/getting-started.html\n\n//this application only has one component: todo\nvar Todo = {};\n\n//for simplicity, we use this component to namespace the model classes\n\n//the Todo class has two properties\nTodo.Todo = function(data) {\n    this.description = m.prop(data.description);\n    this.done = m.prop(false);\n};\n\n//the TodoList class is a list of Todo\'s\nTodo.TodoList = Array;\n\n//the view-model tracks a running list of todos,\n//stores a description for new todos before they are created\n//and takes care of the logic surrounding when adding is permitted\n//and clearing the input after adding a todo to the list\nTodo.vm = (function() {\n    var vm = {}\n    vm.init = function() {\n        //a running list of todos\n        vm.list = new Todo.TodoList();\n\n        //a slot to store the name of a new todo before it is created\n        vm.description = m.prop("");\n\n        //adds a todo to the list, and clears the description field for user convenience\n        vm.add = function() {\n            if (vm.description()) {\n                vm.list.push(new Todo.Todo({description: vm.description()}));\n                vm.description("");\n            }\n        };\n    }\n    return vm\n}())\n\n//the controller defines what part of the model is relevant for the current page\n//in our case, there\'s only one view-model that handles everything\nTodo.controller = function() {\n    Todo.vm.init()\n}\n\n//here\'s the view\nTodo.view = function() {\n  return {tag: "div", attrs: {}, children: [\n    {tag: "input", attrs: {onchange:m.withAttr("value", Todo.vm.description), value:Todo.vm.description()}}, \n    {tag: "button", attrs: {onclick:Todo.vm.add}, children: ["Add"]}, \n    {tag: "table", attrs: {}, children: [\n      Todo.vm.list.map(function(task, index)  {return {tag: "tr", attrs: {}, children: [\n        {tag: "td", attrs: {}, children: [\n          {tag: "input", attrs: {type:"checkbox", onclick:m.withAttr("checked", task.done), checked:task.done()}}\n        ]}, \n        {tag: "td", attrs: {style:{textDecoration: task.done() ? "line-through" : "none"}}, children: [\n          task.description()\n        ]}\n      ]};})\n    ]}\n  ]}\n};\n\nvar Greetings = {\n  controller:function() {\n    return {\n      who: m.prop(\'Steve\')\n    }\n  },\n  view:function(ctrl) {\n    return {tag: "div", attrs: {className:"Greetings"}, children: [\n      {tag: "input", attrs: {oninput:m.withAttr(\'value\', ctrl.who), value:ctrl.who()}}, \n      m.component(Greeter, {who:ctrl.who()})\n    ]}\n  }\n}\n\nvar Greeter = {\n  view:function(ctrl, attrs) {\n    return {tag: "h3", attrs: {}, children: ["Hello, ", attrs.who]}\n  }\n}\n\nvar App = {\n  view:function() {\n    return {tag: "div", attrs: {className:"App"}, children: [\n      {tag: "h2", attrs: {}, children: ["TODO"]}, \n      Todo, \n      {tag: "h2", attrs: {}, children: ["Greetings"]}, \n      Greetings\n    ]}\n  }\n}\n\n//initialize the application\nm.mount(document.getElementById(\'app\'), App);\n\n}()\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNmb3JtZWQuanMiLCJzb3VyY2VzIjpbIklubGluZSBKU1ggc2NyaXB0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLEtBQUssV0FBVyxDQUFDLENBQUMsWUFBWSxDQUFDO0FBQy9CO0FBQ0E7QUFDQTtBQUNBOztBQUVBLElBQUksSUFBSSxHQUFHLEVBQUUsQ0FBQztBQUNkO0FBQ0E7QUFDQTs7QUFFQSxJQUFJLENBQUMsSUFBSSxHQUFHLFNBQVMsSUFBSSxFQUFFLENBQUM7SUFDeEIsSUFBSSxDQUFDLFdBQVcsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUM1QyxJQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDOUIsQ0FBQyxDQUFDO0FBQ0Y7O0FBRUEsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsSUFBSSxDQUFDLEVBQUUsSUFBSSxXQUFXLENBQUM7SUFDbkIsSUFBSSxFQUFFLEdBQUcsRUFBRTtBQUNmLElBQUksRUFBRSxDQUFDLElBQUksR0FBRyxXQUFXLENBQUM7O0FBRTFCLFFBQVEsRUFBRSxDQUFDLElBQUksR0FBRyxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztBQUN0Qzs7QUFFQSxRQUFRLEVBQUUsQ0FBQyxXQUFXLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUNwQzs7UUFFUSxFQUFFLENBQUMsR0FBRyxHQUFHLFdBQVcsQ0FBQztZQUNqQixJQUFJLEVBQUUsQ0FBQyxXQUFXLEVBQUUsRUFBRTtnQkFDbEIsRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsV0FBVyxFQUFFLEVBQUUsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDN0QsRUFBRSxDQUFDLFdB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QUFDO0lBQ04sT0FBTyxNQUFBLEtBQUksU0FBQSxDQUFBLENBQUMsU0FBQSxDQUFTLENBQUMsS0FBTSxDQUFBLGFBQUE7TUFDMUIsTUFBQSxJQUFHLFNBQUEsRUFBQyxhQUFBLE1BQVMsQ0FBQSxDQUFBLEVBQUE7TUFDWixJQUFNLEVBQUE7TUFDUCxNQUFBLElBQUcsU0FBQSxFQUFDLGFBQUEsV0FBYyxDQUFBLENBQUEsRUFBQTtNQUNqQixTQUFXO0lBQ1IsQ0FBQSxDQUFBO0dBQ1A7QUFDSCxDQUFDO0FBQ0Q7O0FBRUEsQ0FBQyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDOztDQUU1QyIsInNvdXJjZXNDb250ZW50IjpbInZvaWQgZnVuY3Rpb24oKSB7ICd1c2Ugc3RyaWN0JztcblxuLy8gSlNYIHZlcnNpb24gb2YgdGhlIE1pdGhyaWwgR2V0dGluZyBTdGFydGVkIGRvY3VtZW50YXRpb24ncyBUT0RPIGV4YW1wbGUuXG4vLyBodHRwOi8vbGhvcmllLmdpdGh1Yi5pby9taXRocmlsL2dldHRpbmctc3RhcnRlZC5odG1sXG5cbi8vdGhpcyBhcHBsaWNhdGlvbiBvbmx5IGhhcyBvbmUgY29tcG9uZW50OiB0b2RvXG52YXIgVG9kbyA9IHt9O1xuXG4vL2ZvciBzaW1wbGljaXR5LCB3ZSB1c2UgdGhpcyBjb21wb25lbnQgdG8gbmFtZXNwYWNlIHRoZSBtb2RlbCBjbGFzc2VzXG5cbi8vdGhlIFRvZG8gY2xhc3MgaGFzIHR3byBwcm9wZXJ0aWVzXG5Ub2RvLlRvZG8gPSBmdW5jdGlvbihkYXRhKSB7XG4gICAgdGhpcy5kZXNjcmlwdGlvbiA9IG0ucHJvcChkYXRhLmRlc2NyaXB0aW9uKTtcbiAgICB0aGlzLmRvbmUgPSBtLnByb3AoZmFsc2UpO1xufTtcblxuLy90aGUgVG9kb0xpc3QgY2xhc3MgaXMgYSBsaXN0IG9mIFRvZG8nc1xuVG9kby5Ub2RvTGlzdCA9IEFycmF5O1xuXG4vL3RoZSB2aWV3LW1vZGVsIHRyYWNrcyBhIHJ1bm5pbmcgbGlzdCBvZiB0b2Rvcyxcbi8vc3RvcmVzIGEgZGVzY3JpcHRpb24gZm9yIG5ldyB0b2RvcyBiZWZvcmUgdGhleSBhcmUgY3JlYXRlZFxuLy9hbmQgdGFrZXMgY2FyZSBvZiB0aGUgbG9naWMgc3Vycm91bmRpbmcgd2hlbiBhZGRpbmcgaXMgcGVybWl0dGVkXG4vL2FuZCBjbGVhcmluZyB0aGUgaW5wdXQgYWZ0ZXIgYWRkaW5nIGEgdG9kbyB0byB0aGUgbGlzdFxuVG9kby52bSA9IChmdW5jdGlvbigpIHtcbiAgICB2YXIgdm0gPSB7fVxuICAgIHZtLmluaXQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgLy9hIHJ1bm5pbmcgbGlzdCBvZiB0b2Rvc1xuICAgICAgICB2bS5saXN0ID0gbmV3IFRvZG8uVG9kb0xpc3QoKTtcblxuICAgICAgICAvL2Egc2xvdCB0byBzdG9yZSB0aGUgbmFtZSBvZiBhIG5ldyB0b2RvIGJlZm9yZSBpdCBpcyBjcmVhdGVkXG4gICAgICAgIHZtLmRlc2NyaXB0aW9uID0gbS5wcm9wKFwiXCIpO1xuXG4gICAgICAgIC8vYWRkcyBhIHRvZG8gdG8gdGhlIGxpc3QsIGFuZCBjbGVhcnMgdGhlIGRlc2NyaXB0aW9uIGZpZWxkIGZvciB1c2VyIGNvbnZlbmllbmNlXG4gICAgICAgIHZtLmFkZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgaWYgKHZtLmRlc2NyaXB0aW9uKCkpIHtcbiAgICAgICAgICAgICAgICB2bS5saXN0LnB1c2gobmV3IFRvZG8uVG9kbyh7ZGVzY3JpcHRpb246IHZtLmRlc2NyaXB0aW9uKCl9KSk7XG4gICAgICAgICAgICAgICAgdm0uZGVzY3JpcHRpb24oXCJcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiB2bVxufSgpKVxuXG4vL3RoZSBjb250cm9sbGVyIGRlZmluZXMgd2hhdCBwYXJ0IG9mIHRoZSBtb2RlbCBpcyByZWxldmFudCBmb3IgdGhlIGN1cnJlbnQgcGFnZVxuLy9pbiBvdXIgY2FzZSwgdGhlcmUncyBvbmx5IG9uZSB2aWV3LW1vZGVsIHRoYXQgaGFuZGxlcyBldmVyeXRoaW5nXG5Ub2RvLmNvbnRyb2xsZXIgPSBmdW5jdGlvbigpIHtcbiAgICBUb2RvLnZtLmluaXQoKVxufVxuXG4vL2hlcmUncyB0aGUgdmlld1xuVG9kby52aWV3ID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiA8ZGl2PlxuICAgIDxpbnB1dCBvbmNoYW5nZT17bS53aXRoQXR0cihcInZhbHVlXCIsIFRvZG8udm0uZGVzY3JpcHRpb24pfSB2YWx1ZT17VG9kby52bS5kZXNjcmlwdGlvbigpfS8+XG4gICAgPGJ1dHRvbiBvbmNsaWNrPXtUb2RvLnZtLmFkZH0+QWRkPC9idXR0b24+XG4gICAgPHRhYmxlPlxuICAgICAge1RvZG8udm0ubGlzdC5tYXAoKHRhc2ssIGluZGV4KSA9PiA8dHI+XG4gICAgICAgIDx0ZD5cbiAgICAgICAgICA8aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgb25jbGljaz17bS53aXRoQXR0cihcImNoZWNrZWRcIiwgdGFzay5kb25lKX0gY2hlY2tlZD17dGFzay5kb25lKCl9Lz5cbiAgICAgICAgPC90ZD5cbiAgICAgICAgPHRkIHN0eWxlPXt7dGV4dERlY29yYXRpb246IHRhc2suZG9uZSgpID8gXCJsaW5lLXRocm91Z2hcIiA6IFwibm9uZVwifX0+XG4gICAgICAgICAge3Rhc2suZGVzY3JpcHRpb24oKX1cbiAgICAgICAgPC90ZD5cbiAgICAgIDwvdHI+KX1cbiAgICA8L3RhYmxlPlxuICA8L2Rpdj5cbn07XG5cbnZhciBHcmVldGluZ3MgPSB7XG4gIGNvbnRyb2xsZXIoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHdobzogbS5wcm9wKCdTdGV2ZScpXG4gICAgfVxuICB9LFxuICB2aWV3KGN0cmwpIHtcbiAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJHcmVldGluZ3NcIj5cbiAgICAgIDxpbnB1dCBvbmlucHV0PXttLndpdGhBdHRyKCd2YWx1ZScsIGN0cmwud2hvKX0gdmFsdWU9e2N0cmwud2hvKCl9Lz5cbiAgICAgIDxHcmVldGVyIHdobz17Y3RybC53aG8oKX0vPlxuICAgIDwvZGl2PlxuICB9XG59XG5cbnZhciBHcmVldGVyID0ge1xuICB2aWV3KGN0cmwsIGF0dHJzKSB7XG4gICAgcmV0dXJuIDxoMz5IZWxsbywge2F0dHJzLndob308L2gzPlxuICB9XG59XG5cbnZhciBBcHAgPSB7XG4gIHZpZXcoKSB7XG4gICAgcmV0dXJuIDxkaXYgY2xhc3NOYW1lPVwiQXBwXCI+XG4gICAgICA8aDI+VE9ETzwvaDI+XG4gICAgICA8VG9kby8+XG4gICAgICA8aDI+R3JlZXRpbmdzPC9oMj5cbiAgICAgIDxHcmVldGluZ3MvPlxuICAgIDwvZGl2PlxuICB9XG59XG5cbi8vaW5pdGlhbGl6ZSB0aGUgYXBwbGljYXRpb25cbm0ubW91bnQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2FwcCcpLCBBcHApO1xuXG59KCkiXX0=\n  </script>\n </head>\n <body>\n  <div id="app">\n   <div class="App">\n    <h2>\n     TODO\n    </h2>\n    <div>\n     <input/>\n     <button>\n      Add\n     </button>\n     <table>\n     </table>\n    </div>\n    <h2>\n     Greetings\n    </h2>\n    <div class="Greetings">\n     <input/>\n     <h3>\n      Hello, Steve\n     </h3>\n    </div>\n   </div>\n  </div>\n  <script type="text/msx;harmony=true">\n   void function() { \'use strict\';\n\n// JSX version of the Mithril Getting Started documentation\'s TODO example.\n// http://lhorie.github.io/mithril/getting-started.html\n\n//this application only has one component: todo\nvar Todo = {};\n\n//for simplicity, we use this component to namespace the model classes\n\n//the Todo class has two properties\nTodo.Todo = function(data) {\n    this.description = m.prop(data.description);\n    this.done = m.prop(false);\n};\n\n//the TodoList class is a list of Todo\'s\nTodo.TodoList = Array;\n\n//the view-model tracks a running list of todos,\n//stores a description for new todos before they are created\n//and takes care of the logic surrounding when adding is permitted\n//and clearing the input after adding a todo to the list\nTodo.vm = (function() {\n    var vm = {}\n    vm.init = function() {\n        //a running list of todos\n        vm.list = new Todo.TodoList();\n\n        //a slot to store the name of a new todo before it is created\n        vm.description = m.prop("");\n\n        //adds a todo to the list, and clears the description field for user convenience\n        vm.add = function() {\n            if (vm.description()) {\n                vm.list.push(new Todo.Todo({description: vm.description()}));\n                vm.description("");\n            }\n        };\n    }\n    return vm\n}())\n\n//the controller defines what part of the model is relevant for the current page\n//in our case, there\'s only one view-model that handles everything\nTodo.controller = function() {\n    Todo.vm.init()\n}\n\n//here\'s the view\nTodo.view = function() {\n  return &lt;div&gt;\n    &lt;input onchange={m.withAttr("value", Todo.vm.description)} value={Todo.vm.description()}/&gt;\n    &lt;button onclick={Todo.vm.add}&gt;Add&lt;/button&gt;\n    &lt;table&gt;\n      {Todo.vm.list.map((task, index) =&gt; &lt;tr&gt;\n        &lt;td&gt;\n          &lt;input type="checkbox" onclick={m.withAttr("checked", task.done)} checked={task.done()}/&gt;\n        &lt;/td&gt;\n        &lt;td style={{textDecoration: task.done() ? "line-through" : "none"}}&gt;\n          {task.description()}\n        &lt;/td&gt;\n      &lt;/tr&gt;)}\n    &lt;/table&gt;\n  &lt;/div&gt;\n};\n\nvar Greetings = {\n  controller() {\n    return {\n      who: m.prop(\'Steve\')\n    }\n  },\n  view(ctrl) {\n    return &lt;div className="Greetings"&gt;\n      &lt;input oninput={m.withAttr(\'value\', ctrl.who)} value={ctrl.who()}/&gt;\n      &lt;Greeter who={ctrl.who()}/&gt;\n    &lt;/div&gt;\n  }\n}\n\nvar Greeter = {\n  view(ctrl, attrs) {\n    return &lt;h3&gt;Hello, {attrs.who}&lt;/h3&gt;\n  }\n}\n\nvar App = {\n  view() {\n    return &lt;div className="App"&gt;\n      &lt;h2&gt;TODO&lt;/h2&gt;\n      &lt;Todo/&gt;\n      &lt;h2&gt;Greetings&lt;/h2&gt;\n      &lt;Greetings/&gt;\n    &lt;/div&gt;\n  }\n}\n\n//initialize the application\nm.mount(document.getElementById(\'app\'), App);\n\n}()\n  </script>\n </body>\n</html>'b'<!DOCTYPE html>\n<html xmlns="http://www.w3.org/1999/xhtml">\n <head>\n  <meta charset="utf-8"/>\n  <title>\n   MSX Transformer\n  </title>\n  <script src="https://cdnjs.cloudflare.com/ajax/libs/mithril/0.2.0/mithril.js">\n  </script>\n  <script src="https://cdn.rawgit.com/insin/msx/master/dist/MSXTransformer.js">\n  </script>\n  <script>\n   void function() { \'use strict\';\n\n// JSX version of the Mithril Getting Started documentation\'s TODO example.\n// http://lhorie.github.io/mithril/getting-started.html\n\n//this application only has one component: todo\nvar Todo = {};\n\n//for simplicity, we use this component to namespace the model classes\n\n//the Todo class has two properties\nTodo.Todo = function(data) {\n    this.description = m.prop(data.description);\n    this.done = m.prop(false);\n};\n\n//the TodoList class is a list of Todo\'s\nTodo.TodoList = Array;\n\n//the view-model tracks a running list of todos,\n//stores a description for new todos before they are created\n//and takes care of the logic surrounding when adding is permitted\n//and clearing the input after adding a todo to the list\nTodo.vm = (function() {\n    var vm = {}\n    vm.init = function() {\n        //a running list of todos\n        vm.list = new Todo.TodoList();\n\n        //a slot to store the name of a new todo before it is created\n        vm.description = m.prop("");\n\n        //adds a todo to the list, and clears the description field for user convenience\n        vm.add = function() {\n            if (vm.description()) {\n                vm.list.push(new Todo.Todo({description: vm.description()}));\n                vm.description("");\n            }\n        };\n    }\n    return vm\n}())\n\n//the controller defines what part of the model is relevant for the current page\n//in our case, there\'s only one view-model that handles everything\nTodo.controller = function() {\n    Todo.vm.init()\n}\n\n//here\'s the view\nTodo.view = function() {\n  return {tag: "div", attrs: {}, children: [\n    {tag: "input", attrs: {onchange:m.withAttr("value", Todo.vm.description), value:Todo.vm.description()}}, \n    {tag: "button", attrs: {onclick:Todo.vm.add}, children: ["Add"]}, \n    {tag: "table", attrs: {}, children: [\n      Todo.vm.list.map(function(task, index)  {return {tag: "tr", attrs: {}, children: [\n        {tag: "td", attrs: {}, children: [\n          {tag: "input", attrs: {type:"checkbox", onclick:m.withAttr("checked", task.done), checked:task.done()}}\n        ]}, \n        {tag: "td", attrs: {style:{textDecoration: task.done() ? "line-through" : "none"}}, children: [\n          task.description()\n        ]}\n      ]};})\n    ]}\n  ]}\n};\n\nvar Greetings = {\n  controller:function() {\n    return {\n      who: m.prop(\'Steve\')\n    }\n  },\n  view:function(ctrl) {\n    return {tag: "div", attrs: {className:"Greetings"}, children: [\n      {tag: "input", attrs: {oninput:m.withAttr(\'value\', ctrl.who), value:ctrl.who()}}, \n      m.component(Greeter, {who:ctrl.who()})\n    ]}\n  }\n}\n\nvar Greeter = {\n  view:function(ctrl, attrs) {\n    return {tag: "h3", attrs: {}, children: ["Hello, ", attrs.who]}\n  }\n}\n\nvar App = {\n  view:function() {\n    return {tag: "div", attrs: {className:"App"}, children: [\n      {tag: "h2", attrs: {}, children: ["TODO"]}, \n      Todo, \n      {tag: "h2", attrs: {}, children: ["Greetings"]}, \n      Greetings\n    ]}\n  }\n}\n\n//initialize the application\nm.mount(document.getElementById(\'app\'), App);\n\n}()\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNmb3JtZWQuanMiLCJzb3VyY2VzIjpbIklubGluZSBKU1ggc2NyaXB0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLEtBQUssV0FBVyxDQUFDLENBQUMsWUFBWSxDQUFDO0FBQy9CO0FBQ0E7QUFDQTtBQUNBOztBQUVBLElBQUksSUFBSSxHQUFHLEVBQUUsQ0FBQztBQUNkO0FBQ0E7QUFDQTs7QUFFQSxJQUFJLENBQUMsSUFBSSxHQUFHLFNBQVMsSUFBSSxFQUFFLENBQUM7SUFDeEIsSUFBSSxDQUFDLFdBQVcsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUM1QyxJQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDOUIsQ0FBQyxDQUFDO0FBQ0Y7O0FBRUEsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsSUFBSSxDQUFDLEVBQUUsSUFBSSxXQUFXLENBQUM7SUFDbkIsSUFBSSxFQUFFLEdBQUcsRUFBRTtBQUNmLElBQUksRUFBRSxDQUFDLElBQUksR0FBRyxXQUFXLENBQUM7O0FBRTFCLFFBQVEsRUFBRSxDQUFDLElBQUksR0FBRyxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztBQUN0Qzs7QUFFQSxRQUFRLEVBQUUsQ0FBQyxXQUFXLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUNwQzs7UUFFUSxFQUFFLENBQUMsR0FBRyxHQUFHLFdBQVcsQ0FBQztZQUNqQixJQUFJLEVBQUUsQ0FBQyxXQUFXLEVBQUUsRUFBRTtnQkFDbEIsRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsV0FBVyxFQUFFLEVBQUUsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDN0QsRUFBRSxDQUFDLFdB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QUFDO0lBQ04sT0FBTyxNQUFBLEtBQUksU0FBQSxDQUFBLENBQUMsU0FBQSxDQUFTLENBQUMsS0FBTSxDQUFBLGFBQUE7TUFDMUIsTUFBQSxJQUFHLFNBQUEsRUFBQyxhQUFBLE1BQVMsQ0FBQSxDQUFBLEVBQUE7TUFDWixJQUFNLEVBQUE7TUFDUCxNQUFBLElBQUcsU0FBQSxFQUFDLGFBQUEsV0FBYyxDQUFBLENBQUEsRUFBQTtNQUNqQixTQUFXO0lBQ1IsQ0FBQSxDQUFBO0dBQ1A7QUFDSCxDQUFDO0FBQ0Q7O0FBRUEsQ0FBQyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDOztDQUU1QyIsInNvdXJjZXNDb250ZW50IjpbInZvaWQgZnVuY3Rpb24oKSB7ICd1c2Ugc3RyaWN0JztcblxuLy8gSlNYIHZlcnNpb24gb2YgdGhlIE1pdGhyaWwgR2V0dGluZyBTdGFydGVkIGRvY3VtZW50YXRpb24ncyBUT0RPIGV4YW1wbGUuXG4vLyBodHRwOi8vbGhvcmllLmdpdGh1Yi5pby9taXRocmlsL2dldHRpbmctc3RhcnRlZC5odG1sXG5cbi8vdGhpcyBhcHBsaWNhdGlvbiBvbmx5IGhhcyBvbmUgY29tcG9uZW50OiB0b2RvXG52YXIgVG9kbyA9IHt9O1xuXG4vL2ZvciBzaW1wbGljaXR5LCB3ZSB1c2UgdGhpcyBjb21wb25lbnQgdG8gbmFtZXNwYWNlIHRoZSBtb2RlbCBjbGFzc2VzXG5cbi8vdGhlIFRvZG8gY2xhc3MgaGFzIHR3byBwcm9wZXJ0aWVzXG5Ub2RvLlRvZG8gPSBmdW5jdGlvbihkYXRhKSB7XG4gICAgdGhpcy5kZXNjcmlwdGlvbiA9IG0ucHJvcChkYXRhLmRlc2NyaXB0aW9uKTtcbiAgICB0aGlzLmRvbmUgPSBtLnByb3AoZmFsc2UpO1xufTtcblxuLy90aGUgVG9kb0xpc3QgY2xhc3MgaXMgYSBsaXN0IG9mIFRvZG8nc1xuVG9kby5Ub2RvTGlzdCA9IEFycmF5O1xuXG4vL3RoZSB2aWV3LW1vZGVsIHRyYWNrcyBhIHJ1bm5pbmcgbGlzdCBvZiB0b2Rvcyxcbi8vc3RvcmVzIGEgZGVzY3JpcHRpb24gZm9yIG5ldyB0b2RvcyBiZWZvcmUgdGhleSBhcmUgY3JlYXRlZFxuLy9hbmQgdGFrZXMgY2FyZSBvZiB0aGUgbG9naWMgc3Vycm91bmRpbmcgd2hlbiBhZGRpbmcgaXMgcGVybWl0dGVkXG4vL2FuZCBjbGVhcmluZyB0aGUgaW5wdXQgYWZ0ZXIgYWRkaW5nIGEgdG9kbyB0byB0aGUgbGlzdFxuVG9kby52bSA9IChmdW5jdGlvbigpIHtcbiAgICB2YXIgdm0gPSB7fVxuICAgIHZtLmluaXQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgLy9hIHJ1bm5pbmcgbGlzdCBvZiB0b2Rvc1xuICAgICAgICB2bS5saXN0ID0gbmV3IFRvZG8uVG9kb0xpc3QoKTtcblxuICAgICAgICAvL2Egc2xvdCB0byBzdG9yZSB0aGUgbmFtZSBvZiBhIG5ldyB0b2RvIGJlZm9yZSBpdCBpcyBjcmVhdGVkXG4gICAgICAgIHZtLmRlc2NyaXB0aW9uID0gbS5wcm9wKFwiXCIpO1xuXG4gICAgICAgIC8vYWRkcyBhIHRvZG8gdG8gdGhlIGxpc3QsIGFuZCBjbGVhcnMgdGhlIGRlc2NyaXB0aW9uIGZpZWxkIGZvciB1c2VyIGNvbnZlbmllbmNlXG4gICAgICAgIHZtLmFkZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgaWYgKHZtLmRlc2NyaXB0aW9uKCkpIHtcbiAgICAgICAgICAgICAgICB2bS5saXN0LnB1c2gobmV3IFRvZG8uVG9kbyh7ZGVzY3JpcHRpb246IHZtLmRlc2NyaXB0aW9uKCl9KSk7XG4gICAgICAgICAgICAgICAgdm0uZGVzY3JpcHRpb24oXCJcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiB2bVxufSgpKVxuXG4vL3RoZSBjb250cm9sbGVyIGRlZmluZXMgd2hhdCBwYXJ0IG9mIHRoZSBtb2RlbCBpcyByZWxldmFudCBmb3IgdGhlIGN1cnJlbnQgcGFnZVxuLy9pbiBvdXIgY2FzZSwgdGhlcmUncyBvbmx5IG9uZSB2aWV3LW1vZGVsIHRoYXQgaGFuZGxlcyBldmVyeXRoaW5nXG5Ub2RvLmNvbnRyb2xsZXIgPSBmdW5jdGlvbigpIHtcbiAgICBUb2RvLnZtLmluaXQoKVxufVxuXG4vL2hlcmUncyB0aGUgdmlld1xuVG9kby52aWV3ID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiA8ZGl2PlxuICAgIDxpbnB1dCBvbmNoYW5nZT17bS53aXRoQXR0cihcInZhbHVlXCIsIFRvZG8udm0uZGVzY3JpcHRpb24pfSB2YWx1ZT17VG9kby52bS5kZXNjcmlwdGlvbigpfS8+XG4gICAgPGJ1dHRvbiBvbmNsaWNrPXtUb2RvLnZtLmFkZH0+QWRkPC9idXR0b24+XG4gICAgPHRhYmxlPlxuICAgICAge1RvZG8udm0ubGlzdC5tYXAoKHRhc2ssIGluZGV4KSA9PiA8dHI+XG4gICAgICAgIDx0ZD5cbiAgICAgICAgICA8aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgb25jbGljaz17bS53aXRoQXR0cihcImNoZWNrZWRcIiwgdGFzay5kb25lKX0gY2hlY2tlZD17dGFzay5kb25lKCl9Lz5cbiAgICAgICAgPC90ZD5cbiAgICAgICAgPHRkIHN0eWxlPXt7dGV4dERlY29yYXRpb246IHRhc2suZG9uZSgpID8gXCJsaW5lLXRocm91Z2hcIiA6IFwibm9uZVwifX0+XG4gICAgICAgICAge3Rhc2suZGVzY3JpcHRpb24oKX1cbiAgICAgICAgPC90ZD5cbiAgICAgIDwvdHI+KX1cbiAgICA8L3RhYmxlPlxuICA8L2Rpdj5cbn07XG5cbnZhciBHcmVldGluZ3MgPSB7XG4gIGNvbnRyb2xsZXIoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHdobzogbS5wcm9wKCdTdGV2ZScpXG4gICAgfVxuICB9LFxuICB2aWV3KGN0cmwpIHtcbiAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJHcmVldGluZ3NcIj5cbiAgICAgIDxpbnB1dCBvbmlucHV0PXttLndpdGhBdHRyKCd2YWx1ZScsIGN0cmwud2hvKX0gdmFsdWU9e2N0cmwud2hvKCl9Lz5cbiAgICAgIDxHcmVldGVyIHdobz17Y3RybC53aG8oKX0vPlxuICAgIDwvZGl2PlxuICB9XG59XG5cbnZhciBHcmVldGVyID0ge1xuICB2aWV3KGN0cmwsIGF0dHJzKSB7XG4gICAgcmV0dXJuIDxoMz5IZWxsbywge2F0dHJzLndob308L2gzPlxuICB9XG59XG5cbnZhciBBcHAgPSB7XG4gIHZpZXcoKSB7XG4gICAgcmV0dXJuIDxkaXYgY2xhc3NOYW1lPVwiQXBwXCI+XG4gICAgICA8aDI+VE9ETzwvaDI+XG4gICAgICA8VG9kby8+XG4gICAgICA8aDI+R3JlZXRpbmdzPC9oMj5cbiAgICAgIDxHcmVldGluZ3MvPlxuICAgIDwvZGl2PlxuICB9XG59XG5cbi8vaW5pdGlhbGl6ZSB0aGUgYXBwbGljYXRpb25cbm0ubW91bnQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2FwcCcpLCBBcHApO1xuXG59KCkiXX0=\n  </script>\n </head>\n <body>\n  <div id="app">\n   <div class="App">\n    <h2>\n     TODO\n    </h2>\n    <div>\n     <input/>\n     <button>\n      Add\n     </button>\n     <table>\n     </table>\n    </div>\n    <h2>\n     Greetings\n    </h2>\n    <div class="Greetings">\n     <input/>\n     <h3>\n      Hello, Steve\n     </h3>\n    </div>\n   </div>\n  </div>\n  <script type="text/msx;harmony=true">\n   void function() { \'use strict\';\n\n// JSX version of the Mithril Getting Started documentation\'s TODO example.\n// http://lhorie.github.io/mithril/getting-started.html\n\n//this application only has one component: todo\nvar Todo = {};\n\n//for simplicity, we use this component to namespace the model classes\n\n//the Todo class has two properties\nTodo.Todo = function(data) {\n    this.description = m.prop(data.description);\n    this.done = m.prop(false);\n};\n\n//the TodoList class is a list of Todo\'s\nTodo.TodoList = Array;\n\n//the view-model tracks a running list of todos,\n//stores a description for new todos before they are created\n//and takes care of the logic surrounding when adding is permitted\n//and clearing the input after adding a todo to the list\nTodo.vm = (function() {\n    var vm = {}\n    vm.init = function() {\n        //a running list of todos\n        vm.list = new Todo.TodoList();\n\n        //a slot to store the name of a new todo before it is created\n        vm.description = m.prop("");\n\n        //adds a todo to the list, and clears the description field for user convenience\n        vm.add = function() {\n            if (vm.description()) {\n                vm.list.push(new Todo.Todo({description: vm.description()}));\n                vm.description("");\n            }\n        };\n    }\n    return vm\n}())\n\n//the controller defines what part of the model is relevant for the current page\n//in our case, there\'s only one view-model that handles everything\nTodo.controller = function() {\n    Todo.vm.init()\n}\n\n//here\'s the view\nTodo.view = function() {\n  return &lt;div&gt;\n    &lt;input onchange={m.withAttr("value", Todo.vm.description)} value={Todo.vm.description()}/&gt;\n    &lt;button onclick={Todo.vm.add}&gt;Add&lt;/button&gt;\n    &lt;table&gt;\n      {Todo.vm.list.map((task, index) =&gt; &lt;tr&gt;\n        &lt;td&gt;\n          &lt;input type="checkbox" onclick={m.withAttr("checked", task.done)} checked={task.done()}/&gt;\n        &lt;/td&gt;\n        &lt;td style={{textDecoration: task.done() ? "line-through" : "none"}}&gt;\n          {task.description()}\n        &lt;/td&gt;\n      &lt;/tr&gt;)}\n    &lt;/table&gt;\n  &lt;/div&gt;\n};\n\nvar Greetings = {\n  controller() {\n    return {\n      who: m.prop(\'Steve\')\n    }\n  },\n  view(ctrl) {\n    return &lt;div className="Greetings"&gt;\n      &lt;input oninput={m.withAttr(\'value\', ctrl.who)} value={ctrl.who()}/&gt;\n      &lt;Greeter who={ctrl.who()}/&gt;\n    &lt;/div&gt;\n  }\n}\n\nvar Greeter = {\n  view(ctrl, attrs) {\n    return &lt;h3&gt;Hello, {attrs.who}&lt;/h3&gt;\n  }\n}\n\nvar App = {\n  view() {\n    return &lt;div className="App"&gt;\n      &lt;h2&gt;TODO&lt;/h2&gt;\n      &lt;Todo/&gt;\n      &lt;h2&gt;Greetings&lt;/h2&gt;\n      &lt;Greetings/&gt;\n    &lt;/div&gt;\n  }\n}\n\n//initialize the application\nm.mount(document.getElementById(\'app\'), App);\n\n}()\n  </script>\n </body>\n</html>'