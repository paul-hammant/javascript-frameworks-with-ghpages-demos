b'<!DOCTYPE html>\n<html xmlns="http://www.w3.org/1999/xhtml">\n <head>\n  <meta charset="utf-8"/>\n  <title>\n   react-maskedinput Demo\n  </title>\n  <script src="http://fb.me/react-0.14.0.js">\n  </script>\n  <script src="http://fb.me/react-dom-0.14.0.js">\n  </script>\n  <script src="http://fb.me/JSXTransformer-0.13.3.js">\n  </script>\n  <script src="react-maskedinput.js">\n  </script>\n  <style>\n   body {\n    box-sizing: border-box;\n    width: 550px;\n    margin: 1em auto;\n    padding: 0 1em;\n    font-family: sans-serif;\n  }\n  code {\n    font-size: 1.3em;\n  }\n  h1 {\n    font-size: 3em;\n    text-align: center;\n    margin-top: 0;\n  }\n  p.lead {\n    font-weight: bold;\n    text-align: center;\n  }\n  hr {\n    margin-top: 20px;\n    margin-bottom: 20px;\n    border: 0;\n    border-top: 1px solid #222;\n  }\n  .form-field {\n    margin-bottom: .5em;\n  }\n  label {\n    display: inline-block;\n    width: 7em;\n    text-align: right;\n    margin-right: .75em;\n  }\n  input {\n    border: none;\n    font-size: 1.5em;\n  }\n  footer {\n    text-align: center;\n  }\n  </style>\n  <script>\n   void function() { \'use strict\'\n\nvar PATTERNS = [\n  \'1111 1111\',\n  \'111 111\',\n  \'11 11\',\n  \'1 1\'\n]\n\nvar App = React.createClass({displayName: "App",\n  getInitialState:function() {\n    return {\n      card: \'\',\n      expiry: \'\',\n      ccv: \'\',\n      plate: \'\',\n      escaped: \'\',\n      leading: \'\',\n      custom: \'\',\n      changing: \'\',\n      pattern: \'1111 1111\'\n    }\n  },\n\n  _onChange:function(e) {\n    var stateChange = {}\n    stateChange[e.target.name] = e.target.value\n    this.setState(stateChange)\n  },\n\n  _changePattern:function(e) {\n    this.setState({pattern: e.target.value})\n  },\n\n  render:function() {\n    return React.createElement("div", {className: "App"}, \n      React.createElement("h1", null, React.createElement("code", null, "&lt;", React.createElement("a", {href: "https://github.com/insin/react-maskedinput"}, "MaskedInput"), "/&gt;")), \n      React.createElement("p", {className: "lead"}, "A React component which creates a masked ", React.createElement("code", null, "&lt;input/&gt;")), \n      React.createElement("div", {className: "form-field"}, \n        React.createElement("label", {htmlFor: "card"}, "Card Number:"), \n        React.createElement(MaskedInput, {mask: "1111 1111 1111 1111", name: "card", id: "card", size: "20", onChange: this._onChange})\n      ), \n      React.createElement("p", null, "Placeholders are automatically generated but can be overridden with your own:"), \n      React.createElement("div", {className: "form-field"}, \n        React.createElement("label", {htmlFor: "expiry"}, "Expiry Date:"), \n        React.createElement(MaskedInput, {mask: "11/1111", name: "expiry", id: "expiry", placeholder: "mm/yyyy", onChange: this._onChange})\n      ), \n      React.createElement("div", {className: "form-field"}, \n        React.createElement("label", {htmlFor: "ccv"}, "CCV:"), \n        React.createElement(MaskedInput, {mask: "111", name: "ccv", id: "ccv", onChange: this._onChange})\n      ), \n      React.createElement("div", {className: "form-field"}, \n        React.createElement("label", {htmlFor: "plate"}, "License Plate:"), \n        React.createElement(MaskedInput, {mask: "AAA 1111", name: "plate", id: "plate", onChange: this._onChange, placeholder: "ABC 1234"})\n      ), \n      React.createElement("p", null, "Mask placeholder characters can be escaped with a leading ", React.createElement("code", null, "\\\\"), " to use them as static contents:"), \n      React.createElement("div", {className: "form-field"}, \n        React.createElement("label", {htmlFor: "escaped"}, "Escaped:"), \n        React.createElement(MaskedInput, {mask: "11 \\\\* 11", name: "escaped", id: "escaped", onChange: this._onChange})\n      ), \n      React.createElement("p", null, "Leading static characters:"), \n      React.createElement("div", {className: "form-field"}, \n        React.createElement("label", {htmlFor: "leading"}, "Leading:"), \n        React.createElement(MaskedInput, {mask: "(0) 111 1111", name: "leading", id: "leading", onChange: this._onChange})\n      ), \n      React.createElement("p", null, "Changing patterns:"), \n      React.createElement("div", {className: "form-field"}, \n        React.createElement("label", {htmlFor: "changing"}, "Input:"), \n        React.createElement(MaskedInput, {mask: this.state.pattern, name: "changing", id: "changing", onChange: this._onChange})\n      ), \n      React.createElement("div", {className: "form-field"}, \n        React.createElement("label", {htmlFor: "pattern"}, "Pattern:"), \n        React.createElement("select", {onChange: this._changePattern}, \n          PATTERNS.map(function(pattern)  {return React.createElement("option", {value: pattern}, pattern);})\n        )\n      ), \n      React.createElement("p", null, "Custom format character (W=[a-zA-Z0-9_], transformed to uppercase) and placeholder character (en space):"), \n      React.createElement("div", {className: "form-field"}, \n        React.createElement("label", {htmlFor: "custom"}, "Custom:"), \n        React.createElement(CustomInput, {name: "custom", id: "custom", onChange: this._onChange})\n      ), \n      React.createElement("hr", null), \n      React.createElement("pre", null, React.createElement("code", null, JSON.stringify(this.state, null, 2))), \n      React.createElement("hr", null), \n      React.createElement("footer", null, React.createElement("a", {href: "https://github.com/insin/react-maskedinput"}, "Source on GitHub"))\n    )\n  }\n})\n\nvar CustomInput = React.createClass({displayName: "CustomInput",\n  render:function() {\n    return React.createElement(MaskedInput, React.__spread({\n      mask: "1111-WW-11", \n      placeholder: "1234-WW-12", \n      placeholderChar: "\xe2\x80\x82", \n      size: "11"}, \n      this.props, \n      {formatCharacters: {\n        \'W\': {\n          validate:function(char) { return /\\w/.test(char ) },\n          transform:function(char) { return char.toUpperCase() }\n        }\n      }\n    }))\n  }\n})\n\nReactDOM.render(React.createElement(App, null), document.getElementById(\'app\'))\n\n}()\n//# sourceMappingURL=data:application/json;base64,\n  </script>\n </head>\n <body>\n  <div id="app">\n   <div class="App" data-reactid=".0">\n    <h1 data-reactid=".0.0">\n     <code data-reactid=".0.0.0">\n      <span data-reactid=".0.0.0.0">\n       &lt;\n      </span>\n      <a data-reactid=".0.0.0.1" href="https://github.com/insin/react-maskedinput">\n       MaskedInput\n      </a>\n      <span data-reactid=".0.0.0.2">\n       /&gt;\n      </span>\n     </code>\n    </h1>\n    <p class="lead" data-reactid=".0.1">\n     <span data-reactid=".0.1.0">\n      A React component which creates a masked\n     </span>\n     <code data-reactid=".0.1.1">\n      &lt;input/&gt;\n     </code>\n    </p>\n    <div class="form-field" data-reactid=".0.2">\n     <label data-reactid=".0.2.0" for="card">\n      Card Number:\n     </label>\n     <input data-reactid=".0.2.1" id="card" maxlength="19" name="card" placeholder="____ ____ ____ ____" size="20" value=""/>\n    </div>\n    <p data-reactid=".0.3">\n     Placeholders are automatically generated but can be overridden with your own:\n    </p>\n    <div class="form-field" data-reactid=".0.4">\n     <label data-reactid=".0.4.0" for="expiry">\n      Expiry Date:\n     </label>\n     <input data-reactid=".0.4.1" id="expiry" maxlength="7" name="expiry" placeholder="mm/yyyy" size="7" value=""/>\n    </div>\n    <div class="form-field" data-reactid=".0.5">\n     <label data-reactid=".0.5.0" for="ccv">\n      CCV:\n     </label>\n     <input data-reactid=".0.5.1" id="ccv" maxlength="3" name="ccv" placeholder="___" size="3" value=""/>\n    </div>\n    <div class="form-field" data-reactid=".0.6">\n     <label data-reactid=".0.6.0" for="plate">\n      License Plate:\n     </label>\n     <input data-reactid=".0.6.1" id="plate" maxlength="8" name="plate" placeholder="ABC 1234" size="8" value=""/>\n    </div>\n    <p data-reactid=".0.7">\n     <span data-reactid=".0.7.0">\n      Mask placeholder characters can be escaped with a leading\n     </span>\n     <code data-reactid=".0.7.1">\n      \\\n     </code>\n     <span data-reactid=".0.7.2">\n      to use them as static contents:\n     </span>\n    </p>\n    <div class="form-field" data-reactid=".0.8">\n     <label data-reactid=".0.8.0" for="escaped">\n      Escaped:\n     </label>\n     <input data-reactid=".0.8.1" id="escaped" maxlength="7" name="escaped" placeholder="__ * __" size="7" value=""/>\n    </div>\n    <p data-reactid=".0.9">\n     Leading static characters:\n    </p>\n    <div class="form-field" data-reactid=".0.a">\n     <label data-reactid=".0.a.0" for="leading">\n      Leading:\n     </label>\n     <input data-reactid=".0.a.1" id="leading" maxlength="12" name="leading" placeholder="(0) ___ ____" size="12" value=""/>\n    </div>\n    <p data-reactid=".0.b">\n     Changing patterns:\n    </p>\n    <div class="form-field" data-reactid=".0.c">\n     <label data-reactid=".0.c.0" for="changing">\n      Input:\n     </label>\n     <input data-reactid=".0.c.1" id="changing" maxlength="9" name="changing" placeholder="____ ____" size="9" value=""/>\n    </div>\n    <div class="form-field" data-reactid=".0.d">\n     <label data-reactid=".0.d.0" for="pattern">\n      Pattern:\n     </label>\n     <select data-reactid=".0.d.1">\n      <option data-reactid=".0.d.1.0" value="1111 1111">\n       1111 1111\n      </option>\n      <option data-reactid=".0.d.1.1" value="111 111">\n       111 111\n      </option>\n      <option data-reactid=".0.d.1.2" value="11 11">\n       11 11\n      </option>\n      <option data-reactid=".0.d.1.3" value="1 1">\n       1 1\n      </option>\n     </select>\n    </div>\n    <p data-reactid=".0.e">\n     Custom format character (W=[a-zA-Z0-9_], transformed to uppercase) and placeholder character (en space):\n    </p>\n    <div class="form-field" data-reactid=".0.f">\n     <label data-reactid=".0.f.0" for="custom">\n      Custom:\n     </label>\n     <input data-reactid=".0.f.1" id="custom" maxlength="10" name="custom" placeholder="1234-WW-12" size="11" value=""/>\n    </div>\n    <hr data-reactid=".0.g"/>\n    <pre data-reactid=".0.h"><code data-reactid=".0.h.0">{\n  "card": "",\n  "expiry": "",\n  "ccv": "",\n  "plate": "",\n  "escaped": "",\n  "leading": "",\n  "custom": "",\n  "changing": "",\n  "pattern": "1111 1111"\n}</code></pre>\n    <hr data-reactid=".0.i"/>\n    <footer data-reactid=".0.j">\n     <a data-reactid=".0.j.0" href="https://github.com/insin/react-maskedinput">\n      Source on GitHub\n     </a>\n    </footer>\n   </div>\n  </div>\n  <script type="text/jsx;harmony=true">\n   void function() { \'use strict\'\n\nvar PATTERNS = [\n  \'1111 1111\',\n  \'111 111\',\n  \'11 11\',\n  \'1 1\'\n]\n\nvar App = React.createClass({\n  getInitialState() {\n    return {\n      card: \'\',\n      expiry: \'\',\n      ccv: \'\',\n      plate: \'\',\n      escaped: \'\',\n      leading: \'\',\n      custom: \'\',\n      changing: \'\',\n      pattern: \'1111 1111\'\n    }\n  },\n\n  _onChange(e) {\n    var stateChange = {}\n    stateChange[e.target.name] = e.target.value\n    this.setState(stateChange)\n  },\n\n  _changePattern(e) {\n    this.setState({pattern: e.target.value})\n  },\n\n  render() {\n    return &lt;div className="App"&gt;\n      &lt;h1&gt;&lt;code&gt;&amp;lt;&lt;a href="https://github.com/insin/react-maskedinput"&gt;MaskedInput&lt;/a&gt;/&amp;gt;&lt;/code&gt;&lt;/h1&gt;\n      &lt;p className="lead"&gt;A React component which creates a masked &lt;code&gt;&amp;lt;input/&amp;gt;&lt;/code&gt;&lt;/p&gt;\n      &lt;div className="form-field"&gt;\n        &lt;label htmlFor="card"&gt;Card Number:&lt;/label&gt;\n        &lt;MaskedInput mask="1111 1111 1111 1111" name="card" id="card" size="20" onChange={this._onChange}/&gt;\n      &lt;/div&gt;\n      &lt;p&gt;Placeholders are automatically generated but can be overridden with your own:&lt;/p&gt;\n      &lt;div className="form-field"&gt;\n        &lt;label htmlFor="expiry"&gt;Expiry Date:&lt;/label&gt;\n        &lt;MaskedInput mask="11/1111" name="expiry" id="expiry" placeholder="mm/yyyy" onChange={this._onChange}/&gt;\n      &lt;/div&gt;\n      &lt;div className="form-field"&gt;\n        &lt;label htmlFor="ccv"&gt;CCV:&lt;/label&gt;\n        &lt;MaskedInput mask="111" name="ccv" id="ccv" onChange={this._onChange}/&gt;\n      &lt;/div&gt;\n      &lt;div className="form-field"&gt;\n        &lt;label htmlFor="plate"&gt;License Plate:&lt;/label&gt;\n        &lt;MaskedInput mask="AAA 1111" name="plate" id="plate" onChange={this._onChange} placeholder="ABC 1234"/&gt;\n      &lt;/div&gt;\n      &lt;p&gt;Mask placeholder characters can be escaped with a leading &lt;code&gt;\\&lt;/code&gt; to use them as static contents:&lt;/p&gt;\n      &lt;div className="form-field"&gt;\n        &lt;label htmlFor="escaped"&gt;Escaped:&lt;/label&gt;\n        &lt;MaskedInput mask="11 \\* 11" name="escaped" id="escaped" onChange={this._onChange}/&gt;\n      &lt;/div&gt;\n      &lt;p&gt;Leading static characters:&lt;/p&gt;\n      &lt;div className="form-field"&gt;\n        &lt;label htmlFor="leading"&gt;Leading:&lt;/label&gt;\n        &lt;MaskedInput mask="(0) 111 1111" name="leading" id="leading" onChange={this._onChange}/&gt;\n      &lt;/div&gt;\n      &lt;p&gt;Changing patterns:&lt;/p&gt;\n      &lt;div className="form-field"&gt;\n        &lt;label htmlFor="changing"&gt;Input:&lt;/label&gt;\n        &lt;MaskedInput mask={this.state.pattern} name="changing" id="changing" onChange={this._onChange}/&gt;\n      &lt;/div&gt;\n      &lt;div className="form-field"&gt;\n        &lt;label htmlFor="pattern"&gt;Pattern:&lt;/label&gt;\n        &lt;select onChange={this._changePattern}&gt;\n          {PATTERNS.map(pattern =&gt; &lt;option value={pattern}&gt;{pattern}&lt;/option&gt;)}\n        &lt;/select&gt;\n      &lt;/div&gt;\n      &lt;p&gt;Custom format character (W=[a-zA-Z0-9_], transformed to uppercase) and placeholder character (en space):&lt;/p&gt;\n      &lt;div className="form-field"&gt;\n        &lt;label htmlFor="custom"&gt;Custom:&lt;/label&gt;\n        &lt;CustomInput name="custom" id="custom" onChange={this._onChange}/&gt;\n      &lt;/div&gt;\n      &lt;hr/&gt;\n      &lt;pre&gt;&lt;code&gt;{JSON.stringify(this.state, null, 2)}&lt;/code&gt;&lt;/pre&gt;\n      &lt;hr/&gt;\n      &lt;footer&gt;&lt;a href="https://github.com/insin/react-maskedinput"&gt;Source on GitHub&lt;/a&gt;&lt;/footer&gt;\n    &lt;/div&gt;\n  }\n})\n\nvar CustomInput = React.createClass({\n  render() {\n    return &lt;MaskedInput\n      mask="1111-WW-11"\n      placeholder="1234-WW-12"\n      placeholderChar="\xe2\x80\x82"\n      size="11"\n      {...this.props}\n      formatCharacters={{\n        \'W\': {\n          validate(char) { return /\\w/.test(char ) },\n          transform(char) { return char.toUpperCase() }\n        }\n      }\n    }/&gt;\n  }\n})\n\nReactDOM.render(&lt;App/&gt;, document.getElementById(\'app\'))\n\n}()\n  </script>\n </body>\n</html>'b'<!DOCTYPE html>\n<html xmlns="http://www.w3.org/1999/xhtml">\n <head>\n  <meta charset="utf-8"/>\n  <title>\n   react-maskedinput Demo\n  </title>\n  <script src="http://fb.me/react-0.14.0.js">\n  </script>\n  <script src="http://fb.me/react-dom-0.14.0.js">\n  </script>\n  <script src="http://fb.me/JSXTransformer-0.13.3.js">\n  </script>\n  <script src="react-maskedinput.js">\n  </script>\n  <style>\n   body {\n    box-sizing: border-box;\n    width: 550px;\n    margin: 1em auto;\n    padding: 0 1em;\n    font-family: sans-serif;\n  }\n  code {\n    font-size: 1.3em;\n  }\n  h1 {\n    font-size: 3em;\n    text-align: center;\n    margin-top: 0;\n  }\n  p.lead {\n    font-weight: bold;\n    text-align: center;\n  }\n  hr {\n    margin-top: 20px;\n    margin-bottom: 20px;\n    border: 0;\n    border-top: 1px solid #222;\n  }\n  .form-field {\n    margin-bottom: .5em;\n  }\n  label {\n    display: inline-block;\n    width: 7em;\n    text-align: right;\n    margin-right: .75em;\n  }\n  input {\n    border: none;\n    font-size: 1.5em;\n  }\n  footer {\n    text-align: center;\n  }\n  </style>\n  <script>\n   void function() { \'use strict\'\n\nvar PATTERNS = [\n  \'1111 1111\',\n  \'111 111\',\n  \'11 11\',\n  \'1 1\'\n]\n\nvar App = React.createClass({displayName: "App",\n  getInitialState:function() {\n    return {\n      card: \'\',\n      expiry: \'\',\n      ccv: \'\',\n      plate: \'\',\n      escaped: \'\',\n      leading: \'\',\n      custom: \'\',\n      changing: \'\',\n      pattern: \'1111 1111\'\n    }\n  },\n\n  _onChange:function(e) {\n    var stateChange = {}\n    stateChange[e.target.name] = e.target.value\n    this.setState(stateChange)\n  },\n\n  _changePattern:function(e) {\n    this.setState({pattern: e.target.value})\n  },\n\n  render:function() {\n    return React.createElement("div", {className: "App"}, \n      React.createElement("h1", null, React.createElement("code", null, "&lt;", React.createElement("a", {href: "https://github.com/insin/react-maskedinput"}, "MaskedInput"), "/&gt;")), \n      React.createElement("p", {className: "lead"}, "A React component which creates a masked ", React.createElement("code", null, "&lt;input/&gt;")), \n      React.createElement("div", {className: "form-field"}, \n        React.createElement("label", {htmlFor: "card"}, "Card Number:"), \n        React.createElement(MaskedInput, {mask: "1111 1111 1111 1111", name: "card", id: "card", size: "20", onChange: this._onChange})\n      ), \n      React.createElement("p", null, "Placeholders are automatically generated but can be overridden with your own:"), \n      React.createElement("div", {className: "form-field"}, \n        React.createElement("label", {htmlFor: "expiry"}, "Expiry Date:"), \n        React.createElement(MaskedInput, {mask: "11/1111", name: "expiry", id: "expiry", placeholder: "mm/yyyy", onChange: this._onChange})\n      ), \n      React.createElement("div", {className: "form-field"}, \n        React.createElement("label", {htmlFor: "ccv"}, "CCV:"), \n        React.createElement(MaskedInput, {mask: "111", name: "ccv", id: "ccv", onChange: this._onChange})\n      ), \n      React.createElement("div", {className: "form-field"}, \n        React.createElement("label", {htmlFor: "plate"}, "License Plate:"), \n        React.createElement(MaskedInput, {mask: "AAA 1111", name: "plate", id: "plate", onChange: this._onChange, placeholder: "ABC 1234"})\n      ), \n      React.createElement("p", null, "Mask placeholder characters can be escaped with a leading ", React.createElement("code", null, "\\\\"), " to use them as static contents:"), \n      React.createElement("div", {className: "form-field"}, \n        React.createElement("label", {htmlFor: "escaped"}, "Escaped:"), \n        React.createElement(MaskedInput, {mask: "11 \\\\* 11", name: "escaped", id: "escaped", onChange: this._onChange})\n      ), \n      React.createElement("p", null, "Leading static characters:"), \n      React.createElement("div", {className: "form-field"}, \n        React.createElement("label", {htmlFor: "leading"}, "Leading:"), \n        React.createElement(MaskedInput, {mask: "(0) 111 1111", name: "leading", id: "leading", onChange: this._onChange})\n      ), \n      React.createElement("p", null, "Changing patterns:"), \n      React.createElement("div", {className: "form-field"}, \n        React.createElement("label", {htmlFor: "changing"}, "Input:"), \n        React.createElement(MaskedInput, {mask: this.state.pattern, name: "changing", id: "changing", onChange: this._onChange})\n      ), \n      React.createElement("div", {className: "form-field"}, \n        React.createElement("label", {htmlFor: "pattern"}, "Pattern:"), \n        React.createElement("select", {onChange: this._changePattern}, \n          PATTERNS.map(function(pattern)  {return React.createElement("option", {value: pattern}, pattern);})\n        )\n      ), \n      React.createElement("p", null, "Custom format character (W=[a-zA-Z0-9_], transformed to uppercase) and placeholder character (en space):"), \n      React.createElement("div", {className: "form-field"}, \n        React.createElement("label", {htmlFor: "custom"}, "Custom:"), \n        React.createElement(CustomInput, {name: "custom", id: "custom", onChange: this._onChange})\n      ), \n      React.createElement("hr", null), \n      React.createElement("pre", null, React.createElement("code", null, JSON.stringify(this.state, null, 2))), \n      React.createElement("hr", null), \n      React.createElement("footer", null, React.createElement("a", {href: "https://github.com/insin/react-maskedinput"}, "Source on GitHub"))\n    )\n  }\n})\n\nvar CustomInput = React.createClass({displayName: "CustomInput",\n  render:function() {\n    return React.createElement(MaskedInput, React.__spread({\n      mask: "1111-WW-11", \n      placeholder: "1234-WW-12", \n      placeholderChar: "\xe2\x80\x82", \n      size: "11"}, \n      this.props, \n      {formatCharacters: {\n        \'W\': {\n          validate:function(char) { return /\\w/.test(char ) },\n          transform:function(char) { return char.toUpperCase() }\n        }\n      }\n    }))\n  }\n})\n\nReactDOM.render(React.createElement(App, null), document.getElementById(\'app\'))\n\n}()\n//# sourceMappingURL=data:application/json;base64,\n  </script>\n </head>\n <body>\n  <div id="app">\n   <div class="App" data-reactid=".0">\n    <h1 data-reactid=".0.0">\n     <code data-reactid=".0.0.0">\n      <span data-reactid=".0.0.0.0">\n       &lt;\n      </span>\n      <a data-reactid=".0.0.0.1" href="https://github.com/insin/react-maskedinput">\n       MaskedInput\n      </a>\n      <span data-reactid=".0.0.0.2">\n       /&gt;\n      </span>\n     </code>\n    </h1>\n    <p class="lead" data-reactid=".0.1">\n     <span data-reactid=".0.1.0">\n      A React component which creates a masked\n     </span>\n     <code data-reactid=".0.1.1">\n      &lt;input/&gt;\n     </code>\n    </p>\n    <div class="form-field" data-reactid=".0.2">\n     <label data-reactid=".0.2.0" for="card">\n      Card Number:\n     </label>\n     <input data-reactid=".0.2.1" id="card" maxlength="19" name="card" placeholder="____ ____ ____ ____" size="20" value=""/>\n    </div>\n    <p data-reactid=".0.3">\n     Placeholders are automatically generated but can be overridden with your own:\n    </p>\n    <div class="form-field" data-reactid=".0.4">\n     <label data-reactid=".0.4.0" for="expiry">\n      Expiry Date:\n     </label>\n     <input data-reactid=".0.4.1" id="expiry" maxlength="7" name="expiry" placeholder="mm/yyyy" size="7" value=""/>\n    </div>\n    <div class="form-field" data-reactid=".0.5">\n     <label data-reactid=".0.5.0" for="ccv">\n      CCV:\n     </label>\n     <input data-reactid=".0.5.1" id="ccv" maxlength="3" name="ccv" placeholder="___" size="3" value=""/>\n    </div>\n    <div class="form-field" data-reactid=".0.6">\n     <label data-reactid=".0.6.0" for="plate">\n      License Plate:\n     </label>\n     <input data-reactid=".0.6.1" id="plate" maxlength="8" name="plate" placeholder="ABC 1234" size="8" value=""/>\n    </div>\n    <p data-reactid=".0.7">\n     <span data-reactid=".0.7.0">\n      Mask placeholder characters can be escaped with a leading\n     </span>\n     <code data-reactid=".0.7.1">\n      \\\n     </code>\n     <span data-reactid=".0.7.2">\n      to use them as static contents:\n     </span>\n    </p>\n    <div class="form-field" data-reactid=".0.8">\n     <label data-reactid=".0.8.0" for="escaped">\n      Escaped:\n     </label>\n     <input data-reactid=".0.8.1" id="escaped" maxlength="7" name="escaped" placeholder="__ * __" size="7" value=""/>\n    </div>\n    <p data-reactid=".0.9">\n     Leading static characters:\n    </p>\n    <div class="form-field" data-reactid=".0.a">\n     <label data-reactid=".0.a.0" for="leading">\n      Leading:\n     </label>\n     <input data-reactid=".0.a.1" id="leading" maxlength="12" name="leading" placeholder="(0) ___ ____" size="12" value=""/>\n    </div>\n    <p data-reactid=".0.b">\n     Changing patterns:\n    </p>\n    <div class="form-field" data-reactid=".0.c">\n     <label data-reactid=".0.c.0" for="changing">\n      Input:\n     </label>\n     <input data-reactid=".0.c.1" id="changing" maxlength="9" name="changing" placeholder="____ ____" size="9" value=""/>\n    </div>\n    <div class="form-field" data-reactid=".0.d">\n     <label data-reactid=".0.d.0" for="pattern">\n      Pattern:\n     </label>\n     <select data-reactid=".0.d.1">\n      <option data-reactid=".0.d.1.0" value="1111 1111">\n       1111 1111\n      </option>\n      <option data-reactid=".0.d.1.1" value="111 111">\n       111 111\n      </option>\n      <option data-reactid=".0.d.1.2" value="11 11">\n       11 11\n      </option>\n      <option data-reactid=".0.d.1.3" value="1 1">\n       1 1\n      </option>\n     </select>\n    </div>\n    <p data-reactid=".0.e">\n     Custom format character (W=[a-zA-Z0-9_], transformed to uppercase) and placeholder character (en space):\n    </p>\n    <div class="form-field" data-reactid=".0.f">\n     <label data-reactid=".0.f.0" for="custom">\n      Custom:\n     </label>\n     <input data-reactid=".0.f.1" id="custom" maxlength="10" name="custom" placeholder="1234-WW-12" size="11" value=""/>\n    </div>\n    <hr data-reactid=".0.g"/>\n    <pre data-reactid=".0.h"><code data-reactid=".0.h.0">{\n  "card": "",\n  "expiry": "",\n  "ccv": "",\n  "plate": "",\n  "escaped": "",\n  "leading": "",\n  "custom": "",\n  "changing": "",\n  "pattern": "1111 1111"\n}</code></pre>\n    <hr data-reactid=".0.i"/>\n    <footer data-reactid=".0.j">\n     <a data-reactid=".0.j.0" href="https://github.com/insin/react-maskedinput">\n      Source on GitHub\n     </a>\n    </footer>\n   </div>\n  </div>\n  <script type="text/jsx;harmony=true">\n   void function() { \'use strict\'\n\nvar PATTERNS = [\n  \'1111 1111\',\n  \'111 111\',\n  \'11 11\',\n  \'1 1\'\n]\n\nvar App = React.createClass({\n  getInitialState() {\n    return {\n      card: \'\',\n      expiry: \'\',\n      ccv: \'\',\n      plate: \'\',\n      escaped: \'\',\n      leading: \'\',\n      custom: \'\',\n      changing: \'\',\n      pattern: \'1111 1111\'\n    }\n  },\n\n  _onChange(e) {\n    var stateChange = {}\n    stateChange[e.target.name] = e.target.value\n    this.setState(stateChange)\n  },\n\n  _changePattern(e) {\n    this.setState({pattern: e.target.value})\n  },\n\n  render() {\n    return &lt;div className="App"&gt;\n      &lt;h1&gt;&lt;code&gt;&amp;lt;&lt;a href="https://github.com/insin/react-maskedinput"&gt;MaskedInput&lt;/a&gt;/&amp;gt;&lt;/code&gt;&lt;/h1&gt;\n      &lt;p className="lead"&gt;A React component which creates a masked &lt;code&gt;&amp;lt;input/&amp;gt;&lt;/code&gt;&lt;/p&gt;\n      &lt;div className="form-field"&gt;\n        &lt;label htmlFor="card"&gt;Card Number:&lt;/label&gt;\n        &lt;MaskedInput mask="1111 1111 1111 1111" name="card" id="card" size="20" onChange={this._onChange}/&gt;\n      &lt;/div&gt;\n      &lt;p&gt;Placeholders are automatically generated but can be overridden with your own:&lt;/p&gt;\n      &lt;div className="form-field"&gt;\n        &lt;label htmlFor="expiry"&gt;Expiry Date:&lt;/label&gt;\n        &lt;MaskedInput mask="11/1111" name="expiry" id="expiry" placeholder="mm/yyyy" onChange={this._onChange}/&gt;\n      &lt;/div&gt;\n      &lt;div className="form-field"&gt;\n        &lt;label htmlFor="ccv"&gt;CCV:&lt;/label&gt;\n        &lt;MaskedInput mask="111" name="ccv" id="ccv" onChange={this._onChange}/&gt;\n      &lt;/div&gt;\n      &lt;div className="form-field"&gt;\n        &lt;label htmlFor="plate"&gt;License Plate:&lt;/label&gt;\n        &lt;MaskedInput mask="AAA 1111" name="plate" id="plate" onChange={this._onChange} placeholder="ABC 1234"/&gt;\n      &lt;/div&gt;\n      &lt;p&gt;Mask placeholder characters can be escaped with a leading &lt;code&gt;\\&lt;/code&gt; to use them as static contents:&lt;/p&gt;\n      &lt;div className="form-field"&gt;\n        &lt;label htmlFor="escaped"&gt;Escaped:&lt;/label&gt;\n        &lt;MaskedInput mask="11 \\* 11" name="escaped" id="escaped" onChange={this._onChange}/&gt;\n      &lt;/div&gt;\n      &lt;p&gt;Leading static characters:&lt;/p&gt;\n      &lt;div className="form-field"&gt;\n        &lt;label htmlFor="leading"&gt;Leading:&lt;/label&gt;\n        &lt;MaskedInput mask="(0) 111 1111" name="leading" id="leading" onChange={this._onChange}/&gt;\n      &lt;/div&gt;\n      &lt;p&gt;Changing patterns:&lt;/p&gt;\n      &lt;div className="form-field"&gt;\n        &lt;label htmlFor="changing"&gt;Input:&lt;/label&gt;\n        &lt;MaskedInput mask={this.state.pattern} name="changing" id="changing" onChange={this._onChange}/&gt;\n      &lt;/div&gt;\n      &lt;div className="form-field"&gt;\n        &lt;label htmlFor="pattern"&gt;Pattern:&lt;/label&gt;\n        &lt;select onChange={this._changePattern}&gt;\n          {PATTERNS.map(pattern =&gt; &lt;option value={pattern}&gt;{pattern}&lt;/option&gt;)}\n        &lt;/select&gt;\n      &lt;/div&gt;\n      &lt;p&gt;Custom format character (W=[a-zA-Z0-9_], transformed to uppercase) and placeholder character (en space):&lt;/p&gt;\n      &lt;div className="form-field"&gt;\n        &lt;label htmlFor="custom"&gt;Custom:&lt;/label&gt;\n        &lt;CustomInput name="custom" id="custom" onChange={this._onChange}/&gt;\n      &lt;/div&gt;\n      &lt;hr/&gt;\n      &lt;pre&gt;&lt;code&gt;{JSON.stringify(this.state, null, 2)}&lt;/code&gt;&lt;/pre&gt;\n      &lt;hr/&gt;\n      &lt;footer&gt;&lt;a href="https://github.com/insin/react-maskedinput"&gt;Source on GitHub&lt;/a&gt;&lt;/footer&gt;\n    &lt;/div&gt;\n  }\n})\n\nvar CustomInput = React.createClass({\n  render() {\n    return &lt;MaskedInput\n      mask="1111-WW-11"\n      placeholder="1234-WW-12"\n      placeholderChar="\xe2\x80\x82"\n      size="11"\n      {...this.props}\n      formatCharacters={{\n        \'W\': {\n          validate(char) { return /\\w/.test(char ) },\n          transform(char) { return char.toUpperCase() }\n        }\n      }\n    }/&gt;\n  }\n})\n\nReactDOM.render(&lt;App/&gt;, document.getElementById(\'app\'))\n\n}()\n  </script>\n </body>\n</html>'