b'<!DOCTYPE html>\n<html xmlns="http://www.w3.org/1999/xhtml">\n <head>\n  <title>\n   Backbone.CollectionView\n  </title>\n  <meta charset="utf-8"/>\n  <link href="css/blackboard.css" rel="stylesheet"/>\n  <link href="css/app.css" rel="stylesheet"/>\n  <link href="http://fonts.googleapis.com/css?family=PT+Sans" rel="stylesheet" type="text/css"/>\n </head>\n <body>\n  <header>\n   <h1>\n    Backbone.CollectionView\n   </h1>\n   <div class="gh-icon-wrapper">\n    <a href="https://github.com/rotundasoftware/backbone.collectionView">\n     <img class="gh-icon gh-icon-black" src="images/ghub-black.png"/>\n     <img class="gh-icon gh-icon-blue" src="images/ghub-blue.png"/>\n    </a>\n   </div>\n  </header>\n  <div class="content">\n   <ul class="nav collection-list selectable" id="example-navigation" tabindex="0">\n    <li data-model-cid="c1">\n     <div>\n      Single Selection\n     </div>\n    </li>\n    <li data-model-cid="c2">\n     <div>\n      Multiple Selection\n     </div>\n    </li>\n    <li data-model-cid="c3">\n     <div>\n      Tables\n     </div>\n    </li>\n    <li data-model-cid="c4">\n     <div>\n      Sorting\n     </div>\n    </li>\n    <li data-model-cid="c5">\n     <div>\n      Empty list caption\n     </div>\n    </li>\n    <li data-model-cid="c6">\n     <div>\n      Events\n     </div>\n    </li>\n    <li data-model-cid="c7">\n     <div>\n      Filters\n     </div>\n    </li>\n   </ul>\n   <div class="example-wrapper" style="margin-bottom: 306px;">\n    <div class="example-container">\n     <p class="intro-text">\n      Easily render\n      <a href="http://backbonejs.org/">\n       backbone.js\n      </a>\n      collections. In addition managing model views, this class supports automatic selection of models in response to clicks, and rearranging models (and reordering the underlying collection) via drag and drop. Get and set selected models through\n      <a href="https://github.com/rotundasoftware/backbone.collectionView/#methods-and-properties-reference">\n       a dead simple API\n      </a>\n      .\n     </p>\n     <a href="https://github.com/rotundasoftware/backbone.collectionView/blob/master/zips/Backbone.CollectionView.zip?raw=true">\n      <button class="button-big button-orange">\n       Download Source\n      </button>\n     </a>\n     <a href="https://github.com/rotundasoftware/backbone.collectionView">\n      <button class="button-big button-blue">\n       GitHub Repo &amp; Docs\n      </button>\n     </a>\n    </div>\n    <div class="example-container">\n     <h2>\n      Single Selection\n     </h2>\n     <div class="demo-container">\n      <p>\n       Click an item in the list to select it.\n      </p>\n      <ul class="flat-border-list collection-list selectable" id="demoSingleSelectionList" tabindex="0">\n       <li data-model-cid="c17">\n        <div>\n         Sherlock Holmes\n        </div>\n       </li>\n       <li data-model-cid="c18">\n        <div>\n         John Watson\n        </div>\n       </li>\n       <li data-model-cid="c19">\n        <div>\n         Mycroft Holmes\n        </div>\n       </li>\n      </ul>\n     </div>\n     <div class="code-container">\n      <ul class="tab-list">\n       <li class="js-code current">\n        JavaScript\n       </li>\n       <li class="css-code">\n        CSS\n       </li>\n      </ul>\n      <div class="code-wrapper" id="code-text-1">\n       <pre class="js-code visible-code"><code class="rainbow" data-language="javascript"><span class="keyword">var</span> collectionView <span class="keyword operator">=</span> <span class="keyword">new</span> <span class="entity function">Backbone.CollectionView</span>( {\n  el :<span class="selector"> $</span>( <span class="string">"ul#demoSingleSelectionList"</span> ),\n  selectable : <span class="constant language">true</span>,\n  collection : employeeCollection,\n  modelView : EmployeeView\n} );</code></pre>\n       <pre class="css-code"><code class="rainbow" data-language="css"><span class="entity name tag">ul</span><span class="entity name class">.collection-list</span> {\n  <span class="support css-property">margin</span>: <span class="constant numeric">0</span>;\n  <span class="support css-property">padding</span>: <span class="constant numeric">0</span>;\n  <span class="support css-property">list-style-type</span>: <span class="support css-value">none</span>;\n  <span class="support css-property">outline</span>: <span class="support css-value">none</span>;\n  <span class="support css-property">cursor</span>: <span class="support css-value">pointer</span>;\n}\n\n<span class="entity name tag">ul</span><span class="entity name class">.collection-list</span> <span class="entity name tag">li</span> {\n  <span class="support css-property">margin</span>: <span class="constant numeric">7</span><span class="keyword unit">px</span>;\n  <span class="support css-property">padding</span>: <span class="constant numeric">10</span><span class="keyword unit">px</span>;\n  <span class="support css-property">border</span>: <span class="constant numeric">1</span><span class="keyword unit">px</span> solid <span class="constant hex-color">#AAA</span>;\n  <span class="support css-property">border-radius</span>: <span class="constant numeric">4</span><span class="keyword unit">px</span>;   <span class="comment">/* may need vendor varients */</span>\n  <span class="support css-property">background</span>: <span class="constant hex-color">#FAFAFA</span>;\n}\n\n<span class="entity name tag">ul</span><span class="entity name class">.collection-list</span> <span class="entity name tag">li</span><span class="entity name class">.selected</span> {\n  <span class="support css-property">background</span>: <span class="constant hex-color">#678be4</span>;\n  <span class="support css-property">border</span>: <span class="constant numeric">1</span><span class="keyword unit">px</span> solid <span class="constant hex-color">#2659d9</span>;\n  <span class="support css-property">color</span>: <span class="support css-value">white</span>;\n}\n</code></pre>\n      </div>\n     </div>\n    </div>\n    <div class="example-container">\n     <h2>\n      Multiple Selection\n     </h2>\n     <div class="demo-container">\n      <p>\n       Click and hold Command, Control (Windows) or Shift.\n      </p>\n      <ul class="light-flat-list collection-list selectable" id="demoMultipleSelectionList" tabindex="0">\n       <li data-model-cid="c25">\n        <div>\n         Sherlock Holmes\n        </div>\n       </li>\n       <li data-model-cid="c26">\n        <div>\n         John Watson\n        </div>\n       </li>\n       <li data-model-cid="c27">\n        <div>\n         Mycroft Holmes\n        </div>\n       </li>\n      </ul>\n     </div>\n     <div class="code-container">\n      <ul class="tab-list">\n       <li class="js-code current">\n        JavaScript\n       </li>\n       <li class="css-code">\n        CSS\n       </li>\n      </ul>\n      <div class="code-wrapper" id="code-text-2">\n       <pre class="js-code visible-code"><code class="rainbow" data-language="javascript"><span class="keyword">var</span> collectionView <span class="keyword operator">=</span> <span class="keyword">new</span> <span class="entity function">Backbone.CollectionView</span>( {\n  el :<span class="selector"> $</span>( <span class="string">"ul#demoMultipleSelectionList"</span> ),\n  selectable : <span class="constant language">true</span>,\n  selectMultiple : <span class="constant language">true</span>,\n  collection : employeeCollection,\n  modelView : EmployeeView\n} );</code></pre>\n       <pre class="css-code"><code class="rainbow" data-language="css"><span class="entity name tag">ul</span><span class="entity name class">.collection-list</span> {\n  <span class="support css-property">margin</span>: <span class="constant numeric">0</span>;\n  <span class="support css-property">padding</span>: <span class="constant numeric">0</span>;\n  <span class="support css-property">list-style-type</span>: <span class="support css-value">none</span>;\n  <span class="support css-property">outline</span>: <span class="support css-value">none</span>;\n  <span class="support css-property">cursor</span>: <span class="support css-value">pointer</span>;\n  <span class="support css-property">box-shadow</span>: <span class="constant numeric">0</span> <span class="constant numeric">1</span><span class="keyword unit">px</span> <span class="constant numeric">3</span><span class="keyword unit">px</span> <span class="constant numeric">0</span> rgba(<span class="constant numeric">0</span>, <span class="constant numeric">0</span>, <span class="constant numeric">0</span>, <span class="constant numeric">0</span>.<span class="constant numeric">33</span>);   <span class="comment">/* may need vendor varients */</span>\n  <span class="support css-property">font-family</span>: <span class="string">"Helvetica Neue"</span>, <span class="support css-value">Helvetica</span>, <span class="support css-value">arial</span>;\n}\n\n<span class="entity name tag">ul</span><span class="entity name class">.collection-list</span> <span class="entity name tag">li</span> {\n  <span class="support css-property">padding</span>: <span class="constant numeric">10</span><span class="keyword unit">px</span>;\n  <span class="support css-property">border-bottom</span>: <span class="constant numeric">1</span><span class="keyword unit">px</span> solid <span class="constant hex-color">#E6E6E6</span>;\n  <span class="support css-property">background</span>: <span class="constant hex-color">#F7F7F7</span>;\n}\n\n<span class="entity name tag">ul</span><span class="entity name class">.collection-list</span> <span class="entity name tag">li</span><span class="entity name class">.selected</span> {\n  <span class="support css-property">color</span>: <span class="support css-value">white</span>;\n  <span class="support css-property">background</span>: <span class="constant hex-color">#678BE4</span>;\n}\n</code></pre>\n      </div>\n     </div>\n    </div>\n    <div class="example-container">\n     <h2>\n      Tables\n     </h2>\n     <div class="demo-container">\n      <p>\n       Collection views can also be rendered as tables.\n      </p>\n      <table class="example-table collection-list selectable" id="demoTables" tabindex="0">\n       <thead>\n        <tr>\n         <td>\n          First Name\n         </td>\n         <td>\n          Last Name\n         </td>\n        </tr>\n       </thead>\n       <tbody>\n        <tr data-model-cid="c33">\n         <td>\n          Sherlock\n         </td>\n         <td>\n          Holmes\n         </td>\n        </tr>\n        <tr data-model-cid="c34">\n         <td>\n          John\n         </td>\n         <td>\n          Watson\n         </td>\n        </tr>\n        <tr data-model-cid="c35">\n         <td>\n          Mycroft\n         </td>\n         <td>\n          Holmes\n         </td>\n        </tr>\n       </tbody>\n      </table>\n     </div>\n     <div class="code-container">\n      <ul class="tab-list">\n       <li class="js-code current">\n        JavaScript\n       </li>\n       <li class="css-code">\n        CSS\n       </li>\n      </ul>\n      <div class="code-wrapper" id="code-text-3">\n       <pre class="js-code visible-code"><code class="rainbow" data-language="javascript"><span class="keyword">var</span> collectionView <span class="keyword operator">=</span> <span class="keyword">new</span> <span class="entity function">Backbone.CollectionView</span>( {\n  el :<span class="selector"> $</span>( <span class="string">"table#demoTables"</span> ),\n  selectable : <span class="constant language">true</span>,\n  collection : employeeCollection,\n  modelView : EmployeeView\n} );</code></pre>\n       <pre class="css-code"><code class="rainbow" data-language="css"><span class="entity name tag">table</span><span class="entity name class">.collection-list</span> {\n  <span class="support css-property">border-collapse</span>: <span class="support css-value">collapse</span>;\n  <span class="support css-property">width</span>: <span class="constant numeric">350</span><span class="keyword unit">px</span>;\n  <span class="support css-property">border</span>: <span class="constant numeric">1</span><span class="keyword unit">px</span> solid <span class="constant hex-color">#AAA</span>;\n  <span class="support css-property">font-family</span>: <span class="string">"Helvetica Neue"</span>, <span class="support css-value">Helvetica</span>, <span class="support css-value">arial</span>;\n  <span class="support css-property">cursor</span>: <span class="support css-value">pointer</span>;\n}\n\n<span class="entity name tag">table</span><span class="entity name class">.collection-list</span> <span class="entity name tag">tr</span><span class="entity name pseudo">:nth-child</span>(<span class="entity name tag">even</span>) {\n  <span class="support css-property">background</span>: <span class="constant hex-color">#EBF0FF</span>;\n}\n\n<span class="entity name tag">table</span><span class="entity name class">.collection-list</span> <span class="entity name tag">tr</span><span class="entity name class">.selected</span> {\n  <span class="support css-property">color</span>: <span class="constant hex-color">#FFF</span>;\n  <span class="support css-property">background</span>: <span class="constant hex-color">#678BE4</span>;\n}\n\n<span class="entity name tag">table</span><span class="entity name class">.collection-list</span> <span class="entity name tag">tr</span> <span class="entity name tag">td</span> {\n  <span class="support css-property">padding</span>: <span class="constant numeric">10</span><span class="keyword unit">px</span> <span class="constant numeric">20</span><span class="keyword unit">px</span>;\n  <span class="support css-property">border-right</span>: <span class="constant numeric">1</span><span class="keyword unit">px</span> solid <span class="constant hex-color">#AAA</span>;\n}\n</code></pre>\n      </div>\n     </div>\n    </div>\n    <div class="example-container">\n     <h2>\n      Sorting\n     </h2>\n     <div class="demo-container">\n      <p>\n       Click and drag.\n      </p>\n      <button class="button-small button-blue" id="showModelSorting">\n       See the collection contents\n      </button>\n      <ul class="gradient-list collection-list selectable ui-sortable" id="demoSortable" tabindex="0">\n       <li data-model-cid="c41">\n        <div>\n         Sherlock Holmes\n        </div>\n       </li>\n       <li data-model-cid="c42">\n        <div>\n         John Watson\n        </div>\n       </li>\n       <li data-model-cid="c43">\n        <div>\n         Mycroft Holmes\n        </div>\n       </li>\n      </ul>\n     </div>\n     <div class="code-container">\n      <ul class="tab-list">\n       <li class="js-code current">\n        JavaScript\n       </li>\n       <li class="css-code">\n        CSS\n       </li>\n      </ul>\n      <div class="code-wrapper" id="code-text-4">\n       <pre class="js-code visible-code"><code class="rainbow" data-language="javascript"><span class="keyword">var</span> collectionView <span class="keyword operator">=</span> <span class="keyword">new</span> <span class="entity function">Backbone.CollectionView</span>( {\n  el :<span class="selector"> $</span>( <span class="string">"ul#demoSortableList"</span> ),\n  selectable : <span class="constant language">true</span>,\n  sortable : <span class="constant language">true</span>,\n  collection : employeeCollection,\n  modelView : EmployeeView\n} );</code></pre>\n       <pre class="css-code"><code class="rainbow" data-language="css"><span class="entity name tag">ul</span><span class="entity name class">.collection-list</span> {\n  <span class="support css-property">margin</span>: <span class="constant numeric">0</span>;\n  <span class="support css-property">padding</span>: <span class="constant numeric">0</span>;\n  <span class="support css-property">list-style-type</span>: <span class="support css-value">none</span>;\n  <span class="support css-property">outline</span>: <span class="support css-value">none</span>;\n  <span class="support css-property">cursor</span>: <span class="support css-value">pointer</span>;\n}\n\n<span class="entity name tag">ul</span><span class="entity name class">.collection-list</span> <span class="entity name tag">li</span> {\n  <span class="support css-property">margin</span>: <span class="constant numeric">10</span><span class="keyword unit">px</span> <span class="constant numeric">0</span>;\n  <span class="support css-property">padding</span>: <span class="constant numeric">10</span><span class="keyword unit">px</span>;\n  <span class="support css-property">background</span>: <span class="support vendor-prefix">-webkit-</span><span class="support css-value">gradient</span>(linear, <span class="constant numeric">50</span><span class="keyword unit">%</span> <span class="constant numeric">0</span><span class="keyword unit">%</span>, <span class="constant numeric">50</span><span class="keyword unit">%</span> <span class="constant numeric">100</span><span class="keyword unit">%</span>, <span class="support css-value">color-stop</span>(<span class="constant numeric">0</span><span class="keyword unit">%</span>, <span class="constant hex-color">#F7F7F7</span>), <span class="support css-value">color-stop</span>(<span class="constant numeric">100</span><span class="keyword unit">%</span>, <span class="constant hex-color">#E8E8E8</span>));\n  <span class="support css-property">background</span>: <span class="support vendor-prefix">-webkit-</span><span class="support css-value">linear-gradient</span>(<span class="constant hex-color">#F7F7F7</span>, <span class="constant hex-color">#E8E8E8</span>);\n  <span class="support css-property">background</span>:    <span class="support vendor-prefix">-moz-</span><span class="support css-value">linear-gradient</span>(<span class="constant hex-color">#F7F7F7</span>, <span class="constant hex-color">#E8E8E8</span>);\n  <span class="support css-property">background</span>:      <span class="support vendor-prefix">-o-</span><span class="support css-value">linear-gradient</span>(<span class="constant hex-color">#F7F7F7</span>, <span class="constant hex-color">#E8E8E8</span>);\n  <span class="support css-property">background</span>:         <span class="support css-value">linear-gradient</span>(<span class="constant hex-color">#F7F7F7</span>, <span class="constant hex-color">#E8E8E8</span>);\n  <span class="support css-property">border</span>: <span class="constant numeric">1</span><span class="keyword unit">px</span> solid <span class="constant hex-color">#C9C9C9</span>;\n  <span class="support css-property">background</span>: <span class="constant hex-color">#F0F0F0</span>;\n  <span class="support css-property">border-radius</span>: <span class="constant numeric">4</span><span class="keyword unit">px</span>;   <span class="comment">/* may need vendor varients */</span>\n  <span class="support css-property">box-shadow</span>: <span class="constant numeric">0</span> <span class="constant numeric">1</span><span class="keyword unit">px</span> <span class="constant numeric">3</span><span class="keyword unit">px</span> rgba(<span class="constant numeric">0</span>, <span class="constant numeric">0</span>, <span class="constant numeric">0</span>, <span class="constant numeric">0</span>.<span class="constant numeric">14</span>);   <span class="comment">/* may need vendor varients */</span>\n  <span class="support css-property">text-shadow</span>: <span class="constant numeric">0</span> <span class="constant numeric">1</span><span class="keyword unit">px</span> <span class="constant numeric">0</span> rgba(<span class="constant numeric">255</span>, <span class="constant numeric">255</span>, <span class="constant numeric">255</span>, <span class="constant numeric">0</span>.<span class="constant numeric">8</span>);\n}\n\n<span class="entity name tag">ul</span><span class="entity name class">.collection-list</span> <span class="entity name tag">li</span><span class="entity name class">.selected</span> {\n  <span class="support css-property">border</span>: <span class="constant numeric">1</span><span class="keyword unit">px</span> solid <span class="constant hex-color">#2659D9</span>;\n  <span class="support css-property">color</span>: <span class="constant hex-color">#FFF</span>;\n  <span class="support css-property">text-shadow</span>: <span class="constant numeric">0</span> -<span class="constant numeric">1</span><span class="keyword unit">px</span> <span class="constant numeric">0</span> rgba(<span class="constant numeric">0</span>, <span class="constant numeric">0</span>, <span class="constant numeric">0</span>, <span class="constant numeric">0</span>.<span class="constant numeric">8</span>);\n  <span class="support css-property">background</span>: <span class="constant hex-color">#678BE4</span>;\n}</code></pre>\n      </div>\n     </div>\n    </div>\n    <div class="example-container">\n     <h2>\n      Empty list caption\n     </h2>\n     <div class="demo-container">\n      <p>\n       Display customized text when the list is empty.\n      </p>\n      <button class="button-small button-green" id="demoAddToCollectionButton">\n       Add new item\n      </button>\n      <button class="button-small button-right button-red" id="demoRemoveFromCollectionButton">\n       Remove selected item(s)\n      </button>\n      <p>\n      </p>\n      <ul class="collection-list selectable ui-sortable" id="demoEmptyListCaption" tabindex="0">\n       <li class="not-sortable" style="background: transparent; border: none; box-shadow: none;">\n        <var class="empty-list-caption">\n         There are no items in this list.\n        </var>\n       </li>\n      </ul>\n     </div>\n     <div class="code-container">\n      <ul class="tab-list">\n       <li class="js-code current">\n        JavaScript\n       </li>\n       <li class="css-code">\n        CSS\n       </li>\n      </ul>\n      <div class="code-wrapper" id="code-text-5">\n       <pre class="js-code visible-code"><code class="rainbow" data-language="javascript"> <span class="keyword">var</span> collectionView <span class="keyword operator">=</span> <span class="keyword">new</span> <span class="entity function">Backbone.CollectionView</span>( {\n  el :<span class="selector"> $</span>( <span class="string">"ul#demoEmptyListCaption"</span> ),\n  selectable : <span class="constant language">true</span>,\n  selectableMultiple : <span class="constant language">true</span>,\n  sortable: <span class="constant language">true</span>,\n  emptyListCaption : <span class="string">"There are no items in this list."</span>,\n  collection : <span class="keyword">new</span> <span class="entity function">Employees</span>(),\n  modelView : EmployeeView\n} );\n<span class="selector">\n$</span>( <span class="string">"#demoRemoveFromCollectionButton"</span> ).<span class="function call">click</span>( <span class="keyword">function</span>() {\n  <span class="keyword">var</span> selectedModels <span class="keyword operator">=</span> collectionView.<span class="function call">getSelectedModels</span>();\n  collectionView.collection.<span class="function call">remove</span>( selectedModels );\n} );\n<span class="selector">\n$</span>( <span class="string">"#demoAddToCollectionButton"</span> ).<span class="function call">click</span>( <span class="keyword">function</span>() {\n  collectionView.collection.<span class="function call">add</span>( {\n    firstName : <span class="string">"Super"</span>, lastName : <span class="string">"Sleuth"</span>\n  } );\n} );</code></pre>\n       <pre class="css-code"><code class="rainbow" data-language="css"><span class="entity name tag">ul</span><span class="entity name class">.collection-list</span> {\n  <span class="support css-property">min-height</span>: <span class="constant numeric">150</span><span class="keyword unit">px</span>;\n  <span class="support css-property">margin</span>: <span class="constant numeric">0</span>;\n  <span class="support css-property">border</span>: <span class="constant numeric">1</span><span class="keyword unit">px</span> solid <span class="constant hex-color">#A0A0A0</span>;\n  <span class="support css-property">padding</span>: <span class="constant numeric">0</span><span class="keyword unit">px</span> <span class="constant numeric">10</span><span class="keyword unit">px</span>;\n  <span class="support css-property">background</span>: <span class="constant hex-color">#FAFAFA</span>;\n  <span class="support css-property">list-style-type</span>: <span class="support css-value">none</span>;\n  <span class="support css-property">outline</span>: <span class="support css-value">none</span>;\n  <span class="support css-property">cursor</span>: <span class="support css-value">pointer</span>;\n}\n\n<span class="entity name tag">ul</span><span class="entity name class">.collection-list</span> <span class="entity name tag">li</span> {\n  <span class="support css-property">margin</span>: <span class="constant numeric">10</span><span class="keyword unit">px</span> <span class="constant numeric">0</span>;\n  <span class="support css-property">padding</span>: <span class="constant numeric">10</span><span class="keyword unit">px</span>;\n  <span class="support css-property">background</span>: <span class="support vendor-prefix">-webkit-</span><span class="support css-value">gradient</span>(linear, <span class="constant numeric">50</span><span class="keyword unit">%</span> <span class="constant numeric">0</span><span class="keyword unit">%</span>, <span class="constant numeric">50</span><span class="keyword unit">%</span> <span class="constant numeric">100</span><span class="keyword unit">%</span>, <span class="support css-value">color-stop</span>(<span class="constant numeric">0</span><span class="keyword unit">%</span>, <span class="constant hex-color">#F7F7F7</span>), <span class="support css-value">color-stop</span>(<span class="constant numeric">100</span><span class="keyword unit">%</span>, <span class="constant hex-color">#E8E8E8</span>));\n  <span class="support css-property">background</span>: <span class="support vendor-prefix">-webkit-</span><span class="support css-value">linear-gradient</span>(<span class="constant hex-color">#F7F7F7</span>, <span class="constant hex-color">#E8E8E8</span>);\n  <span class="support css-property">background</span>:    <span class="support vendor-prefix">-moz-</span><span class="support css-value">linear-gradient</span>(<span class="constant hex-color">#F7F7F7</span>, <span class="constant hex-color">#E8E8E8</span>);\n  <span class="support css-property">background</span>:      <span class="support vendor-prefix">-o-</span><span class="support css-value">linear-gradient</span>(<span class="constant hex-color">#F7F7F7</span>, <span class="constant hex-color">#E8E8E8</span>);\n  <span class="support css-property">background</span>:         <span class="support css-value">linear-gradient</span>(<span class="constant hex-color">#F7F7F7</span>, <span class="constant hex-color">#E8E8E8</span>);\n  <span class="support css-property">border</span>: <span class="constant numeric">1</span><span class="keyword unit">px</span> solid <span class="constant hex-color">#C9C9C9</span>;\n  <span class="support css-property">background</span>: <span class="constant hex-color">#F0F0F0</span>;\n  <span class="support css-property">border-radius</span>: <span class="constant numeric">4</span><span class="keyword unit">px</span>;   <span class="comment">/* may need vendor varients */</span>\n  <span class="support css-property">box-shadow</span>: <span class="constant numeric">0</span> <span class="constant numeric">1</span><span class="keyword unit">px</span> <span class="constant numeric">3</span><span class="keyword unit">px</span> rgba(<span class="constant numeric">0</span>, <span class="constant numeric">0</span>, <span class="constant numeric">0</span>, <span class="constant numeric">0</span>.<span class="constant numeric">14</span>);   <span class="comment">/* may need vendor varients */</span>\n  <span class="support css-property">text-shadow</span>: <span class="constant numeric">0</span> <span class="constant numeric">1</span><span class="keyword unit">px</span> <span class="constant numeric">0</span> rgba(<span class="constant numeric">255</span>, <span class="constant numeric">255</span>, <span class="constant numeric">255</span>, <span class="constant numeric">0</span>.<span class="constant numeric">8</span>);\n}\n\n<span class="entity name tag">ul</span><span class="entity name class">.collection-list</span> <span class="entity name tag">li</span><span class="entity name class">.selected</span> {\n  <span class="support css-property">border</span>: <span class="constant numeric">1</span><span class="keyword unit">px</span> solid <span class="constant hex-color">#2659D9</span>;\n  <span class="support css-property">color</span>: <span class="constant hex-color">#FFF</span>;\n  <span class="support css-property">text-shadow</span>: <span class="constant numeric">0</span> -<span class="constant numeric">1</span><span class="keyword unit">px</span> <span class="constant numeric">0</span> rgba(<span class="constant numeric">0</span>, <span class="constant numeric">0</span>, <span class="constant numeric">0</span>, <span class="constant numeric">0</span>.<span class="constant numeric">8</span>);\n  <span class="support css-property">background</span>: <span class="constant hex-color">#678BE4</span>;\n}\n\n<span class="entity name tag">ul</span><span class="entity name class">.collection-list</span> <span class="entity name tag">var</span><span class="entity name class">.empty-list-caption</span> {\n  <span class="support css-property">color</span>: <span class="constant hex-color">#A0A0A0</span>;\n  <span class="support css-property">padding</span>: <span class="constant numeric">30</span><span class="keyword unit">px</span>;\n  <span class="support css-property">display</span>: <span class="support css-value">block</span>;\n  <span class="support css-property">text-align</span>: <span class="support css-value">center</span>;\n  <span class="support css-property">font-style</span>: <span class="support css-value">normal</span>;\n  <span class="support css-property">line-height</span>: <span class="constant numeric">1</span>.<span class="constant numeric">45</span>;\n}\n</code></pre>\n      </div>\n     </div>\n    </div>\n    <div class="example-container">\n     <h2>\n      Events\n     </h2>\n     <div class="demo-container">\n      <p>\n       Easily hook into events.\n      </p>\n      <ul class="flat-border-list collection-list selectable" id="demoEvents" tabindex="0">\n       <li data-model-cid="c51">\n        <div>\n         Sherlock Holmes\n        </div>\n       </li>\n       <li data-model-cid="c52">\n        <div>\n         John Watson\n        </div>\n       </li>\n       <li data-model-cid="c53">\n        <div>\n         Mycroft Holmes\n        </div>\n       </li>\n      </ul>\n      <p>\n      </p>\n      <div id="demoEventsCaption">\n      </div>\n     </div>\n     <div class="code-container">\n      <ul class="tab-list">\n       <li class="js-code current">\n        JavaScript\n       </li>\n       <li class="css-code">\n        CSS\n       </li>\n      </ul>\n      <div class="code-wrapper" id="code-text-6">\n       <pre class="js-code visible-code"><code class="rainbow" data-language="javascript"><span class="keyword">var</span> collectionView <span class="keyword operator">=</span> <span class="keyword">new</span> <span class="entity function">Backbone.CollectionView</span>( {\n  el :<span class="selector"> $</span>( <span class="string">"ul#demoEvents"</span> ),\n  selectable : <span class="constant language">true</span>,\n  collection : employeeCollection,\n  modelView : EmployeeView\n} );\n\ncollectionView.<span class="function call">on</span>( <span class="string">"selectionChanged"</span>, <span class="keyword">function</span>() {\n  <span class="keyword">var</span> selectedModel <span class="keyword operator">=</span> collectionView.<span class="function call">getSelectedModel</span>();\n <span class="selector"> $</span>( <span class="string">"#demoEventsCaption"</span> ).<span class="function call">text</span>(\n    <span class="string">"The newly selected model is: "</span> <span class="keyword operator">+</span>\n    selectedModel.<span class="function call">get</span>( <span class="string">"firstName"</span> ) <span class="keyword operator">+</span> <span class="string">" "</span> <span class="keyword operator">+</span>\n    selectedModel.<span class="function call">get</span>( <span class="string">"lastName"</span> ) );\n} );\n</code></pre>\n       <pre class="css-code"><code class="rainbow" data-language="css"><span class="entity name tag">ul</span><span class="entity name class">.collection-list</span> {\n  <span class="support css-property">background</span>: <span class="constant hex-color">#FDFDFD</span>;\n  <span class="support css-property">font-family</span>: <span class="string">"lucida grande"</span>,<span class="support css-value">tahoma</span>,<span class="support css-value">sans-serif</span>;\n  <span class="support css-property">border</span>: <span class="constant numeric">1</span><span class="keyword unit">px</span> solid <span class="constant hex-color">#78A9CE</span>;\n  <span class="support css-property">margin</span>: <span class="constant numeric">2</span><span class="keyword unit">px</span> <span class="constant numeric">0</span><span class="keyword unit">px</span> <span class="constant numeric">2</span><span class="keyword unit">px</span> <span class="constant numeric">0</span><span class="keyword unit">px</span>;\n  <span class="support css-property">border-radius</span>: <span class="constant numeric">4</span><span class="keyword unit">px</span>;   <span class="comment">/* may need vendor varients */</span>\n}\n\n<span class="entity name tag">ul</span><span class="entity name class">.collection-list</span> <span class="entity name tag">li</span> {\n  <span class="support css-property">padding</span>: <span class="constant numeric">6</span><span class="keyword unit">px</span>;\n}\n\n<span class="entity name tag">ul</span><span class="entity name class">.collection-list</span> <span class="entity name tag">li</span><span class="entity name class">.selected</span> {\n  <span class="support css-property">background</span>: <span class="constant hex-color">#9EADD0</span>;\n  <span class="support css-property">color</span>: <span class="support css-value">white</span>;\n}\n</code></pre>\n      </div>\n     </div>\n    </div>\n    <div class="example-container">\n     <h2>\n      Filters\n     </h2>\n     <div class="demo-container">\n      <p>\n       Specify which items are selectable, sortable, or visible.\n      </p>\n      <ul class="collection-list selectable" id="demoFilters" tabindex="0">\n       <li data-model-cid="c59">\n        <div>\n         Sherlock Holmes\n        </div>\n       </li>\n       <li class="not-selectable" data-model-cid="c60">\n        <div>\n         John Watson\n        </div>\n       </li>\n       <li data-model-cid="c61">\n        <div>\n         Mycroft Holmes\n        </div>\n       </li>\n      </ul>\n     </div>\n     <div class="code-container">\n      <ul class="tab-list">\n       <li class="js-code current">\n        JavaScript\n       </li>\n       <li class="css-code">\n        CSS\n       </li>\n      </ul>\n      <div class="code-wrapper" id="code-text-7">\n       <pre class="js-code visible-code"><code class="rainbow" data-language="javascript"><span class="keyword">var</span> collectionView <span class="keyword operator">=</span> <span class="keyword">new</span> <span class="entity function">Backbone.CollectionView</span>( {\n  el :<span class="selector"> $</span>( <span class="string">"ul#demoFilters"</span> ),\n  selectable : <span class="constant language">true</span>,\n  collection : employeeCollection,\n  modelView : EmployeeView,\n  selectableModelsFilter : <span class="keyword">function</span>( model ) {\n    <span class="keyword">return</span> model.<span class="function call">get</span>( <span class="string">"lastName"</span> ) <span class="keyword operator">=</span><span class="keyword operator">=</span><span class="keyword operator">=</span> <span class="string">"Holmes"</span>;\n  }\n} );</code></pre>\n       <pre class="css-code"><code class="rainbow" data-language="css"><span class="entity name tag">ul</span><span class="entity name class">.collection-list</span> {\n  <span class="support css-property">margin</span>: <span class="constant numeric">0</span>;\n  <span class="support css-property">padding</span>: <span class="constant numeric">0</span>;\n  <span class="support css-property">list-style-type</span>: <span class="support css-value">none</span>;\n  <span class="support css-property">outline</span>: <span class="support css-value">none</span>;\n  <span class="support css-property">cursor</span>: <span class="support css-value">pointer</span>;\n}\n\n<span class="entity name tag">ul</span><span class="entity name class">.collection-list</span> <span class="entity name tag">li</span> {\n  <span class="support css-property">margin</span>: <span class="constant numeric">7</span><span class="keyword unit">px</span>;\n  <span class="support css-property">padding</span>: <span class="constant numeric">10</span><span class="keyword unit">px</span>;\n  <span class="support css-property">border</span>: <span class="constant numeric">1</span><span class="keyword unit">px</span> solid <span class="constant hex-color">#AAA</span>;\n  <span class="support css-property">border-radius</span>: <span class="constant numeric">4</span><span class="keyword unit">px</span>;   <span class="comment">/* may need vendor varients */</span>\n  <span class="support css-property">background</span>: <span class="constant hex-color">#FAFAFA</span>;\n}\n\n<span class="entity name tag">ul</span><span class="entity name class">.collection-list</span> <span class="entity name tag">li</span><span class="entity name class">.selected</span> {\n  <span class="support css-property">background</span>: <span class="constant hex-color">#678be4</span>;\n  <span class="support css-property">border</span>: <span class="constant numeric">1</span><span class="keyword unit">px</span> solid <span class="constant hex-color">#2659d9</span>;\n  <span class="support css-property">color</span>: <span class="support css-value">white</span>;\n}\n\n<span class="entity name tag">ul</span><span class="entity name class">.collection-list</span> <span class="entity name tag">li</span><span class="entity name class">.not-selectable</span> {\n  <span class="support css-property">opacity</span>: .<span class="constant numeric">5</span>;\n}\n</code></pre>\n      </div>\n     </div>\n    </div>\n    <!--Underscore template for an employee view.  Used in a collection view rendered as a list.-->\n    <script id="example-template" type="text/html">\n     &lt;%= example %&gt;\n    </script>\n    <!--Underscore template for an employee view.  Used in a collection view rendered as a list.-->\n    <script id="employee-template" type="text/html">\n     &lt;%= firstName %&gt; &lt;%= lastName %&gt;\n    </script>\n    <!--Underscore template for an employee view.  Used in a collection view rendered as a table.-->\n    <script id="employee-template-for-table-list" type="text/html">\n     &lt;td&gt;&lt;%= firstName %&gt;&lt;/td&gt;&lt;td&gt;&lt;%= lastName %&gt;&lt;/td&gt;\n    </script>\n    <script src="lib/jquery-1.9.1.js" type="text/javascript">\n    </script>\n    <script src="lib/jquery-ui.js" type="text/javascript">\n    </script>\n    <script src="lib/underscore.js" type="text/javascript">\n    </script>\n    <script src="lib/backbone.js" type="text/javascript">\n    </script>\n    <script src="lib/backbone.babysitter.js" type="text/javascript">\n    </script>\n    <script src="lib/backbone.courier.js" type="text/javascript">\n    </script>\n    <script src="lib/backbone.collectionView.js" type="text/javascript">\n    </script>\n    <script src="js/app.js" type="text/javascript">\n    </script>\n    <script src="lib/rainbow-custom.min.js" type="text/javascript">\n    </script>\n   </div>\n  </div>\n </body>\n</html>'b'<!DOCTYPE html>\n<html xmlns="http://www.w3.org/1999/xhtml">\n <head>\n  <title>\n   Backbone.CollectionView\n  </title>\n  <meta charset="utf-8"/>\n  <link href="css/blackboard.css" rel="stylesheet"/>\n  <link href="css/app.css" rel="stylesheet"/>\n  <link href="http://fonts.googleapis.com/css?family=PT+Sans" rel="stylesheet" type="text/css"/>\n </head>\n <body>\n  <header>\n   <h1>\n    Backbone.CollectionView\n   </h1>\n   <div class="gh-icon-wrapper">\n    <a href="https://github.com/rotundasoftware/backbone.collectionView">\n     <img class="gh-icon gh-icon-black" src="images/ghub-black.png"/>\n     <img class="gh-icon gh-icon-blue" src="images/ghub-blue.png"/>\n    </a>\n   </div>\n  </header>\n  <div class="content">\n   <ul class="nav collection-list selectable" id="example-navigation" tabindex="0">\n    <li data-model-cid="c1">\n     <div>\n      Single Selection\n     </div>\n    </li>\n    <li data-model-cid="c2">\n     <div>\n      Multiple Selection\n     </div>\n    </li>\n    <li data-model-cid="c3">\n     <div>\n      Tables\n     </div>\n    </li>\n    <li data-model-cid="c4">\n     <div>\n      Sorting\n     </div>\n    </li>\n    <li data-model-cid="c5">\n     <div>\n      Empty list caption\n     </div>\n    </li>\n    <li data-model-cid="c6">\n     <div>\n      Events\n     </div>\n    </li>\n    <li data-model-cid="c7">\n     <div>\n      Filters\n     </div>\n    </li>\n   </ul>\n   <div class="example-wrapper" style="margin-bottom: 306px;">\n    <div class="example-container">\n     <p class="intro-text">\n      Easily render\n      <a href="http://backbonejs.org/">\n       backbone.js\n      </a>\n      collections. In addition managing model views, this class supports automatic selection of models in response to clicks, and rearranging models (and reordering the underlying collection) via drag and drop. Get and set selected models through\n      <a href="https://github.com/rotundasoftware/backbone.collectionView/#methods-and-properties-reference">\n       a dead simple API\n      </a>\n      .\n     </p>\n     <a href="https://github.com/rotundasoftware/backbone.collectionView/blob/master/zips/Backbone.CollectionView.zip?raw=true">\n      <button class="button-big button-orange">\n       Download Source\n      </button>\n     </a>\n     <a href="https://github.com/rotundasoftware/backbone.collectionView">\n      <button class="button-big button-blue">\n       GitHub Repo &amp; Docs\n      </button>\n     </a>\n    </div>\n    <div class="example-container">\n     <h2>\n      Single Selection\n     </h2>\n     <div class="demo-container">\n      <p>\n       Click an item in the list to select it.\n      </p>\n      <ul class="flat-border-list collection-list selectable" id="demoSingleSelectionList" tabindex="0">\n       <li data-model-cid="c17">\n        <div>\n         Sherlock Holmes\n        </div>\n       </li>\n       <li data-model-cid="c18">\n        <div>\n         John Watson\n        </div>\n       </li>\n       <li data-model-cid="c19">\n        <div>\n         Mycroft Holmes\n        </div>\n       </li>\n      </ul>\n     </div>\n     <div class="code-container">\n      <ul class="tab-list">\n       <li class="js-code current">\n        JavaScript\n       </li>\n       <li class="css-code">\n        CSS\n       </li>\n      </ul>\n      <div class="code-wrapper" id="code-text-1">\n       <pre class="js-code visible-code"><code class="rainbow" data-language="javascript"><span class="keyword">var</span> collectionView <span class="keyword operator">=</span> <span class="keyword">new</span> <span class="entity function">Backbone.CollectionView</span>( {\n  el :<span class="selector"> $</span>( <span class="string">"ul#demoSingleSelectionList"</span> ),\n  selectable : <span class="constant language">true</span>,\n  collection : employeeCollection,\n  modelView : EmployeeView\n} );</code></pre>\n       <pre class="css-code"><code class="rainbow" data-language="css"><span class="entity name tag">ul</span><span class="entity name class">.collection-list</span> {\n  <span class="support css-property">margin</span>: <span class="constant numeric">0</span>;\n  <span class="support css-property">padding</span>: <span class="constant numeric">0</span>;\n  <span class="support css-property">list-style-type</span>: <span class="support css-value">none</span>;\n  <span class="support css-property">outline</span>: <span class="support css-value">none</span>;\n  <span class="support css-property">cursor</span>: <span class="support css-value">pointer</span>;\n}\n\n<span class="entity name tag">ul</span><span class="entity name class">.collection-list</span> <span class="entity name tag">li</span> {\n  <span class="support css-property">margin</span>: <span class="constant numeric">7</span><span class="keyword unit">px</span>;\n  <span class="support css-property">padding</span>: <span class="constant numeric">10</span><span class="keyword unit">px</span>;\n  <span class="support css-property">border</span>: <span class="constant numeric">1</span><span class="keyword unit">px</span> solid <span class="constant hex-color">#AAA</span>;\n  <span class="support css-property">border-radius</span>: <span class="constant numeric">4</span><span class="keyword unit">px</span>;   <span class="comment">/* may need vendor varients */</span>\n  <span class="support css-property">background</span>: <span class="constant hex-color">#FAFAFA</span>;\n}\n\n<span class="entity name tag">ul</span><span class="entity name class">.collection-list</span> <span class="entity name tag">li</span><span class="entity name class">.selected</span> {\n  <span class="support css-property">background</span>: <span class="constant hex-color">#678be4</span>;\n  <span class="support css-property">border</span>: <span class="constant numeric">1</span><span class="keyword unit">px</span> solid <span class="constant hex-color">#2659d9</span>;\n  <span class="support css-property">color</span>: <span class="support css-value">white</span>;\n}\n</code></pre>\n      </div>\n     </div>\n    </div>\n    <div class="example-container">\n     <h2>\n      Multiple Selection\n     </h2>\n     <div class="demo-container">\n      <p>\n       Click and hold Command, Control (Windows) or Shift.\n      </p>\n      <ul class="light-flat-list collection-list selectable" id="demoMultipleSelectionList" tabindex="0">\n       <li data-model-cid="c25">\n        <div>\n         Sherlock Holmes\n        </div>\n       </li>\n       <li data-model-cid="c26">\n        <div>\n         John Watson\n        </div>\n       </li>\n       <li data-model-cid="c27">\n        <div>\n         Mycroft Holmes\n        </div>\n       </li>\n      </ul>\n     </div>\n     <div class="code-container">\n      <ul class="tab-list">\n       <li class="js-code current">\n        JavaScript\n       </li>\n       <li class="css-code">\n        CSS\n       </li>\n      </ul>\n      <div class="code-wrapper" id="code-text-2">\n       <pre class="js-code visible-code"><code class="rainbow" data-language="javascript"><span class="keyword">var</span> collectionView <span class="keyword operator">=</span> <span class="keyword">new</span> <span class="entity function">Backbone.CollectionView</span>( {\n  el :<span class="selector"> $</span>( <span class="string">"ul#demoMultipleSelectionList"</span> ),\n  selectable : <span class="constant language">true</span>,\n  selectMultiple : <span class="constant language">true</span>,\n  collection : employeeCollection,\n  modelView : EmployeeView\n} );</code></pre>\n       <pre class="css-code"><code class="rainbow" data-language="css"><span class="entity name tag">ul</span><span class="entity name class">.collection-list</span> {\n  <span class="support css-property">margin</span>: <span class="constant numeric">0</span>;\n  <span class="support css-property">padding</span>: <span class="constant numeric">0</span>;\n  <span class="support css-property">list-style-type</span>: <span class="support css-value">none</span>;\n  <span class="support css-property">outline</span>: <span class="support css-value">none</span>;\n  <span class="support css-property">cursor</span>: <span class="support css-value">pointer</span>;\n  <span class="support css-property">box-shadow</span>: <span class="constant numeric">0</span> <span class="constant numeric">1</span><span class="keyword unit">px</span> <span class="constant numeric">3</span><span class="keyword unit">px</span> <span class="constant numeric">0</span> rgba(<span class="constant numeric">0</span>, <span class="constant numeric">0</span>, <span class="constant numeric">0</span>, <span class="constant numeric">0</span>.<span class="constant numeric">33</span>);   <span class="comment">/* may need vendor varients */</span>\n  <span class="support css-property">font-family</span>: <span class="string">"Helvetica Neue"</span>, <span class="support css-value">Helvetica</span>, <span class="support css-value">arial</span>;\n}\n\n<span class="entity name tag">ul</span><span class="entity name class">.collection-list</span> <span class="entity name tag">li</span> {\n  <span class="support css-property">padding</span>: <span class="constant numeric">10</span><span class="keyword unit">px</span>;\n  <span class="support css-property">border-bottom</span>: <span class="constant numeric">1</span><span class="keyword unit">px</span> solid <span class="constant hex-color">#E6E6E6</span>;\n  <span class="support css-property">background</span>: <span class="constant hex-color">#F7F7F7</span>;\n}\n\n<span class="entity name tag">ul</span><span class="entity name class">.collection-list</span> <span class="entity name tag">li</span><span class="entity name class">.selected</span> {\n  <span class="support css-property">color</span>: <span class="support css-value">white</span>;\n  <span class="support css-property">background</span>: <span class="constant hex-color">#678BE4</span>;\n}\n</code></pre>\n      </div>\n     </div>\n    </div>\n    <div class="example-container">\n     <h2>\n      Tables\n     </h2>\n     <div class="demo-container">\n      <p>\n       Collection views can also be rendered as tables.\n      </p>\n      <table class="example-table collection-list selectable" id="demoTables" tabindex="0">\n       <thead>\n        <tr>\n         <td>\n          First Name\n         </td>\n         <td>\n          Last Name\n         </td>\n        </tr>\n       </thead>\n       <tbody>\n        <tr data-model-cid="c33">\n         <td>\n          Sherlock\n         </td>\n         <td>\n          Holmes\n         </td>\n        </tr>\n        <tr data-model-cid="c34">\n         <td>\n          John\n         </td>\n         <td>\n          Watson\n         </td>\n        </tr>\n        <tr data-model-cid="c35">\n         <td>\n          Mycroft\n         </td>\n         <td>\n          Holmes\n         </td>\n        </tr>\n       </tbody>\n      </table>\n     </div>\n     <div class="code-container">\n      <ul class="tab-list">\n       <li class="js-code current">\n        JavaScript\n       </li>\n       <li class="css-code">\n        CSS\n       </li>\n      </ul>\n      <div class="code-wrapper" id="code-text-3">\n       <pre class="js-code visible-code"><code class="rainbow" data-language="javascript"><span class="keyword">var</span> collectionView <span class="keyword operator">=</span> <span class="keyword">new</span> <span class="entity function">Backbone.CollectionView</span>( {\n  el :<span class="selector"> $</span>( <span class="string">"table#demoTables"</span> ),\n  selectable : <span class="constant language">true</span>,\n  collection : employeeCollection,\n  modelView : EmployeeView\n} );</code></pre>\n       <pre class="css-code"><code class="rainbow" data-language="css"><span class="entity name tag">table</span><span class="entity name class">.collection-list</span> {\n  <span class="support css-property">border-collapse</span>: <span class="support css-value">collapse</span>;\n  <span class="support css-property">width</span>: <span class="constant numeric">350</span><span class="keyword unit">px</span>;\n  <span class="support css-property">border</span>: <span class="constant numeric">1</span><span class="keyword unit">px</span> solid <span class="constant hex-color">#AAA</span>;\n  <span class="support css-property">font-family</span>: <span class="string">"Helvetica Neue"</span>, <span class="support css-value">Helvetica</span>, <span class="support css-value">arial</span>;\n  <span class="support css-property">cursor</span>: <span class="support css-value">pointer</span>;\n}\n\n<span class="entity name tag">table</span><span class="entity name class">.collection-list</span> <span class="entity name tag">tr</span><span class="entity name pseudo">:nth-child</span>(<span class="entity name tag">even</span>) {\n  <span class="support css-property">background</span>: <span class="constant hex-color">#EBF0FF</span>;\n}\n\n<span class="entity name tag">table</span><span class="entity name class">.collection-list</span> <span class="entity name tag">tr</span><span class="entity name class">.selected</span> {\n  <span class="support css-property">color</span>: <span class="constant hex-color">#FFF</span>;\n  <span class="support css-property">background</span>: <span class="constant hex-color">#678BE4</span>;\n}\n\n<span class="entity name tag">table</span><span class="entity name class">.collection-list</span> <span class="entity name tag">tr</span> <span class="entity name tag">td</span> {\n  <span class="support css-property">padding</span>: <span class="constant numeric">10</span><span class="keyword unit">px</span> <span class="constant numeric">20</span><span class="keyword unit">px</span>;\n  <span class="support css-property">border-right</span>: <span class="constant numeric">1</span><span class="keyword unit">px</span> solid <span class="constant hex-color">#AAA</span>;\n}\n</code></pre>\n      </div>\n     </div>\n    </div>\n    <div class="example-container">\n     <h2>\n      Sorting\n     </h2>\n     <div class="demo-container">\n      <p>\n       Click and drag.\n      </p>\n      <button class="button-small button-blue" id="showModelSorting">\n       See the collection contents\n      </button>\n      <ul class="gradient-list collection-list selectable ui-sortable" id="demoSortable" tabindex="0">\n       <li data-model-cid="c41">\n        <div>\n         Sherlock Holmes\n        </div>\n       </li>\n       <li data-model-cid="c42">\n        <div>\n         John Watson\n        </div>\n       </li>\n       <li data-model-cid="c43">\n        <div>\n         Mycroft Holmes\n        </div>\n       </li>\n      </ul>\n     </div>\n     <div class="code-container">\n      <ul class="tab-list">\n       <li class="js-code current">\n        JavaScript\n       </li>\n       <li class="css-code">\n        CSS\n       </li>\n      </ul>\n      <div class="code-wrapper" id="code-text-4">\n       <pre class="js-code visible-code"><code class="rainbow" data-language="javascript"><span class="keyword">var</span> collectionView <span class="keyword operator">=</span> <span class="keyword">new</span> <span class="entity function">Backbone.CollectionView</span>( {\n  el :<span class="selector"> $</span>( <span class="string">"ul#demoSortableList"</span> ),\n  selectable : <span class="constant language">true</span>,\n  sortable : <span class="constant language">true</span>,\n  collection : employeeCollection,\n  modelView : EmployeeView\n} );</code></pre>\n       <pre class="css-code"><code class="rainbow" data-language="css"><span class="entity name tag">ul</span><span class="entity name class">.collection-list</span> {\n  <span class="support css-property">margin</span>: <span class="constant numeric">0</span>;\n  <span class="support css-property">padding</span>: <span class="constant numeric">0</span>;\n  <span class="support css-property">list-style-type</span>: <span class="support css-value">none</span>;\n  <span class="support css-property">outline</span>: <span class="support css-value">none</span>;\n  <span class="support css-property">cursor</span>: <span class="support css-value">pointer</span>;\n}\n\n<span class="entity name tag">ul</span><span class="entity name class">.collection-list</span> <span class="entity name tag">li</span> {\n  <span class="support css-property">margin</span>: <span class="constant numeric">10</span><span class="keyword unit">px</span> <span class="constant numeric">0</span>;\n  <span class="support css-property">padding</span>: <span class="constant numeric">10</span><span class="keyword unit">px</span>;\n  <span class="support css-property">background</span>: <span class="support vendor-prefix">-webkit-</span><span class="support css-value">gradient</span>(linear, <span class="constant numeric">50</span><span class="keyword unit">%</span> <span class="constant numeric">0</span><span class="keyword unit">%</span>, <span class="constant numeric">50</span><span class="keyword unit">%</span> <span class="constant numeric">100</span><span class="keyword unit">%</span>, <span class="support css-value">color-stop</span>(<span class="constant numeric">0</span><span class="keyword unit">%</span>, <span class="constant hex-color">#F7F7F7</span>), <span class="support css-value">color-stop</span>(<span class="constant numeric">100</span><span class="keyword unit">%</span>, <span class="constant hex-color">#E8E8E8</span>));\n  <span class="support css-property">background</span>: <span class="support vendor-prefix">-webkit-</span><span class="support css-value">linear-gradient</span>(<span class="constant hex-color">#F7F7F7</span>, <span class="constant hex-color">#E8E8E8</span>);\n  <span class="support css-property">background</span>:    <span class="support vendor-prefix">-moz-</span><span class="support css-value">linear-gradient</span>(<span class="constant hex-color">#F7F7F7</span>, <span class="constant hex-color">#E8E8E8</span>);\n  <span class="support css-property">background</span>:      <span class="support vendor-prefix">-o-</span><span class="support css-value">linear-gradient</span>(<span class="constant hex-color">#F7F7F7</span>, <span class="constant hex-color">#E8E8E8</span>);\n  <span class="support css-property">background</span>:         <span class="support css-value">linear-gradient</span>(<span class="constant hex-color">#F7F7F7</span>, <span class="constant hex-color">#E8E8E8</span>);\n  <span class="support css-property">border</span>: <span class="constant numeric">1</span><span class="keyword unit">px</span> solid <span class="constant hex-color">#C9C9C9</span>;\n  <span class="support css-property">background</span>: <span class="constant hex-color">#F0F0F0</span>;\n  <span class="support css-property">border-radius</span>: <span class="constant numeric">4</span><span class="keyword unit">px</span>;   <span class="comment">/* may need vendor varients */</span>\n  <span class="support css-property">box-shadow</span>: <span class="constant numeric">0</span> <span class="constant numeric">1</span><span class="keyword unit">px</span> <span class="constant numeric">3</span><span class="keyword unit">px</span> rgba(<span class="constant numeric">0</span>, <span class="constant numeric">0</span>, <span class="constant numeric">0</span>, <span class="constant numeric">0</span>.<span class="constant numeric">14</span>);   <span class="comment">/* may need vendor varients */</span>\n  <span class="support css-property">text-shadow</span>: <span class="constant numeric">0</span> <span class="constant numeric">1</span><span class="keyword unit">px</span> <span class="constant numeric">0</span> rgba(<span class="constant numeric">255</span>, <span class="constant numeric">255</span>, <span class="constant numeric">255</span>, <span class="constant numeric">0</span>.<span class="constant numeric">8</span>);\n}\n\n<span class="entity name tag">ul</span><span class="entity name class">.collection-list</span> <span class="entity name tag">li</span><span class="entity name class">.selected</span> {\n  <span class="support css-property">border</span>: <span class="constant numeric">1</span><span class="keyword unit">px</span> solid <span class="constant hex-color">#2659D9</span>;\n  <span class="support css-property">color</span>: <span class="constant hex-color">#FFF</span>;\n  <span class="support css-property">text-shadow</span>: <span class="constant numeric">0</span> -<span class="constant numeric">1</span><span class="keyword unit">px</span> <span class="constant numeric">0</span> rgba(<span class="constant numeric">0</span>, <span class="constant numeric">0</span>, <span class="constant numeric">0</span>, <span class="constant numeric">0</span>.<span class="constant numeric">8</span>);\n  <span class="support css-property">background</span>: <span class="constant hex-color">#678BE4</span>;\n}</code></pre>\n      </div>\n     </div>\n    </div>\n    <div class="example-container">\n     <h2>\n      Empty list caption\n     </h2>\n     <div class="demo-container">\n      <p>\n       Display customized text when the list is empty.\n      </p>\n      <button class="button-small button-green" id="demoAddToCollectionButton">\n       Add new item\n      </button>\n      <button class="button-small button-right button-red" id="demoRemoveFromCollectionButton">\n       Remove selected item(s)\n      </button>\n      <p>\n      </p>\n      <ul class="collection-list selectable ui-sortable" id="demoEmptyListCaption" tabindex="0">\n       <li class="not-sortable" style="background: transparent; border: none; box-shadow: none;">\n        <var class="empty-list-caption">\n         There are no items in this list.\n        </var>\n       </li>\n      </ul>\n     </div>\n     <div class="code-container">\n      <ul class="tab-list">\n       <li class="js-code current">\n        JavaScript\n       </li>\n       <li class="css-code">\n        CSS\n       </li>\n      </ul>\n      <div class="code-wrapper" id="code-text-5">\n       <pre class="js-code visible-code"><code class="rainbow" data-language="javascript"> <span class="keyword">var</span> collectionView <span class="keyword operator">=</span> <span class="keyword">new</span> <span class="entity function">Backbone.CollectionView</span>( {\n  el :<span class="selector"> $</span>( <span class="string">"ul#demoEmptyListCaption"</span> ),\n  selectable : <span class="constant language">true</span>,\n  selectableMultiple : <span class="constant language">true</span>,\n  sortable: <span class="constant language">true</span>,\n  emptyListCaption : <span class="string">"There are no items in this list."</span>,\n  collection : <span class="keyword">new</span> <span class="entity function">Employees</span>(),\n  modelView : EmployeeView\n} );\n<span class="selector">\n$</span>( <span class="string">"#demoRemoveFromCollectionButton"</span> ).<span class="function call">click</span>( <span class="keyword">function</span>() {\n  <span class="keyword">var</span> selectedModels <span class="keyword operator">=</span> collectionView.<span class="function call">getSelectedModels</span>();\n  collectionView.collection.<span class="function call">remove</span>( selectedModels );\n} );\n<span class="selector">\n$</span>( <span class="string">"#demoAddToCollectionButton"</span> ).<span class="function call">click</span>( <span class="keyword">function</span>() {\n  collectionView.collection.<span class="function call">add</span>( {\n    firstName : <span class="string">"Super"</span>, lastName : <span class="string">"Sleuth"</span>\n  } );\n} );</code></pre>\n       <pre class="css-code"><code class="rainbow" data-language="css"><span class="entity name tag">ul</span><span class="entity name class">.collection-list</span> {\n  <span class="support css-property">min-height</span>: <span class="constant numeric">150</span><span class="keyword unit">px</span>;\n  <span class="support css-property">margin</span>: <span class="constant numeric">0</span>;\n  <span class="support css-property">border</span>: <span class="constant numeric">1</span><span class="keyword unit">px</span> solid <span class="constant hex-color">#A0A0A0</span>;\n  <span class="support css-property">padding</span>: <span class="constant numeric">0</span><span class="keyword unit">px</span> <span class="constant numeric">10</span><span class="keyword unit">px</span>;\n  <span class="support css-property">background</span>: <span class="constant hex-color">#FAFAFA</span>;\n  <span class="support css-property">list-style-type</span>: <span class="support css-value">none</span>;\n  <span class="support css-property">outline</span>: <span class="support css-value">none</span>;\n  <span class="support css-property">cursor</span>: <span class="support css-value">pointer</span>;\n}\n\n<span class="entity name tag">ul</span><span class="entity name class">.collection-list</span> <span class="entity name tag">li</span> {\n  <span class="support css-property">margin</span>: <span class="constant numeric">10</span><span class="keyword unit">px</span> <span class="constant numeric">0</span>;\n  <span class="support css-property">padding</span>: <span class="constant numeric">10</span><span class="keyword unit">px</span>;\n  <span class="support css-property">background</span>: <span class="support vendor-prefix">-webkit-</span><span class="support css-value">gradient</span>(linear, <span class="constant numeric">50</span><span class="keyword unit">%</span> <span class="constant numeric">0</span><span class="keyword unit">%</span>, <span class="constant numeric">50</span><span class="keyword unit">%</span> <span class="constant numeric">100</span><span class="keyword unit">%</span>, <span class="support css-value">color-stop</span>(<span class="constant numeric">0</span><span class="keyword unit">%</span>, <span class="constant hex-color">#F7F7F7</span>), <span class="support css-value">color-stop</span>(<span class="constant numeric">100</span><span class="keyword unit">%</span>, <span class="constant hex-color">#E8E8E8</span>));\n  <span class="support css-property">background</span>: <span class="support vendor-prefix">-webkit-</span><span class="support css-value">linear-gradient</span>(<span class="constant hex-color">#F7F7F7</span>, <span class="constant hex-color">#E8E8E8</span>);\n  <span class="support css-property">background</span>:    <span class="support vendor-prefix">-moz-</span><span class="support css-value">linear-gradient</span>(<span class="constant hex-color">#F7F7F7</span>, <span class="constant hex-color">#E8E8E8</span>);\n  <span class="support css-property">background</span>:      <span class="support vendor-prefix">-o-</span><span class="support css-value">linear-gradient</span>(<span class="constant hex-color">#F7F7F7</span>, <span class="constant hex-color">#E8E8E8</span>);\n  <span class="support css-property">background</span>:         <span class="support css-value">linear-gradient</span>(<span class="constant hex-color">#F7F7F7</span>, <span class="constant hex-color">#E8E8E8</span>);\n  <span class="support css-property">border</span>: <span class="constant numeric">1</span><span class="keyword unit">px</span> solid <span class="constant hex-color">#C9C9C9</span>;\n  <span class="support css-property">background</span>: <span class="constant hex-color">#F0F0F0</span>;\n  <span class="support css-property">border-radius</span>: <span class="constant numeric">4</span><span class="keyword unit">px</span>;   <span class="comment">/* may need vendor varients */</span>\n  <span class="support css-property">box-shadow</span>: <span class="constant numeric">0</span> <span class="constant numeric">1</span><span class="keyword unit">px</span> <span class="constant numeric">3</span><span class="keyword unit">px</span> rgba(<span class="constant numeric">0</span>, <span class="constant numeric">0</span>, <span class="constant numeric">0</span>, <span class="constant numeric">0</span>.<span class="constant numeric">14</span>);   <span class="comment">/* may need vendor varients */</span>\n  <span class="support css-property">text-shadow</span>: <span class="constant numeric">0</span> <span class="constant numeric">1</span><span class="keyword unit">px</span> <span class="constant numeric">0</span> rgba(<span class="constant numeric">255</span>, <span class="constant numeric">255</span>, <span class="constant numeric">255</span>, <span class="constant numeric">0</span>.<span class="constant numeric">8</span>);\n}\n\n<span class="entity name tag">ul</span><span class="entity name class">.collection-list</span> <span class="entity name tag">li</span><span class="entity name class">.selected</span> {\n  <span class="support css-property">border</span>: <span class="constant numeric">1</span><span class="keyword unit">px</span> solid <span class="constant hex-color">#2659D9</span>;\n  <span class="support css-property">color</span>: <span class="constant hex-color">#FFF</span>;\n  <span class="support css-property">text-shadow</span>: <span class="constant numeric">0</span> -<span class="constant numeric">1</span><span class="keyword unit">px</span> <span class="constant numeric">0</span> rgba(<span class="constant numeric">0</span>, <span class="constant numeric">0</span>, <span class="constant numeric">0</span>, <span class="constant numeric">0</span>.<span class="constant numeric">8</span>);\n  <span class="support css-property">background</span>: <span class="constant hex-color">#678BE4</span>;\n}\n\n<span class="entity name tag">ul</span><span class="entity name class">.collection-list</span> <span class="entity name tag">var</span><span class="entity name class">.empty-list-caption</span> {\n  <span class="support css-property">color</span>: <span class="constant hex-color">#A0A0A0</span>;\n  <span class="support css-property">padding</span>: <span class="constant numeric">30</span><span class="keyword unit">px</span>;\n  <span class="support css-property">display</span>: <span class="support css-value">block</span>;\n  <span class="support css-property">text-align</span>: <span class="support css-value">center</span>;\n  <span class="support css-property">font-style</span>: <span class="support css-value">normal</span>;\n  <span class="support css-property">line-height</span>: <span class="constant numeric">1</span>.<span class="constant numeric">45</span>;\n}\n</code></pre>\n      </div>\n     </div>\n    </div>\n    <div class="example-container">\n     <h2>\n      Events\n     </h2>\n     <div class="demo-container">\n      <p>\n       Easily hook into events.\n      </p>\n      <ul class="flat-border-list collection-list selectable" id="demoEvents" tabindex="0">\n       <li data-model-cid="c51">\n        <div>\n         Sherlock Holmes\n        </div>\n       </li>\n       <li data-model-cid="c52">\n        <div>\n         John Watson\n        </div>\n       </li>\n       <li data-model-cid="c53">\n        <div>\n         Mycroft Holmes\n        </div>\n       </li>\n      </ul>\n      <p>\n      </p>\n      <div id="demoEventsCaption">\n      </div>\n     </div>\n     <div class="code-container">\n      <ul class="tab-list">\n       <li class="js-code current">\n        JavaScript\n       </li>\n       <li class="css-code">\n        CSS\n       </li>\n      </ul>\n      <div class="code-wrapper" id="code-text-6">\n       <pre class="js-code visible-code"><code class="rainbow" data-language="javascript"><span class="keyword">var</span> collectionView <span class="keyword operator">=</span> <span class="keyword">new</span> <span class="entity function">Backbone.CollectionView</span>( {\n  el :<span class="selector"> $</span>( <span class="string">"ul#demoEvents"</span> ),\n  selectable : <span class="constant language">true</span>,\n  collection : employeeCollection,\n  modelView : EmployeeView\n} );\n\ncollectionView.<span class="function call">on</span>( <span class="string">"selectionChanged"</span>, <span class="keyword">function</span>() {\n  <span class="keyword">var</span> selectedModel <span class="keyword operator">=</span> collectionView.<span class="function call">getSelectedModel</span>();\n <span class="selector"> $</span>( <span class="string">"#demoEventsCaption"</span> ).<span class="function call">text</span>(\n    <span class="string">"The newly selected model is: "</span> <span class="keyword operator">+</span>\n    selectedModel.<span class="function call">get</span>( <span class="string">"firstName"</span> ) <span class="keyword operator">+</span> <span class="string">" "</span> <span class="keyword operator">+</span>\n    selectedModel.<span class="function call">get</span>( <span class="string">"lastName"</span> ) );\n} );\n</code></pre>\n       <pre class="css-code"><code class="rainbow" data-language="css"><span class="entity name tag">ul</span><span class="entity name class">.collection-list</span> {\n  <span class="support css-property">background</span>: <span class="constant hex-color">#FDFDFD</span>;\n  <span class="support css-property">font-family</span>: <span class="string">"lucida grande"</span>,<span class="support css-value">tahoma</span>,<span class="support css-value">sans-serif</span>;\n  <span class="support css-property">border</span>: <span class="constant numeric">1</span><span class="keyword unit">px</span> solid <span class="constant hex-color">#78A9CE</span>;\n  <span class="support css-property">margin</span>: <span class="constant numeric">2</span><span class="keyword unit">px</span> <span class="constant numeric">0</span><span class="keyword unit">px</span> <span class="constant numeric">2</span><span class="keyword unit">px</span> <span class="constant numeric">0</span><span class="keyword unit">px</span>;\n  <span class="support css-property">border-radius</span>: <span class="constant numeric">4</span><span class="keyword unit">px</span>;   <span class="comment">/* may need vendor varients */</span>\n}\n\n<span class="entity name tag">ul</span><span class="entity name class">.collection-list</span> <span class="entity name tag">li</span> {\n  <span class="support css-property">padding</span>: <span class="constant numeric">6</span><span class="keyword unit">px</span>;\n}\n\n<span class="entity name tag">ul</span><span class="entity name class">.collection-list</span> <span class="entity name tag">li</span><span class="entity name class">.selected</span> {\n  <span class="support css-property">background</span>: <span class="constant hex-color">#9EADD0</span>;\n  <span class="support css-property">color</span>: <span class="support css-value">white</span>;\n}\n</code></pre>\n      </div>\n     </div>\n    </div>\n    <div class="example-container">\n     <h2>\n      Filters\n     </h2>\n     <div class="demo-container">\n      <p>\n       Specify which items are selectable, sortable, or visible.\n      </p>\n      <ul class="collection-list selectable" id="demoFilters" tabindex="0">\n       <li data-model-cid="c59">\n        <div>\n         Sherlock Holmes\n        </div>\n       </li>\n       <li class="not-selectable" data-model-cid="c60">\n        <div>\n         John Watson\n        </div>\n       </li>\n       <li data-model-cid="c61">\n        <div>\n         Mycroft Holmes\n        </div>\n       </li>\n      </ul>\n     </div>\n     <div class="code-container">\n      <ul class="tab-list">\n       <li class="js-code current">\n        JavaScript\n       </li>\n       <li class="css-code">\n        CSS\n       </li>\n      </ul>\n      <div class="code-wrapper" id="code-text-7">\n       <pre class="js-code visible-code"><code class="rainbow" data-language="javascript"><span class="keyword">var</span> collectionView <span class="keyword operator">=</span> <span class="keyword">new</span> <span class="entity function">Backbone.CollectionView</span>( {\n  el :<span class="selector"> $</span>( <span class="string">"ul#demoFilters"</span> ),\n  selectable : <span class="constant language">true</span>,\n  collection : employeeCollection,\n  modelView : EmployeeView,\n  selectableModelsFilter : <span class="keyword">function</span>( model ) {\n    <span class="keyword">return</span> model.<span class="function call">get</span>( <span class="string">"lastName"</span> ) <span class="keyword operator">=</span><span class="keyword operator">=</span><span class="keyword operator">=</span> <span class="string">"Holmes"</span>;\n  }\n} );</code></pre>\n       <pre class="css-code"><code class="rainbow" data-language="css"><span class="entity name tag">ul</span><span class="entity name class">.collection-list</span> {\n  <span class="support css-property">margin</span>: <span class="constant numeric">0</span>;\n  <span class="support css-property">padding</span>: <span class="constant numeric">0</span>;\n  <span class="support css-property">list-style-type</span>: <span class="support css-value">none</span>;\n  <span class="support css-property">outline</span>: <span class="support css-value">none</span>;\n  <span class="support css-property">cursor</span>: <span class="support css-value">pointer</span>;\n}\n\n<span class="entity name tag">ul</span><span class="entity name class">.collection-list</span> <span class="entity name tag">li</span> {\n  <span class="support css-property">margin</span>: <span class="constant numeric">7</span><span class="keyword unit">px</span>;\n  <span class="support css-property">padding</span>: <span class="constant numeric">10</span><span class="keyword unit">px</span>;\n  <span class="support css-property">border</span>: <span class="constant numeric">1</span><span class="keyword unit">px</span> solid <span class="constant hex-color">#AAA</span>;\n  <span class="support css-property">border-radius</span>: <span class="constant numeric">4</span><span class="keyword unit">px</span>;   <span class="comment">/* may need vendor varients */</span>\n  <span class="support css-property">background</span>: <span class="constant hex-color">#FAFAFA</span>;\n}\n\n<span class="entity name tag">ul</span><span class="entity name class">.collection-list</span> <span class="entity name tag">li</span><span class="entity name class">.selected</span> {\n  <span class="support css-property">background</span>: <span class="constant hex-color">#678be4</span>;\n  <span class="support css-property">border</span>: <span class="constant numeric">1</span><span class="keyword unit">px</span> solid <span class="constant hex-color">#2659d9</span>;\n  <span class="support css-property">color</span>: <span class="support css-value">white</span>;\n}\n\n<span class="entity name tag">ul</span><span class="entity name class">.collection-list</span> <span class="entity name tag">li</span><span class="entity name class">.not-selectable</span> {\n  <span class="support css-property">opacity</span>: .<span class="constant numeric">5</span>;\n}\n</code></pre>\n      </div>\n     </div>\n    </div>\n    <!--Underscore template for an employee view.  Used in a collection view rendered as a list.-->\n    <script id="example-template" type="text/html">\n     &lt;%= example %&gt;\n    </script>\n    <!--Underscore template for an employee view.  Used in a collection view rendered as a list.-->\n    <script id="employee-template" type="text/html">\n     &lt;%= firstName %&gt; &lt;%= lastName %&gt;\n    </script>\n    <!--Underscore template for an employee view.  Used in a collection view rendered as a table.-->\n    <script id="employee-template-for-table-list" type="text/html">\n     &lt;td&gt;&lt;%= firstName %&gt;&lt;/td&gt;&lt;td&gt;&lt;%= lastName %&gt;&lt;/td&gt;\n    </script>\n    <script src="lib/jquery-1.9.1.js" type="text/javascript">\n    </script>\n    <script src="lib/jquery-ui.js" type="text/javascript">\n    </script>\n    <script src="lib/underscore.js" type="text/javascript">\n    </script>\n    <script src="lib/backbone.js" type="text/javascript">\n    </script>\n    <script src="lib/backbone.babysitter.js" type="text/javascript">\n    </script>\n    <script src="lib/backbone.courier.js" type="text/javascript">\n    </script>\n    <script src="lib/backbone.collectionView.js" type="text/javascript">\n    </script>\n    <script src="js/app.js" type="text/javascript">\n    </script>\n    <script src="lib/rainbow-custom.min.js" type="text/javascript">\n    </script>\n   </div>\n  </div>\n </body>\n</html>'