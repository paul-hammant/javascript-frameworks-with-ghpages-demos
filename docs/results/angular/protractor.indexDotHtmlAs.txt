b'<html>\n <head lang="en">\n  <style type="text/css">\n   @charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\\:form{display:block;}\n  </style>\n  <meta content="width=device-width, initial-scale=1.0" name="viewport"/>\n  <meta charset="utf-8"/>\n  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>\n  <link href="css/protractor.css" rel="stylesheet"/>\n  <link href="img/favicon.ico" rel="icon" sizes="16x16 32x32 48x48 64x64" type="image/x-icon"/>\n  <title>\n   Protractor - end-to-end testing for AngularJS\n  </title>\n  <script charset="utf-8" src="https://platform.twitter.com/js/button.509719336ca39171c37a321231ccaf83.js">\n  </script>\n </head>\n <body class="ng-scope" ng-app="protractorApp">\n  <nav class="navbar navbar-default navbar-static navbar-fixed-top">\n   <div class="container-fluid">\n    <div class="navbar-header">\n     <button class="navbar-toggle" data-target=".bs-example-js-navbar-collapse" data-toggle="collapse" type="button">\n      <span class="sr-only">\n       Toggle navigation\n      </span>\n      <span class="icon-bar">\n      </span>\n      <span class="icon-bar">\n      </span>\n      <span class="icon-bar">\n      </span>\n     </button>\n    </div>\n    <div class="container">\n     <div class="collapse navbar-collapse bs-example-js-navbar-collapse">\n      <ul class="nav navbar-nav">\n       <!-- Home -->\n       <li>\n        <a href="#/">\n         Home\n        </a>\n       </li>\n       <!-- Quick start -->\n       <li class="dropdown">\n        <a class="dropdown-toggle" data-toggle="dropdown" href="javascript:void(0)" id="drop1">\n         Quick Start\n         <span class="caret">\n         </span>\n        </a>\n        <ul class="dropdown-menu">\n         <li>\n          <a href="#/tutorial" tabindex="-1">\n           Tutorial\n          </a>\n         </li>\n        </ul>\n       </li>\n       <!-- Protractor Setup -->\n       <li class="dropdown">\n        <a class="dropdown-toggle" data-toggle="dropdown" href="javascript:void(0)" id="drop2">\n         Protractor Setup\n         <span class="caret">\n         </span>\n        </a>\n        <ul class="dropdown-menu">\n         <li>\n          <a href="#/protractor-setup" tabindex="-1">\n           Setting Up Protractor\n          </a>\n         </li>\n         <li>\n          <a href="#/server-setup" tabindex="-1">\n           Setting Up the Selenium Server\n          </a>\n         </li>\n         <li>\n          <a href="#/browser-setup" tabindex="-1">\n           Setting Up the Browser\n          </a>\n         </li>\n         <li>\n          <a href="#/frameworks" tabindex="-1">\n           Choosing a Framework\n          </a>\n         </li>\n        </ul>\n       </li>\n       <!-- Protractor Tests -->\n       <li class="dropdown">\n        <a class="dropdown-toggle" data-toggle="dropdown" href="javascript:void(0)" id="drop3">\n         Protractor Tests\n         <span class="caret">\n         </span>\n        </a>\n        <ul class="dropdown-menu">\n         <li>\n          <a href="#/getting-started" tabindex="-1">\n           Getting Started\n          </a>\n         </li>\n         <li>\n          <a href="#/tutorial" tabindex="-1">\n           Tutorial\n          </a>\n         </li>\n         <li>\n          <a href="#/api-overview" tabindex="-1">\n           Working with Spec and Config Files\n          </a>\n         </li>\n         <li>\n          <a href="#/system-setup" tabindex="-1">\n           Setting Up the System Under Test\n          </a>\n         </li>\n         <li>\n          <a href="#/locators" tabindex="-1">\n           Using Locators\n          </a>\n         </li>\n         <li>\n          <a href="#/page-objects" tabindex="-1">\n           Using Page Objects to Organize Tests\n          </a>\n         </li>\n         <li>\n          <a href="#/debugging" tabindex="-1">\n           Debugging Protractor Tests\n          </a>\n         </li>\n        </ul>\n       </li>\n       <!-- Reference -->\n       <li class="dropdown">\n        <a class="dropdown-toggle" data-toggle="dropdown" href="javascript:void(0)" id="drop4">\n         Reference\n         <span class="caret">\n         </span>\n        </a>\n        <ul class="dropdown-menu">\n         <li>\n          <a href="https://github.com/angular/protractor/blob/master/lib/config.ts" tabindex="-1">\n           Configuration File\n          </a>\n         </li>\n         <li>\n          <a href="#/api" tabindex="-1">\n           Protractor API\n          </a>\n         </li>\n         <li>\n          <a href="#/style-guide" tabindex="-1">\n           Style Guide\n          </a>\n         </li>\n         <li>\n          <a href="#/webdriver-vs-protractor" tabindex="-1">\n           Protractor Syntax vs WebDriverJS Syntax\n          </a>\n         </li>\n         <li>\n          <a href="#/browser-support" tabindex="-1">\n           Browser Support\n          </a>\n         </li>\n         <li>\n          <a href="#/plugins" tabindex="-1">\n           Plugins\n          </a>\n         </li>\n         <li>\n          <a href="#/timeouts" tabindex="-1">\n           Timeouts\n          </a>\n         </li>\n         <li>\n          <a href="#/control-flow" tabindex="-1">\n           The WebDriver Control Flow\n          </a>\n         </li>\n         <li>\n          <a href="#/typescript" tabindex="-1">\n           Using TypeScript\n          </a>\n         </li>\n         <li>\n          <a href="#/async-await" tabindex="-1">\n           Using async/await\n          </a>\n         </li>\n         <li>\n          <a href="#/infrastructure" tabindex="-1">\n           How It Works\n          </a>\n         </li>\n         <li>\n          <a href="#/jasmine-upgrade" tabindex="-1">\n           Upgrading to Jasmine 2.x\n          </a>\n         </li>\n         <li>\n          <a href="#/mobile-setup" tabindex="-1">\n           Mobile Setup\n          </a>\n         </li>\n         <li>\n          <a href="#/faq" tabindex="-1">\n           FAQ\n          </a>\n         </li>\n        </ul>\n       </li>\n      </ul>\n     </div>\n     <!-- /.nav-collapse -->\n    </div>\n   </div>\n   <!-- /.container-fluid -->\n  </nav>\n  <!-- ngView:  -->\n  <div autoscroll="true" class="container protractor-container ng-scope" ng-view="">\n   <div class="ng-scope">\n    <div class="protractor-header">\n     <span class="protractor-logo">\n     </span>\n    </div>\n    <div class="text-center">\n     <a class="btn btn-large btn-danger github-button" href="https://github.com/angular/protractor">\n      <img alt="github logo" src="img/GitHub-Mark-Light-32px.png"/>\n      View on GitHub\n     </a>\n    </div>\n    <div ptor-twitter="">\n     <div class="twitter">\n      <iframe allowtransparency="true" class="twitter-follow-button twitter-follow-button-rendered" data-screen-name="ProtractorTest" frameborder="0" id="twitter-widget-0" scrolling="no" src="https://platform.twitter.com/widgets/follow_button.d753e00c3e838c1b2558149bd3f6ecb8.en.html#dnt=false&amp;id=twitter-widget-0&amp;lang=en&amp;screen_name=ProtractorTest&amp;show_count=false&amp;show_screen_name=true&amp;size=l&amp;time=1562626137732" style="position: static; visibility: visible; width: 180px; height: 28px;" title="Twitter Follow Button">\n      </iframe>\n     </div>\n    </div>\n    <p class="lead">\n     Protractor is an end-to-end test framework for Angular and AngularJS applications.\n    Protractor runs tests against your application running in a real browser,\n    interacting with it as a user would.\n    </p>\n    <div class="row">\n     <div class="col-sm-4">\n      <h3>\n       Test Like a User\n      </h3>\n      Protractor is built on top of WebDriverJS, which uses native events\n      and browser-specific drivers to interact with your application as a user\n      would.\n     </div>\n     <div class="col-sm-4">\n      <h3>\n       For Angular Apps\n      </h3>\n      Protractor supports Angular-specific locator strategies, which allows you\n      to test Angular-specific elements without any setup effort on your part.\n     </div>\n     <div class="col-sm-4">\n      <h3>\n       Automatic Waiting\n      </h3>\n      You no longer need to add waits and sleeps to your test. Protractor can\n      automatically execute the next step in your test the moment the webpage\n      finishes pending tasks, so you don\xe2\x80\x99t have to worry about waiting for your\n      test and webpage to sync.\n     </div>\n    </div>\n    <div class="row example">\n     <div class="col-md-12">\n      <h2>\n       Setup\n      </h2>\n      <p>\n       Use npm to install Protractor globally with:\n      </p>\n      <pre>npm install -g protractor</pre>\n      <p>\n       This will install two command line tools,\n       <code>\n        protractor\n       </code>\n       and\n       <code>\n        webdriver-manager\n       </code>\n       . Try running\n       <code>\n        protractor --version\n       </code>\n       to make sure it\'s working.\n      </p>\n      <p>\n       The\n       <code>\n        webdriver-manager\n       </code>\n       is a helper tool to easily get an\n        instance of a Selenium Server running. Use it to download the necessary\n        binaries with:\n      </p>\n      <pre>webdriver-manager update</pre>\n      <p>\n       Now start up a server with:\n      </p>\n      <pre>webdriver-manager start</pre>\n      <p>\n       This will start up a Selenium Server and will output a bunch of info\n        logs. Your Protractor test will send requests to this server to control\n        a local browser. You can see information about the status of the server\n        at\n       <a href="http://localhost:4444/wd/hub" target="_blank">\n        http://localhost:4444/wd/hub\n       </a>\n       .\n      </p>\n     </div>\n    </div>\n    <div class="row example">\n     <div class="col-md-12">\n      <h2>\n       Write a test\n      </h2>\n      <p>\n       Open a new command line or terminal window and create a clean folder\n        for testing.\n      </p>\n      <p>\n       Protractor needs two files to run, a spec file and a configuration file.\n      </p>\n      <p>\n       Let\'s start with a simple test that navigates to the todo list example\n        in the AngularJS website and adds a new todo item to the list.\n      </p>\n      <p>\n       Copy the following into\n       <code>\n        todo-spec.js\n       </code>\n       :\n      </p>\n      <div>\n       <pre><code class="lang-js"><span class="pln">describe</span><span class="pun">(</span><span class="str">\'angularjs homepage todo list\'</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n  it</span><span class="pun">(</span><span class="str">\'should add a todo\'</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n    browser</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="str">\'https://angularjs.org\'</span><span class="pun">);</span><span class="pln">\n\n    element</span><span class="pun">(</span><span class="kwd">by</span><span class="pun">.</span><span class="pln">model</span><span class="pun">(</span><span class="str">\'todoList.todoText\'</span><span class="pun">)).</span><span class="pln">sendKeys</span><span class="pun">(</span><span class="str">\'write first protractor test\'</span><span class="pun">);</span><span class="pln">\n    element</span><span class="pun">(</span><span class="kwd">by</span><span class="pun">.</span><span class="pln">css</span><span class="pun">(</span><span class="str">\'[value="add"]\'</span><span class="pun">)).</span><span class="pln">click</span><span class="pun">();</span><span class="pln">\n\n    </span><span class="kwd">var</span><span class="pln"> todoList </span><span class="pun">=</span><span class="pln"> element</span><span class="pun">.</span><span class="pln">all</span><span class="pun">(</span><span class="kwd">by</span><span class="pun">.</span><span class="pln">repeater</span><span class="pun">(</span><span class="str">\'todo in todoList.todos\'</span><span class="pun">));</span><span class="pln">\n    expect</span><span class="pun">(</span><span class="pln">todoList</span><span class="pun">.</span><span class="pln">count</span><span class="pun">()).</span><span class="pln">toEqual</span><span class="pun">(</span><span class="lit">3</span><span class="pun">);</span><span class="pln">\n    expect</span><span class="pun">(</span><span class="pln">todoList</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="lit">2</span><span class="pun">).</span><span class="pln">getText</span><span class="pun">()).</span><span class="pln">toEqual</span><span class="pun">(</span><span class="str">\'write first protractor test\'</span><span class="pun">);</span><span class="pln">\n\n    </span><span class="com">// You wrote your first test, cross it off the list</span><span class="pln">\n    todoList</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="lit">2</span><span class="pun">).</span><span class="pln">element</span><span class="pun">(</span><span class="kwd">by</span><span class="pun">.</span><span class="pln">css</span><span class="pun">(</span><span class="str">\'input\'</span><span class="pun">)).</span><span class="pln">click</span><span class="pun">();</span><span class="pln">\n    </span><span class="kwd">var</span><span class="pln"> completedAmount </span><span class="pun">=</span><span class="pln"> element</span><span class="pun">.</span><span class="pln">all</span><span class="pun">(</span><span class="kwd">by</span><span class="pun">.</span><span class="pln">css</span><span class="pun">(</span><span class="str">\'.done-true\'</span><span class="pun">));</span><span class="pln">\n    expect</span><span class="pun">(</span><span class="pln">completedAmount</span><span class="pun">.</span><span class="pln">count</span><span class="pun">()).</span><span class="pln">toEqual</span><span class="pun">(</span><span class="lit">2</span><span class="pun">);</span><span class="pln">\n  </span><span class="pun">});</span><span class="pln">\n</span><span class="pun">});</span></code></pre>\n      </div>\n      <p>\n       The\n       <code>\n        describe\n       </code>\n       and\n       <code>\n        it\n       </code>\n       syntax is from the Jasmine\n        framework.\n       <code>\n        browser\n       </code>\n       is a global created by Protractor,\n        which is used for browser-level commands such as navigation with\n       <code>\n        browser.get\n       </code>\n       .\n      </p>\n     </div>\n    </div>\n    <div class="row example">\n     <div class="col-md-12">\n      <h2>\n       Configuration\n      </h2>\n      <p>\n       Now create the configuration file. Copy the following into\n       <code>\n        conf.js\n       </code>\n       :\n      </p>\n      <pre><code class="lang-js"><span class="pln">exports</span><span class="pun">.</span><span class="pln">config </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n  seleniumAddress</span><span class="pun">:</span><span class="pln"> </span><span class="str">\'http://localhost:4444/wd/hub\'</span><span class="pun">,</span><span class="pln">\n  specs</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="str">\'todo-spec.js\'</span><span class="pun">]</span><span class="pln">\n</span><span class="pun">};</span></code></pre>\n      <p>\n       This configuration tells Protractor where your test files\n        (\n       <code>\n        specs\n       </code>\n       ) are, and where to talk to your Selenium Server\n        (\n       <code>\n        seleniumAddress\n       </code>\n       ). It will use the defaults for all other\n        configuration. Chrome is the default browser.\n      </p>\n     </div>\n    </div>\n    <div class="row example">\n     <div class="col-md-12">\n      <h2>\n       Run the test\n      </h2>\n      <p>\n       Now run the test with:\n      </p>\n      <pre>protractor conf.js</pre>\n      <p>\n       You should see a Chrome browser window open up and navigate to the\n        todo list in the AngularJS page, then close itself (this should be very\n        fast!). The test output should be\n       <code>\n        1 test, 3 assertions, 0 failures\n       </code>\n       . Congratulations, you\'ve\n        run your first Protractor test!\n      </p>\n     </div>\n    </div>\n    <div class="row">\n     <div class="col-md-12">\n      <h2>\n       Learn More\n      </h2>\n      <p>\n       Learn more with the\n       <a href="#/tutorial">\n        Tutorial\n       </a>\n       .\n      </p>\n     </div>\n    </div>\n   </div>\n  </div>\n  <script id="twitter-wjs" src="http://platform.twitter.com/widgets.js">\n  </script>\n  <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js">\n  </script>\n  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.3.7/angular.min.js">\n  </script>\n  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.3.7/angular-route.min.js">\n  </script>\n  <script src="protractorApp.js">\n  </script>\n  <iframe allowtransparency="true" frameborder="0" scrolling="no" src="https://platform.twitter.com/widgets/widget_iframe.d753e00c3e838c1b2558149bd3f6ecb8.html?origin=http%3A%2F%2Fwww.protractortest.org" style="display: none;" title="Twitter settings iframe">\n  </iframe>\n </body>\n</html>'