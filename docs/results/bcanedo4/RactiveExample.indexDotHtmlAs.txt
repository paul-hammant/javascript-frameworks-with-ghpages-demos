b'<html lang="en-GB">\n <head>\n  <meta charset="utf-8"/>\n  <title>\n   Ractive test\n  </title>\n </head>\n <body>\n  <h1>\n   Ractive test\n  </h1>\n  <!--\n       1. This is the element we\'ll render our Ractive to.\n  -->\n  <div id="container">\n  </div>\n  <!--\n       2. You can load a template in many ways. For convenience, we\'ll include it in\n       a script tag so that we don\'t need to mess around with AJAX or multiline strings.\n       Note that we\'ve set the type attribute to \'text/ractive\' - though it can be\n       just about anything except \'text/javascript\'\n  -->\n  <script id="template" type="text/ractive">\n   <p>Hello, {{name}}!</p>\n  </script>\n  <!--\n       3. You can always get the most recent stable version from the URL below.\n       If you want the newest features (unstable!), use the \'edge\' version instead:\n\n           http://cdn.ractivejs.org/edge/ractive.min.js\n\n       If you need IE8 support, change \'ractive\' to \'ractive-legacy\'.\n  -->\n  <script src="http://cdn.ractivejs.org/latest/ractive.min.js">\n  </script>\n  <!--\n       4. We\'ve got an element in the DOM, we\'ve created a template, and we\'ve\n       loaded the library - now it\'s time to build our Hello World app.\n  -->\n  <script>\n   var ractive = new Ractive({\n      // The `el` option can be a node, an ID, or a CSS selector.\n      el: \'#container\',\n\n      // We could pass in a string, but for the sake of convenience\n      // we\'re passing the ID of the <script> tag above.\n      template: \'#template\',\n\n      // Here, we\'re passing in some initial data\n      data: { name: \'world\' }\n    });\n  </script>\n </body>\n</html>'