b'<html lang="en">\n <head>\n  <meta charset="utf-8"/>\n  <title>\n   vue-org-tree\n  </title>\n  <link href="https://unpkg.com/bootstrap@3.3.7/dist/css/bootstrap.min.css" rel="stylesheet"/>\n  <link href="https://unpkg.com/vue2-org-tree@1.1.0/dist/style.css" rel="stylesheet"/>\n  <style type="text/css">\n   .org-tree-node-label {\n      white-space: nowrap;\n    }\n    .bg-white {\n      background-color: white;\n    }\n    .bg-orange {\n      background-color: orange;\n    }\n    .bg-gold {\n      background-color: gold;\n    }\n    .bg-gray {\n      background-color: gray;\n    }\n    .bg-lightpink {\n      background-color: lightpink;\n    }\n    .bg-chocolate {\n      background-color: chocolate;\n    }\n    .bg-tomato {\n      background-color: tomato;\n    }\n  </style>\n </head>\n <body>\n  <div class="container" id="app">\n   <div class="col-md-10 col-md-offset-1">\n    <div class="page-header">\n     <h3>\n      \xe5\x9f\xba\xe4\xba\x8eVue\xe7\x9a\x84\xe7\xbb\x84\xe7\xbb\x87\xe6\x9e\xb6\xe6\x9e\x84\xe6\xa0\x91\xe7\xbb\x84\xe4\xbb\xb6\n     </h3>\n    </div>\n    <div class="row">\n     <div class="col-md-8 col-md-offset-2">\n      <form class="form-horizontal row">\n       <div class="col-md-4">\n        <div class="checkbox">\n         <label>\n          <input type="checkbox"/>\n          Horizontal\n         </label>\n        </div>\n       </div>\n       <div class="col-md-4">\n        <div class="checkbox">\n         <label>\n          <input type="checkbox"/>\n          Collapsable\n         </label>\n        </div>\n       </div>\n       <div class="col-md-4">\n        <div class="checkbox">\n         <label>\n          <input type="checkbox"/>\n          Expand All\n         </label>\n        </div>\n       </div>\n       <p>\n        <br/>\n       </p>\n       <p>\n        <br/>\n       </p>\n       <div class="col-md-6">\n        <div class="form-group">\n         <label class="control-label col-md-5">\n          labelClassName:\n         </label>\n         <div class="col-md-7">\n          <select class="form-control">\n           <option value="bg-white">\n            bg-white\n           </option>\n           <option value="bg-orange">\n            bg-orange\n           </option>\n           <option value="bg-gold">\n            bg-gold\n           </option>\n           <option value="bg-gray">\n            bg-gray\n           </option>\n           <option value="bg-lightpink">\n            bg-lightpink\n           </option>\n           <option value="bg-chocolate">\n            bg-chocolate\n           </option>\n           <option value="bg-tomato">\n            bg-tomato\n           </option>\n          </select>\n         </div>\n        </div>\n       </div>\n      </form>\n     </div>\n    </div>\n    <p>\n     <br/>\n    </p>\n    <div class="text-center">\n     <div class="org-tree-container">\n      <div class="org-tree collapsable">\n       <div class="org-tree-node collapsed">\n        <div class="org-tree-node-label">\n         <div class="org-tree-node-label-inner bg-white">\n          XXX\xe7\xa7\x91\xe6\x8a\x80\xe6\x9c\x89\xe9\x99\x90\xe5\x85\xac\xe5\x8f\xb8\n          <span class="org-tree-node-btn">\n          </span>\n         </div>\n        </div>\n       </div>\n      </div>\n     </div>\n    </div>\n   </div>\n  </div>\n  <script src="https://unpkg.com/vue@2.5.7/dist/vue.js">\n  </script>\n  <script src="https://unpkg.com/vue2-org-tree@1.1.0/dist/index.js">\n  </script>\n  <script type="text/javascript">\n   var vm = new Vue({\n        el: \'#app\',\n        data: {\n          data: {\n            id: 0,\n            label: \'XXX\xe7\xa7\x91\xe6\x8a\x80\xe6\x9c\x89\xe9\x99\x90\xe5\x85\xac\xe5\x8f\xb8\',\n            children: [{\n              id: 2,\n              label: \'\xe4\xba\xa7\xe5\x93\x81\xe7\xa0\x94\xe5\x8f\x91\xe9\x83\xa8\',\n              children: [{\n                id: 5,\n                label: \'\xe7\xa0\x94\xe5\x8f\x91-\xe5\x89\x8d\xe7\xab\xaf\'\n              }, {\n                id: 6,\n                label: \'\xe7\xa0\x94\xe5\x8f\x91-\xe5\x90\x8e\xe7\xab\xaf\'\n              }, {\n                id: 9,\n                label: \'UI\xe8\xae\xbe\xe8\xae\xa1\'\n              }, {\n                id: 10,\n                label: \'\xe4\xba\xa7\xe5\x93\x81\xe7\xbb\x8f\xe7\x90\x86\'\n              }]\n            }, {\n              id: 3,\n              label: \'\xe9\x94\x80\xe5\x94\xae\xe9\x83\xa8\',\n              children: [{\n                id: 7,\n                label: \'\xe9\x94\x80\xe5\x94\xae\xe4\xb8\x80\xe9\x83\xa8\'\n              }, {\n                id: 8,\n                label: \'\xe9\x94\x80\xe5\x94\xae\xe4\xba\x8c\xe9\x83\xa8\'\n              }]\n            }, {\n              id: 4,\n              label: \'\xe8\xb4\xa2\xe5\x8a\xa1\xe9\x83\xa8\'\n            }, {\n              id: 9,\n              label: \'HR\xe4\xba\xba\xe4\xba\x8b\'\n            }]\n          },\n          horizontal: false,\n          collapsable: true,\n          expandAll: false,\n          labelClassName: \'bg-white\'\n        },\n        methods: {\n          renderContent: function(h, data) {\n            return data.label\n          },\n          onExpand: function(data) {\n            if (\'expand\' in data) {\n              data.expand = !data.expand\n\n              if (!data.expand && data.children) {\n                this.collapse(data.children)\n              }\n            } else {\n              this.$set(data, \'expand\', true)\n            }\n          },\n          onNodeClick: function(e, data) {\n            alert(data.label)\n          },\n          collapse: function(list) {\n            var _this = this\n            list.forEach(function(child) {\n              if (child.expand) {\n                child.expand = false\n              }\n\n              child.children && _this.collapse(child.children)\n            })\n          },\n          expandChange: function() {\n            this.toggleExpand(this.data, this.expandAll)\n          },\n          toggleExpand: function(data, val) {\n            var _this = this\n            if (Array.isArray(data)) {\n              data.forEach(function(item){\n                _this.$set(item, \'expand\', val)\n                if (item.children) {\n                  _this.toggleExpand(item.children, val)\n                }\n              })\n            } else {\n              this.$set(data, \'expand\', val)\n              if (data.children) {\n                _this.toggleExpand(data.children, val)\n              }\n            }\n          }\n        }\n      })\n  </script>\n </body>\n</html>'