b'<html>\n <head>\n  <script src="http://cdn.ractivejs.org/edge/ractive.js">\n  </script>\n  <script src="ractive-l20n.js">\n  </script>\n  <style>\n   textarea { \n\t\tcolor: grey;\n\t\tfont-family: monospace;\n\t\tfont-size: 12pt;\n\t\theight: 250px;\n\t\twidth: 40%;\n\t\tclear: both;\n\t}\n\t#dictionary {\n\t\twidth: 80%;\n\t}\n\t#translate { \n\t\tbackground: cornsilk;\n\t\tpadding: 10px;\n\t\twidth: 95%;\n\t}\n\t#translate span.path {\n\t\tfont-family: monospace;\n\t\tfont-size: 12pt;\n\t\twidth: 20px;\n\t\ttext-align: right;\n\t}\n\t#translate .words {\n\t\tdisplay: inline-block;\n\t\tfont-family: monospace;\n\t\tfont-size: 12pt;\n\t\tmargin: 5px;\n\t\tborder: 5px solid whitesmoke;\n\t}\n\ta.forkme {\n\t\tposition: fixed;\n\t\tright: 3.5em;\n\t\ttop: 3.5em;\n\t\tbackground-color: #888;\n\t\tpadding: 0.2em 0;\n\t\twidth: 15em;\n\t\ttext-align: center;\n\t\tcolor: white;\n\t\t-webkit-transform: translate(50%,-50%) rotate(45deg);\n\t\t-moz-transform: translate(50%,-50%) rotate(45deg);\n\t\t-ms-transform: translate(50%,-50%) rotate(45deg);\n\t\t-o-transform: translate(50%,-50%) rotate(45deg);\n\t\ttransform: translate(50%,-50%) rotate(45deg);\n\t\tfont-family: Voltaire;\n\t\tfont-weight: bold;\n\t\tbox-shadow: 0 1px 4px rgba(0,0,0,0.4);\n\t\topacity: 0;\n\t\tdisplay: none;\n\t\tz-index: 2;\n\n\t\t-webkit-transition: opacity 0.5s;\n\t\t-moz-transition: opacity 0.5s;\n\t\t-ms-transition: opacity 0.5s;\n\t\t-o-transition: opacity 0.5s;\n\t\ttransition: opacity 0.5s;\n\t}\n\n\t.transforms-enabled a.forkme {\n\t\tdisplay: block;\n\t}\n\n\t.forkme:before, .forkme:after {\n\t\tcontent: \'\';\n\t\tdisplay: block;\n\t\twidth: 100%;\n\t\tborder-top: 1px dashed white;\n\t}\n\n\t@media screen and (min-width: 100px) {\n\t\ta.forkme {\n\t\t\topacity: 1;\n\t\t}\n\t}\n  </style>\n </head>\n <body class="transforms-enabled">\n  <a class="forkme" href="https://github.com/martypdx/ractive-l20n">\n   Fork me on GitHub\n  </a>\n  <h1>\n   Ractive l20n\n  </h1>\n  <div id="container">\n   <div>\n    <h2>\n     input\n    </h2>\n    <textarea id="in"></textarea>\n    <textarea></textarea>\n   </div>\n   <div id="translate">\n    <h2>\n     translatations\n    </h2>\n    <textarea id="dictionary"></textarea>\n   </div>\n   <h2>\n    output\n   </h2>\n   <textarea id="out">[\n  {\n    "t": 7,\n    "e": "h1",\n    "f": "My Template of Wonder"\n  },\n  {\n    "t": 7,\n    "e": "p",\n    "f": "Hello to everyone, here\'s the todo:"\n  },\n  {\n    "t": 7,\n    "e": "ul",\n    "f": [\n      {\n        "t": 4,\n        "r": "items",\n        "f": [\n          {\n            "t": 7,\n            "e": "li",\n            "f": [\n              {\n                "t": 2,\n                "r": ".title"\n              },\n              " by ",\n              {\n                "t": 2,\n                "r": ".date"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n]</textarea>\n  </div>\n  <script id="main" type="text/ractive">\n   <div>\n\t<h2>input</h2>\n\t<textarea id=\'in\' value=\'{{template}}\'/>\n\t<textarea value=\'{{ parsed ? JSON.stringify(parsed,true,2) : \'\'}}\'/>\n\t</div>\n\t<div id=\'translate\'>\n\t\t<h2>translatations</h2>\n\t\t<textarea id="dictionary" value=\'{{ dictionary }}\'/>\n\t\t<!--\n\t\t{{#dictionary:path}}\n\t\t\t<div>\n\t\t\t<span class=\'path\'>{{path}}:"{{dictionary[this]}}"</span>\n\t\t\t<input class=\'words\' value="{{.}}"/>\n\t\t\t</div>\n\t\t{{/}}\n\t\t-->\n\t</div>\n\t<h2>output</h2>\n\t<textarea id=\'out\'>{{ translated ? JSON.stringify(translated,true,2) : \'\' }}</textarea>\n  </script>\n  <script>\n   var Ractive = require(\'ractive\'),\n\tl20n = require(\'l20n\')\n\nvar r = new Ractive({\n\tel: \'#container\',\n\ttemplate: \'#main\',\n\tdata: {\n\t\ttemplate: \'<h1>My Template of Wonder</h1>\' + \n\t\t\t\'<p>Hello to everyone, here\\\'s the todo:</p>\' + \n\t\t\t\'<ul>{{#items}}<li>{{.title}} by {{.date}}</li>{{/}}</ul>\'\n\t}\n})\nr.observe(\'template\', function(n){\n\ttry {\n\t\tvar parsed = Ractive.parse(n),\n\t\t\tdictionary = l20n.index(parsed)\n\t\tr.set({\n\t\t\tparsed: parsed,\n\t\t\tdictionary: JSON.stringify(dictionary, true, 2) //dictionary\n\t\t})\n\t\tconsole.log(\'dictionary\', r.data.dictionary)\n\t}\n\tcatch(e){\n\t\tconsole.log(\'parse error\', e)\n\t}\n})\n\nr.observe(\'dictionary.*\', function(n){\n\tvar translatations = JSON.parse(r.get(\'dictionary\'))\n\tr.set(\'translated\', l20n.translate(r.get(\'parsed\'), translatations) )\n})\n  </script>\n  <script>\n   // if CSS transforms aren\'t supported, don\'t show the \'fork me\' button.\n\t// Quick and dirty detect\n\tstyle = document.createElement( \'div\' ).style;\n\n\tif ( style.transform !== undefined ) {\n\t\tdocument.body.className += \'transforms-enabled\';\n\t} else {\n\t\t[ \'webkit\', \'moz\', \'ms\', \'o\' ].forEach( function ( vendor ) {\n\t\t\tif ( style[ vendor + \'Transform\' ] !== undefined ) {\n\t\t\t\tdocument.body.className += \'transforms-enabled\';\n\t\t\t}\n\t\t});\n\t}\n  </script>\n </body>\n</html>'