b'<!DOCTYPE html>\n<html lang="en-GB" xmlns="http://www.w3.org/1999/xhtml">\n <head>\n  <meta charset="utf-8"/>\n  <title>\n   Ractive.js decorator helper plugin\n  </title>\n  <!-- CSS -->\n  <link href="http://fonts.googleapis.com/css?family=Voltaire" rel="stylesheet" type="text/css"/>\n  <link href="demo/main.css" rel="stylesheet"/>\n  <!-- TODO add styles specific to this demo -->\n  <style type="text/css">\n  </style>\n  <style type="text/css">\n  </style>\n </head>\n <body class="transforms-enabled">\n  <a class="forkme" href="https://github.com/martypdx/ractive-decorators-helpers">\n   Fork me on GitHub\n  </a>\n  <header>\n   <h1>\n    Ractive.js decorator helper plugin\n   </h1>\n   <div class="strap">\n    Download:\n    <ul>\n     <li>\n      <a href="https://raw.github.com/martypdx/ractive-decorators-helpers/master/ractive-decorators-helpers.js">\n       ractive-decorators-helpers.js\n      </a>\n     </li>\n     <li>\n      <a href="https://raw.github.com/martypdx/ractive-decorators-helpers/master/ractive-decorators-helpers.min.js">\n       ractive-decorators-helpers.min.js\n      </a>\n     </li>\n     <li>\n      <a href="https://github.com/martypdx/ractive-decorators-helpers">\n       github.com/martypdx/ractive-decorators-helpers\n      </a>\n     </li>\n    </ul>\n    <span class="more-plugins">\n     ...more plugins at\n     <a href="http://docs.ractivejs.org/latest/plugins">\n      docs.ractivejs.org/latest/plugins\n     </a>\n    </span>\n    <p>\n    </p>\n   </div>\n  </header>\n  <main>\n   <p>\n    Ractive.js decorator helper plugin.\n   </p>\n   <p>\n    Currently two helper methods:\n   </p>\n   <ul>\n    <li>\n     <code>\n      create()\n     </code>\n     for simple decorators that need no teardown and use the same function for initial load and update.\n    </li>\n    <li>\n     <code>\n      combine()\n     </code>\n     for combining decorators. Ractive currently only allows one dectorator per element. This function creates a decorator that allows the use of multiple decorators\n    </li>\n   </ul>\n   <p>\n    The helper functions are exposed as\n    <code>\n     Ractive.decorators.create\n    </code>\n    and\n    <code>\n     Ractive.decorators.combine\n    </code>\n    . Please note that they are meant to be invoked to create a decorator, and thus will\n    <strong>\n     not\n    </strong>\n    work as decorators themeselves. Also note that\n    <code>\n     Ractive.decorators.create\n    </code>\n    is\n    <strong>\n     not\n    </strong>\n    required in order to use\n    <code>\n     Ractive.decorators.combine\n    </code>\n    , through the examples below make use of it.\n   </p>\n   <h2>\n    .create( fn )\n   </h2>\n   <p>\n    Wraps the supplied function as a decorator, called both at load and update. No-op teardown functionality.\n   </p>\n   <p>\n    <code>\n     this\n    </code>\n    in the function refers to the decorated node.\n   </p>\n   <div class="clearfix" id="demo-create">\n    <p style="color: blue;">\n     This is a demo of the create() helper\n    </p>\n    <label>\n     Color:\n     <select>\n      <option selected="" value="blue">\n       blue\n      </option>\n      <option value="green">\n       green\n      </option>\n      <option value="red">\n       red\n      </option>\n     </select>\n    </label>\n   </div>\n   <pre class="prettyprint lang-html prettyprinted" id="demo-template-view-create"><span class="tag">&lt;p</span><span class="pln"> </span><span class="atn">decorator</span><span class="pun">=</span><span class="atv">"colorize: \'{{color}}\'"</span><span class="tag">&gt;</span><span class="pln">This is a demo of the create() helper</span><span class="tag">&lt;/p&gt;</span><span class="pln">\n\n</span><span class="tag">&lt;label&gt;</span><span class="pln">Color:\n  </span><span class="tag">&lt;select</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"{{color}}"</span><span class="tag">&gt;</span><span class="pln">\n    </span><span class="tag">&lt;option</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"blue"</span><span class="tag">&gt;</span><span class="pln">blue</span><span class="tag">&lt;/option&gt;</span><span class="pln">\n    </span><span class="tag">&lt;option</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"green"</span><span class="pln"> </span><span class="atn">selected</span><span class="tag">&gt;</span><span class="pln">green</span><span class="tag">&lt;/option&gt;</span><span class="pln">\n    </span><span class="tag">&lt;option</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"red"</span><span class="tag">&gt;</span><span class="pln">red</span><span class="tag">&lt;/option&gt;</span><span class="pln">\n  </span><span class="tag">&lt;/select&gt;</span><span class="pln">\n</span><span class="tag">&lt;/label&gt;</span></pre>\n   <pre class="prettyprint lang-js prettyprinted" id="demo-code-view-create"><span class="kwd">var</span><span class="pln"> ractive </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Ractive</span><span class="pun">({</span><span class="pln">\n  el</span><span class="pun">:</span><span class="pln"> </span><span class="str">\'#demo-create\'</span><span class="pun">,</span><span class="pln">\n  template</span><span class="pun">:</span><span class="pln"> </span><span class="str">\'#demo-template-create\'</span><span class="pun">,</span><span class="pln">\n  decorators</span><span class="pun">:</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n    colorize</span><span class="pun">:</span><span class="pln"> </span><span class="typ">Ractive</span><span class="pun">.</span><span class="pln">decorators</span><span class="pun">.</span><span class="pln">create</span><span class="pun">(</span><span class="kwd">function</span><span class="pun">(</span><span class="pln">color</span><span class="pun">){</span><span class="pln">\n      </span><span class="com">//"this" refers to the decorated node</span><span class="pln">\n      </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">style</span><span class="pun">.</span><span class="pln">color </span><span class="pun">=</span><span class="pln"> color\n    </span><span class="pun">})</span><span class="pln">\n  </span><span class="pun">},</span><span class="pln">\n  data</span><span class="pun">:</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> color</span><span class="pun">:</span><span class="pln"> </span><span class="str">\'blue\'</span><span class="pln"> </span><span class="pun">}</span><span class="pln">\n</span><span class="pun">});</span></pre>\n   <h2>\n    .combine( [ { n1: d1 }, { n2: d2 }, ... ])\n   </h2>\n   <p>\n    Wraps the supplied name/decorator pairs as a single decorator. The supplied array order is preserved in load and update.\n   </p>\n   <p>\n    The decorator is used in the template as:\n   </p>\n   <pre class="sample">decorator="alias: { name1: [arg1, arg2, argn], name2: [arg1, arg2, argn]}"</pre>\n   <p>\n    For single argument decortors, the array is optional:\n   </p>\n   <pre class="sample">decorator="alias: { name1: arg1, name2: [arg1, arg2]}"</pre>\n   <p>\n    You do not need to include all combined decorators:\n   </p>\n   <pre class="sample">decorator="alias: { name1: arg1 }"</pre>\n   <div class="clearfix" id="demo-combine">\n    <p style="color: green; font-weight: bold; font-size: 20pt;">\n     This is a demo of the combine() helper\n    </p>\n    <label>\n     Color:\n     <select>\n      <option value="blue">\n       blue\n      </option>\n      <option selected="" value="green">\n       green\n      </option>\n      <option value="red">\n       red\n      </option>\n     </select>\n    </label>\n    <label>\n     Font size:\n     <input max="48" min="8" type="range" value="20"/>\n    </label>\n   </div>\n   <pre class="prettyprint lang-html prettyprinted" id="demo-template-view-combine"><span class="tag">&lt;p</span><span class="pln"> </span><span class="atn">decorator</span><span class="pun">=</span><span class="atv">"styleMe: { color: \'{{color}}\', font: [\'bold\', \'{{pt}}\'] }"</span><span class="tag">&gt;</span><span class="pln">\n  This is a demo of the combine() helper\n</span><span class="tag">&lt;/p&gt;</span><span class="pln">\n\n</span><span class="tag">&lt;label&gt;</span><span class="pln">Color:\n  </span><span class="tag">&lt;select</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"{{color}}"</span><span class="tag">&gt;</span><span class="pln">\n    </span><span class="tag">&lt;option</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"blue"</span><span class="tag">&gt;</span><span class="pln">blue</span><span class="tag">&lt;/option&gt;</span><span class="pln">\n    </span><span class="tag">&lt;option</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"green"</span><span class="pln"> </span><span class="atn">selected</span><span class="tag">&gt;</span><span class="pln">green</span><span class="tag">&lt;/option&gt;</span><span class="pln">\n    </span><span class="tag">&lt;option</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"red"</span><span class="tag">&gt;</span><span class="pln">red</span><span class="tag">&lt;/option&gt;</span><span class="pln">\n  </span><span class="tag">&lt;/select&gt;</span><span class="pln">\n</span><span class="tag">&lt;/label&gt;</span><span class="pln">\n</span><span class="tag">&lt;label&gt;</span><span class="pln">Font size:\n  </span><span class="tag">&lt;input</span><span class="pln"> </span><span class="atn">type</span><span class="pun">=</span><span class="atv">\'range\'</span><span class="pln"> </span><span class="atn">min</span><span class="pun">=</span><span class="atv">8</span><span class="pln"> </span><span class="atn">max</span><span class="pun">=</span><span class="atv">48</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">\'{{pt}}\'</span><span class="tag">/&gt;</span><span class="pln">\n</span><span class="tag">&lt;/label&gt;</span></pre>\n   <pre class="prettyprint lang-js prettyprinted" id="demo-code-view-combine"><span class="kwd">var</span><span class="pln"> decorators </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Ractive</span><span class="pun">.</span><span class="pln">decorators</span><span class="pun">,</span><span class="pln">\n  combined </span><span class="pun">=</span><span class="pln"> decorators</span><span class="pun">.</span><span class="pln">combine</span><span class="pun">([</span><span class="pln">\n    </span><span class="pun">{</span><span class="pln">\n      color</span><span class="pun">:</span><span class="pln"> decorators</span><span class="pun">.</span><span class="pln">create</span><span class="pun">(</span><span class="kwd">function</span><span class="pun">(</span><span class="pln">color</span><span class="pun">){</span><span class="pln">\n        </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">style</span><span class="pun">.</span><span class="pln">color </span><span class="pun">=</span><span class="pln"> color\n      </span><span class="pun">})</span><span class="pln">\n    </span><span class="pun">},</span><span class="pln">\n    </span><span class="pun">{</span><span class="pln">\n      font</span><span class="pun">:</span><span class="pln"> decorators</span><span class="pun">.</span><span class="pln">create</span><span class="pun">(</span><span class="kwd">function</span><span class="pun">(</span><span class="pln">weight</span><span class="pun">,</span><span class="pln"> pt</span><span class="pun">){</span><span class="pln">\n        </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">style</span><span class="pun">.</span><span class="pln">fontWeight </span><span class="pun">=</span><span class="pln"> weight\n        </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">style</span><span class="pun">.</span><span class="pln">fontSize </span><span class="pun">=</span><span class="pln"> pt </span><span class="pun">+</span><span class="pln"> </span><span class="str">\'pt\'</span><span class="pln">\n      </span><span class="pun">})</span><span class="pln">\n    </span><span class="pun">}</span><span class="pln">\n  </span><span class="pun">]),</span><span class="pln">\n  ractive </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Ractive</span><span class="pun">({</span><span class="pln">\n    el</span><span class="pun">:</span><span class="pln"> </span><span class="str">\'#demo-combine\'</span><span class="pun">,</span><span class="pln">\n    template</span><span class="pun">:</span><span class="pln"> </span><span class="str">\'#demo-template-combine\'</span><span class="pun">,</span><span class="pln">\n    decorators</span><span class="pun">:</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n      styleMe</span><span class="pun">:</span><span class="pln"> combined\n    </span><span class="pun">},</span><span class="pln">\n    data </span><span class="pun">:</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n      color</span><span class="pun">:</span><span class="pln"> </span><span class="str">\'green\'</span><span class="pun">,</span><span class="pln">\n      pt</span><span class="pun">:</span><span class="pln"> </span><span class="lit">20</span><span class="pln">\n    </span><span class="pun">}</span><span class="pln">\n  </span><span class="pun">})</span></pre>\n  </main>\n  <!-- add additional info such as your homepage here, if you want -->\n  <footer>\n   <p>\n    Copyright \xc2\xa9 2014 Marty Nelson. Licensed MIT\n   </p>\n  </footer>\n  <!-- Demo template -->\n  <script id="demo-template-create" type="text/ractive">\n   &lt;p decorator="colorize: \'{{color}}\'"&gt;This is a demo of the create() helper&lt;/p&gt;\n\n\t\t&lt;label&gt;Color:\n\t\t\t&lt;select value="{{color}}"&gt;\n\t\t\t\t&lt;option value="blue"&gt;blue&lt;/option&gt;\n\t\t\t\t&lt;option value="green" selected&gt;green&lt;/option&gt;\n\t\t\t\t&lt;option value="red"&gt;red&lt;/option&gt;\n\t\t\t&lt;/select&gt;\n\t\t&lt;/label&gt;\n  </script>\n  <script id="demo-template-combine" type="text/ractive">\n   &lt;p decorator="styleMe: { color: \'{{color}}\', font: [\'bold\', \'{{pt}}\'] }"&gt;\n\t\t\tThis is a demo of the combine() helper\n\t\t&lt;/p&gt;\n\n\t\t&lt;label&gt;Color:\n\t\t\t&lt;select value="{{color}}"&gt;\n\t\t\t\t&lt;option value="blue"&gt;blue&lt;/option&gt;\n\t\t\t\t&lt;option value="green" selected&gt;green&lt;/option&gt;\n\t\t\t\t&lt;option value="red"&gt;red&lt;/option&gt;\n\t\t\t&lt;/select&gt;\n\t\t&lt;/label&gt;\n\t\t&lt;label&gt;Font size:\n\t\t\t&lt;input type=\'range\' min=8 max=48 value=\'{{pt}}\'/&gt;\n\t\t&lt;/label&gt;\n  </script>\n  <!-- Dependencies -->\n  <script src="http://cdn.ractivejs.org/latest/ractive.js">\n  </script>\n  <script src="ractive-decorators-helpers.js">\n  </script>\n  <!-- Demo code -->\n  <script id="demo-code-create">\n   var ractive = new Ractive({\n\t\t\tel: \'#demo-create\',\n\t\t\ttemplate: \'#demo-template-create\',\n\t\t\tdecorators: {\n\t\t\t\tcolorize: Ractive.decorators.create(function(color){\n\t\t\t\t\t//"this" refers to the decorated node\n\t\t\t\t\tthis.style.color = color\n\t\t\t\t})\n\t\t\t},\n\t\t\tdata: { color: \'blue\' }\n\t\t});\n  </script>\n  <!-- Demo code -->\n  <script id="demo-code-combine">\n   var decorators = Ractive.decorators,\n\t\t\tcombined = decorators.combine([\n\t\t\t\t{\n\t\t\t\t\tcolor: decorators.create(function(color){\n\t\t\t\t\t\tthis.style.color = color\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfont: decorators.create(function(weight, pt){\n\t\t\t\t\t\tthis.style.fontWeight = weight\n\t\t\t\t\t\tthis.style.fontSize = pt + \'pt\'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t]),\n\t\t\tractive = new Ractive({\n\t\t\t\tel: \'#demo-combine\',\n\t\t\t\ttemplate: \'#demo-template-combine\',\n\t\t\t\tdecorators: {\n\t\t\t\t\tstyleMe: combined\n\t\t\t\t},\n\t\t\t\tdata : {\n\t\t\t\t\tcolor: \'green\',\n\t\t\t\t\tpt: 20\n\t\t\t\t}\n\t\t\t})\n  </script>\n  <!-- Insert code into the page -->\n  <script src="demo/prettify.js">\n  </script>\n  <script src="demo/demo.js">\n  </script>\n </body>\n</html>'b'<!DOCTYPE html>\n<html lang="en-GB" xmlns="http://www.w3.org/1999/xhtml">\n <head>\n  <meta charset="utf-8"/>\n  <title>\n   Ractive.js decorator helper plugin\n  </title>\n  <!-- CSS -->\n  <link href="http://fonts.googleapis.com/css?family=Voltaire" rel="stylesheet" type="text/css"/>\n  <link href="demo/main.css" rel="stylesheet"/>\n  <!-- TODO add styles specific to this demo -->\n  <style type="text/css">\n  </style>\n  <style type="text/css">\n  </style>\n </head>\n <body class="transforms-enabled">\n  <a class="forkme" href="https://github.com/martypdx/ractive-decorators-helpers">\n   Fork me on GitHub\n  </a>\n  <header>\n   <h1>\n    Ractive.js decorator helper plugin\n   </h1>\n   <div class="strap">\n    Download:\n    <ul>\n     <li>\n      <a href="https://raw.github.com/martypdx/ractive-decorators-helpers/master/ractive-decorators-helpers.js">\n       ractive-decorators-helpers.js\n      </a>\n     </li>\n     <li>\n      <a href="https://raw.github.com/martypdx/ractive-decorators-helpers/master/ractive-decorators-helpers.min.js">\n       ractive-decorators-helpers.min.js\n      </a>\n     </li>\n     <li>\n      <a href="https://github.com/martypdx/ractive-decorators-helpers">\n       github.com/martypdx/ractive-decorators-helpers\n      </a>\n     </li>\n    </ul>\n    <span class="more-plugins">\n     ...more plugins at\n     <a href="http://docs.ractivejs.org/latest/plugins">\n      docs.ractivejs.org/latest/plugins\n     </a>\n    </span>\n    <p>\n    </p>\n   </div>\n  </header>\n  <main>\n   <p>\n    Ractive.js decorator helper plugin.\n   </p>\n   <p>\n    Currently two helper methods:\n   </p>\n   <ul>\n    <li>\n     <code>\n      create()\n     </code>\n     for simple decorators that need no teardown and use the same function for initial load and update.\n    </li>\n    <li>\n     <code>\n      combine()\n     </code>\n     for combining decorators. Ractive currently only allows one dectorator per element. This function creates a decorator that allows the use of multiple decorators\n    </li>\n   </ul>\n   <p>\n    The helper functions are exposed as\n    <code>\n     Ractive.decorators.create\n    </code>\n    and\n    <code>\n     Ractive.decorators.combine\n    </code>\n    . Please note that they are meant to be invoked to create a decorator, and thus will\n    <strong>\n     not\n    </strong>\n    work as decorators themeselves. Also note that\n    <code>\n     Ractive.decorators.create\n    </code>\n    is\n    <strong>\n     not\n    </strong>\n    required in order to use\n    <code>\n     Ractive.decorators.combine\n    </code>\n    , through the examples below make use of it.\n   </p>\n   <h2>\n    .create( fn )\n   </h2>\n   <p>\n    Wraps the supplied function as a decorator, called both at load and update. No-op teardown functionality.\n   </p>\n   <p>\n    <code>\n     this\n    </code>\n    in the function refers to the decorated node.\n   </p>\n   <div class="clearfix" id="demo-create">\n    <p style="color: blue;">\n     This is a demo of the create() helper\n    </p>\n    <label>\n     Color:\n     <select>\n      <option selected="" value="blue">\n       blue\n      </option>\n      <option value="green">\n       green\n      </option>\n      <option value="red">\n       red\n      </option>\n     </select>\n    </label>\n   </div>\n   <pre class="prettyprint lang-html prettyprinted" id="demo-template-view-create"><span class="tag">&lt;p</span><span class="pln"> </span><span class="atn">decorator</span><span class="pun">=</span><span class="atv">"colorize: \'{{color}}\'"</span><span class="tag">&gt;</span><span class="pln">This is a demo of the create() helper</span><span class="tag">&lt;/p&gt;</span><span class="pln">\n\n</span><span class="tag">&lt;label&gt;</span><span class="pln">Color:\n  </span><span class="tag">&lt;select</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"{{color}}"</span><span class="tag">&gt;</span><span class="pln">\n    </span><span class="tag">&lt;option</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"blue"</span><span class="tag">&gt;</span><span class="pln">blue</span><span class="tag">&lt;/option&gt;</span><span class="pln">\n    </span><span class="tag">&lt;option</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"green"</span><span class="pln"> </span><span class="atn">selected</span><span class="tag">&gt;</span><span class="pln">green</span><span class="tag">&lt;/option&gt;</span><span class="pln">\n    </span><span class="tag">&lt;option</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"red"</span><span class="tag">&gt;</span><span class="pln">red</span><span class="tag">&lt;/option&gt;</span><span class="pln">\n  </span><span class="tag">&lt;/select&gt;</span><span class="pln">\n</span><span class="tag">&lt;/label&gt;</span></pre>\n   <pre class="prettyprint lang-js prettyprinted" id="demo-code-view-create"><span class="kwd">var</span><span class="pln"> ractive </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Ractive</span><span class="pun">({</span><span class="pln">\n  el</span><span class="pun">:</span><span class="pln"> </span><span class="str">\'#demo-create\'</span><span class="pun">,</span><span class="pln">\n  template</span><span class="pun">:</span><span class="pln"> </span><span class="str">\'#demo-template-create\'</span><span class="pun">,</span><span class="pln">\n  decorators</span><span class="pun">:</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n    colorize</span><span class="pun">:</span><span class="pln"> </span><span class="typ">Ractive</span><span class="pun">.</span><span class="pln">decorators</span><span class="pun">.</span><span class="pln">create</span><span class="pun">(</span><span class="kwd">function</span><span class="pun">(</span><span class="pln">color</span><span class="pun">){</span><span class="pln">\n      </span><span class="com">//"this" refers to the decorated node</span><span class="pln">\n      </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">style</span><span class="pun">.</span><span class="pln">color </span><span class="pun">=</span><span class="pln"> color\n    </span><span class="pun">})</span><span class="pln">\n  </span><span class="pun">},</span><span class="pln">\n  data</span><span class="pun">:</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> color</span><span class="pun">:</span><span class="pln"> </span><span class="str">\'blue\'</span><span class="pln"> </span><span class="pun">}</span><span class="pln">\n</span><span class="pun">});</span></pre>\n   <h2>\n    .combine( [ { n1: d1 }, { n2: d2 }, ... ])\n   </h2>\n   <p>\n    Wraps the supplied name/decorator pairs as a single decorator. The supplied array order is preserved in load and update.\n   </p>\n   <p>\n    The decorator is used in the template as:\n   </p>\n   <pre class="sample">decorator="alias: { name1: [arg1, arg2, argn], name2: [arg1, arg2, argn]}"</pre>\n   <p>\n    For single argument decortors, the array is optional:\n   </p>\n   <pre class="sample">decorator="alias: { name1: arg1, name2: [arg1, arg2]}"</pre>\n   <p>\n    You do not need to include all combined decorators:\n   </p>\n   <pre class="sample">decorator="alias: { name1: arg1 }"</pre>\n   <div class="clearfix" id="demo-combine">\n    <p style="color: green; font-weight: bold; font-size: 20pt;">\n     This is a demo of the combine() helper\n    </p>\n    <label>\n     Color:\n     <select>\n      <option value="blue">\n       blue\n      </option>\n      <option selected="" value="green">\n       green\n      </option>\n      <option value="red">\n       red\n      </option>\n     </select>\n    </label>\n    <label>\n     Font size:\n     <input max="48" min="8" type="range" value="20"/>\n    </label>\n   </div>\n   <pre class="prettyprint lang-html prettyprinted" id="demo-template-view-combine"><span class="tag">&lt;p</span><span class="pln"> </span><span class="atn">decorator</span><span class="pun">=</span><span class="atv">"styleMe: { color: \'{{color}}\', font: [\'bold\', \'{{pt}}\'] }"</span><span class="tag">&gt;</span><span class="pln">\n  This is a demo of the combine() helper\n</span><span class="tag">&lt;/p&gt;</span><span class="pln">\n\n</span><span class="tag">&lt;label&gt;</span><span class="pln">Color:\n  </span><span class="tag">&lt;select</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"{{color}}"</span><span class="tag">&gt;</span><span class="pln">\n    </span><span class="tag">&lt;option</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"blue"</span><span class="tag">&gt;</span><span class="pln">blue</span><span class="tag">&lt;/option&gt;</span><span class="pln">\n    </span><span class="tag">&lt;option</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"green"</span><span class="pln"> </span><span class="atn">selected</span><span class="tag">&gt;</span><span class="pln">green</span><span class="tag">&lt;/option&gt;</span><span class="pln">\n    </span><span class="tag">&lt;option</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">"red"</span><span class="tag">&gt;</span><span class="pln">red</span><span class="tag">&lt;/option&gt;</span><span class="pln">\n  </span><span class="tag">&lt;/select&gt;</span><span class="pln">\n</span><span class="tag">&lt;/label&gt;</span><span class="pln">\n</span><span class="tag">&lt;label&gt;</span><span class="pln">Font size:\n  </span><span class="tag">&lt;input</span><span class="pln"> </span><span class="atn">type</span><span class="pun">=</span><span class="atv">\'range\'</span><span class="pln"> </span><span class="atn">min</span><span class="pun">=</span><span class="atv">8</span><span class="pln"> </span><span class="atn">max</span><span class="pun">=</span><span class="atv">48</span><span class="pln"> </span><span class="atn">value</span><span class="pun">=</span><span class="atv">\'{{pt}}\'</span><span class="tag">/&gt;</span><span class="pln">\n</span><span class="tag">&lt;/label&gt;</span></pre>\n   <pre class="prettyprint lang-js prettyprinted" id="demo-code-view-combine"><span class="kwd">var</span><span class="pln"> decorators </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Ractive</span><span class="pun">.</span><span class="pln">decorators</span><span class="pun">,</span><span class="pln">\n  combined </span><span class="pun">=</span><span class="pln"> decorators</span><span class="pun">.</span><span class="pln">combine</span><span class="pun">([</span><span class="pln">\n    </span><span class="pun">{</span><span class="pln">\n      color</span><span class="pun">:</span><span class="pln"> decorators</span><span class="pun">.</span><span class="pln">create</span><span class="pun">(</span><span class="kwd">function</span><span class="pun">(</span><span class="pln">color</span><span class="pun">){</span><span class="pln">\n        </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">style</span><span class="pun">.</span><span class="pln">color </span><span class="pun">=</span><span class="pln"> color\n      </span><span class="pun">})</span><span class="pln">\n    </span><span class="pun">},</span><span class="pln">\n    </span><span class="pun">{</span><span class="pln">\n      font</span><span class="pun">:</span><span class="pln"> decorators</span><span class="pun">.</span><span class="pln">create</span><span class="pun">(</span><span class="kwd">function</span><span class="pun">(</span><span class="pln">weight</span><span class="pun">,</span><span class="pln"> pt</span><span class="pun">){</span><span class="pln">\n        </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">style</span><span class="pun">.</span><span class="pln">fontWeight </span><span class="pun">=</span><span class="pln"> weight\n        </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">style</span><span class="pun">.</span><span class="pln">fontSize </span><span class="pun">=</span><span class="pln"> pt </span><span class="pun">+</span><span class="pln"> </span><span class="str">\'pt\'</span><span class="pln">\n      </span><span class="pun">})</span><span class="pln">\n    </span><span class="pun">}</span><span class="pln">\n  </span><span class="pun">]),</span><span class="pln">\n  ractive </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Ractive</span><span class="pun">({</span><span class="pln">\n    el</span><span class="pun">:</span><span class="pln"> </span><span class="str">\'#demo-combine\'</span><span class="pun">,</span><span class="pln">\n    template</span><span class="pun">:</span><span class="pln"> </span><span class="str">\'#demo-template-combine\'</span><span class="pun">,</span><span class="pln">\n    decorators</span><span class="pun">:</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n      styleMe</span><span class="pun">:</span><span class="pln"> combined\n    </span><span class="pun">},</span><span class="pln">\n    data </span><span class="pun">:</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n      color</span><span class="pun">:</span><span class="pln"> </span><span class="str">\'green\'</span><span class="pun">,</span><span class="pln">\n      pt</span><span class="pun">:</span><span class="pln"> </span><span class="lit">20</span><span class="pln">\n    </span><span class="pun">}</span><span class="pln">\n  </span><span class="pun">})</span></pre>\n  </main>\n  <!-- add additional info such as your homepage here, if you want -->\n  <footer>\n   <p>\n    Copyright \xc2\xa9 2014 Marty Nelson. Licensed MIT\n   </p>\n  </footer>\n  <!-- Demo template -->\n  <script id="demo-template-create" type="text/ractive">\n   &lt;p decorator="colorize: \'{{color}}\'"&gt;This is a demo of the create() helper&lt;/p&gt;\n\n\t\t&lt;label&gt;Color:\n\t\t\t&lt;select value="{{color}}"&gt;\n\t\t\t\t&lt;option value="blue"&gt;blue&lt;/option&gt;\n\t\t\t\t&lt;option value="green" selected&gt;green&lt;/option&gt;\n\t\t\t\t&lt;option value="red"&gt;red&lt;/option&gt;\n\t\t\t&lt;/select&gt;\n\t\t&lt;/label&gt;\n  </script>\n  <script id="demo-template-combine" type="text/ractive">\n   &lt;p decorator="styleMe: { color: \'{{color}}\', font: [\'bold\', \'{{pt}}\'] }"&gt;\n\t\t\tThis is a demo of the combine() helper\n\t\t&lt;/p&gt;\n\n\t\t&lt;label&gt;Color:\n\t\t\t&lt;select value="{{color}}"&gt;\n\t\t\t\t&lt;option value="blue"&gt;blue&lt;/option&gt;\n\t\t\t\t&lt;option value="green" selected&gt;green&lt;/option&gt;\n\t\t\t\t&lt;option value="red"&gt;red&lt;/option&gt;\n\t\t\t&lt;/select&gt;\n\t\t&lt;/label&gt;\n\t\t&lt;label&gt;Font size:\n\t\t\t&lt;input type=\'range\' min=8 max=48 value=\'{{pt}}\'/&gt;\n\t\t&lt;/label&gt;\n  </script>\n  <!-- Dependencies -->\n  <script src="http://cdn.ractivejs.org/latest/ractive.js">\n  </script>\n  <script src="ractive-decorators-helpers.js">\n  </script>\n  <!-- Demo code -->\n  <script id="demo-code-create">\n   var ractive = new Ractive({\n\t\t\tel: \'#demo-create\',\n\t\t\ttemplate: \'#demo-template-create\',\n\t\t\tdecorators: {\n\t\t\t\tcolorize: Ractive.decorators.create(function(color){\n\t\t\t\t\t//"this" refers to the decorated node\n\t\t\t\t\tthis.style.color = color\n\t\t\t\t})\n\t\t\t},\n\t\t\tdata: { color: \'blue\' }\n\t\t});\n  </script>\n  <!-- Demo code -->\n  <script id="demo-code-combine">\n   var decorators = Ractive.decorators,\n\t\t\tcombined = decorators.combine([\n\t\t\t\t{\n\t\t\t\t\tcolor: decorators.create(function(color){\n\t\t\t\t\t\tthis.style.color = color\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfont: decorators.create(function(weight, pt){\n\t\t\t\t\t\tthis.style.fontWeight = weight\n\t\t\t\t\t\tthis.style.fontSize = pt + \'pt\'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t]),\n\t\t\tractive = new Ractive({\n\t\t\t\tel: \'#demo-combine\',\n\t\t\t\ttemplate: \'#demo-template-combine\',\n\t\t\t\tdecorators: {\n\t\t\t\t\tstyleMe: combined\n\t\t\t\t},\n\t\t\t\tdata : {\n\t\t\t\t\tcolor: \'green\',\n\t\t\t\t\tpt: 20\n\t\t\t\t}\n\t\t\t})\n  </script>\n  <!-- Insert code into the page -->\n  <script src="demo/prettify.js">\n  </script>\n  <script src="demo/demo.js">\n  </script>\n </body>\n</html>'