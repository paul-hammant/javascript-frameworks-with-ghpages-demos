b'<html class="wf-proximanova-n7-active wf-sourcecodepro-n7-active wf-proximanova-i7-active wf-proximanova-n3-active wf-proximanova-i3-active wf-proximanova-n4-active wf-proximanova-i4-active wf-sourcecodepro-n4-active wf-active" lang="">\n <head>\n  <meta charset="utf-8"/>\n  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>\n  <title>\n   Draft.js \xc2\xb7 Rich Text Editor Framework for React\n  </title>\n  <meta content="width=device-width" name="viewport"/>\n  <meta content="Docusaurus" name="generator"/>\n  <meta content="Rich Text Editor Framework for React" name="description"/>\n  <meta content="Draft.js \xc2\xb7 Rich Text Editor Framework for React" property="og:title"/>\n  <meta content="website" property="og:type"/>\n  <meta content="https://draftjs.org/index.html" property="og:url"/>\n  <meta content="Rich Text Editor Framework for React" property="og:description"/>\n  <meta content="summary" name="twitter:card"/>\n  <link href="/img/draftjs-logo.ico" rel="shortcut icon"/>\n  <link href="https://cdn.jsdelivr.net/docsearch.js/1/docsearch.min.css" rel="stylesheet"/>\n  <link href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/styles/atelier-forest-light.min.css" rel="stylesheet"/>\n  <script async="" src="https://www.google-analytics.com/analytics.js">\n  </script>\n  <script>\n   (function(i,s,o,g,r,a,m){i[\'GoogleAnalyticsObject\']=r;i[r]=i[r]||function(){\n              (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n              m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n              })(window,document,\'script\',\'https://www.google-analytics.com/analytics.js\',\'ga\');\n\n              ga(\'create\', \'UA-44373548-19\', \'auto\');\n              ga(\'send\', \'pageview\');\n  </script>\n  <script src="https://buttons.github.io/buttons.js" type="text/javascript">\n  </script>\n  <style type="text/css">\n   .tk-proxima-nova{font-family:"proxima-nova",sans-serif;}.tk-source-code-pro{font-family:"source-code-pro",sans-serif;}\n  </style>\n  <style type="text/css">\n   @font-face{font-family:proxima-nova;src:url(https://use.typekit.net/af/925423/00000000000000003b9b038f/27/l?subset_id=2&fvd=n7&v=3) format("woff2"),url(https://use.typekit.net/af/925423/00000000000000003b9b038f/27/d?subset_id=2&fvd=n7&v=3) format("woff"),url(https://use.typekit.net/af/925423/00000000000000003b9b038f/27/a?subset_id=2&fvd=n7&v=3) format("opentype");font-weight:700;font-style:normal;}@font-face{font-family:proxima-nova;src:url(https://use.typekit.net/af/cd78b3/00000000000000003b9b038e/27/l?subset_id=2&fvd=i7&v=3) format("woff2"),url(https://use.typekit.net/af/cd78b3/00000000000000003b9b038e/27/d?subset_id=2&fvd=i7&v=3) format("woff"),url(https://use.typekit.net/af/cd78b3/00000000000000003b9b038e/27/a?subset_id=2&fvd=i7&v=3) format("opentype");font-weight:700;font-style:italic;}@font-face{font-family:proxima-nova;src:url(https://use.typekit.net/af/219c30/00000000000000003b9b0389/27/l?subset_id=2&fvd=n4&v=3) format("woff2"),url(https://use.typekit.net/af/219c30/00000000000000003b9b0389/27/d?subset_id=2&fvd=n4&v=3) format("woff"),url(https://use.typekit.net/af/219c30/00000000000000003b9b0389/27/a?subset_id=2&fvd=n4&v=3) format("opentype");font-weight:400;font-style:normal;}@font-face{font-family:proxima-nova;src:url(https://use.typekit.net/af/0de7d4/00000000000000003b9b0388/27/l?subset_id=2&fvd=i4&v=3) format("woff2"),url(https://use.typekit.net/af/0de7d4/00000000000000003b9b0388/27/d?subset_id=2&fvd=i4&v=3) format("woff"),url(https://use.typekit.net/af/0de7d4/00000000000000003b9b0388/27/a?subset_id=2&fvd=i4&v=3) format("opentype");font-weight:400;font-style:italic;}@font-face{font-family:proxima-nova;src:url(https://use.typekit.net/af/ed2fe5/00000000000000003b9b0387/27/l?subset_id=2&fvd=n3&v=3) format("woff2"),url(https://use.typekit.net/af/ed2fe5/00000000000000003b9b0387/27/d?subset_id=2&fvd=n3&v=3) format("woff"),url(https://use.typekit.net/af/ed2fe5/00000000000000003b9b0387/27/a?subset_id=2&fvd=n3&v=3) format("opentype");font-weight:300;font-style:normal;}@font-face{font-family:proxima-nova;src:url(https://use.typekit.net/af/4a8cbc/00000000000000003b9b0386/27/l?subset_id=2&fvd=i3&v=3) format("woff2"),url(https://use.typekit.net/af/4a8cbc/00000000000000003b9b0386/27/d?subset_id=2&fvd=i3&v=3) format("woff"),url(https://use.typekit.net/af/4a8cbc/00000000000000003b9b0386/27/a?subset_id=2&fvd=i3&v=3) format("opentype");font-weight:300;font-style:italic;}@font-face{font-family:source-code-pro;src:url(https://use.typekit.net/af/756772/0000000000000000000179d5/27/l?subset_id=2&fvd=n7&v=3) format("woff2"),url(https://use.typekit.net/af/756772/0000000000000000000179d5/27/d?subset_id=2&fvd=n7&v=3) format("woff"),url(https://use.typekit.net/af/756772/0000000000000000000179d5/27/a?subset_id=2&fvd=n7&v=3) format("opentype");font-weight:700;font-style:normal;}@font-face{font-family:source-code-pro;src:url(https://use.typekit.net/af/3c21b3/0000000000000000000179cf/27/l?subset_id=2&fvd=n4&v=3) format("woff2"),url(https://use.typekit.net/af/3c21b3/0000000000000000000179cf/27/d?subset_id=2&fvd=n4&v=3) format("woff"),url(https://use.typekit.net/af/3c21b3/0000000000000000000179cf/27/a?subset_id=2&fvd=n4&v=3) format("opentype");font-weight:400;font-style:normal;}\n  </style>\n  <link href="/css/main.css" rel="stylesheet"/>\n </head>\n <body>\n  <div class="fixedHeaderContainer">\n   <div class="headerWrapper wrapper">\n    <header>\n     <a href="/">\n      <img alt="Draft.js" class="logo" src="/img/draftjs-logo.svg"/>\n      <h2 class="headerTitleWithLogo">\n       Draft.js\n      </h2>\n     </a>\n     <div class="navigationWrapper navigationSlider">\n      <nav class="slidingNav">\n       <ul class="nav-site nav-site-internal">\n        <li class="">\n         <a href="/docs/getting-started" target="_self">\n          Docs\n         </a>\n        </li>\n        <li class="">\n         <a href="https://github.com/facebook/draft-js" target="_self">\n          GitHub\n         </a>\n        </li>\n        <li class="navSearchWrapper reactNavSearchWrapper">\n         <span class="algolia-autocomplete" style="position: relative; display: inline-block; direction: ltr;">\n          <input aria-autocomplete="list" aria-expanded="false" aria-labelledby="search_input_react" aria-owns="algolia-autocomplete-listbox-0" autocomplete="off" class="aa-input" dir="auto" id="search_input_react" placeholder="Search" role="combobox" spellcheck="false" style="position: relative; vertical-align: top;" title="Search" type="text"/>\n          <pre aria-hidden="true" style="position: absolute; visibility: hidden; white-space: pre; font-family: system-ui; font-size: 14px; font-style: normal; font-variant: normal; font-weight: 300; word-spacing: 0px; letter-spacing: normal; text-indent: 0px; text-rendering: auto; text-transform: none;"></pre>\n          <span class="aa-dropdown-menu" id="algolia-autocomplete-listbox-0" role="listbox" style="position: absolute; top: 100%; z-index: 100; display: none; left: 0px; right: auto;">\n           <div class="aa-dataset-1">\n           </div>\n          </span>\n         </span>\n        </li>\n       </ul>\n      </nav>\n     </div>\n    </header>\n   </div>\n  </div>\n  <div class="navPusher">\n   <div>\n    <div class="hero">\n     <div class="wrap">\n      <div class="text">\n       <strong>\n        Draft.js\n       </strong>\n      </div>\n      <div class="minitext">\n       Rich Text Editor Framework for React\n      </div>\n     </div>\n    </div>\n    <section class="content wrap">\n     <section class="home-section home-getting-started">\n      <p>\n       Draft.js is a framework for building rich text editors in React, powered by an immutable model and abstracting over cross-browser differences.\n      </p>\n      <p>\n       Draft.js makes it easy to build any type of rich text input, whether you\'re just looking to support a few inline text styles or building a complex text editor for composing long-form articles.\n      </p>\n      <p>\n       In Draft.js, everything is customizable \xe2\x80\x93 we provide the building blocks so that you have full control over the user interface.\n       <span class="hide-on-mobile">\n        Here\'s a simple example of a rich text editor built in Draft.js:\n       </span>\n      </p>\n      <div class="hide-on-mobile" id="rich-example">\n       <div class="RichEditor-root" data-reactroot="">\n        <div class="RichEditor-controls">\n         <span class="RichEditor-styleButton">\n          H1\n         </span>\n         <span class="RichEditor-styleButton">\n          H2\n         </span>\n         <span class="RichEditor-styleButton">\n          H3\n         </span>\n         <span class="RichEditor-styleButton">\n          H4\n         </span>\n         <span class="RichEditor-styleButton">\n          H5\n         </span>\n         <span class="RichEditor-styleButton">\n          H6\n         </span>\n         <span class="RichEditor-styleButton">\n          Blockquote\n         </span>\n         <span class="RichEditor-styleButton">\n          UL\n         </span>\n         <span class="RichEditor-styleButton">\n          OL\n         </span>\n         <span class="RichEditor-styleButton">\n          Code Block\n         </span>\n        </div>\n        <div class="RichEditor-controls">\n         <span class="RichEditor-styleButton">\n          Bold\n         </span>\n         <span class="RichEditor-styleButton">\n          Italic\n         </span>\n         <span class="RichEditor-styleButton">\n          Underline\n         </span>\n         <span class="RichEditor-styleButton">\n          Monospace\n         </span>\n        </div>\n        <div class="RichEditor-editor">\n         <div class="DraftEditor-root">\n          <div class="public-DraftEditorPlaceholder-root">\n           <div class="public-DraftEditorPlaceholder-inner" id="placeholder-1ktaf" style="white-space: pre-wrap;">\n            Tell a story...\n           </div>\n          </div>\n          <div class="DraftEditor-editorContainer">\n           <div aria-describedby="placeholder-1ktaf" class="notranslate public-DraftEditor-content" contenteditable="true" role="textbox" spellcheck="true" style="outline: none; user-select: text; white-space: pre-wrap; overflow-wrap: break-word;">\n            <!-- react-empty: 24 -->\n            <div data-contents="true">\n             <div data-block="true" data-editor="1ktaf" data-offset-key="fjdq-0-0">\n              <div class="public-DraftStyleDefault-block public-DraftStyleDefault-ltr" data-offset-key="fjdq-0-0">\n               <span data-offset-key="fjdq-0-0">\n                <br data-text="true"/>\n               </span>\n              </div>\n             </div>\n            </div>\n           </div>\n          </div>\n         </div>\n        </div>\n       </div>\n      </div>\n     </section>\n     <section class="home-bottom-section">\n      <div class="buttons-unit">\n       <a class="button" href="docs/getting-started.html">\n        Learn more about Draft\n       </a>\n      </div>\n     </section>\n    </section>\n    <script src="https://cdnjs.cloudflare.com/ajax/libs/react/15.0.1/react.min.js">\n    </script>\n    <script src="https://cdnjs.cloudflare.com/ajax/libs/react/15.0.1/react-dom.min.js">\n    </script>\n    <script src="https://cdnjs.cloudflare.com/ajax/libs/immutable/3.7.6/immutable.min.js">\n    </script>\n    <script src="https://cdnjs.cloudflare.com/ajax/libs/babel-core/5.8.34/browser.min.js">\n    </script>\n    <script src="lib/Draft.min.js">\n    </script>\n    <script src="//use.typekit.net/vqa1hcx.js" type="text/javascript">\n    </script>\n    <script type="text/javascript">\n     try{Typekit.load();}catch(e){}\n    </script>\n    <script type="text/babel">\n     \'use strict\';\n\nconst {Editor, EditorState, RichUtils, getDefaultKeyBinding} = Draft;\n\nclass RichEditorExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {editorState: EditorState.createEmpty()};\n\n    this.focus = () => this.editor.focus();\n    this.onChange = (editorState) => this.setState({editorState});\n\n    this.handleKeyCommand = this._handleKeyCommand.bind(this);\n    this.mapKeyToEditorCommand = this._mapKeyToEditorCommand.bind(this);\n    this.toggleBlockType = this._toggleBlockType.bind(this);\n    this.toggleInlineStyle = this._toggleInlineStyle.bind(this);\n  }\n\n  _handleKeyCommand(command, editorState) {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n    if (newState) {\n      this.onChange(newState);\n      return true;\n    }\n    return false;\n  }\n\n  _mapKeyToEditorCommand(e) {\n    switch (e.keyCode) {\n      case 9: // TAB\n        const newEditorState = RichUtils.onTab(\n          e,\n          this.state.editorState,\n          4, /* maxDepth */\n        );\n        if (newEditorState !== this.state.editorState) {\n          this.onChange(newEditorState);\n        }\n        return;\n    }\n    return getDefaultKeyBinding(e);\n  }\n\n  _toggleBlockType(blockType) {\n    this.onChange(\n      RichUtils.toggleBlockType(\n        this.state.editorState,\n        blockType\n      )\n    );\n  }\n\n  _toggleInlineStyle(inlineStyle) {\n    this.onChange(\n      RichUtils.toggleInlineStyle(\n        this.state.editorState,\n        inlineStyle\n      )\n    );\n  }\n\n  render() {\n    const {editorState} = this.state;\n\n    // If the user changes block type before entering any text, we can\n    // either style the placeholder or hide it. Let\'s just hide it now.\n    let className = \'RichEditor-editor\';\n    var contentState = editorState.getCurrentContent();\n    if (!contentState.hasText()) {\n      if (contentState.getBlockMap().first().getType() !== \'unstyled\') {\n        className += \' RichEditor-hidePlaceholder\';\n      }\n    }\n\n    return (\n      <div className="RichEditor-root">\n        <BlockStyleControls\n          editorState={editorState}\n          onToggle={this.toggleBlockType}\n        />\n        <InlineStyleControls\n          editorState={editorState}\n          onToggle={this.toggleInlineStyle}\n        />\n        <div className={className} onClick={this.focus}>\n          <Editor\n            blockStyleFn={getBlockStyle}\n            customStyleMap={styleMap}\n            editorState={editorState}\n            handleKeyCommand={this.handleKeyCommand}\n            keyBindingFn={this.mapKeyToEditorCommand}\n            onChange={this.onChange}\n            placeholder="Tell a story..."\n            ref={(ref) => this.editor = ref}\n            spellCheck={true}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\n// Custom overrides for "code" style.\nconst styleMap = {\n  CODE: {\n    backgroundColor: \'rgba(0, 0, 0, 0.05)\',\n    fontFamily: \'"Inconsolata", "Menlo", "Consolas", monospace\',\n    fontSize: 16,\n    padding: 2,\n  },\n};\n\nfunction getBlockStyle(block) {\n  switch (block.getType()) {\n    case \'blockquote\': return \'RichEditor-blockquote\';\n    default: return null;\n  }\n}\n\nclass StyleButton extends React.Component {\n  constructor() {\n    super();\n    this.onToggle = (e) => {\n      e.preventDefault();\n      this.props.onToggle(this.props.style);\n    };\n  }\n\n  render() {\n    let className = \'RichEditor-styleButton\';\n    if (this.props.active) {\n      className += \' RichEditor-activeButton\';\n    }\n\n    return (\n      <span className={className} onMouseDown={this.onToggle}>\n        {this.props.label}\n      </span>\n    );\n  }\n}\n\nconst BLOCK_TYPES = [\n  {label: \'H1\', style: \'header-one\'},\n  {label: \'H2\', style: \'header-two\'},\n  {label: \'H3\', style: \'header-three\'},\n  {label: \'H4\', style: \'header-four\'},\n  {label: \'H5\', style: \'header-five\'},\n  {label: \'H6\', style: \'header-six\'},\n  {label: \'Blockquote\', style: \'blockquote\'},\n  {label: \'UL\', style: \'unordered-list-item\'},\n  {label: \'OL\', style: \'ordered-list-item\'},\n  {label: \'Code Block\', style: \'code-block\'},\n];\n\nconst BlockStyleControls = (props) => {\n  const {editorState} = props;\n  const selection = editorState.getSelection();\n  const blockType = editorState\n    .getCurrentContent()\n    .getBlockForKey(selection.getStartKey())\n    .getType();\n\n  return (\n    <div className="RichEditor-controls">\n      {BLOCK_TYPES.map((type) =>\n        <StyleButton\n          key={type.label}\n          active={type.style === blockType}\n          label={type.label}\n          onToggle={props.onToggle}\n          style={type.style}\n        />\n      )}\n    </div>\n  );\n};\n\nvar INLINE_STYLES = [\n  {label: \'Bold\', style: \'BOLD\'},\n  {label: \'Italic\', style: \'ITALIC\'},\n  {label: \'Underline\', style: \'UNDERLINE\'},\n  {label: \'Monospace\', style: \'CODE\'},\n];\n\nconst InlineStyleControls = (props) => {\n  var currentStyle = props.editorState.getCurrentInlineStyle();\n  return (\n    <div className="RichEditor-controls">\n      {INLINE_STYLES.map(type =>\n        <StyleButton\n          key={type.label}\n          active={currentStyle.has(type.style)}\n          label={type.label}\n          onToggle={props.onToggle}\n          style={type.style}\n        />\n      )}\n    </div>\n  );\n};\n\nReactDOM.render(\n  <RichEditorExample />,\n  document.getElementById(\'rich-example\')\n);\n    </script>\n   </div>\n   <footer class="nav-footer" id="footer">\n    <section class="sitemap">\n     <div>\n      <h5>\n       Docs\n      </h5>\n      <a href="/docs/getting-started.html">\n       Getting Started\n      </a>\n      <a href="/docs/api-reference-editor.html">\n       API Reference\n      </a>\n     </div>\n     <div>\n      <h5>\n       Community\n      </h5>\n      <a href="http://stackoverflow.com/questions/tagged/draftjs" target="_blank">\n       Stack Overflow\n      </a>\n      <a href="https://twitter.com/draft_js" target="_blank">\n       Twitter\n      </a>\n     </div>\n     <div>\n      <h5>\n       More\n      </h5>\n      <a href="https://github.com/facebook/draft-js">\n       GitHub\n      </a>\n      <span>\n      </span>\n     </div>\n    </section>\n    <a class="fbOpenSource" href="https://code.facebook.com/projects/" target="_blank">\n     <img alt="Facebook Open Source" height="45" src="/img/oss_logo.png" width="170"/>\n    </a>\n    <section class="copyright">\n     Copyright \xc2\xa9 2019 Facebook Inc.\n    </section>\n   </footer>\n  </div>\n  <script src="https://cdn.jsdelivr.net/docsearch.js/1/docsearch.min.js" type="text/javascript">\n  </script>\n  <script>\n   var search = docsearch({\n                \n                apiKey: \'ae94c9e3ee00ea8edddd484adafc37cd\',\n                indexName: \'draft-js\',\n                inputSelector: \'#search_input_react\'\n              });\n  </script>\n </body>\n</html>'