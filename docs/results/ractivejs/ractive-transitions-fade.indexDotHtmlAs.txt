b'<html lang="en-GB">\n <head>\n  <meta charset="utf-8"/>\n  <title>\n   Ractive.js fade transition plugin\n  </title>\n  <!-- CSS -->\n  <link href="http://fonts.googleapis.com/css?family=Voltaire" rel="stylesheet" type="text/css"/>\n  <link href="demo/main.css" rel="stylesheet"/>\n  <style type="text/css">\n   #demo {\n\t\t\theight: 12em;\n\t\t}\n  </style>\n </head>\n <body class="transforms-enabled">\n  <!-- if the project is on GitHub, add a fork me button! -->\n  <a class="forkme" href="https://github.com/ractivejs/ractive-transitions-fade">\n   Fork me on GitHub\n  </a>\n  <header>\n   <h1>\n    Ractive.js fade transition plugin\n   </h1>\n   <p class="strap">\n    <span class="download">\n     download:\n     <a href="https://raw.githubusercontent.com/ractivejs/ractive-transitions-fade/master/dist/ractive-transitions-fade.umd.js">\n      ractive-transitions-fade.js\n     </a>\n    </span>\n    <span class="more-plugins">\n     more plugins at\n     <a href="http://docs.ractivejs.org/latest/plugins">\n      ractivejs.org/plugins\n     </a>\n    </span>\n   </p>\n  </header>\n  <main>\n   <p>\n    This plugin does exactly what it says on the tin \xe2\x80\x93 it fades elements in and out, using CSS transitions. You can control the following properties:\n    <code>\n     duration\n    </code>\n    ,\n    <code>\n     delay\n    </code>\n    and\n    <code>\n     easing\n    </code>\n    (which must be a valid\n    <a href="http://cubic-bezier.com/#.17,.67,.83,.67">\n     CSS transition timing function\n    </a>\n    , and defaults to\n    <code>\n     linear\n    </code>\n    ).\n   </p>\n   <p>\n    The\n    <code>\n     duration\n    </code>\n    property is in milliseconds, and defaults to 300 (you can also use\n    <code>\n     fast\n    </code>\n    or\n    <code>\n     slow\n    </code>\n    instead of a millisecond value, which equate to 200 and 600 respectively). As a shorthand, you can use\n    <code>\n     intro=\'fade:500\'\n    </code>\n    instead of\n    <code>\n     intro=\'fade:{"duration":500}\'\n    </code>\n    \xe2\x80\x93 this applies to many other transition plugins as well.\n   </p>\n   <p>\n    If an element has an opacity other than 1 (whether directly, because of an inline style, or indirectly because of a CSS rule), it will be respected. You can override the target opacity of an intro fade by specifying a\n    <code>\n     to\n    </code>\n    property between 0 and 1.\n   </p>\n   <div class="clearfix" id="demo">\n    <h2>\n     Any element can be faded in...\n    </h2>\n    <p>\n     <span>\n      ...fades\n     </span>\n     <span>\n      can\n     </span>\n     <span>\n      be\n     </span>\n     <span>\n      staggered,\n     </span>\n     <span style="opacity: 1; transition-property: opacity; transition-timing-function: linear; transition-duration: 0.8s;">\n      and\n     </span>\n     <span style="opacity: 1; transition-property: opacity; transition-timing-function: linear; transition-duration: 1s;">\n      their\n     </span>\n     <span style="opacity: 0;">\n      durations\n     </span>\n     <span style="opacity: 0;">\n      can\n     </span>\n     <span style="opacity: 0;">\n      be\n     </span>\n     <span style="opacity: 0;">\n      controlled\n     </span>\n    </p>\n   </div>\n   <pre class="prettyprint lang-html prettyprinted" id="demo-template-view" style=""><span class="tag">&lt;h2</span><span class="pln"> </span><span class="atn">intro-outro</span><span class="pun">=</span><span class="atv">\'fade:2000\'</span><span class="tag">&gt;</span><span class="pln">Any element can be faded in...</span><span class="tag">&lt;/h2&gt;</span><span class="pln">\n\n</span><span class="tag">&lt;p</span><span class="pln"> </span><span class="atn">outro</span><span class="pun">=</span><span class="atv">\'fade\'</span><span class="tag">&gt;</span><span class="pln">\n  {{#words:i}}\n    </span><span class="tag">&lt;span</span><span class="pln"> </span><span class="atn">intro</span><span class="pun">=</span><span class="atv">\'fade:{ delay:{{ i*400 }}, duration:{{ i*200 }} }\'</span><span class="tag">&gt;</span><span class="pln">{{this}}</span><span class="tag">&lt;/span&gt;</span><span class="pln">\n  {{/words}}\n</span><span class="tag">&lt;/p&gt;</span><span class="pln">\n\n{{#showButton}}\n  </span><span class="tag">&lt;button</span><span class="pln"> </span><span class="atn">on-tap</span><span class="pun">=</span><span class="atv">\'reset\'</span><span class="pln"> </span><span class="atn">intro-outro</span><span class="pun">=</span><span class="atv">\'fade\'</span><span class="tag">&gt;</span><span class="pln">Show me again!</span><span class="tag">&lt;/button&gt;</span><span class="pln">\n{{/showButton}}</span></pre>\n   <pre class="prettyprint lang-js prettyprinted" id="demo-code-view" style=""><span class="kwd">var</span><span class="pln"> render </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pln"> </span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n  ractive </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Ractive</span><span class="pun">({</span><span class="pln">\n    el</span><span class="pun">:</span><span class="pln"> </span><span class="str">\'demo\'</span><span class="pun">,</span><span class="pln">\n    template</span><span class="pun">:</span><span class="pln"> </span><span class="str">\'#demo-template\'</span><span class="pln">\n  </span><span class="pun">});</span><span class="pln">\n\n  </span><span class="com">// Add some words, then show the reset button</span><span class="pln">\n  ractive</span><span class="pun">.</span><span class="kwd">set</span><span class="pun">(</span><span class="pln"> </span><span class="str">\'words\'</span><span class="pun">,</span><span class="pln"> </span><span class="str">\'...fades can be staggered, and their durations can be controlled\'</span><span class="pun">.</span><span class="pln">split</span><span class="pun">(</span><span class="pln"> </span><span class="str">\' \'</span><span class="pln"> </span><span class="pun">),</span><span class="pln"> </span><span class="kwd">function</span><span class="pln"> </span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n    </span><span class="kwd">this</span><span class="pun">.</span><span class="kwd">set</span><span class="pun">(</span><span class="pln"> </span><span class="str">\'showButton\'</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">true</span><span class="pln"> </span><span class="pun">);</span><span class="pln">\n  </span><span class="pun">});</span><span class="pln">\n\n  ractive</span><span class="pun">.</span><span class="pln">on</span><span class="pun">(</span><span class="pln"> </span><span class="str">\'reset\'</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">function</span><span class="pln"> </span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n    </span><span class="com">// Teardown, then re-render once fadeouts are complete</span><span class="pln">\n    ractive</span><span class="pun">.</span><span class="pln">teardown</span><span class="pun">(</span><span class="pln"> render </span><span class="pun">);</span><span class="pln">\n  </span><span class="pun">});</span><span class="pln">\n</span><span class="pun">};</span><span class="pln">\n\nrender</span><span class="pun">();</span></pre>\n  </main>\n  <!-- add additional info such as your homepage here, if you want -->\n  <footer>\n   <p>\n    Copyright \xc2\xa9 2013 Rich Harris. Licensed MIT\n   </p>\n  </footer>\n  <!-- Demo template -->\n  <script id="demo-template" type="text/ractive">\n   <h2 intro-outro=\'fade:2000\'>Any element can be faded in...</h2>\n\n\t\t<p outro=\'fade\'>\n\t\t\t{{#words:i}}\n\t\t\t\t<span intro=\'fade:{ delay:{{ i*400 }}, duration:{{ i*200 }} }\'>{{this}}</span>\n\t\t\t{{/words}}\n\t\t</p>\n\n\t\t{{#showButton}}\n\t\t\t<button on-tap=\'reset\' intro-outro=\'fade\'>Show me again!</button>\n\t\t{{/showButton}}\n  </script>\n  <!-- Dependencies -->\n  <script src="lib/ractive/ractive.js">\n  </script>\n  <script src="lib/ractive-events-tap/ractive-events-tap.js">\n  </script>\n  <script src="ractive-transitions-fade.js">\n  </script>\n  <!-- Demo code -->\n  <script id="demo-code">\n   var render = function () {\n\t\t\tractive = new Ractive({\n\t\t\t\tel: \'demo\',\n\t\t\t\ttemplate: \'#demo-template\'\n\t\t\t});\n\n\t\t\t// Add some words, then show the reset button\n\t\t\tractive.set( \'words\', \'...fades can be staggered, and their durations can be controlled\'.split( \' \' ), function () {\n\t\t\t\tthis.set( \'showButton\', true );\n\t\t\t});\n\n\t\t\tractive.on( \'reset\', function () {\n\t\t\t\t// Teardown, then re-render once fadeouts are complete\n\t\t\t\tractive.teardown( render );\n\t\t\t});\n\t\t};\n\n\t\trender();\n  </script>\n  <!-- Insert code into the page -->\n  <script src="demo/prettify.js">\n  </script>\n  <script src="demo/demo.js">\n  </script>\n </body>\n</html>'