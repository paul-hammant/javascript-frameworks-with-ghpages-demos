b'<html lang="en-GB">\n <head>\n  <meta charset="utf-8"/>\n  <title>\n   Ractive.js tap event plugin\n  </title>\n  <!-- CSS -->\n  <link href="http://fonts.googleapis.com/css?family=Voltaire" rel="stylesheet" type="text/css"/>\n  <link href="demo/main.css" rel="stylesheet"/>\n  <style type="text/css">\n   .target {\n\t\t\tposition: relative;\n\t\t\twidth: 49%;\n\t\t\theight: 100px;\n\t\t\tfloat: left;\n\t\t\tbackground-color: #eee;\n\t\t\tcursor: pointer;\n\t\t\tmargin: 0 0 2em 0;\n\t\t\t-webkit-user-select: none;\n\t\t\t-moz-user-select: none;\n\t\t\t-ms-user-select: none;\n\t\t\t-o-user-select: none;\n\t\t\tuser-select: none;\n\t\t}\n\n\t\t.target.left {\n\t\t\tmargin-right: 1%;\n\t\t}\n\n\t\t.target.right {\n\t\t\tmargin-left: 1%;\n\t\t}\n\n\t\t.target p {\n\t\t\tposition: absolute;\n\t\t\tbottom: 1em;\n\t\t\tleft: 1em;\n\t\t\tmargin: 0;\n\t\t}\n\n\t\t#demo button {\n\t\t\tdisplay: block;\n\t\t\tfloat: left;\n\t\t\twidth: 32%;\n\t\t\tmargin: 0 2% 0 0;\n\t\t\tpadding: 1em;\n\t\t\t-webkit-box-sizing: border-box;\n\t\t\t-moz-box-sizing: border-box;\n\t\t\tbox-sizing: border-box;\n\t\t}\n\n\t\t#demo button:last-child {\n\t\t\tmargin: 0;\n\t\t}\n  </style>\n </head>\n <body class="transforms-enabled">\n  <!-- if the project is on GitHub, add a fork me button! -->\n  <a class="forkme" href="https://github.com/ractivejs/ractive-events-tap">\n   Fork me on GitHub\n  </a>\n  <header>\n   <h1>\n    Ractive.js tap event plugin\n   </h1>\n   <p class="strap">\n    <span class="download">\n     download:\n     <a href="https://github.com/ractivejs/ractive-events-tap/raw/master/dist/ractive-events-tap.umd.js">\n      ractive-events-tap.js\n     </a>\n    </span>\n    <span class="more-plugins">\n     more plugins at\n     <a href="http://docs.ractivejs.org/latest/plugins">\n      ractivejs.org/plugins\n     </a>\n    </span>\n   </p>\n  </header>\n  <main>\n   <p>\n    On mobile devices, using\n    <code>\n     on-click\n    </code>\n    isn\'t good enough. Tapping the touchscreen will fire a simulated click event, but only after a 300 millisecond delay, which makes your app feel sluggish. It also causes the tapped area to highlight, which in most cases looks a bit messy.\n   </p>\n   <p>\n    Instead, use\n    <code>\n     on-tap\n    </code>\n    . When you tap an area, the simulated click event will be prevented, and the user\'s action is responded to instantly. The\n    <code>\n     on-tap\n    </code>\n    event also differs from\n    <code>\n     on-click\n    </code>\n    in that the click event will (frankly rather bizarrely) fire even if you hold the mouse down over a single element for several seconds and waggle it about.\n   </p>\n   <p>\n    <a href="https://dvcs.w3.org/hg/pointerevents/raw-file/tip/pointerEvents.html">\n     Pointer events\n    </a>\n    are also supported, as is pressing the spacebar when the relevant element is focused (which triggers a click event, and is good for accessibility).\n   </p>\n   <div class="clearfix" id="demo">\n   </div>\n   <pre class="prettyprint lang-html prettyprinted" id="demo-template-view" style=""><span class="tag">&lt;h2&gt;</span><span class="pln">Try tapping both targets on a touchscreen to see the difference</span><span class="tag">&lt;/h2&gt;</span><span class="pln">\n</span><span class="tag">&lt;div</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">\'target left\'</span><span class="pln"> </span><span class="atn">on-tap</span><span class="pun">=</span><span class="atv">\'increment:tapcounter\'</span><span class="tag">&gt;</span><span class="pln">\n  </span><span class="tag">&lt;p&gt;</span><span class="pln">Tapped {{tapcounter}} {{ tapcounter === 1 ? \'time\' : \'times\' }}</span><span class="tag">&lt;/p&gt;</span><span class="pln">\n</span><span class="tag">&lt;/div&gt;</span><span class="pln">\n\n</span><span class="tag">&lt;div</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">\'target right\'</span><span class="pln"> </span><span class="atn">on-click</span><span class="pun">=</span><span class="atv">\'increment:clickcounter\'</span><span class="tag">&gt;</span><span class="pln">\n  </span><span class="tag">&lt;p&gt;</span><span class="pln">Clicked {{clickcounter}} {{ clickcounter === 1 ? \'time\' : \'times\' }}</span><span class="tag">&lt;/p&gt;</span><span class="pln">\n</span><span class="tag">&lt;/div&gt;</span><span class="pln">\n\n</span><span class="tag">&lt;h2&gt;</span><span class="pln">While a button is focused, hit the spacebar (tab/shift+tab to cycle)</span><span class="tag">&lt;/h2&gt;</span><span class="pln">\n{{# buttoncounters:i }}\n  </span><span class="tag">&lt;button</span><span class="pln"> </span><span class="atn">on-tap</span><span class="pun">=</span><span class="atv">\'increment:buttoncounters[{{i}}]\'</span><span class="tag">&gt;</span><span class="pln">Tap me ({{this}})</span><span class="tag">&lt;/button&gt;</span><span class="pln">\n{{/ buttoncounters }}</span></pre>\n   <pre class="prettyprint lang-js prettyprinted" id="demo-code-view" style=""><span class="pln">ractive </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Ractive</span><span class="pun">({</span><span class="pln">\n  el</span><span class="pun">:</span><span class="pln"> </span><span class="str">\'demo\'</span><span class="pun">,</span><span class="pln">\n  template</span><span class="pun">:</span><span class="pln"> </span><span class="str">\'#demo-template\'</span><span class="pun">,</span><span class="pln">\n  data</span><span class="pun">:</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n    tapcounter</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln">\n    clickcounter</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln">\n    buttoncounters</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">]</span><span class="pln">\n  </span><span class="pun">}</span><span class="pln">\n</span><span class="pun">});</span><span class="pln">\n\nractive</span><span class="pun">.</span><span class="pln">on</span><span class="pun">(</span><span class="pln"> </span><span class="str">\'increment\'</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">function</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> event</span><span class="pun">,</span><span class="pln"> counter </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n  </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">add</span><span class="pun">(</span><span class="pln"> counter</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1</span><span class="pln"> </span><span class="pun">);</span><span class="pln">\n</span><span class="pun">});</span></pre>\n  </main>\n  <!-- add additional info such as your homepage here, if you want -->\n  <footer>\n   <p>\n    Copyright \xc2\xa9 2013 Rich Harris. Licensed MIT\n   </p>\n  </footer>\n  <!-- Demo template -->\n  <script id="demo-template" type="text/ractive">\n   <h2>Try tapping both targets on a touchscreen to see the difference</h2>\n\t\t<div class=\'target left\' on-tap=\'increment:tapcounter\'>\n\t\t\t<p>Tapped {{tapcounter}} {{ tapcounter === 1 ? \'time\' : \'times\' }}</p>\n\t\t</div>\n\n\t\t<div class=\'target right\' on-click=\'increment:clickcounter\'>\n\t\t\t<p>Clicked {{clickcounter}} {{ clickcounter === 1 ? \'time\' : \'times\' }}</p>\n\t\t</div>\n\n\t\t<h2>While a button is focused, hit the spacebar (tab/shift+tab to cycle)</h2>\n\t\t{{# buttoncounters:i }}\n\t\t\t<button on-tap=\'increment:buttoncounters[{{i}}]\'>Tap me ({{this}})</button>\n\t\t{{/ buttoncounters }}\n  </script>\n  <!-- Dependencies -->\n  <script src="lib/ractive-legacy.js">\n  </script>\n  <script src="ractive-events-tap.js">\n  </script>\n  <!-- Demo code -->\n  <script id="demo-code">\n   ractive = new Ractive({\n\t\t\tel: \'demo\',\n\t\t\ttemplate: \'#demo-template\',\n\t\t\tdata: {\n\t\t\t\ttapcounter: 0,\n\t\t\t\tclickcounter: 0,\n\t\t\t\tbuttoncounters: [ 0, 0, 0 ]\n\t\t\t}\n\t\t});\n\n\t\tractive.on( \'increment\', function ( event, counter ) {\n\t\t\tthis.add( counter, 1 );\n\t\t});\n  </script>\n  <!-- Insert code into the page -->\n  <script src="demo/prettify.js">\n  </script>\n  <script src="demo/demo.js">\n  </script>\n </body>\n</html>'