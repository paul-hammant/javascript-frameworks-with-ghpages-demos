b'<html lang="en">\n <head>\n  <meta charset="utf-8"/>\n  <meta content="width=device-width, initial-scale=1, user-scalable=no" name="viewport"/>\n  <title>\n   React RangeSlider\n  </title>\n  <link href="https://fonts.googleapis.com/css?family=Fira+Mono|Roboto+Mono" rel="stylesheet"/>\n  <link href="https://unpkg.com/highlight.js@9.12.0/styles/tomorrow-night-eighties.css" rel="stylesheet"/>\n  <link href="favicon.ico" rel="shortcut icon" type="image/x-icon"/>\n  <link href="bundle.css" rel="stylesheet"/>\n </head>\n <body>\n  <div id="mount">\n   <div class="wrapper" data-reactroot="">\n    <header>\n     <section class="block">\n      <h1>\n       <a href="/">\n        React Rangeslider\n       </a>\n      </h1>\n      <p>\n       A fast &amp; lightweight react component as a drop in replacement for HTML5 input range slider element.\n      </p>\n      <p style="margin-top: 20px; text-align: center;">\n       <!-- react-text: 8 -->\n       Please refer to the source on\n       <!-- /react-text -->\n       <!-- react-text: 9 -->\n       <!-- /react-text -->\n       <a href="http://github.com/whoisandy/react-rangeslider">\n        Github\n       </a>\n      </p>\n      <div style="text-align: center;">\n       <span class="github-btn github-btn-large">\n        <a class="gh-btn" href="//github.com/whoisandy/react-rangeslider/" target="_blank">\n         <span aria-hidden="true" class="gh-ico">\n         </span>\n         <span class="gh-text">\n          Star\n         </span>\n        </a>\n        <a class="gh-count" href="//github.com/whoisandy/react-rangeslider/stargazers/" style="display: block;" target="_blank">\n         523\n        </a>\n       </span>\n       <span class="github-btn github-btn-large">\n        <a class="gh-btn" href="//github.com/whoisandy/react-rangeslider/" target="_blank">\n         <span aria-hidden="true" class="gh-ico">\n         </span>\n         <span class="gh-text">\n          Fork\n         </span>\n        </a>\n        <a class="gh-count" href="//github.com/whoisandy/react-rangeslider/network/" style="display: block;" target="_blank">\n         191\n        </a>\n       </span>\n      </div>\n     </section>\n    </header>\n    <section>\n     <section class="block">\n      <h2>\n       Features\n      </h2>\n      <ul>\n       <li>\n        Touchscreen friendly\n       </li>\n       <li>\n        Suitable for use within responsive designs\n       </li>\n       <li>\n        Small and fast (8.1Kb Gzipped)\n       </li>\n      </ul>\n     </section>\n     <section class="block install">\n      <h2>\n       Installation\n      </h2>\n      <p>\n       <!-- react-text: 32 -->\n       Using npm (use\n       <!-- /react-text -->\n       <code>\n        --save\n       </code>\n       <!-- react-text: 34 -->\n       to include it in your package.json)\n       <!-- /react-text -->\n      </p>\n      <div class="code hljs">\n       <pre><code class="lang-js">$ npm install react-rangeslider --save\n</code></pre>\n      </div>\n      <p>\n       <!-- react-text: 37 -->\n       Using yarn (use\n       <!-- /react-text -->\n       <code>\n        --dev\n       </code>\n       <!-- react-text: 39 -->\n       to include it in your package.json)\n       <!-- /react-text -->\n      </p>\n      <div class="code hljs">\n       <pre><code class="lang-js">$ yarn add react-rangeslider --save\n</code></pre>\n      </div>\n     </section>\n     <section class="block">\n      <h2>\n       Usage\n      </h2>\n      <p>\n       React-Rangeslider is bundled with a single slider component. By default, basic styles are applied, but can be overridden depending on your design requirements.\n      </p>\n      <p>\n       With a module bundler like webpack that supports either CommonJS or ES2015 modules, use as you would anything else:\n      </p>\n      <div class="code hljs">\n       <pre><code class="lang-js"><span class="hljs-comment">// Using an ES6 transpiler like Babel</span>\n<span class="hljs-keyword">import</span> Slider <span class="hljs-keyword">from</span> <span class="hljs-string">\'react-rangeslider\'</span>\n\n<span class="hljs-comment">// To include the default styles</span>\n<span class="hljs-keyword">import</span> <span class="hljs-string">\'react-rangeslider/lib/index.css\'</span>\n\n<span class="hljs-comment">// Not using an ES6 transpiler</span>\n<span class="hljs-keyword">var</span> Slider = <span class="hljs-built_in">require</span>(<span class="hljs-string">\'react-rangeslider\'</span>)\n</code></pre>\n      </div>\n      <p>\n       <!-- react-text: 47 -->\n       The UMD build is also available on\n       <!-- /react-text -->\n       <!-- react-text: 48 -->\n       <!-- /react-text -->\n       <a href="https://unpkg.com/react-rangeslider/umd/ReactRangeslider.min.js">\n        unpkg:\n       </a>\n      </p>\n      <div class="code hljs">\n       <pre><code class="lang-js">&lt;script src=<span class="hljs-string">"https://unpkg.com/react-rangeslider/umd/rangeslider.min.js"</span>&gt;<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span>\n</code></pre>\n      </div>\n      <p>\n       <!-- react-text: 52 -->\n       You can find the library on\n       <!-- /react-text -->\n       <!-- react-text: 53 -->\n       <!-- /react-text -->\n       <code>\n        window.ReactRangeslider\n       </code>\n       <!-- react-text: 55 -->\n       . Optionally you can drop in the default styles by adding the stylesheet.\n       <!-- /react-text -->\n      </p>\n      <div class="code hljs">\n       <pre><code class="lang-js">&lt;link rel=<span class="hljs-string">"stylesheet"</span> href=<span class="hljs-string">"https://unpkg.com/react-rangeslider/umd/rangeslider.min.css"</span> /&gt;\n</code></pre>\n      </div>\n     </section>\n     <section class="block">\n      <h2>\n       Examples\n      </h2>\n      <div class="demo-panel">\n       <div class="demo-panel-title">\n        <h4>\n         Basic Slider\n        </h4>\n        <a href="#" id="source">\n         View Source\n        </a>\n        <a href="#" id="codesandbox">\n         Code Sandbox\n        </a>\n       </div>\n       <div class="demo-panel-content">\n        <div class="slider">\n         <div aria-orientation="horizontal" aria-valuemax="100" aria-valuemin="0" aria-valuenow="10" class="rangeslider rangeslider-horizontal">\n          <div class="rangeslider__fill" style="width: 120px;">\n          </div>\n          <div class="rangeslider__handle" style="left: 120px;" tabindex="0">\n           <div class="rangeslider__handle-label">\n           </div>\n          </div>\n          <ul class="rangeslider__labels">\n          </ul>\n         </div>\n         <div class="value">\n          10\n         </div>\n        </div>\n        <div class="code hljs">\n         <pre><code class="lang-js"><span class="hljs-keyword">import</span> React, { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'react\'</span>\n<span class="hljs-keyword">import</span> Slider <span class="hljs-keyword">from</span> <span class="hljs-string">\'react-rangeslider\'</span>\n\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Horizontal</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Component</span> </span>{\n  <span class="hljs-keyword">constructor</span> (props, context) {\n    <span class="hljs-keyword">super</span>(props, context)\n    <span class="hljs-keyword">this</span>.state = {\n      <span class="hljs-attr">value</span>: <span class="hljs-number">10</span>\n    }\n  }\n\n  handleChangeStart = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {\n    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'Change event started\'</span>)\n  };\n\n  handleChange = <span class="hljs-function"><span class="hljs-params">value</span> =&gt;</span> {\n    <span class="hljs-keyword">this</span>.setState({\n      <span class="hljs-attr">value</span>: value\n    })\n  };\n\n  handleChangeComplete = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {\n    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'Change event completed\'</span>)\n  };\n\n  render () {\n    <span class="hljs-keyword">const</span> { value } = <span class="hljs-keyword">this</span>.state\n    <span class="hljs-keyword">return</span> (\n      <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">\'slider\'</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">Slider</span>\n          <span class="hljs-attr">min</span>=<span class="hljs-string">{0}</span>\n          <span class="hljs-attr">max</span>=<span class="hljs-string">{100}</span>\n          <span class="hljs-attr">value</span>=<span class="hljs-string">{value}</span>\n          <span class="hljs-attr">onChangeStart</span>=<span class="hljs-string">{this.handleChangeStart}</span>\n          <span class="hljs-attr">onChange</span>=<span class="hljs-string">{this.handleChange}</span>\n          <span class="hljs-attr">onChangeComplete</span>=<span class="hljs-string">{this.handleChangeComplete}</span>\n        /&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">\'value\'</span>&gt;</span>{value}<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    )\n  }\n}\n\nexport default Horizontal</span>\n</code></pre>\n        </div>\n       </div>\n      </div>\n      <div class="demo-panel">\n       <div class="demo-panel-title">\n        <h4>\n         Negative Values (No Tooltip)\n        </h4>\n        <a href="#" id="source">\n         View Source\n        </a>\n        <a href="#" id="codesandbox">\n         Code Sandbox\n        </a>\n       </div>\n       <div class="demo-panel-content">\n        <div class="slider">\n         <div aria-orientation="horizontal" aria-valuemax="0" aria-valuemin="-20" aria-valuenow="-10" class="rangeslider rangeslider-horizontal">\n          <div class="rangeslider__fill" style="width: 539px;">\n          </div>\n          <div class="rangeslider__handle" style="left: 539px;" tabindex="0">\n           <div class="rangeslider__handle-label">\n           </div>\n          </div>\n          <ul class="rangeslider__labels">\n          </ul>\n         </div>\n         <div class="value">\n          -10\n         </div>\n        </div>\n        <div class="code hljs">\n         <pre><code class="lang-js"><span class="hljs-keyword">import</span> React, { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'react\'</span>\n<span class="hljs-keyword">import</span> Slider <span class="hljs-keyword">from</span> <span class="hljs-string">\'react-rangeslider\'</span>\n\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Negative</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Component</span> </span>{\n  <span class="hljs-keyword">constructor</span> (props, context) {\n    <span class="hljs-keyword">super</span>(props, context)\n    <span class="hljs-keyword">this</span>.state = {\n      <span class="hljs-attr">value</span>: <span class="hljs-number">-10</span>\n    }\n  }\n\n  handleChange = <span class="hljs-function">(<span class="hljs-params">value</span>) =&gt;</span> {\n    <span class="hljs-keyword">this</span>.setState({\n      <span class="hljs-attr">value</span>: value\n    })\n  }\n\n  render () {\n    <span class="hljs-keyword">const</span> { value } = <span class="hljs-keyword">this</span>.state\n    <span class="hljs-keyword">return</span> (\n      <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">\'slider\'</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">Slider</span>\n          <span class="hljs-attr">min</span>=<span class="hljs-string">{-20}</span>\n          <span class="hljs-attr">max</span>=<span class="hljs-string">{0}</span>\n          <span class="hljs-attr">tooltip</span>=<span class="hljs-string">{false}</span>\n          <span class="hljs-attr">value</span>=<span class="hljs-string">{value}</span>\n          <span class="hljs-attr">onChange</span>=<span class="hljs-string">{this.handleChange}</span>\n        /&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">\'value\'</span>&gt;</span>{value}<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    )\n  }\n}\n\nexport default Negative</span>\n</code></pre>\n        </div>\n       </div>\n      </div>\n      <div class="demo-panel">\n       <div class="demo-panel-title">\n        <h4>\n         Floating Point Boundaries\n        </h4>\n        <a href="#" id="source">\n         View Source\n        </a>\n        <a href="#" id="codesandbox">\n         Code Sandbox\n        </a>\n       </div>\n       <div class="demo-panel-content">\n        <div class="slider">\n         <div aria-orientation="horizontal" aria-valuemax="20" aria-valuemin="10" aria-valuenow="12.5" class="rangeslider rangeslider-horizontal">\n          <div class="rangeslider__fill" style="width: 277px;">\n          </div>\n          <div class="rangeslider__handle" style="left: 277px;" tabindex="0">\n           <div class="rangeslider__handle-label">\n           </div>\n          </div>\n          <ul class="rangeslider__labels">\n          </ul>\n         </div>\n         <div class="value">\n          12.5\n         </div>\n        </div>\n        <div class="code hljs">\n         <pre><code class="lang-js"><span class="hljs-keyword">import</span> React, { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'react\'</span>\n<span class="hljs-keyword">import</span> Slider <span class="hljs-keyword">from</span> <span class="hljs-string">\'react-rangeslider\'</span>\n\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Float</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Component</span> </span>{\n  <span class="hljs-keyword">constructor</span> (props, context) {\n    <span class="hljs-keyword">super</span>(props, context)\n    <span class="hljs-keyword">this</span>.state = {\n      <span class="hljs-attr">value</span>: <span class="hljs-number">12.5</span>\n    }\n  }\n\n  handleChange = <span class="hljs-function">(<span class="hljs-params">value</span>) =&gt;</span> {\n    <span class="hljs-keyword">this</span>.setState({\n      <span class="hljs-attr">value</span>: value\n    })\n  }\n\n  render () {\n    <span class="hljs-keyword">const</span> { value } = <span class="hljs-keyword">this</span>.state\n    <span class="hljs-keyword">return</span> (\n      <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">\'slider\'</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">Slider</span>\n          <span class="hljs-attr">min</span>=<span class="hljs-string">{10}</span>\n          <span class="hljs-attr">max</span>=<span class="hljs-string">{20}</span>\n          <span class="hljs-attr">step</span>=<span class="hljs-string">{0.5}</span>\n          <span class="hljs-attr">value</span>=<span class="hljs-string">{value}</span>\n          <span class="hljs-attr">onChange</span>=<span class="hljs-string">{this.handleChange}</span>\n        /&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">\'value\'</span>&gt;</span>{value}<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    )\n  }\n}\n\nexport default Float</span>\n</code></pre>\n        </div>\n       </div>\n      </div>\n      <div class="demo-panel">\n       <div class="demo-panel-title">\n        <h4>\n         Custom Labels &amp; Formatting\n        </h4>\n        <a href="#" id="source">\n         View Source\n        </a>\n        <a href="#" id="codesandbox">\n         Code Sandbox\n        </a>\n       </div>\n       <div class="demo-panel-content">\n        <div class="slider custom-labels">\n         <div aria-orientation="horizontal" aria-valuemax="100" aria-valuemin="0" aria-valuenow="10" class="rangeslider rangeslider-horizontal">\n          <div class="rangeslider__fill" style="width: 121px;">\n          </div>\n          <div class="rangeslider__handle" style="left: 121px;" tabindex="0">\n           <div class="rangeslider__handle-label">\n            10\n           </div>\n          </div>\n          <ul class="rangeslider__labels">\n           <li class="rangeslider__label-item" data-value="100" style="left: 1061px;">\n            High\n           </li>\n           <li class="rangeslider__label-item" data-value="50" style="left: 539px;">\n            Medium\n           </li>\n           <li class="rangeslider__label-item" data-value="0" style="left: 17px;">\n            Low\n           </li>\n          </ul>\n         </div>\n         <div class="value">\n          10 kg\n         </div>\n         <hr/>\n         <div aria-orientation="vertical" aria-valuemax="100" aria-valuemin="0" aria-valuenow="50" class="rangeslider rangeslider-vertical">\n          <div class="rangeslider__fill" style="height: 70px;">\n          </div>\n          <div class="rangeslider__handle" style="top: 70px;" tabindex="0">\n           <div class="rangeslider__handle-label">\n            50\n           </div>\n          </div>\n          <ul class="rangeslider__labels">\n           <li class="rangeslider__label-item" data-value="100" style="top: 0px;">\n            Complete!\n           </li>\n           <li class="rangeslider__label-item" data-value="90" style="top: 14px;">\n            Almost done\n           </li>\n           <li class="rangeslider__label-item" data-value="50" style="top: 70px;">\n            Half way\n           </li>\n           <li class="rangeslider__label-item" data-value="10" style="top: 126px;">\n            Getting started\n           </li>\n          </ul>\n         </div>\n         <div class="value">\n          50%\n         </div>\n        </div>\n        <div class="code hljs">\n         <pre><code class="lang-js"><span class="hljs-keyword">import</span> React, { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'react\'</span>\n<span class="hljs-keyword">import</span> Slider <span class="hljs-keyword">from</span> <span class="hljs-string">\'react-rangeslider\'</span>\n\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">HorizontalCustomLabels</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Component</span> </span>{\n  <span class="hljs-keyword">constructor</span> (props, context) {\n    <span class="hljs-keyword">super</span>(props, context)\n    <span class="hljs-keyword">this</span>.state = {\n      <span class="hljs-attr">horizontal</span>: <span class="hljs-number">10</span>,\n      <span class="hljs-attr">vertical</span>: <span class="hljs-number">50</span>\n    }\n  }\n\n  handleChangeHorizontal = <span class="hljs-function"><span class="hljs-params">value</span> =&gt;</span> {\n    <span class="hljs-keyword">this</span>.setState({\n      <span class="hljs-attr">horizontal</span>: value\n    })\n  };\n\n  handleChangeVertical = <span class="hljs-function"><span class="hljs-params">value</span> =&gt;</span> {\n    <span class="hljs-keyword">this</span>.setState({\n      <span class="hljs-attr">vertical</span>: value\n    })\n  };\n\n  render () {\n    <span class="hljs-keyword">const</span> { horizontal, vertical } = <span class="hljs-keyword">this</span>.state\n    <span class="hljs-keyword">const</span> horizontalLabels = {\n      <span class="hljs-number">0</span>: <span class="hljs-string">\'Low\'</span>,\n      <span class="hljs-number">50</span>: <span class="hljs-string">\'Medium\'</span>,\n      <span class="hljs-number">100</span>: <span class="hljs-string">\'High\'</span>\n    }\n\n    <span class="hljs-keyword">const</span> verticalLabels = {\n      <span class="hljs-number">10</span>: <span class="hljs-string">\'Getting started\'</span>,\n      <span class="hljs-number">50</span>: <span class="hljs-string">\'Half way\'</span>,\n      <span class="hljs-number">90</span>: <span class="hljs-string">\'Almost done\'</span>,\n      <span class="hljs-number">100</span>: <span class="hljs-string">\'Complete!\'</span>\n    }\n\n    <span class="hljs-keyword">const</span> formatkg = <span class="hljs-function"><span class="hljs-params">value</span> =&gt;</span> value + <span class="hljs-string">\' kg\'</span>\n    <span class="hljs-keyword">const</span> formatPc = <span class="hljs-function"><span class="hljs-params">p</span> =&gt;</span> p + <span class="hljs-string">\'%\'</span>\n\n    <span class="hljs-keyword">return</span> (\n      &lt;div className=\'slider custom-labels\'&gt;\n        &lt;Slider\n          min={0}\n          max={100}\n          value={horizontal}\n          labels={horizontalLabels}\n          format={formatkg}\n          handleLabel={horizontal}\n          onChange={this.handleChangeHorizontal}\n        /&gt;\n        &lt;div className=\'value\'&gt;{formatkg(horizontal)}&lt;/div&gt;\n        &lt;hr /&gt;\n        &lt;Slider\n          value={vertical}\n          orientation=\'vertical\'\n          labels={verticalLabels}\n          handleLabel={vertical}\n          format={formatPc}\n\n          onChange={this.handleChangeVertical}\n        /&gt;\n        &lt;div className=\'value\'&gt;{formatPc(vertical)}&lt;/div&gt;\n      &lt;/div&gt;\n    )\n  }\n}\n\nexport default HorizontalCustomLabels\n</code></pre>\n        </div>\n       </div>\n      </div>\n      <div class="demo-panel">\n       <div class="demo-panel-title">\n        <h4>\n         Orientation &amp; Custom Styles\n        </h4>\n        <a href="#" id="source">\n         View Source\n        </a>\n        <a href="#" id="codesandbox">\n         Code Sandbox\n        </a>\n       </div>\n       <div class="demo-panel-content">\n        <div class="slider orientation-reversed">\n         <div class="slider-group">\n          <div class="slider-vertical">\n           <div aria-orientation="vertical" aria-valuemax="100" aria-valuemin="0" aria-valuenow="25" class="rangeslider rangeslider-vertical">\n            <div class="rangeslider__fill" style="height: 30px;">\n            </div>\n            <div class="rangeslider__handle" style="top: 90px;" tabindex="0">\n             <div class="rangeslider__handle-label">\n             </div>\n            </div>\n            <ul class="rangeslider__labels">\n            </ul>\n           </div>\n           <div class="value">\n            25\n           </div>\n          </div>\n          <div class="slider-horizontal">\n           <div aria-orientation="horizontal" aria-valuemax="10" aria-valuemin="0" aria-valuenow="8" class="rangeslider rangeslider-horizontal">\n            <div class="rangeslider__fill" style="width: 428px;">\n            </div>\n            <div class="rangeslider__handle" style="left: 428px;" tabindex="0">\n             <div class="rangeslider__handle-label">\n             </div>\n            </div>\n            <ul class="rangeslider__labels">\n            </ul>\n           </div>\n           <div class="value">\n            8\n           </div>\n          </div>\n         </div>\n        </div>\n        <div class="code hljs">\n         <pre><code class="lang-js"><span class="hljs-keyword">import</span> React, { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'react\'</span>\n<span class="hljs-keyword">import</span> Slider <span class="hljs-keyword">from</span> <span class="hljs-string">\'react-rangeslider\'</span>\n\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Vertical</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Component</span> </span>{\n  <span class="hljs-keyword">constructor</span> (props, context) {\n    <span class="hljs-keyword">super</span>(props, context)\n    <span class="hljs-keyword">this</span>.state = {\n      <span class="hljs-attr">value</span>: <span class="hljs-number">25</span>,\n      <span class="hljs-attr">reverseValue</span>: <span class="hljs-number">8</span>\n    }\n  }\n\n  handleChange = <span class="hljs-function">(<span class="hljs-params">value</span>) =&gt;</span> {\n    <span class="hljs-keyword">this</span>.setState({\n      <span class="hljs-attr">value</span>: value\n    })\n  }\n\n  handleChangeReverse = <span class="hljs-function">(<span class="hljs-params">value</span>) =&gt;</span> {\n    <span class="hljs-keyword">this</span>.setState({\n      <span class="hljs-attr">reverseValue</span>: value\n    })\n  }\n\n  render () {\n    <span class="hljs-keyword">const</span> { value, reverseValue } = <span class="hljs-keyword">this</span>.state\n    <span class="hljs-keyword">return</span> (\n      &lt;div className=\'slider orientation-reversed\'&gt;\n        &lt;div className=\'slider-group\'&gt;\n          &lt;div className=\'slider-vertical\'&gt;\n            &lt;Slider\n              min={0}\n              max={100}\n              value={value}\n              orientation=\'vertical\'\n              onChange={this.handleChange}\n            /&gt;\n            &lt;div className=\'value\'&gt;{value}&lt;/div&gt;\n          &lt;/div&gt;\n          &lt;div className=\'slider-horizontal\'&gt;\n            &lt;Slider\n              min={0}\n              max={10}\n              value={reverseValue}\n              orientation=\'horizontal\'\n              onChange={this.handleChangeReverse}\n            /&gt;\n            &lt;div className=\'value\'&gt;{reverseValue}&lt;/div&gt;\n          &lt;/div&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n    )\n  }\n}\n\nexport default Vertical\n</code></pre>\n        </div>\n       </div>\n      </div>\n     </section>\n     <footer class="block">\n      <section class="block close">\n       <p>\n        <!-- react-text: 155 -->\n        The project is under Open Source\n        <!-- /react-text -->\n        <!-- react-text: 156 -->\n        <!-- /react-text -->\n        <a href="https://github.com/whoisandy/react-rangeslider/blob/master/LICENSE">\n         MIT License\n        </a>\n       </p>\n       <p>\n        <!-- react-text: 159 -->\n        Built with\n        <!-- /react-text -->\n        <!-- react-text: 160 -->\n        <!-- /react-text -->\n        <span class="hearts">\n         \xe2\x99\xa5\n        </span>\n        <!-- react-text: 162 -->\n        <!-- /react-text -->\n        <!-- react-text: 163 -->\n        \xe2\x80\xa2 Maintained by\n        <!-- /react-text -->\n        <!-- react-text: 164 -->\n        <!-- /react-text -->\n        <a href="http://github.com/whoisandy">\n         whoisandy\n        </a>\n       </p>\n       <p>\n        \xc2\xa9 2015 Bhargav Anand\n       </p>\n      </section>\n     </footer>\n    </section>\n   </div>\n  </div>\n  <script async="" src="https://www.google-analytics.com/analytics.js">\n  </script>\n  <script src="https://unpkg.com/react@15.4.2/dist/react.min.js">\n  </script>\n  <script src="https://unpkg.com/react-dom@15.4.2/dist/react-dom.min.js">\n  </script>\n  <script src="https://unpkg.com/react-ga@2.2.0/dist/react-ga.min.js">\n  </script>\n  <script src="bundle.js" type="text/javascript">\n  </script>\n </body>\n</html>'