b'<!DOCTYPE html>\n<html class="ng-scope" lang="en" ng-app="y86" xmlns="http://www.w3.org/1999/xhtml">\n <head>\n  <style type="text/css">\n   @charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}\n  </style>\n  <meta charset="utf-8"/>\n  <meta content="IE=Edge" http-equiv="X-UA-Compatible"/>\n  <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport"/>\n  <title>\n   Y86 Emulator\n  </title>\n  <base href="src/"/>\n  <script src="../lib/angular.min.js">\n  </script>\n  <script src="../lib/angular-route.min.js">\n  </script>\n  <script src="script/kernels/main.js">\n  </script>\n  <script src="script/controllers/main.js">\n  </script>\n  <script src="script/directives/board.js">\n  </script>\n  <script src="script/directives/register.js">\n  </script>\n  <script src="script/directives/stack.js">\n  </script>\n  <script src="script/directives/clock.js">\n  </script>\n  <script src="script/directives/condition.js">\n  </script>\n  <script src="script/directives/control.js">\n  </script>\n  <script src="script/directives/cpi.js">\n  </script>\n  <script src="script/directives/code.js">\n  </script>\n  <script src="script/directives/pipe.js">\n  </script>\n  <link href="../lib/font-awesome.min.css" rel="stylesheet"/>\n  <link href="style/main.css" rel="stylesheet"/>\n  <link href="style/board.css" rel="stylesheet"/>\n  <link href="style/register.css" rel="stylesheet"/>\n  <link href="style/stack.css" rel="stylesheet"/>\n  <link href="style/clock.css" rel="stylesheet"/>\n  <link href="style/condition.css" rel="stylesheet"/>\n  <link href="style/control.css" rel="stylesheet"/>\n  <link href="style/cpi.css" rel="stylesheet"/>\n  <link href="style/code.css" rel="stylesheet"/>\n  <link href="style/pipe.css" rel="stylesheet"/>\n </head>\n <body class="ng-scope" ng-controller="mainCtrl" style="-webkit-font-smoothing: auto">\n  <board class="top-line">\n   <div ng-transclude="true">\n    <flex-container class="rot-top ng-scope">\n     <control-container>\n      <div ng-transclude="true">\n       <frequency-label class="ng-scope ng-isolate-scope" hz="player.hz" style="left: 60px">\n        <span class="ng-binding">\n         10\n        </span>\n       </frequency-label>\n       <div class="ng-scope">\n        <prev class="ng-isolate-scope" fn="prev()">\n         <button ng-click="fn()">\n          <i class="fa fa-caret-left">\n          </i>\n         </button>\n        </prev>\n        <play-pause class="ng-isolate-scope" fn="play()" icon="state.icons[state.icon]">\n         <button ng-click="fn()">\n          <i class="fa fa-fw fa-play">\n          </i>\n         </button>\n        </play-pause>\n        <next class="ng-isolate-scope" fn="next()">\n         <button ng-click="fn()">\n          <i class="fa fa-caret-right">\n          </i>\n         </button>\n        </next>\n        <reset class="ng-isolate-scope" fn="reset()">\n         <button ng-click="fn()">\n          <i class="fa fa-fw fa-undo">\n          </i>\n          Reset\n         </button>\n        </reset>\n       </div>\n       <frequency class="ng-scope ng-isolate-scope" hz="player.hz">\n        1 Hz\n        <input class="ng-pristine ng-untouched ng-valid" id="frequency-input" max="50" min="1" ng-model="hz" step=".1" type="range" value="10"/>\n        50 Hz\n       </frequency>\n      </div>\n     </control-container>\n     <cpi-container class="ng-scope" style="-webkit-flex:1;flex:1;-webkit-flex-grow:1;flex-grow:1">\n      <h6>\n       CPI Curve\n      </h6>\n      <div>\n       <input class="ng-pristine ng-untouched ng-valid" id="cpi-input" max="0" min="0" ng-model="getterAndSetterCycle" step="1" type="range" value="0"/>\n       <canvas height="50" id="graph" width="1000">\n       </canvas>\n      </div>\n     </cpi-container>\n     <h1>\n      Y86 Emulator\n      <br/>\n      <small>\n       Source code:\n       <a href="https://github.com/quietshu/y86" target="_blank">\n        GitHub\n       </a>\n       , by\n       <a href="https://github.com/quietshu" target="_blank">\n        @quietshu\n       </a>\n      </small>\n     </h1>\n    </flex-container>\n    <flex-container class="top-line flex-grow ng-scope">\n     <div class="top-dotted tool-sidebar">\n      <clock-container class="container container-line container-left rot-left">\n       <h3>\n        CLOCK\n       </h3>\n       <div ng-transclude="true">\n        <clock class="ng-scope ng-isolate-scope" data="clock.data" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n         <div class="ng-binding">\n          0\n         </div>\n        </clock>\n       </div>\n      </clock-container>\n      <register-container class="container container-line container-left flex-grow rot-left">\n       <h3>\n        REGISTERS\n       </h3>\n       <div ng-transclude="true">\n        <!-- ngRepeat: (key, value) in registers -->\n        <register class="ng-scope ng-isolate-scope" ng-repeat="(key, value) in registers" reg-data="value | toHex: 8" reg-name="key" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n         <div class="register-name ng-binding">\n          %eax\n         </div>\n         <div class="register-data ng-binding">\n          0x00000000\n         </div>\n        </register>\n        <!-- end ngRepeat: (key, value) in registers -->\n        <register class="ng-scope ng-isolate-scope" ng-repeat="(key, value) in registers" reg-data="value | toHex: 8" reg-name="key" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n         <div class="register-name ng-binding">\n          %ecx\n         </div>\n         <div class="register-data ng-binding">\n          0x00000000\n         </div>\n        </register>\n        <!-- end ngRepeat: (key, value) in registers -->\n        <register class="ng-scope ng-isolate-scope" ng-repeat="(key, value) in registers" reg-data="value | toHex: 8" reg-name="key" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n         <div class="register-name ng-binding">\n          %edx\n         </div>\n         <div class="register-data ng-binding">\n          0x00000000\n         </div>\n        </register>\n        <!-- end ngRepeat: (key, value) in registers -->\n        <register class="ng-scope ng-isolate-scope" ng-repeat="(key, value) in registers" reg-data="value | toHex: 8" reg-name="key" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n         <div class="register-name ng-binding">\n          %ebx\n         </div>\n         <div class="register-data ng-binding">\n          0x00000000\n         </div>\n        </register>\n        <!-- end ngRepeat: (key, value) in registers -->\n        <register class="ng-scope ng-isolate-scope" ng-repeat="(key, value) in registers" reg-data="value | toHex: 8" reg-name="key" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n         <div class="register-name ng-binding">\n          %esp\n         </div>\n         <div class="register-data ng-binding">\n          0x00000000\n         </div>\n        </register>\n        <!-- end ngRepeat: (key, value) in registers -->\n        <register class="ng-scope ng-isolate-scope" ng-repeat="(key, value) in registers" reg-data="value | toHex: 8" reg-name="key" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n         <div class="register-name ng-binding">\n          %ebp\n         </div>\n         <div class="register-data ng-binding">\n          0x00000000\n         </div>\n        </register>\n        <!-- end ngRepeat: (key, value) in registers -->\n        <register class="ng-scope ng-isolate-scope" ng-repeat="(key, value) in registers" reg-data="value | toHex: 8" reg-name="key" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n         <div class="register-name ng-binding">\n          %esi\n         </div>\n         <div class="register-data ng-binding">\n          0x00000000\n         </div>\n        </register>\n        <!-- end ngRepeat: (key, value) in registers -->\n        <register class="ng-scope ng-isolate-scope" ng-repeat="(key, value) in registers" reg-data="value | toHex: 8" reg-name="key" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n         <div class="register-name ng-binding">\n          %edi\n         </div>\n         <div class="register-data ng-binding">\n          0x00000000\n         </div>\n        </register>\n        <!-- end ngRepeat: (key, value) in registers -->\n       </div>\n      </register-container>\n     </div>\n     <code-container class="container container-line top-dotted ng-scope" style="-webkit-flex-grow:1;flex-grow:1">\n      <!-- ngRepeat: tab in code.tabs -->\n      <h2 class="ng-binding ng-scope active" ng-class="{active: $index == code.currentTab}" ng-click="loadTab($index)" ng-repeat="tab in code.tabs">\n       <span class="tab">\n       </span>\n       asum\n      </h2>\n      <!-- end ngRepeat: tab in code.tabs -->\n      <h2 class="ng-binding ng-scope" ng-class="{active: $index == code.currentTab}" ng-click="loadTab($index)" ng-repeat="tab in code.tabs">\n       <span class="tab">\n       </span>\n       List_Sum\n      </h2>\n      <!-- end ngRepeat: tab in code.tabs -->\n      <h2 class="ng-binding ng-scope" ng-class="{active: $index == code.currentTab}" ng-click="loadTab($index)" ng-repeat="tab in code.tabs">\n       <span class="tab">\n       </span>\n       Forward\n      </h2>\n      <!-- end ngRepeat: tab in code.tabs -->\n      <h2>\n       <span class="tab">\n       </span>\n       <input type="file"/>\n       +\n      </h2>\n      <pre><code ng-transclude="true">\n        <code-line-indicator class="ng-scope" style="top: 4.8em"></code-line-indicator>\n        <!-- ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">1</span><span class="ng-binding">                      | /* $begin code-yso */</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">2</span><span class="ng-binding">                      | /* $begin code-ysa */</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">3</span><span class="ng-binding">                      | # Execution begins at address 0</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">4</span><span class="ng-binding">  0x000:              | \t.pos 0</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">5</span><span class="ng-binding">  0x000: 308400010000 | init:\tirmovl Stack, %esp  \t# Set up Stack pointer</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">6</span><span class="ng-binding">  0x006: 308500010000 | \tirmovl Stack, %ebp  \t# Set up base pointer</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">7</span><span class="ng-binding">  0x00c: 7024000000   | \tjmp Main\t\t# Execute main program</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">8</span><span class="ng-binding">                      |</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">9</span><span class="ng-binding">                      | # Array of 4 elements</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">10</span><span class="ng-binding">  0x014:              | \t.align 4</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">11</span><span class="ng-binding">  0x014: 0d000000     | array:\t.long 0xd</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">12</span><span class="ng-binding">  0x018: c0000000     | \t.long 0xc0</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">13</span><span class="ng-binding">  0x01c: 000b0000     | \t.long 0xb00</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">14</span><span class="ng-binding">  0x020: 00a00000     | \t.long 0xa000</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">15</span><span class="ng-binding">                      |</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">16</span><span class="ng-binding">  0x024: 308004000000 | Main:\tirmovl $4,%eax</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">17</span><span class="ng-binding">  0x02a: a008         | \tpushl %eax\t# Push 4</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">18</span><span class="ng-binding">  0x02c: 308214000000 | \tirmovl array,%edx</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">19</span><span class="ng-binding">  0x032: a028         | \tpushl %edx      # Push array</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">20</span><span class="ng-binding">  0x034: 803a000000   | \tcall Sum\t# Sum(array, 4)</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">21</span><span class="ng-binding">  0x039: 10           | \thalt</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">22</span><span class="ng-binding">                      |</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">23</span><span class="ng-binding">                      | /* $begin sum-ys 0 */</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">24</span><span class="ng-binding">                      | \t# int Sum(int *Start, int Count)</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">25</span><span class="ng-binding">  0x03a: a058         | Sum:\tpushl %ebp</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">26</span><span class="ng-binding">  0x03c: 2045         | \trrmovl %esp,%ebp</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">27</span><span class="ng-binding">  0x03e: 501508000000 | \tmrmovl 8(%ebp),%ecx \t# ecx = Start</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">28</span><span class="ng-binding">  0x044: 50250c000000 | \tmrmovl 12(%ebp),%edx\t# edx = Count</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">29</span><span class="ng-binding">  0x04a: 308000000000 | \tirmovl $0, %eax\t\t# sum = 0</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">30</span><span class="ng-binding">  0x050: 6222         | \tandl   %edx,%edx</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">31</span><span class="ng-binding">  0x052: 7374000000   | \tje     End</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">32</span><span class="ng-binding">  0x057: 506100000000 | Loop:\tmrmovl (%ecx),%esi      # get *Start</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">33</span><span class="ng-binding">  0x05d: 6060         | \taddl %esi,%eax          # add to sum</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">34</span><span class="ng-binding">  0x05f: 308304000000 | \tirmovl $4,%ebx          #</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">35</span><span class="ng-binding">  0x065: 6031         | \taddl %ebx,%ecx          # Start++</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">36</span><span class="ng-binding">  0x067: 3083ffffffff | \tirmovl $-1,%ebx\t        #</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">37</span><span class="ng-binding">  0x06d: 6032         | \taddl %ebx,%edx          # Count--</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">38</span><span class="ng-binding">  0x06f: 7457000000   | \tjne    Loop             # Stop when 0</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">39</span><span class="ng-binding">  0x074:              | End:</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">40</span><span class="ng-binding">  0x074: b058         | \tpopl %ebp</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">41</span><span class="ng-binding">  0x076: 90           | \tret</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">42</span><span class="ng-binding">                      | /* $end sum-ys 0 */</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">43</span><span class="ng-binding">  0x100:              | \t.pos 0x100</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">44</span><span class="ng-binding">  0x100:              | Stack:\t# The stack goes here</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">45</span><span class="ng-binding">                      | /* $end code-ysa */</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">46</span><span class="ng-binding">                      | /* $end code-yso */</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">47</span><span class="ng-binding"></span></code-line><!-- end ngRepeat: line in code.lines track by $index -->\n      </code></pre>\n     </code-container>\n     <div class="top-dotted tool-sidebar">\n      <condition-container class="container container-line container-right rot-right">\n       <h3>\n        CONDITIONS\n       </h3>\n       <div ng-transclude="true">\n        <!-- ngRepeat: (key, value) in conditions -->\n        <condition class="ng-scope ng-isolate-scope" cond-data="value" cond-name="key" ng-repeat="(key, value) in conditions" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n         <span class="ng-binding">\n          ZF=1\n         </span>\n        </condition>\n        <!-- end ngRepeat: (key, value) in conditions -->\n        <condition class="ng-scope ng-isolate-scope" cond-data="value" cond-name="key" ng-repeat="(key, value) in conditions" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n         <span class="ng-binding">\n          SF=0\n         </span>\n        </condition>\n        <!-- end ngRepeat: (key, value) in conditions -->\n        <condition class="ng-scope ng-isolate-scope" cond-data="value" cond-name="key" ng-repeat="(key, value) in conditions" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n         <span class="ng-binding">\n          OF=0\n         </span>\n        </condition>\n        <!-- end ngRepeat: (key, value) in conditions -->\n       </div>\n      </condition-container>\n      <stack-container class="container container-line container-right flex-grow rot-right">\n       <h3>\n        MEMORY\n       </h3>\n       <div ng-transclude="true">\n        <!-- ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0000\n          </span>\n          <span class="ng-binding ng-scope">\n           30840001\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0004\n          </span>\n          <span class="ng-binding ng-scope">\n           00003085\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0008\n          </span>\n          <span class="ng-binding ng-scope">\n           00010000\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           000c\n          </span>\n          <span class="ng-binding ng-scope">\n           70240000\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0010\n          </span>\n          <span class="ng-binding ng-scope">\n           00000000\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0014\n          </span>\n          <span class="ng-binding ng-scope">\n           0d000000\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0018\n          </span>\n          <span class="ng-binding ng-scope">\n           c0000000\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           001c\n          </span>\n          <span class="ng-binding ng-scope">\n           000b0000\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0020\n          </span>\n          <span class="ng-binding ng-scope">\n           00a00000\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0024\n          </span>\n          <span class="ng-binding ng-scope">\n           30800400\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0028\n          </span>\n          <span class="ng-binding ng-scope">\n           0000a008\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           002c\n          </span>\n          <span class="ng-binding ng-scope">\n           30821400\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0030\n          </span>\n          <span class="ng-binding ng-scope">\n           0000a028\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0034\n          </span>\n          <span class="ng-binding ng-scope">\n           803a0000\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0038\n          </span>\n          <span class="ng-binding ng-scope">\n           0010a058\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           003c\n          </span>\n          <span class="ng-binding ng-scope">\n           20455015\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0040\n          </span>\n          <span class="ng-binding ng-scope">\n           08000000\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0044\n          </span>\n          <span class="ng-binding ng-scope">\n           50250c00\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0048\n          </span>\n          <span class="ng-binding ng-scope">\n           00003080\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           004c\n          </span>\n          <span class="ng-binding ng-scope">\n           00000000\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0050\n          </span>\n          <span class="ng-binding ng-scope">\n           62227374\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0054\n          </span>\n          <span class="ng-binding ng-scope">\n           00000050\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0058\n          </span>\n          <span class="ng-binding ng-scope">\n           61000000\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           005c\n          </span>\n          <span class="ng-binding ng-scope">\n           00606030\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0060\n          </span>\n          <span class="ng-binding ng-scope">\n           83040000\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0064\n          </span>\n          <span class="ng-binding ng-scope">\n           00603130\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0068\n          </span>\n          <span class="ng-binding ng-scope">\n           83ffffff\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           006c\n          </span>\n          <span class="ng-binding ng-scope">\n           ff603274\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0070\n          </span>\n          <span class="ng-binding ng-scope">\n           57000000\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0074\n          </span>\n          <span class="ng-binding ng-scope">\n           b0589000\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n       </div>\n      </stack-container>\n     </div>\n    </flex-container>\n    <flex-container class="top-line ng-scope" style="-webkit-flex-direction: column">\n     <fetch class="ng-scope">\n      <h3>\n       FETCH\n      </h3>\n      <div ng-transclude="true">\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="parser.CPU.Input.F_predPC | toHex: 8" pipe-name="\'predPC\'" pipe-pref="\'0x\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         predPC\n        </h6>\n        <p class="ng-binding">\n         0x00000000\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="parser.CPU.instruction" pipe-name="\'instructions\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         instructions\n        </h6>\n        <p class="ng-binding">\n         0\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="parser.CPU.cpi[parser.CPU.cycle] | round" pipe-name="\'CPI\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         CPI\n        </h6>\n        <p class="ng-binding">\n         0\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n        </h6>\n        <p class="ng-binding">\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n        </h6>\n        <p class="ng-binding">\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n        </h6>\n        <p class="ng-binding">\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n        </h6>\n        <p class="ng-binding">\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n        </h6>\n        <p class="ng-binding">\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n        </h6>\n        <p class="ng-binding">\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n        </h6>\n        <p class="ng-binding">\n        </p>\n       </pipe-attr>\n      </div>\n     </fetch>\n     <decode class="ng-scope">\n      <h3>\n       DECODE\n      </h3>\n      <div ng-transclude="true">\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="constantMap.stat[parser.CPU.Input.D_stat]" pipe-name="\'stat\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         stat\n        </h6>\n        <p class="ng-binding">\n         STAT_BUB\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="constantMap.icode[parser.CPU.Input.D_icode]" pipe-name="\'icode\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         icode\n        </h6>\n        <p class="ng-binding">\n         I_HALT\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="parser.CPU.Input.D_ifun" pipe-name="\'ifun\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         ifun\n        </h6>\n        <p class="ng-binding">\n         0\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="constantMap.reg[parser.CPU.Input.D_rA]||\'R_NONE\'" pipe-name="\'rA\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         rA\n        </h6>\n        <p class="ng-binding">\n         R_NONE\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="constantMap.reg[parser.CPU.Input.D_rB]||\'R_NONE\'" pipe-name="\'rB\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         rB\n        </h6>\n        <p class="ng-binding">\n         R_NONE\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="parser.CPU.Input.D_valC | toHex: 8" pipe-name="\'valC\'" pipe-pref="\'0x\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         valC\n        </h6>\n        <p class="ng-binding">\n         0x00000000\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="parser.CPU.Input.D_valP | toHex: 8" pipe-name="\'valP\'" pipe-pref="\'0x\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         valP\n        </h6>\n        <p class="ng-binding">\n         0x00000000\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n        </h6>\n        <p class="ng-binding">\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n        </h6>\n        <p class="ng-binding">\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n        </h6>\n        <p class="ng-binding">\n        </p>\n       </pipe-attr>\n      </div>\n     </decode>\n     <execute class="ng-scope">\n      <h3>\n       EXECUTE\n      </h3>\n      <div ng-transclude="true">\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="constantMap.stat[parser.CPU.Input.E_stat]" pipe-name="\'stat\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         stat\n        </h6>\n        <p class="ng-binding">\n         STAT_BUB\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="constantMap.icode[parser.CPU.Input.E_icode]" pipe-name="\'icode\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         icode\n        </h6>\n        <p class="ng-binding">\n         I_HALT\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="parser.CPU.Input.E_ifun" pipe-name="\'ifun\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         ifun\n        </h6>\n        <p class="ng-binding">\n         0\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="parser.CPU.Input.E_valC | toHex: 8" pipe-name="\'valC\'" pipe-pref="\'0x\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         valC\n        </h6>\n        <p class="ng-binding">\n         0x00000000\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="parser.CPU.Input.E_valA | toHex: 8" pipe-name="\'valA\'" pipe-pref="\'0x\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         valA\n        </h6>\n        <p class="ng-binding">\n         0x00000000\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="parser.CPU.Input.E_valB | toHex: 8" pipe-name="\'valB\'" pipe-pref="\'0x\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         valB\n        </h6>\n        <p class="ng-binding">\n         0x00000000\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="constantMap.reg[parser.CPU.Input.E_dstE]||\'R_NONE\'" pipe-name="\'dstE\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         dstE\n        </h6>\n        <p class="ng-binding">\n         R_NONE\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="constantMap.reg[parser.CPU.Input.E_dstM]||\'R_NONE\'" pipe-name="\'dstM\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         dstM\n        </h6>\n        <p class="ng-binding">\n         R_NONE\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="constantMap.reg[parser.CPU.Input.E_srcA]||\'R_NONE\'" pipe-name="\'srcA\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         srcA\n        </h6>\n        <p class="ng-binding">\n         R_NONE\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="constantMap.reg[parser.CPU.Input.E_srcB]||\'R_NONE\'" pipe-name="\'srcB\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         srcB\n        </h6>\n        <p class="ng-binding">\n         R_NONE\n        </p>\n       </pipe-attr>\n      </div>\n     </execute>\n     <memory class="ng-scope">\n      <h3>\n       MEMORY\n      </h3>\n      <div ng-transclude="true">\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="constantMap.stat[parser.CPU.Input.M_stat]" pipe-name="\'stat\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         stat\n        </h6>\n        <p class="ng-binding">\n         STAT_BUB\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="constantMap.icode[parser.CPU.Input.M_icode]" pipe-name="\'icode\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         icode\n        </h6>\n        <p class="ng-binding">\n         I_HALT\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="parser.CPU.Input.M_valE | toHex: 8" pipe-name="\'valE\'" pipe-pref="\'0x\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         valE\n        </h6>\n        <p class="ng-binding">\n         0x00000000\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="parser.CPU.Input.M_valA | toHex: 8" pipe-name="\'valA\'" pipe-pref="\'0x\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         valA\n        </h6>\n        <p class="ng-binding">\n         0x00000000\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="constantMap.reg[parser.CPU.Input.M_dstE]||\'R_NONE\'" pipe-name="\'dstE\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         dstE\n        </h6>\n        <p class="ng-binding">\n         R_NONE\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="constantMap.reg[parser.CPU.Input.M_dstM]||\'R_NONE\'" pipe-name="\'dstM\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         dstM\n        </h6>\n        <p class="ng-binding">\n         R_NONE\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n        </h6>\n        <p class="ng-binding">\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n        </h6>\n        <p class="ng-binding">\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n        </h6>\n        <p class="ng-binding">\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n        </h6>\n        <p class="ng-binding">\n        </p>\n       </pipe-attr>\n      </div>\n     </memory>\n     <write-back class="ng-scope">\n      <h3>\n       WRITE BACK\n      </h3>\n      <div ng-transclude="true">\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="constantMap.stat[parser.CPU.Input.W_stat]" pipe-name="\'stat\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         stat\n        </h6>\n        <p class="ng-binding">\n         STAT_BUB\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="constantMap.icode[parser.CPU.Input.W_icode]" pipe-name="\'icode\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         icode\n        </h6>\n        <p class="ng-binding">\n         I_HALT\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="parser.CPU.Input.W_valE | toHex: 8" pipe-name="\'valE\'" pipe-pref="\'0x\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         valE\n        </h6>\n        <p class="ng-binding">\n         0x00000000\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="parser.CPU.Input.W_valM | toHex: 8" pipe-name="\'valM\'" pipe-pref="\'0x\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         valM\n        </h6>\n        <p class="ng-binding">\n         0x00000000\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="constantMap.reg[parser.CPU.Input.W_dstE]||\'R_NONE\'" pipe-name="\'dstE\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         dstE\n        </h6>\n        <p class="ng-binding">\n         R_NONE\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="constantMap.reg[parser.CPU.Input.W_dstM]||\'R_NONE\'" pipe-name="\'dstM\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         dstM\n        </h6>\n        <p class="ng-binding">\n         R_NONE\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n        </h6>\n        <p class="ng-binding">\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n        </h6>\n        <p class="ng-binding">\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n        </h6>\n        <p class="ng-binding">\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n        </h6>\n        <p class="ng-binding">\n        </p>\n       </pipe-attr>\n      </div>\n     </write-back>\n    </flex-container>\n   </div>\n  </board>\n  <script src="../lib/move.min.js">\n  </script>\n </body>\n</html>'b'<!DOCTYPE html>\n<html class="ng-scope" lang="en" ng-app="y86" xmlns="http://www.w3.org/1999/xhtml">\n <head>\n  <style type="text/css">\n   @charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}\n  </style>\n  <meta charset="utf-8"/>\n  <meta content="IE=Edge" http-equiv="X-UA-Compatible"/>\n  <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport"/>\n  <title>\n   Y86 Emulator\n  </title>\n  <base href="src/"/>\n  <script src="../lib/angular.min.js">\n  </script>\n  <script src="../lib/angular-route.min.js">\n  </script>\n  <script src="script/kernels/main.js">\n  </script>\n  <script src="script/controllers/main.js">\n  </script>\n  <script src="script/directives/board.js">\n  </script>\n  <script src="script/directives/register.js">\n  </script>\n  <script src="script/directives/stack.js">\n  </script>\n  <script src="script/directives/clock.js">\n  </script>\n  <script src="script/directives/condition.js">\n  </script>\n  <script src="script/directives/control.js">\n  </script>\n  <script src="script/directives/cpi.js">\n  </script>\n  <script src="script/directives/code.js">\n  </script>\n  <script src="script/directives/pipe.js">\n  </script>\n  <link href="../lib/font-awesome.min.css" rel="stylesheet"/>\n  <link href="style/main.css" rel="stylesheet"/>\n  <link href="style/board.css" rel="stylesheet"/>\n  <link href="style/register.css" rel="stylesheet"/>\n  <link href="style/stack.css" rel="stylesheet"/>\n  <link href="style/clock.css" rel="stylesheet"/>\n  <link href="style/condition.css" rel="stylesheet"/>\n  <link href="style/control.css" rel="stylesheet"/>\n  <link href="style/cpi.css" rel="stylesheet"/>\n  <link href="style/code.css" rel="stylesheet"/>\n  <link href="style/pipe.css" rel="stylesheet"/>\n </head>\n <body class="ng-scope" ng-controller="mainCtrl" style="-webkit-font-smoothing: auto">\n  <board class="top-line">\n   <div ng-transclude="true">\n    <flex-container class="rot-top ng-scope">\n     <control-container>\n      <div ng-transclude="true">\n       <frequency-label class="ng-scope ng-isolate-scope" hz="player.hz" style="left: 60px">\n        <span class="ng-binding">\n         10\n        </span>\n       </frequency-label>\n       <div class="ng-scope">\n        <prev class="ng-isolate-scope" fn="prev()">\n         <button ng-click="fn()">\n          <i class="fa fa-caret-left">\n          </i>\n         </button>\n        </prev>\n        <play-pause class="ng-isolate-scope" fn="play()" icon="state.icons[state.icon]">\n         <button ng-click="fn()">\n          <i class="fa fa-fw fa-play">\n          </i>\n         </button>\n        </play-pause>\n        <next class="ng-isolate-scope" fn="next()">\n         <button ng-click="fn()">\n          <i class="fa fa-caret-right">\n          </i>\n         </button>\n        </next>\n        <reset class="ng-isolate-scope" fn="reset()">\n         <button ng-click="fn()">\n          <i class="fa fa-fw fa-undo">\n          </i>\n          Reset\n         </button>\n        </reset>\n       </div>\n       <frequency class="ng-scope ng-isolate-scope" hz="player.hz">\n        1 Hz\n        <input class="ng-pristine ng-untouched ng-valid" id="frequency-input" max="50" min="1" ng-model="hz" step=".1" type="range" value="10"/>\n        50 Hz\n       </frequency>\n      </div>\n     </control-container>\n     <cpi-container class="ng-scope" style="-webkit-flex:1;flex:1;-webkit-flex-grow:1;flex-grow:1">\n      <h6>\n       CPI Curve\n      </h6>\n      <div>\n       <input class="ng-pristine ng-untouched ng-valid" id="cpi-input" max="0" min="0" ng-model="getterAndSetterCycle" step="1" type="range" value="0"/>\n       <canvas height="50" id="graph" width="1000">\n       </canvas>\n      </div>\n     </cpi-container>\n     <h1>\n      Y86 Emulator\n      <br/>\n      <small>\n       Source code:\n       <a href="https://github.com/quietshu/y86" target="_blank">\n        GitHub\n       </a>\n       , by\n       <a href="https://github.com/quietshu" target="_blank">\n        @quietshu\n       </a>\n      </small>\n     </h1>\n    </flex-container>\n    <flex-container class="top-line flex-grow ng-scope">\n     <div class="top-dotted tool-sidebar">\n      <clock-container class="container container-line container-left rot-left">\n       <h3>\n        CLOCK\n       </h3>\n       <div ng-transclude="true">\n        <clock class="ng-scope ng-isolate-scope" data="clock.data" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n         <div class="ng-binding">\n          0\n         </div>\n        </clock>\n       </div>\n      </clock-container>\n      <register-container class="container container-line container-left flex-grow rot-left">\n       <h3>\n        REGISTERS\n       </h3>\n       <div ng-transclude="true">\n        <!-- ngRepeat: (key, value) in registers -->\n        <register class="ng-scope ng-isolate-scope" ng-repeat="(key, value) in registers" reg-data="value | toHex: 8" reg-name="key" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n         <div class="register-name ng-binding">\n          %eax\n         </div>\n         <div class="register-data ng-binding">\n          0x00000000\n         </div>\n        </register>\n        <!-- end ngRepeat: (key, value) in registers -->\n        <register class="ng-scope ng-isolate-scope" ng-repeat="(key, value) in registers" reg-data="value | toHex: 8" reg-name="key" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n         <div class="register-name ng-binding">\n          %ecx\n         </div>\n         <div class="register-data ng-binding">\n          0x00000000\n         </div>\n        </register>\n        <!-- end ngRepeat: (key, value) in registers -->\n        <register class="ng-scope ng-isolate-scope" ng-repeat="(key, value) in registers" reg-data="value | toHex: 8" reg-name="key" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n         <div class="register-name ng-binding">\n          %edx\n         </div>\n         <div class="register-data ng-binding">\n          0x00000000\n         </div>\n        </register>\n        <!-- end ngRepeat: (key, value) in registers -->\n        <register class="ng-scope ng-isolate-scope" ng-repeat="(key, value) in registers" reg-data="value | toHex: 8" reg-name="key" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n         <div class="register-name ng-binding">\n          %ebx\n         </div>\n         <div class="register-data ng-binding">\n          0x00000000\n         </div>\n        </register>\n        <!-- end ngRepeat: (key, value) in registers -->\n        <register class="ng-scope ng-isolate-scope" ng-repeat="(key, value) in registers" reg-data="value | toHex: 8" reg-name="key" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n         <div class="register-name ng-binding">\n          %esp\n         </div>\n         <div class="register-data ng-binding">\n          0x00000000\n         </div>\n        </register>\n        <!-- end ngRepeat: (key, value) in registers -->\n        <register class="ng-scope ng-isolate-scope" ng-repeat="(key, value) in registers" reg-data="value | toHex: 8" reg-name="key" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n         <div class="register-name ng-binding">\n          %ebp\n         </div>\n         <div class="register-data ng-binding">\n          0x00000000\n         </div>\n        </register>\n        <!-- end ngRepeat: (key, value) in registers -->\n        <register class="ng-scope ng-isolate-scope" ng-repeat="(key, value) in registers" reg-data="value | toHex: 8" reg-name="key" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n         <div class="register-name ng-binding">\n          %esi\n         </div>\n         <div class="register-data ng-binding">\n          0x00000000\n         </div>\n        </register>\n        <!-- end ngRepeat: (key, value) in registers -->\n        <register class="ng-scope ng-isolate-scope" ng-repeat="(key, value) in registers" reg-data="value | toHex: 8" reg-name="key" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n         <div class="register-name ng-binding">\n          %edi\n         </div>\n         <div class="register-data ng-binding">\n          0x00000000\n         </div>\n        </register>\n        <!-- end ngRepeat: (key, value) in registers -->\n       </div>\n      </register-container>\n     </div>\n     <code-container class="container container-line top-dotted ng-scope" style="-webkit-flex-grow:1;flex-grow:1">\n      <!-- ngRepeat: tab in code.tabs -->\n      <h2 class="ng-binding ng-scope active" ng-class="{active: $index == code.currentTab}" ng-click="loadTab($index)" ng-repeat="tab in code.tabs">\n       <span class="tab">\n       </span>\n       asum\n      </h2>\n      <!-- end ngRepeat: tab in code.tabs -->\n      <h2 class="ng-binding ng-scope" ng-class="{active: $index == code.currentTab}" ng-click="loadTab($index)" ng-repeat="tab in code.tabs">\n       <span class="tab">\n       </span>\n       List_Sum\n      </h2>\n      <!-- end ngRepeat: tab in code.tabs -->\n      <h2 class="ng-binding ng-scope" ng-class="{active: $index == code.currentTab}" ng-click="loadTab($index)" ng-repeat="tab in code.tabs">\n       <span class="tab">\n       </span>\n       Forward\n      </h2>\n      <!-- end ngRepeat: tab in code.tabs -->\n      <h2>\n       <span class="tab">\n       </span>\n       <input type="file"/>\n       +\n      </h2>\n      <pre><code ng-transclude="true">\n        <code-line-indicator class="ng-scope" style="top: 4.8em"></code-line-indicator>\n        <!-- ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">1</span><span class="ng-binding">                      | /* $begin code-yso */</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">2</span><span class="ng-binding">                      | /* $begin code-ysa */</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">3</span><span class="ng-binding">                      | # Execution begins at address 0</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">4</span><span class="ng-binding">  0x000:              | \t.pos 0</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">5</span><span class="ng-binding">  0x000: 308400010000 | init:\tirmovl Stack, %esp  \t# Set up Stack pointer</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">6</span><span class="ng-binding">  0x006: 308500010000 | \tirmovl Stack, %ebp  \t# Set up base pointer</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">7</span><span class="ng-binding">  0x00c: 7024000000   | \tjmp Main\t\t# Execute main program</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">8</span><span class="ng-binding">                      |</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">9</span><span class="ng-binding">                      | # Array of 4 elements</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">10</span><span class="ng-binding">  0x014:              | \t.align 4</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">11</span><span class="ng-binding">  0x014: 0d000000     | array:\t.long 0xd</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">12</span><span class="ng-binding">  0x018: c0000000     | \t.long 0xc0</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">13</span><span class="ng-binding">  0x01c: 000b0000     | \t.long 0xb00</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">14</span><span class="ng-binding">  0x020: 00a00000     | \t.long 0xa000</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">15</span><span class="ng-binding">                      |</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">16</span><span class="ng-binding">  0x024: 308004000000 | Main:\tirmovl $4,%eax</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">17</span><span class="ng-binding">  0x02a: a008         | \tpushl %eax\t# Push 4</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">18</span><span class="ng-binding">  0x02c: 308214000000 | \tirmovl array,%edx</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">19</span><span class="ng-binding">  0x032: a028         | \tpushl %edx      # Push array</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">20</span><span class="ng-binding">  0x034: 803a000000   | \tcall Sum\t# Sum(array, 4)</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">21</span><span class="ng-binding">  0x039: 10           | \thalt</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">22</span><span class="ng-binding">                      |</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">23</span><span class="ng-binding">                      | /* $begin sum-ys 0 */</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">24</span><span class="ng-binding">                      | \t# int Sum(int *Start, int Count)</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">25</span><span class="ng-binding">  0x03a: a058         | Sum:\tpushl %ebp</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">26</span><span class="ng-binding">  0x03c: 2045         | \trrmovl %esp,%ebp</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">27</span><span class="ng-binding">  0x03e: 501508000000 | \tmrmovl 8(%ebp),%ecx \t# ecx = Start</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">28</span><span class="ng-binding">  0x044: 50250c000000 | \tmrmovl 12(%ebp),%edx\t# edx = Count</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">29</span><span class="ng-binding">  0x04a: 308000000000 | \tirmovl $0, %eax\t\t# sum = 0</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">30</span><span class="ng-binding">  0x050: 6222         | \tandl   %edx,%edx</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">31</span><span class="ng-binding">  0x052: 7374000000   | \tje     End</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">32</span><span class="ng-binding">  0x057: 506100000000 | Loop:\tmrmovl (%ecx),%esi      # get *Start</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">33</span><span class="ng-binding">  0x05d: 6060         | \taddl %esi,%eax          # add to sum</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">34</span><span class="ng-binding">  0x05f: 308304000000 | \tirmovl $4,%ebx          #</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">35</span><span class="ng-binding">  0x065: 6031         | \taddl %ebx,%ecx          # Start++</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">36</span><span class="ng-binding">  0x067: 3083ffffffff | \tirmovl $-1,%ebx\t        #</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">37</span><span class="ng-binding">  0x06d: 6032         | \taddl %ebx,%edx          # Count--</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">38</span><span class="ng-binding">  0x06f: 7457000000   | \tjne    Loop             # Stop when 0</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">39</span><span class="ng-binding">  0x074:              | End:</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">40</span><span class="ng-binding">  0x074: b058         | \tpopl %ebp</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">41</span><span class="ng-binding">  0x076: 90           | \tret</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">42</span><span class="ng-binding">                      | /* $end sum-ys 0 */</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">43</span><span class="ng-binding">  0x100:              | \t.pos 0x100</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">44</span><span class="ng-binding">  0x100:              | Stack:\t# The stack goes here</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">45</span><span class="ng-binding">                      | /* $end code-ysa */</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">46</span><span class="ng-binding">                      | /* $end code-yso */</span></code-line><!-- end ngRepeat: line in code.lines track by $index --><code-line class="ng-scope ng-isolate-scope" line-content="line" line-number="$index+1" ng-repeat="line in code.lines track by $index"><span class="line-number ng-binding">47</span><span class="ng-binding"></span></code-line><!-- end ngRepeat: line in code.lines track by $index -->\n      </code></pre>\n     </code-container>\n     <div class="top-dotted tool-sidebar">\n      <condition-container class="container container-line container-right rot-right">\n       <h3>\n        CONDITIONS\n       </h3>\n       <div ng-transclude="true">\n        <!-- ngRepeat: (key, value) in conditions -->\n        <condition class="ng-scope ng-isolate-scope" cond-data="value" cond-name="key" ng-repeat="(key, value) in conditions" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n         <span class="ng-binding">\n          ZF=1\n         </span>\n        </condition>\n        <!-- end ngRepeat: (key, value) in conditions -->\n        <condition class="ng-scope ng-isolate-scope" cond-data="value" cond-name="key" ng-repeat="(key, value) in conditions" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n         <span class="ng-binding">\n          SF=0\n         </span>\n        </condition>\n        <!-- end ngRepeat: (key, value) in conditions -->\n        <condition class="ng-scope ng-isolate-scope" cond-data="value" cond-name="key" ng-repeat="(key, value) in conditions" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n         <span class="ng-binding">\n          OF=0\n         </span>\n        </condition>\n        <!-- end ngRepeat: (key, value) in conditions -->\n       </div>\n      </condition-container>\n      <stack-container class="container container-line container-right flex-grow rot-right">\n       <h3>\n        MEMORY\n       </h3>\n       <div ng-transclude="true">\n        <!-- ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0000\n          </span>\n          <span class="ng-binding ng-scope">\n           30840001\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0004\n          </span>\n          <span class="ng-binding ng-scope">\n           00003085\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0008\n          </span>\n          <span class="ng-binding ng-scope">\n           00010000\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           000c\n          </span>\n          <span class="ng-binding ng-scope">\n           70240000\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0010\n          </span>\n          <span class="ng-binding ng-scope">\n           00000000\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0014\n          </span>\n          <span class="ng-binding ng-scope">\n           0d000000\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0018\n          </span>\n          <span class="ng-binding ng-scope">\n           c0000000\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           001c\n          </span>\n          <span class="ng-binding ng-scope">\n           000b0000\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0020\n          </span>\n          <span class="ng-binding ng-scope">\n           00a00000\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0024\n          </span>\n          <span class="ng-binding ng-scope">\n           30800400\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0028\n          </span>\n          <span class="ng-binding ng-scope">\n           0000a008\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           002c\n          </span>\n          <span class="ng-binding ng-scope">\n           30821400\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0030\n          </span>\n          <span class="ng-binding ng-scope">\n           0000a028\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0034\n          </span>\n          <span class="ng-binding ng-scope">\n           803a0000\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0038\n          </span>\n          <span class="ng-binding ng-scope">\n           0010a058\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           003c\n          </span>\n          <span class="ng-binding ng-scope">\n           20455015\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0040\n          </span>\n          <span class="ng-binding ng-scope">\n           08000000\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0044\n          </span>\n          <span class="ng-binding ng-scope">\n           50250c00\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0048\n          </span>\n          <span class="ng-binding ng-scope">\n           00003080\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           004c\n          </span>\n          <span class="ng-binding ng-scope">\n           00000000\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0050\n          </span>\n          <span class="ng-binding ng-scope">\n           62227374\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0054\n          </span>\n          <span class="ng-binding ng-scope">\n           00000050\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0058\n          </span>\n          <span class="ng-binding ng-scope">\n           61000000\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           005c\n          </span>\n          <span class="ng-binding ng-scope">\n           00606030\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0060\n          </span>\n          <span class="ng-binding ng-scope">\n           83040000\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0064\n          </span>\n          <span class="ng-binding ng-scope">\n           00603130\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0068\n          </span>\n          <span class="ng-binding ng-scope">\n           83ffffff\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           006c\n          </span>\n          <span class="ng-binding ng-scope">\n           ff603274\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0070\n          </span>\n          <span class="ng-binding ng-scope">\n           57000000\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n        <stack class="ng-scope" ng-repeat="data in memory.data track by $index">\n         <div ng-transclude="true">\n          <span class="ng-binding ng-scope">\n           0074\n          </span>\n          <span class="ng-binding ng-scope">\n           b0589000\n          </span>\n         </div>\n        </stack>\n        <!-- end ngRepeat: data in memory.data track by $index -->\n       </div>\n      </stack-container>\n     </div>\n    </flex-container>\n    <flex-container class="top-line ng-scope" style="-webkit-flex-direction: column">\n     <fetch class="ng-scope">\n      <h3>\n       FETCH\n      </h3>\n      <div ng-transclude="true">\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="parser.CPU.Input.F_predPC | toHex: 8" pipe-name="\'predPC\'" pipe-pref="\'0x\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         predPC\n        </h6>\n        <p class="ng-binding">\n         0x00000000\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="parser.CPU.instruction" pipe-name="\'instructions\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         instructions\n        </h6>\n        <p class="ng-binding">\n         0\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="parser.CPU.cpi[parser.CPU.cycle] | round" pipe-name="\'CPI\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         CPI\n        </h6>\n        <p class="ng-binding">\n         0\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n        </h6>\n        <p class="ng-binding">\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n        </h6>\n        <p class="ng-binding">\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n        </h6>\n        <p class="ng-binding">\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n        </h6>\n        <p class="ng-binding">\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n        </h6>\n        <p class="ng-binding">\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n        </h6>\n        <p class="ng-binding">\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n        </h6>\n        <p class="ng-binding">\n        </p>\n       </pipe-attr>\n      </div>\n     </fetch>\n     <decode class="ng-scope">\n      <h3>\n       DECODE\n      </h3>\n      <div ng-transclude="true">\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="constantMap.stat[parser.CPU.Input.D_stat]" pipe-name="\'stat\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         stat\n        </h6>\n        <p class="ng-binding">\n         STAT_BUB\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="constantMap.icode[parser.CPU.Input.D_icode]" pipe-name="\'icode\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         icode\n        </h6>\n        <p class="ng-binding">\n         I_HALT\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="parser.CPU.Input.D_ifun" pipe-name="\'ifun\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         ifun\n        </h6>\n        <p class="ng-binding">\n         0\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="constantMap.reg[parser.CPU.Input.D_rA]||\'R_NONE\'" pipe-name="\'rA\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         rA\n        </h6>\n        <p class="ng-binding">\n         R_NONE\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="constantMap.reg[parser.CPU.Input.D_rB]||\'R_NONE\'" pipe-name="\'rB\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         rB\n        </h6>\n        <p class="ng-binding">\n         R_NONE\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="parser.CPU.Input.D_valC | toHex: 8" pipe-name="\'valC\'" pipe-pref="\'0x\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         valC\n        </h6>\n        <p class="ng-binding">\n         0x00000000\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="parser.CPU.Input.D_valP | toHex: 8" pipe-name="\'valP\'" pipe-pref="\'0x\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         valP\n        </h6>\n        <p class="ng-binding">\n         0x00000000\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n        </h6>\n        <p class="ng-binding">\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n        </h6>\n        <p class="ng-binding">\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n        </h6>\n        <p class="ng-binding">\n        </p>\n       </pipe-attr>\n      </div>\n     </decode>\n     <execute class="ng-scope">\n      <h3>\n       EXECUTE\n      </h3>\n      <div ng-transclude="true">\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="constantMap.stat[parser.CPU.Input.E_stat]" pipe-name="\'stat\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         stat\n        </h6>\n        <p class="ng-binding">\n         STAT_BUB\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="constantMap.icode[parser.CPU.Input.E_icode]" pipe-name="\'icode\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         icode\n        </h6>\n        <p class="ng-binding">\n         I_HALT\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="parser.CPU.Input.E_ifun" pipe-name="\'ifun\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         ifun\n        </h6>\n        <p class="ng-binding">\n         0\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="parser.CPU.Input.E_valC | toHex: 8" pipe-name="\'valC\'" pipe-pref="\'0x\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         valC\n        </h6>\n        <p class="ng-binding">\n         0x00000000\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="parser.CPU.Input.E_valA | toHex: 8" pipe-name="\'valA\'" pipe-pref="\'0x\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         valA\n        </h6>\n        <p class="ng-binding">\n         0x00000000\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="parser.CPU.Input.E_valB | toHex: 8" pipe-name="\'valB\'" pipe-pref="\'0x\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         valB\n        </h6>\n        <p class="ng-binding">\n         0x00000000\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="constantMap.reg[parser.CPU.Input.E_dstE]||\'R_NONE\'" pipe-name="\'dstE\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         dstE\n        </h6>\n        <p class="ng-binding">\n         R_NONE\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="constantMap.reg[parser.CPU.Input.E_dstM]||\'R_NONE\'" pipe-name="\'dstM\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         dstM\n        </h6>\n        <p class="ng-binding">\n         R_NONE\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="constantMap.reg[parser.CPU.Input.E_srcA]||\'R_NONE\'" pipe-name="\'srcA\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         srcA\n        </h6>\n        <p class="ng-binding">\n         R_NONE\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="constantMap.reg[parser.CPU.Input.E_srcB]||\'R_NONE\'" pipe-name="\'srcB\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         srcB\n        </h6>\n        <p class="ng-binding">\n         R_NONE\n        </p>\n       </pipe-attr>\n      </div>\n     </execute>\n     <memory class="ng-scope">\n      <h3>\n       MEMORY\n      </h3>\n      <div ng-transclude="true">\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="constantMap.stat[parser.CPU.Input.M_stat]" pipe-name="\'stat\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         stat\n        </h6>\n        <p class="ng-binding">\n         STAT_BUB\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="constantMap.icode[parser.CPU.Input.M_icode]" pipe-name="\'icode\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         icode\n        </h6>\n        <p class="ng-binding">\n         I_HALT\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="parser.CPU.Input.M_valE | toHex: 8" pipe-name="\'valE\'" pipe-pref="\'0x\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         valE\n        </h6>\n        <p class="ng-binding">\n         0x00000000\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="parser.CPU.Input.M_valA | toHex: 8" pipe-name="\'valA\'" pipe-pref="\'0x\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         valA\n        </h6>\n        <p class="ng-binding">\n         0x00000000\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="constantMap.reg[parser.CPU.Input.M_dstE]||\'R_NONE\'" pipe-name="\'dstE\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         dstE\n        </h6>\n        <p class="ng-binding">\n         R_NONE\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="constantMap.reg[parser.CPU.Input.M_dstM]||\'R_NONE\'" pipe-name="\'dstM\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         dstM\n        </h6>\n        <p class="ng-binding">\n         R_NONE\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n        </h6>\n        <p class="ng-binding">\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n        </h6>\n        <p class="ng-binding">\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n        </h6>\n        <p class="ng-binding">\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n        </h6>\n        <p class="ng-binding">\n        </p>\n       </pipe-attr>\n      </div>\n     </memory>\n     <write-back class="ng-scope">\n      <h3>\n       WRITE BACK\n      </h3>\n      <div ng-transclude="true">\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="constantMap.stat[parser.CPU.Input.W_stat]" pipe-name="\'stat\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         stat\n        </h6>\n        <p class="ng-binding">\n         STAT_BUB\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="constantMap.icode[parser.CPU.Input.W_icode]" pipe-name="\'icode\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         icode\n        </h6>\n        <p class="ng-binding">\n         I_HALT\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="parser.CPU.Input.W_valE | toHex: 8" pipe-name="\'valE\'" pipe-pref="\'0x\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         valE\n        </h6>\n        <p class="ng-binding">\n         0x00000000\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="parser.CPU.Input.W_valM | toHex: 8" pipe-name="\'valM\'" pipe-pref="\'0x\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         valM\n        </h6>\n        <p class="ng-binding">\n         0x00000000\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="constantMap.reg[parser.CPU.Input.W_dstE]||\'R_NONE\'" pipe-name="\'dstE\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         dstE\n        </h6>\n        <p class="ng-binding">\n         R_NONE\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" pipe-data="constantMap.reg[parser.CPU.Input.W_dstM]||\'R_NONE\'" pipe-name="\'dstM\'" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n         dstM\n        </h6>\n        <p class="ng-binding">\n         R_NONE\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n        </h6>\n        <p class="ng-binding">\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n        </h6>\n        <p class="ng-binding">\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n        </h6>\n        <p class="ng-binding">\n        </p>\n       </pipe-attr>\n       <pipe-attr class="ng-scope ng-isolate-scope" style="transition-duration: 200ms; color: rgb(55, 243, 255); background-color: rgb(11, 11, 11); transition-delay: 100ms;">\n        <h6 class="ng-binding">\n        </h6>\n        <p class="ng-binding">\n        </p>\n       </pipe-attr>\n      </div>\n     </write-back>\n    </flex-container>\n   </div>\n  </board>\n  <script src="../lib/move.min.js">\n  </script>\n </body>\n</html>'