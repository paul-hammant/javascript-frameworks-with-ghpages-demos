b'<html lang="en">\n <head>\n  <meta charset="utf-8"/>\n  <meta content="width=device-width, initial-scale=1" name="viewport"/>\n  <!-- Begin Jekyll SEO tag v2.3.0 -->\n  <title>\n   vue-scrollactive | Lightweight and simple to use vue component that highlights menu items as you scroll the page, also scrolling to target section when clicked.\n  </title>\n  <meta content="vue-scrollactive" property="og:title"/>\n  <meta content="en_US" property="og:locale"/>\n  <meta content="Lightweight and simple to use vue component that highlights menu items as you scroll the page, also scrolling to target section when clicked." name="description"/>\n  <meta content="Lightweight and simple to use vue component that highlights menu items as you scroll the page, also scrolling to target section when clicked." property="og:description"/>\n  <link href="https://eddiemf.github.io/vue-scrollactive/" rel="canonical"/>\n  <meta content="https://eddiemf.github.io/vue-scrollactive/" property="og:url"/>\n  <meta content="vue-scrollactive" property="og:site_name"/>\n  <script type="application/ld+json">\n   {"name":"vue-scrollactive","description":"Lightweight and simple to use vue component that highlights menu items as you scroll the page, also scrolling to target section when clicked.","author":null,"@type":"WebSite","url":"https://eddiemf.github.io/vue-scrollactive/","image":null,"publisher":null,"headline":"vue-scrollactive","dateModified":null,"datePublished":null,"sameAs":null,"mainEntityOfPage":null,"@context":"http://schema.org"}\n  </script>\n  <!-- End Jekyll SEO tag -->\n  <style class="anchorjs">\n  </style>\n  <link href="/vue-scrollactive/assets/css/style.css?v=4858f423af366103dc312362cc7dc59dc17fa6fb" rel="stylesheet"/>\n </head>\n <body>\n  <div class="container-lg px-3 my-5 markdown-body">\n   <h1 id="vue-scrollactive">\n    vue-scrollactive\n   </h1>\n   <p>\n    This vue 2 component makes it simple to highlight a menu item with an \xe2\x80\x98active\xe2\x80\x99 class as you scroll.\n   </p>\n   <ul>\n    <li>\n     Highlights menu items as you scroll\n    </li>\n    <li>\n     Scrolls to item\xe2\x80\x99s section on click\n    </li>\n    <li>\n     Customizable easing for scrolling on click\n    </li>\n    <li>\n     Vue2\n    </li>\n    <li>\n     Uses pure JS!\n    </li>\n   </ul>\n   <p>\n    Make sure to check the\n    <a href="https://eddiemf.github.io/vue-scrollactive/examples/example-1.html">\n     demo\n    </a>\n    and see all the available options!\n   </p>\n   <h2 id="installation">\n    Installation\n    <a aria-label="Anchor link for: installation" class="anchorjs-link" data-anchorjs-icon="\xee\xa7\x8b" href="#installation" style="font: 1em/1 anchorjs-icons; padding-left: 0.375em;">\n    </a>\n   </h2>\n   <p>\n    Install via npm and use it as a vue plugin in your app.\n   </p>\n   <div class="language-bash highlighter-rouge">\n    <div class="highlight">\n     <pre class="highlight"><code>npm install <span class="nt">--save-dev</span> vue-scrollactive\n</code></pre>\n    </div>\n   </div>\n   <div class="language-js highlighter-rouge">\n    <div class="highlight">\n     <pre class="highlight"><code><span class="kd">var</span> <span class="nx">Scrollactive</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">\'vue-scrollactive\'</span><span class="p">);</span>\n<span class="nx">Vue</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="nx">Scrollactive</span><span class="p">);</span>\n</code></pre>\n    </div>\n   </div>\n   <h2 id="usage">\n    Usage\n    <a aria-label="Anchor link for: usage" class="anchorjs-link" data-anchorjs-icon="\xee\xa7\x8b" href="#usage" style="font: 1em/1 anchorjs-icons; padding-left: 0.375em;">\n    </a>\n   </h2>\n   <p>\n    You should wrap your menu in a\n    <code class="highlighter-rouge">\n     &lt;scrollactive&gt;\n    </code>\n    tag (which will be your nav) and add a\n    <code class="highlighter-rouge">\n     .scrollactive-item\n    </code>\n    class in your\n    <code class="highlighter-rouge">\n     &lt;a&gt;\n    </code>\n    tags as I show in the example below:\n   </p>\n   <div class="language-html highlighter-rouge">\n    <div class="highlight">\n     <pre class="highlight"><code><span class="nt">&lt;scrollactive</span> <span class="na">class=</span><span class="s">"my-nav"</span><span class="nt">&gt;</span>\n    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"#home"</span> <span class="na">class=</span><span class="s">"scrollactive-item"</span><span class="nt">&gt;</span>Home<span class="nt">&lt;/a&gt;</span>\n    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"#about-us"</span> <span class="na">class=</span><span class="s">"scrollactive-item"</span><span class="nt">&gt;</span>About Us<span class="nt">&lt;/a&gt;</span>\n    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"#portfolio"</span> <span class="na">class=</span><span class="s">"scrollactive-item"</span><span class="nt">&gt;</span>Portfolio<span class="nt">&lt;/a&gt;</span>\n    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"#contact"</span> <span class="na">class=</span><span class="s">"scrollactive-item"</span><span class="nt">&gt;</span>Contact<span class="nt">&lt;/a&gt;</span>\n<span class="nt">&lt;/scrollactive&gt;</span>\n</code></pre>\n    </div>\n   </div>\n   <p>\n    You can follow whatever structure you wish, just make sure to set the\n    <code class="highlighter-rouge">\n     .scrollactive-item\n    </code>\n    class in the items you want to highlight and set its\n    <code class="highlighter-rouge">\n     href\n    </code>\n    with a valid ID that you would like to track while scrolling.\n   </p>\n   <h2 id="events">\n    Events\n    <a aria-label="Anchor link for: events" class="anchorjs-link" data-anchorjs-icon="\xee\xa7\x8b" href="#events" style="font: 1em/1 anchorjs-icons; padding-left: 0.375em;">\n    </a>\n   </h2>\n   <p>\n    Scrollactive will emmit an\n    <code class="highlighter-rouge">\n     itemchanged(event, currentItem, lastActiveItem)\n    </code>\n    event when an active menu item is changed to another, you can catch that event doing as the example below:\n   </p>\n   <div class="language-html highlighter-rouge">\n    <div class="highlight">\n     <pre class="highlight"><code><span class="nt">&lt;scrollactive</span> <span class="na">class=</span><span class="s">"my-nav"</span> <span class="na">v-on:itemchanged=</span><span class="s">"yourFunction()"</span><span class="nt">&gt;</span>\n    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"#home"</span> <span class="na">class=</span><span class="s">"scrollactive-item"</span><span class="nt">&gt;</span>Home<span class="nt">&lt;/a&gt;</span>\n    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"#about-us"</span> <span class="na">class=</span><span class="s">"scrollactive-item"</span><span class="nt">&gt;</span>About Us<span class="nt">&lt;/a&gt;</span>\n    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"#portfolio"</span> <span class="na">class=</span><span class="s">"scrollactive-item"</span><span class="nt">&gt;</span>Portfolio<span class="nt">&lt;/a&gt;</span>\n    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"#contact"</span> <span class="na">class=</span><span class="s">"scrollactive-item"</span><span class="nt">&gt;</span>Contact<span class="nt">&lt;/a&gt;</span>\n<span class="nt">&lt;/scrollactive&gt;</span>\n</code></pre>\n    </div>\n   </div>\n   <h2 id="dynamic-menu-items">\n    Dynamic menu items\n    <a aria-label="Anchor link for: dynamic menu items" class="anchorjs-link" data-anchorjs-icon="\xee\xa7\x8b" href="#dynamic-menu-items" style="font: 1em/1 anchorjs-icons; padding-left: 0.375em;">\n    </a>\n   </h2>\n   <p>\n    vue-scrollactive continually watches with a smart observer for new\n    <code class="highlighter-rouge">\n     &lt;a href="#some-hash" class="scrollactive-item"&gt;\n    </code>\n    elements to be added or existing one to be removed and attaches/removes the scroll listener to them.\n   </p>\n   <h2 id="configuration">\n    Configuration\n    <a aria-label="Anchor link for: configuration" class="anchorjs-link" data-anchorjs-icon="\xee\xa7\x8b" href="#configuration" style="font: 1em/1 anchorjs-icons; padding-left: 0.375em;">\n    </a>\n   </h2>\n   <p>\n    All options should be passed as a prop in the\n    <code class="highlighter-rouge">\n     &lt;scrollactive&gt;\n    </code>\n    component as you can see in the example below:\n   </p>\n   <div class="language-html highlighter-rouge">\n    <div class="highlight">\n     <pre class="highlight"><code><span class="nt">&lt;scrollactive</span>\n\t<span class="na">active-class=</span><span class="s">"active"</span>\n\t<span class="na">:offset=</span><span class="s">"80"</span>\n\t<span class="na">:duration=</span><span class="s">"800"</span>\n\t<span class="na">bezier-easing-value=</span><span class="s">".5,0,.35,1"</span><span class="nt">&gt;</span>\n<span class="nt">&lt;/scrollactive&gt;</span>\n</code></pre>\n    </div>\n   </div>\n   <p>\n    Remember that all options are optional and you can see the default values in the Options sections.\n   </p>\n   <h3 id="options">\n    Options\n    <a aria-label="Anchor link for: options" class="anchorjs-link" data-anchorjs-icon="\xee\xa7\x8b" href="#options" style="font: 1em/1 anchorjs-icons; padding-left: 0.375em;">\n    </a>\n   </h3>\n   <div class="language-javascript highlighter-rouge">\n    <div class="highlight">\n     <pre class="highlight"><code><span class="cm">/**\n * Class that will be applied in the menu item.\n *\n * @default  \'is-active\'\n * @type {String}\n */</span>\n<span class="nx">activeClass</span><span class="p">:</span> <span class="p">{</span>\n\t<span class="nl">type</span><span class="p">:</span> <span class="nb">String</span><span class="p">,</span>\n\t<span class="k">default</span><span class="p">:</span> <span class="s1">\'is-active\'</span>\n<span class="p">},</span>\n\n<span class="cm">/**\n * Amount of space between top of screen and the section to\n * highlight. (Usually your fixed header\'s height)\n *\n * @default 20\n * @type {Number}\n */</span>\n<span class="nx">offset</span><span class="p">:</span> <span class="p">{</span>\n\t<span class="nl">type</span><span class="p">:</span> <span class="nb">Number</span><span class="p">,</span>\n\t<span class="k">default</span><span class="p">:</span> <span class="mi">20</span>\n<span class="p">},</span>\n\n<span class="cm">/**\n * Enables/disables the scrolling when clicking in a menu item.\n * Disable if you\'d like to handle the scrolling by your own.\n *\n * @default true\n * @type {Boolean}\n */</span>\n<span class="nx">clickToScroll</span><span class="p">:</span> <span class="p">{</span>\n\t<span class="nl">type</span><span class="p">:</span> <span class="nb">Boolean</span><span class="p">,</span>\n\t<span class="k">default</span><span class="p">:</span> <span class="kc">true</span>\n<span class="p">},</span>\n\n<span class="cm">/**\n * The duration (milliseconds) of the scroll animation when clicking to scroll\n * is activated.\n *\n * @default 600\n * @type {Number}\n */</span>\n<span class="nx">duration</span><span class="p">:</span> <span class="p">{</span>\n\t<span class="nl">type</span><span class="p">:</span> <span class="nb">Number</span><span class="p">,</span>\n\t<span class="k">default</span><span class="p">:</span> <span class="mi">600</span>\n<span class="p">},</span>\n\n<span class="cm">/**\n * Defines if the plugin should track the section change when\n * clicking an item to scroll to its section. If set to true,\n * it will always keep track and change the active class to the\n * current section while scrolling, if false, the active class\n * will be immediately applied to the clicked menu item, ignoring\n * the passed sections until the scrolling is over.\n *\n * @default false\n * @type {Boolean}\n */</span>\n<span class="nx">alwaysTrack</span><span class="p">:</span> <span class="p">{</span>\n\t<span class="nl">type</span><span class="p">:</span> <span class="nb">Boolean</span><span class="p">,</span>\n\t<span class="k">default</span><span class="p">:</span> <span class="kc">false</span>\n<span class="p">},</span>\n\n<span class="cm">/**\n * Your custom easing value for the click to scroll functionality.\n * It must be a string with 4 values separated by commas in a\n * cubic bezier format.\n *\n * @default \'.5,0,.35,1\'\n * @type {String}\n */</span>\n<span class="nx">bezierEasingValue</span><span class="p">:</span> <span class="p">{</span>\n\t<span class="nl">type</span><span class="p">:</span> <span class="nb">String</span><span class="p">,</span>\n\t<span class="k">default</span><span class="p">:</span> <span class="s1">\'.5,0,.35,1\'</span>\n<span class="p">}</span>\n</code></pre>\n    </div>\n   </div>\n   <div class="footer border-top border-gray-light mt-5 pt-3 text-right text-gray">\n    This site is open source.\n    <a href="https://github.com/eddiemf/vue-scrollactive/edit/gh-pages/README.md">\n     Improve this page\n    </a>\n    .\n   </div>\n  </div>\n  <script src="/vue-scrollactive/assets/javascript/anchor-js/anchor.min.js">\n  </script>\n  <script>\n   anchors.add();\n  </script>\n </body>\n</html>'