b'<html>\n <head>\n  <style>\n   canvas {\n        margin-top: 20px;\n      }\n      body {\n        max-width: 778px;\n      }\n  </style>\n  <script src="https://fb.me/react-0.13.1.min.js">\n  </script>\n  <script src="./showcase-chart.js" type="text/javascript">\n  </script>\n  <script src="./react-chartjs.js" type="text/javascript">\n  </script>\n  <script src="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js" type="text/javascript">\n  </script>\n  <script src="https://cdnjs.cloudflare.com/ajax/libs/zepto/1.1.6/zepto.min.js" type="text/javascript">\n  </script>\n </head>\n <body>\n  <pre><code>\nChart.defaults.global.responsive = true;\n</code></pre>\n  <div id="examples">\n   <div>\n    <h2>\n     Line Chart\n    </h2>\n    <pre><code>var LineChart = require("react-chartjs").Line;\n\nvar MyComponent = React.createClass({\n  render: function() {\n    return &lt;LineChart data={chartData} options={chartOptions}/&gt;\n  }\n});</code></pre>\n    <div>\n     <div data-reactid=".0">\n      <div data-reactid=".0.0">\n       <button data-reactid=".0.0.0">\n        Regenerate\n       </button>\n      </div>\n      <canvas data-reactid=".0.1" height="389" style="width: 778px; height: 389px;" width="778">\n      </canvas>\n     </div>\n    </div>\n   </div>\n   <div>\n    <h2>\n     Bar Chart\n    </h2>\n    <pre><code>var BarChart = require("react-chartjs").Bar;\n\nvar MyComponent = React.createClass({\n  render: function() {\n    return &lt;BarChart data={chartData} options={chartOptions}/&gt;\n  }\n});</code></pre>\n    <div>\n     <div data-reactid=".1">\n      <div data-reactid=".1.0">\n       <button data-reactid=".1.0.0">\n        Regenerate\n       </button>\n      </div>\n      <canvas data-reactid=".1.1" height="389" style="width: 778px; height: 389px;" width="778">\n      </canvas>\n     </div>\n    </div>\n   </div>\n   <div>\n    <h2>\n     Radar Chart\n    </h2>\n    <pre><code>var RadarChart = require("react-chartjs").Radar;\n\nvar MyComponent = React.createClass({\n  render: function() {\n    return &lt;RadarChart data={chartData} options={chartOptions}/&gt;\n  }\n});</code></pre>\n    <div>\n     <div data-reactid=".2">\n      <div data-reactid=".2.0">\n       <button data-reactid=".2.0.0">\n        Regenerate\n       </button>\n      </div>\n      <canvas data-reactid=".2.1" height="389" style="width: 778px; height: 389px;" width="778">\n      </canvas>\n     </div>\n    </div>\n   </div>\n   <div>\n    <h2>\n     PolarArea Chart\n    </h2>\n    <pre><code>var PolarAreaChart = require("react-chartjs").PolarArea;\n\nvar MyComponent = React.createClass({\n  render: function() {\n    return &lt;PolarAreaChart data={chartData} options={chartOptions}/&gt;\n  }\n});</code></pre>\n    <div>\n     <div data-reactid=".3">\n      <div data-reactid=".3.0">\n       <button data-reactid=".3.0.0">\n        Regenerate\n       </button>\n      </div>\n      <canvas data-reactid=".3.1" height="389" style="width: 778px; height: 389px;" width="778">\n      </canvas>\n     </div>\n    </div>\n   </div>\n   <div>\n    <h2>\n     Pie Chart\n    </h2>\n    <pre><code>var PieChart = require("react-chartjs").Pie;\n\nvar MyComponent = React.createClass({\n  render: function() {\n    return &lt;PieChart data={chartData} options={chartOptions}/&gt;\n  }\n});</code></pre>\n    <div>\n     <div data-reactid=".4">\n      <div data-reactid=".4.0">\n       <button data-reactid=".4.0.0">\n        Regenerate\n       </button>\n      </div>\n      <canvas data-reactid=".4.1" height="389" style="width: 778px; height: 389px;" width="778">\n      </canvas>\n     </div>\n    </div>\n   </div>\n   <div>\n    <h2>\n     Doughnut Chart\n    </h2>\n    <pre><code>var DoughnutChart = require("react-chartjs").Doughnut;\n\nvar MyComponent = React.createClass({\n  render: function() {\n    return &lt;DoughnutChart data={chartData} options={chartOptions}/&gt;\n  }\n});</code></pre>\n    <div>\n     <div data-reactid=".5">\n      <div data-reactid=".5.0">\n       <button data-reactid=".5.0.0">\n        Regenerate\n       </button>\n      </div>\n      <canvas data-reactid=".5.1" height="389" style="width: 778px; height: 389px;" width="778">\n      </canvas>\n     </div>\n    </div>\n   </div>\n  </div>\n  <script>\n   $(document).ready(function() {\n    Chart.defaults.global.responsive = true;\n\n        function rand(min, max, num) {\n          var rtn = [];\n          while (rtn.length < num) {\n            rtn.push((Math.random() * (max - min)) + min);\n          }\n          return rtn;\n        }\n\n        function data1() {\n          return {\n            labels: ["January", "February", "March", "April", "May", "June", "July"],\n            datasets: [\n                {\n                    label: "My First dataset",\n                    fillColor: "rgba(220,220,220,0.2)",\n                    strokeColor: "rgba(220,220,220,1)",\n                    pointColor: "rgba(220,220,220,1)",\n                    pointStrokeColor: "#fff",\n                    pointHighlightFill: "#fff",\n                    pointHighlightStroke: "rgba(220,220,220,1)",\n                    data: rand(32, 100, 7)\n                },\n                {\n                    label: "My Second dataset",\n                    fillColor: "rgba(151,187,205,0.2)",\n                    strokeColor: "rgba(151,187,205,1)",\n                    pointColor: "rgba(151,187,205,1)",\n                    pointStrokeColor: "#fff",\n                    pointHighlightFill: "#fff",\n                    pointHighlightStroke: "rgba(151,187,205,1)",\n                    data: rand(32, 100, 7)\n                }\n            ]\n          };\n        }\n\n        function data2() {\n          return {\n            labels: ["Eating", "Drinking", "Sleeping", "Designing", "Coding", "Cycling", "Running"],\n            datasets: [\n                {\n                    label: "My First dataset",\n                    fillColor: "rgba(220,220,220,0.2)",\n                    strokeColor: "rgba(220,220,220,1)",\n                    pointColor: "rgba(220,220,220,1)",\n                    pointStrokeColor: "#fff",\n                    pointHighlightFill: "#fff",\n                    pointHighlightStroke: "rgba(220,220,220,1)",\n                    data: rand(32, 100, 7)\n                },\n                {\n                    label: "My Second dataset",\n                    fillColor: "rgba(151,187,205,0.2)",\n                    strokeColor: "rgba(151,187,205,1)",\n                    pointColor: "rgba(151,187,205,1)",\n                    pointStrokeColor: "#fff",\n                    pointHighlightFill: "#fff",\n                    pointHighlightStroke: "rgba(151,187,205,1)",\n                    data: rand(32, 100, 7)\n                }\n            ]\n          };\n        }\n\n        function data3() {\n          return [\n          {\n              value: rand(25, 300, 1)[0],\n              color:"#F7464A",\n              highlight: "#FF5A5E",\n              label: "Red"\n          },\n          {\n              value: rand(25, 300, 1)[0],\n              color: "#46BFBD",\n              highlight: "#5AD3D1",\n              label: "Green"\n          },\n          {\n              value: rand(25, 300, 1)[0],\n              color: "#FDB45C",\n              highlight: "#FFC870",\n              label: "Yellow"\n          },\n          {\n              value: rand(25, 300, 1)[0],\n              color: "#949FB1",\n              highlight: "#A8B3C5",\n              label: "Grey"\n          },\n          {\n              value: rand(25, 300, 1)[0],\n              color: "#4D5360",\n              highlight: "#616774",\n              label: "Dark Grey"\n          }\n          ];\n        }\n\n      var ChartContainer = React.createFactory(React.createClass({\n\n        getInitialState: function() {\n          return {\n            data: this.props.props.data()\n          };\n        },\n\n        render: function() {\n          var props = this.props.props;\n          var factory = this.props.factory;\n\n          var _props = _.defaults({\n            data: this.state.data\n          }, props);\n\n          var component = new factory(_props);\n\n          return React.createElement(\'div\', {},\n              React.createElement(\'div\', {},\n                React.createElement(\'button\', {onClick: this.regen}, "Regenerate")\n              ),\n              component\n          );\n        },\n\n        regen: function() {\n          this.setState({data: this.props.props.data()});\n        }\n      }));\n\n      function example(type, commonJSName, props) {\n        var factory = React.createFactory(Chart.React[type]);\n        var component = new ChartContainer({props: props, factory: factory});\n\n        var container = $(\'#examples\');\n        var root = document.createElement(\'div\');\n        container.append(root);\n\n        var title = $(\'<h2>\' + type + \' Chart</h2>\');\n        root.appendChild(title[0]);\n\n        var varName = type + \'Chart\';\n        var code = \'var \' + varName + \' = require("react-chartjs").\' + type + \';\\n\\n\' +\n                   \'var MyComponent = React.createClass({\\n\' +\n                   \'  render: function() {\\n\' +\n                   \'    return &lt;\' + varName + \' data={chartData} options={chartOptions}/&gt;\\n\' +\n                   \'  }\\n\' +\n                   \'});\';\n        root.appendChild($(\'<pre><code>\' + code + \'</code></pre>\')[0]);\n\n        var chartContainer = document.createElement(\'div\');\n        root.appendChild(chartContainer);\n        React.render(component, chartContainer);\n      }\n\n      example(\'Line\', \'line\', {\n        data: data1\n      });\n\n      example(\'Bar\', \'bar\', {\n        data: data1\n      });\n\n      example(\'Radar\', \'radar\', {\n        data: data2\n      });\n\n      example(\'PolarArea\', \'polar-area\', {\n        data: data3\n      });\n\n      example(\'Pie\', \'pie\', {\n        data: data3\n      });\n\n      example(\'Doughnut\', \'doughnut\', {\n        data: data3\n      });\n\n  });\n  </script>\n </body>\n</html>'