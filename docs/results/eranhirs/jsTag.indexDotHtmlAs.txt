b'<html>\n <head>\n  <style type="text/css">\n   @charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-animate){display:none !important;}ng\\:form{display:block;}\n  </style>\n  <!-- ** Scripts ** -->\n  <script src="//code.jquery.com/jquery-1.11.0.min.js">\n  </script>\n  <!-- Boootstrap -->\n  <script src="//netdna.bootstrapcdn.com/bootstrap/3.0.3/js/bootstrap.min.js">\n  </script>\n  <!-- Angular.js script -->\n  <script src="assets/angular.min.js">\n  </script>\n  <!-- typeahead.js -->\n  <script src="assets/angular-typeahead.js">\n  </script>\n  <script src="//cdnjs.cloudflare.com/ajax/libs/typeahead.js/0.10.2/typeahead.bundle.min.js">\n  </script>\n  <!-- jsTag javascript file -->\n  <script src="assets/jsTag.min.js">\n  </script>\n  <!-- index JS -->\n  <script src="assets/index.js">\n  </script>\n  <!-- ** Stylesheets ** -->\n  <!-- fontawesome -->\n  <link href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css" rel="stylesheet"/>\n  <!-- Bootstrap CSS -->\n  <link href="//netdna.bootstrapcdn.com/bootstrap/3.0.3/css/bootstrap.min.css" rel="stylesheet"/>\n  <!-- jsTag CSS -->\n  <link href="assets/jsTag.css" rel="stylesheet"/>\n  <!-- Pygments CSS -->\n  <link href="assets/pygments-manni.css" rel="stylesheet"/>\n  <!-- index CSS -->\n  <link href="assets/index.css" rel="stylesheet"/>\n </head>\n <body class="ng-scope" data-spy="scroll" data-target="#sidebar" ng-app="demoApp">\n  <!-- http://getbootstrap.com/components/#navbar-default -->\n  <header class="navbar navbar-inverse navbar-static-top jstag-docs-nav" role="banner">\n   <div class="container">\n    <div class="navbar-header">\n     <button class="navbar-toggle" data-target="#bs-example-navbar-collapse-1" data-toggle="collapse" type="button">\n      <span class="sr-only">\n       Toggle navigation\n      </span>\n      <span class="icon-bar">\n      </span>\n      <span class="icon-bar">\n      </span>\n      <span class="icon-bar">\n      </span>\n     </button>\n     <a class="navbar-brand" href="./">\n      jsTag\n     </a>\n    </div>\n    <!-- Collect the nav links, forms, and other content for toggling -->\n    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">\n     <ul class="nav navbar-nav">\n      <li class="active">\n       <a href="#typeaheadDemo">\n        Autocomplete\n       </a>\n      </li>\n     </ul>\n     <ul class="nav navbar-nav navbar-right">\n      <li>\n       <a href="https://github.com/eranhirs/jsTag/" target="_blank">\n        <i class="fa fa-github">\n        </i>\n        View on GitHub\n       </a>\n      </li>\n     </ul>\n    </div>\n    <!-- /.navbar-collapse -->\n   </div>\n  </header>\n  <header class="page-header bs-header">\n   <div class="container">\n    <h1>\n     jsTag\n    </h1>\n    <p>\n     Javascript Tags project based on AngularJS\n    </p>\n   </div>\n  </header>\n  <div class="container">\n   <div class="row" id="mainSection">\n    <div class="col-md-2">\n     <div class="bs-sidebar affix-top" data-offset-top="205" data-spy="affix" id="sidebar">\n      <ul class="nav bs-sidenav">\n       <li class="active">\n        <a href="#getting-started">\n         Getting started\n        </a>\n       </li>\n       <li>\n        <a href="#how-to-use">\n         How to use?\n        </a>\n       </li>\n       <li>\n        <a href="#whyJSTag">\n         Why jsTag?\n        </a>\n       </li>\n       <li>\n        <a href="#about">\n         About\n        </a>\n       </li>\n      </ul>\n     </div>\n    </div>\n    <div class="col-md-10">\n     <div>\n      <h1 id="getting-started">\n       Getting started\n      </h1>\n      <h3>\n       Always\n      </h3>\n      <ol>\n       <li>\n        Add references to\n        <a href="http://ajax.googleapis.com/ajax/libs/angularjs/1.0.4/angular.min.js">\n         AngularJS\n        </a>\n        .\n       </li>\n       <li>\n        Add references to\n        <a href="https://github.com/eranhirs/jsTag/tree/master/jsTag/compiled">\n         jsTag\n        </a>\n        \'s javascript and css files.\n       </li>\n       <li>\n        Add jsTag as a dependency to your app. My app is named "demoApp", so it looks like this:\n        <br/>\n        <code class="js">\n         <span class="nx">\n          angular\n         </span>\n         <span class="p">\n          .\n         </span>\n         <span class="nx">\n          module\n         </span>\n         <span class="p">\n          (\n         </span>\n         <span class="s1">\n          \'demoApp\'\n         </span>\n         <span class="p">\n          , [\n         </span>\n         <span class="s1">\n          \'jsTag\'\n         </span>\n         <span class="p">\n          ]);\n         </span>\n        </code>\n       </li>\n      </ol>\n      <h3>\n       Show off\n      </h3>\n      Here is a full example of jsTag together with\n      <a href="http://twitter.github.io/typeahead.js/">\n       twitter\'s typeahead\n      </a>\n      .\n      <br/>\n      <div class="bs-example" id="full-example">\n       <div class="ng-scope ng-binding" ng-controller="TypeaheadController">\n        <js-tag class="ng-scope" js-tag-mode="typeahead" js-tag-options="jsTagOptions">\n         <div class="jt-editor" ng-click="inputService.focusInput()">\n          <!-- ngRepeat: tag in tagsCollection.tags | toArray:orderBy:\'id\' -->\n          <span class="ng-scope" ng-repeat="tag in tagsCollection.tags | toArray:orderBy:\'id\'" ng-switch="tagsCollection.isTagEdited(tag)">\n           <!-- ngSwitchWhen: false -->\n           <span class="jt-tag active-false" ng-switch-when="false">\n            <span class="value" ng-click="tagsInputService.tagClicked(tag)" ng-dblclick="tagsInputService.tagDblClicked(tag)">\n             <!-- ngIf: options.valueTemplate -->\n             <!-- ngIf: !options.valueTemplate -->\n             <span class="ng-binding ng-scope" ng-if="!options.valueTemplate">\n              jsTag\n             </span>\n             <!-- end ngIf: !options.valueTemplate -->\n            </span>\n            <span class="remove-button ng-binding" ng-click="tagsCollection.removeTag(tag.id)">\n             \xc3\x97\n            </span>\n           </span>\n           <!-- end ngSwitchWhen: -->\n           <!-- ngSwitchWhen: true -->\n          </span>\n          <!-- end ngRepeat: tag in tagsCollection.tags | toArray:orderBy:\'id\' -->\n          <span class="ng-scope" ng-repeat="tag in tagsCollection.tags | toArray:orderBy:\'id\'" ng-switch="tagsCollection.isTagEdited(tag)">\n           <!-- ngSwitchWhen: false -->\n           <span class="jt-tag active-false" ng-switch-when="false">\n            <span class="value" ng-click="tagsInputService.tagClicked(tag)" ng-dblclick="tagsInputService.tagDblClicked(tag)">\n             <!-- ngIf: options.valueTemplate -->\n             <!-- ngIf: !options.valueTemplate -->\n             <span class="ng-binding ng-scope" ng-if="!options.valueTemplate">\n              angularJS\n             </span>\n             <!-- end ngIf: !options.valueTemplate -->\n            </span>\n            <span class="remove-button ng-binding" ng-click="tagsCollection.removeTag(tag.id)">\n             \xc3\x97\n            </span>\n           </span>\n           <!-- end ngSwitchWhen: -->\n           <!-- ngSwitchWhen: true -->\n          </span>\n          <!-- end ngRepeat: tag in tagsCollection.tags | toArray:orderBy:\'id\' -->\n          <span class="twitter-typeahead" style="position: relative; display: inline-block; direction: ltr;">\n           <input auto-grow="" autocomplete="off" class="jt-tag-new ng-isolate-scope ng-pristine ng-untouched ng-valid tt-input" datasets="exampleData" dir="auto" focus-me="inputService.isWaitingForInput" js-tag-typeahead="" ng-blur="inputService.onBlur(tagsCollection)" ng-hide="isThereAnEditedTag" ng-keydown="inputService.onKeydown(inputService, tagsCollection, {$event: $event})" ng-model="inputService.input" options="exampleOptions" placeholder="Input text" sf-typeahead="" spellcheck="false" style="position: relative; vertical-align: top; width: 68px;" type="text"/>\n           <span style="position: absolute; top: -10000px; left: -10000px; font-size: 14px; font-family: sans-serif; white-space: pre;">\n            Input text\n           </span>\n           <pre aria-hidden="true" style="position: absolute; visibility: hidden; white-space: pre; font-family: sans-serif; font-size: 14px; font-style: normal; font-variant: normal; font-weight: 400; word-spacing: 0px; letter-spacing: 0px; text-indent: 0px; text-rendering: auto; text-transform: none;"></pre>\n           <span class="tt-dropdown-menu" style="position: absolute; top: 100%; z-index: 100; display: none; left: 0px; right: auto;">\n            <div class="tt-dataset-0">\n            </div>\n           </span>\n          </span>\n          <input class="jt-fake-input" focus-me="isThereAnActiveTag" ng-blur="tagsInputService.onActiveTagBlur()" ng-keydown="tagsInputService.onActiveTagKeydown(inputService, {$event: $event})"/>\n         </div>\n        </js-tag>\n        Number of tags: 2\n       </div>\n      </div>\n      <h1 id="how-to-use">\n       How to use?\n      </h1>\n      <h3>\n       Basic\n      </h3>\n      After adding jsTag as a depedency, you can easily achieve:\n      <div class="bs-example">\n       <div id="basicDemo">\n        <js-tag class="ng-scope">\n         <div class="jt-editor" ng-click="inputService.focusInput()">\n          <!-- ngRepeat: tag in tagsCollection.tags | toArray:orderBy:\'id\' -->\n          <input auto-grow="" class="jt-tag-new ng-pristine ng-untouched ng-valid" focus-me="inputService.isWaitingForInput" ng-blur="inputService.onBlur(tagsCollection)" ng-hide="isThereAnEditedTag" ng-keydown="inputService.onKeydown(inputService, tagsCollection, {$event: $event})" ng-model="inputService.input" placeholder="Input text" style="width: 68px;" type="text"/>\n          <span style="position: absolute; top: -10000px; left: -10000px; font-size: 14px; font-family: sans-serif; white-space: pre;">\n           Input text\n          </span>\n          <input class="jt-fake-input" focus-me="isThereAnActiveTag" ng-blur="tagsInputService.onActiveTagBlur()" ng-keydown="tagsInputService.onActiveTagKeydown(inputService, {$event: $event})"/>\n         </div>\n        </js-tag>\n       </div>\n       <div class="highlight">\n        <span class="example-lang">\n         <span class="example-lang">\n          Html\n         </span>\n        </span>\n        <pre>                  <code class="html"><span class="nt">&lt;js-tag</span><span class="nt">&gt;</span><span class="nt">&lt;/js-tag&gt;</span>\n                  </code>\n                </pre>\n       </div>\n      </div>\n      <h3>\n       Customized #1\n      </h3>\n      Customize jsTag as follows:\n      <div class="bs-example">\n       <div id="inlineCustomizedDemo">\n        <js-tag class="ng-scope" js-tag-options=\'{\n                      "texts": {\n                        "inputPlaceHolder": "Type text here"\n                      },\n                      "defaultTags": ["Default Tag #1", "Default Tag #2"]\n                }\'>\n         <div class="jt-editor" ng-click="inputService.focusInput()">\n          <!-- ngRepeat: tag in tagsCollection.tags | toArray:orderBy:\'id\' -->\n          <span class="ng-scope" ng-repeat="tag in tagsCollection.tags | toArray:orderBy:\'id\'" ng-switch="tagsCollection.isTagEdited(tag)">\n           <!-- ngSwitchWhen: false -->\n           <span class="jt-tag active-false" ng-switch-when="false">\n            <span class="value" ng-click="tagsInputService.tagClicked(tag)" ng-dblclick="tagsInputService.tagDblClicked(tag)">\n             <!-- ngIf: options.valueTemplate -->\n             <!-- ngIf: !options.valueTemplate -->\n             <span class="ng-binding ng-scope" ng-if="!options.valueTemplate">\n              Default Tag #1\n             </span>\n             <!-- end ngIf: !options.valueTemplate -->\n            </span>\n            <span class="remove-button ng-binding" ng-click="tagsCollection.removeTag(tag.id)">\n             \xc3\x97\n            </span>\n           </span>\n           <!-- end ngSwitchWhen: -->\n           <!-- ngSwitchWhen: true -->\n          </span>\n          <!-- end ngRepeat: tag in tagsCollection.tags | toArray:orderBy:\'id\' -->\n          <span class="ng-scope" ng-repeat="tag in tagsCollection.tags | toArray:orderBy:\'id\'" ng-switch="tagsCollection.isTagEdited(tag)">\n           <!-- ngSwitchWhen: false -->\n           <span class="jt-tag active-false" ng-switch-when="false">\n            <span class="value" ng-click="tagsInputService.tagClicked(tag)" ng-dblclick="tagsInputService.tagDblClicked(tag)">\n             <!-- ngIf: options.valueTemplate -->\n             <!-- ngIf: !options.valueTemplate -->\n             <span class="ng-binding ng-scope" ng-if="!options.valueTemplate">\n              Default Tag #2\n             </span>\n             <!-- end ngIf: !options.valueTemplate -->\n            </span>\n            <span class="remove-button ng-binding" ng-click="tagsCollection.removeTag(tag.id)">\n             \xc3\x97\n            </span>\n           </span>\n           <!-- end ngSwitchWhen: -->\n           <!-- ngSwitchWhen: true -->\n          </span>\n          <!-- end ngRepeat: tag in tagsCollection.tags | toArray:orderBy:\'id\' -->\n          <input auto-grow="" class="jt-tag-new ng-pristine ng-untouched ng-valid" focus-me="inputService.isWaitingForInput" ng-blur="inputService.onBlur(tagsCollection)" ng-hide="isThereAnEditedTag" ng-keydown="inputService.onKeydown(inputService, tagsCollection, {$event: $event})" ng-model="inputService.input" placeholder="Type text here" style="width: 99px;" type="text"/>\n          <span style="position: absolute; top: -10000px; left: -10000px; font-size: 14px; font-family: sans-serif; white-space: pre;">\n           Type text here\n          </span>\n          <input class="jt-fake-input" focus-me="isThereAnActiveTag" ng-blur="tagsInputService.onActiveTagBlur()" ng-keydown="tagsInputService.onActiveTagKeydown(inputService, {$event: $event})"/>\n         </div>\n        </js-tag>\n       </div>\n       <div class="highlight">\n        <span class="example-lang">\n         Html\n        </span>\n        <pre>                  <code class="html"><span class="nt">&lt;js-tag</span> <span class="na">js-tag-options=</span><span class="s">"{\n  "texts": {\n    "inputPlaceHolder": "Type text here"\n  },\n  "defaultTags": ["Default Tag #1", "Default Tag #2"]\n}"</span><span class="na"></span><span class="nt">&gt;</span><span class="nt">&lt;/js-tag&gt;</span>\n                  </code>\n                </pre>\n       </div>\n      </div>\n      <h3>\n       Customized #2\n      </h3>\n      We can also customize our jsTag using a controller:\n      <div class="bs-example">\n       <div id="customizedDemo">\n        <div class="ng-scope" ng-controller="CustomizedController">\n         <js-tag class="ng-scope" js-tag-options="jsTagOptions">\n          <div class="jt-editor" ng-click="inputService.focusInput()">\n           <!-- ngRepeat: tag in tagsCollection.tags | toArray:orderBy:\'id\' -->\n           <span class="ng-scope" ng-repeat="tag in tagsCollection.tags | toArray:orderBy:\'id\'" ng-switch="tagsCollection.isTagEdited(tag)">\n            <!-- ngSwitchWhen: false -->\n            <span class="jt-tag active-false" ng-switch-when="false">\n             <span class="value" ng-click="tagsInputService.tagClicked(tag)" ng-dblclick="tagsInputService.tagDblClicked(tag)">\n              <!-- ngIf: options.valueTemplate -->\n              <!-- ngIf: !options.valueTemplate -->\n              <span class="ng-binding ng-scope" ng-if="!options.valueTemplate">\n               Default Tag #1\n              </span>\n              <!-- end ngIf: !options.valueTemplate -->\n             </span>\n             <span class="remove-button ng-binding" ng-click="tagsCollection.removeTag(tag.id)">\n              \xc3\x97\n             </span>\n            </span>\n            <!-- end ngSwitchWhen: -->\n            <!-- ngSwitchWhen: true -->\n           </span>\n           <!-- end ngRepeat: tag in tagsCollection.tags | toArray:orderBy:\'id\' -->\n           <span class="ng-scope" ng-repeat="tag in tagsCollection.tags | toArray:orderBy:\'id\'" ng-switch="tagsCollection.isTagEdited(tag)">\n            <!-- ngSwitchWhen: false -->\n            <span class="jt-tag active-false" ng-switch-when="false">\n             <span class="value" ng-click="tagsInputService.tagClicked(tag)" ng-dblclick="tagsInputService.tagDblClicked(tag)">\n              <!-- ngIf: options.valueTemplate -->\n              <!-- ngIf: !options.valueTemplate -->\n              <span class="ng-binding ng-scope" ng-if="!options.valueTemplate">\n               Default Tag #2\n              </span>\n              <!-- end ngIf: !options.valueTemplate -->\n             </span>\n             <span class="remove-button ng-binding" ng-click="tagsCollection.removeTag(tag.id)">\n              \xc3\x97\n             </span>\n            </span>\n            <!-- end ngSwitchWhen: -->\n            <!-- ngSwitchWhen: true -->\n           </span>\n           <!-- end ngRepeat: tag in tagsCollection.tags | toArray:orderBy:\'id\' -->\n           <input auto-grow="" class="jt-tag-new ng-pristine ng-untouched ng-valid" focus-me="inputService.isWaitingForInput" ng-blur="inputService.onBlur(tagsCollection)" ng-hide="isThereAnEditedTag" ng-keydown="inputService.onKeydown(inputService, tagsCollection, {$event: $event})" ng-model="inputService.input" placeholder="Type text here" style="width: 99px;" type="text"/>\n           <span style="position: absolute; top: -10000px; left: -10000px; font-size: 14px; font-family: sans-serif; white-space: pre;">\n            Type text here\n           </span>\n           <input class="jt-fake-input" focus-me="isThereAnActiveTag" ng-blur="tagsInputService.onActiveTagBlur()" ng-keydown="tagsInputService.onActiveTagKeydown(inputService, {$event: $event})"/>\n          </div>\n         </js-tag>\n        </div>\n       </div>\n       <div class="highlight">\n        <span class="example-lang">\n         Html\n        </span>\n        <pre>                  <code class="html" ng-non-bindable=""><span class="nt">&lt;div</span> <span class="na">ng-controller=</span><span class="s">"CustomizedController"</span><span class="nt">&gt;</span>\n  <span class="nt">&lt;js-tag</span> <span class="na">js-tag-options=</span><span class="s">"jsTagOptions"</span><span class="nt">&gt;</span><span class="nt">&lt;/js-tag&gt;</span>\n<span class="nt">&lt;/div&gt;</span>\n                  </code>\n                </pre>\n        <span class="example-lang">\n         Javascript\n        </span>\n        <pre>                  <code class="html"><span class="nx">demoApp</span><span class="p">.</span><span class="nx">controller</span><span class="p">(</span><span class="s1">\'CustomizedController\'</span><span class="p">,</span> <span class="p">[</span><span class="s1">\'$scope\'</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">$scope</span><span class="p">)</span> <span class="p">{</span>\n  <span class="c1">// Export jsTag\'s options</span>\n  <span class="nx">$scope</span><span class="p">.</span><span class="nx">jsTagOptions</span> <span class="o">=</span> <span class="p">{</span>\n    <span class="s2">"texts"</span><span class="o">:</span> <span class="p">{</span>\n      <span class="s2">"inputPlaceHolder"</span><span class="o">:</span> <span class="s2">"Type text here"</span>\n    <span class="p">},</span>\n    <span class="s2">"defaultTags"</span><span class="o">:</span> <span class="p">[</span><span class="s2">"Default Tag #1"</span><span class="p">,</span> <span class="s2">"Default Tag #2"</span><span class="p">]</span>\n  <span class="p">};</span>\n<span class="p">}]);</span>\n                  </code>\n                </pre>\n       </div>\n      </div>\n      <h3>\n       Customize using jsTagOption\n      </h3>\n      There are several ways to configure the behaviour of jsTag. The default options object looks like this but any parameters passed in replaces the original.\n      <div class="example">\n       <div class="highlight">\n        <span class="">\n         JSON\n        </span>\n        <pre>                  <code class="html">{\n  <span class="s2"><span class="pl-pds">\'</span>edit<span class="pl-pds">\'</span></span><span class="pl-k">:</span> <span class="kc">true</span>,\n  <span class="s2"><span class="pl-pds">\'</span>defaultTags<span class="pl-pds">\'</span></span><span class="pl-k">:</span> [],\n  <span class="s2"><span class="pl-pds">\'</span>breakCodes<span class="pl-pds">\'</span></span><span class="pl-k">:</span> [\n    <span class="kc">13</span>, <span class="pl-c">// Return</span>\n    <span class="kc">44</span> <span class="pl-c">// Comma</span>\n  ],\n  <span class="s2"><span class="pl-pds">\'</span>splitter<span class="pl-pds">\'</span></span><span class="pl-k">:</span> <span class="s2"><span class="pl-pds">\'</span>,<span class="pl-pds">\'</span></span>,\n  <span class="s2"><span class="pl-pds">\'</span>texts<span class="pl-pds">\'</span></span><span class="pl-k">:</span> {\n    <span class="s2"><span class="pl-pds">\'</span>inputPlaceHolder<span class="pl-pds">\'</span></span><span class="pl-k">:</span> <span class="s2"><span class="pl-pds">"</span>Input text<span class="pl-pds">"</span></span>,\n    <span class="s2"><span class="pl-pds">\'</span>removeSymbol<span class="pl-pds">\'</span></span><span class="pl-k">:</span> <span class="kc">String</span>.<span class="pl-c1">fromCharCode</span>(<span class="pl-c1">215</span>)\n  }\n}\n                  </code>\n                </pre>\n       </div>\n      </div>\n      <h3>\n       Non-editable\n      </h3>\n      It is simple to cancel the edit feature if needed:\n      <div class="bs-example">\n       <div id="customizedDemo">\n        <div class="ng-scope" ng-controller="NoneditableController">\n         <js-tag class="ng-scope" js-tag-options="jsTagOptions">\n          <div class="jt-editor" ng-click="inputService.focusInput()">\n           <!-- ngRepeat: tag in tagsCollection.tags | toArray:orderBy:\'id\' -->\n           <span class="ng-scope" ng-repeat="tag in tagsCollection.tags | toArray:orderBy:\'id\'" ng-switch="tagsCollection.isTagEdited(tag)">\n            <!-- ngSwitchWhen: false -->\n            <span class="jt-tag active-false" ng-switch-when="false">\n             <span class="value" ng-click="tagsInputService.tagClicked(tag)" ng-dblclick="tagsInputService.tagDblClicked(tag)">\n              <!-- ngIf: options.valueTemplate -->\n              <!-- ngIf: !options.valueTemplate -->\n              <span class="ng-binding ng-scope" ng-if="!options.valueTemplate">\n               Default Tag #1\n              </span>\n              <!-- end ngIf: !options.valueTemplate -->\n             </span>\n             <span class="remove-button ng-binding" ng-click="tagsCollection.removeTag(tag.id)">\n              \xc3\x97\n             </span>\n            </span>\n            <!-- end ngSwitchWhen: -->\n            <!-- ngSwitchWhen: true -->\n           </span>\n           <!-- end ngRepeat: tag in tagsCollection.tags | toArray:orderBy:\'id\' -->\n           <span class="ng-scope" ng-repeat="tag in tagsCollection.tags | toArray:orderBy:\'id\'" ng-switch="tagsCollection.isTagEdited(tag)">\n            <!-- ngSwitchWhen: false -->\n            <span class="jt-tag active-false" ng-switch-when="false">\n             <span class="value" ng-click="tagsInputService.tagClicked(tag)" ng-dblclick="tagsInputService.tagDblClicked(tag)">\n              <!-- ngIf: options.valueTemplate -->\n              <!-- ngIf: !options.valueTemplate -->\n              <span class="ng-binding ng-scope" ng-if="!options.valueTemplate">\n               Default Tag #2\n              </span>\n              <!-- end ngIf: !options.valueTemplate -->\n             </span>\n             <span class="remove-button ng-binding" ng-click="tagsCollection.removeTag(tag.id)">\n              \xc3\x97\n             </span>\n            </span>\n            <!-- end ngSwitchWhen: -->\n            <!-- ngSwitchWhen: true -->\n           </span>\n           <!-- end ngRepeat: tag in tagsCollection.tags | toArray:orderBy:\'id\' -->\n           <input auto-grow="" class="jt-tag-new ng-pristine ng-untouched ng-valid" focus-me="inputService.isWaitingForInput" ng-blur="inputService.onBlur(tagsCollection)" ng-hide="isThereAnEditedTag" ng-keydown="inputService.onKeydown(inputService, tagsCollection, {$event: $event})" ng-model="inputService.input" placeholder="Input text" style="width: 68px;" type="text"/>\n           <span style="position: absolute; top: -10000px; left: -10000px; font-size: 14px; font-family: sans-serif; white-space: pre;">\n            Input text\n           </span>\n           <input class="jt-fake-input" focus-me="isThereAnActiveTag" ng-blur="tagsInputService.onActiveTagBlur()" ng-keydown="tagsInputService.onActiveTagKeydown(inputService, {$event: $event})"/>\n          </div>\n         </js-tag>\n        </div>\n       </div>\n       <div class="highlight">\n        <span class="example-lang">\n         Html\n        </span>\n        <pre>                  <code class="html" ng-non-bindable=""><span class="nt">&lt;div</span> <span class="na">ng-controller=</span><span class="s">"NoneditableController"</span><span class="nt">&gt;</span>\n  <span class="nt">&lt;js-tag</span> <span class="na">js-tag-options=</span><span class="s">"jsTagOptions"</span><span class="nt">&gt;</span><span class="nt">&lt;/js-tag&gt;</span>\n<span class="nt">&lt;/div&gt;</span>\n                  </code>\n                </pre>\n        <span class="example-lang">\n         Javascript\n        </span>\n        <pre>                  <code class="html"><span class="nx">demoApp</span><span class="p">.</span><span class="nx">controller</span><span class="p">(</span><span class="s1">\'NoneditableController\'</span><span class="p">,</span> <span class="p">[</span><span class="s1">\'$scope\'</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">$scope</span><span class="p">)</span> <span class="p">{</span>\n  <span class="c1">// Export jsTag\'s options</span>\n  <span class="nx">$scope</span><span class="p">.</span><span class="nx">jsTagOptions</span> <span class="o">=</span> <span class="p">{</span>\n    <span class="s1">\'edit\'</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>\n    <span class="s1">\'defaultTags\'</span><span class="o">:</span> <span class="p">[</span><span class="s1">\'Default Tag #1\'</span><span class="p">,</span> <span class="s1">\'Default Tag #2\'</span><span class="p">]</span>\n  <span class="p">};</span>\n<span class="p">}]);</span>\n                  </code>\n                </pre>\n       </div>\n      </div>\n      <h3>\n       More Control\n      </h3>\n      You want more control over your tags? Tell it to the directive!\n      <br/>\n      In the following example we initialize our own JSTagsCollection to have full control:\n      <div class="bs-example" id="moreControlDemo">\n       <div class="ng-scope ng-binding" ng-controller="MoreControlController">\n        <js-tag class="ng-scope" js-tag-options="jsTagOptions">\n         <div class="jt-editor" ng-click="inputService.focusInput()">\n          <!-- ngRepeat: tag in tagsCollection.tags | toArray:orderBy:\'id\' -->\n          <span class="ng-scope" ng-repeat="tag in tagsCollection.tags | toArray:orderBy:\'id\'" ng-switch="tagsCollection.isTagEdited(tag)">\n           <!-- ngSwitchWhen: false -->\n           <span class="jt-tag active-false" ng-switch-when="false">\n            <span class="value" ng-click="tagsInputService.tagClicked(tag)" ng-dblclick="tagsInputService.tagDblClicked(tag)">\n             <!-- ngIf: options.valueTemplate -->\n             <!-- ngIf: !options.valueTemplate -->\n             <span class="ng-binding ng-scope" ng-if="!options.valueTemplate">\n              jsTag\n             </span>\n             <!-- end ngIf: !options.valueTemplate -->\n            </span>\n            <span class="remove-button ng-binding" ng-click="tagsCollection.removeTag(tag.id)">\n             \xc3\x97\n            </span>\n           </span>\n           <!-- end ngSwitchWhen: -->\n           <!-- ngSwitchWhen: true -->\n          </span>\n          <!-- end ngRepeat: tag in tagsCollection.tags | toArray:orderBy:\'id\' -->\n          <span class="ng-scope" ng-repeat="tag in tagsCollection.tags | toArray:orderBy:\'id\'" ng-switch="tagsCollection.isTagEdited(tag)">\n           <!-- ngSwitchWhen: false -->\n           <span class="jt-tag active-false" ng-switch-when="false">\n            <span class="value" ng-click="tagsInputService.tagClicked(tag)" ng-dblclick="tagsInputService.tagDblClicked(tag)">\n             <!-- ngIf: options.valueTemplate -->\n             <!-- ngIf: !options.valueTemplate -->\n             <span class="ng-binding ng-scope" ng-if="!options.valueTemplate">\n              angularJS\n             </span>\n             <!-- end ngIf: !options.valueTemplate -->\n            </span>\n            <span class="remove-button ng-binding" ng-click="tagsCollection.removeTag(tag.id)">\n             \xc3\x97\n            </span>\n           </span>\n           <!-- end ngSwitchWhen: -->\n           <!-- ngSwitchWhen: true -->\n          </span>\n          <!-- end ngRepeat: tag in tagsCollection.tags | toArray:orderBy:\'id\' -->\n          <input auto-grow="" class="jt-tag-new ng-pristine ng-untouched ng-valid" focus-me="inputService.isWaitingForInput" ng-blur="inputService.onBlur(tagsCollection)" ng-hide="isThereAnEditedTag" ng-keydown="inputService.onKeydown(inputService, tagsCollection, {$event: $event})" ng-model="inputService.input" placeholder="Input text" style="width: 68px;" type="text"/>\n          <span style="position: absolute; top: -10000px; left: -10000px; font-size: 14px; font-family: sans-serif; white-space: pre;">\n           Input text\n          </span>\n          <input class="jt-fake-input" focus-me="isThereAnActiveTag" ng-blur="tagsInputService.onActiveTagBlur()" ng-keydown="tagsInputService.onActiveTagKeydown(inputService, {$event: $event})"/>\n         </div>\n        </js-tag>\n        Number of tags: 2\n       </div>\n       <div class="highlight">\n        <span class="example-lang">\n         Html\n        </span>\n        <pre>                  <code class="html" ng-non-bindable=""><span class="nt">&lt;div</span> <span class="na">ng-controller=</span><span class="s">"MoreControlController"</span><span class="nt">&gt;</span>\n  <span class="nt">&lt;js-tag</span> <span class="na">js-tag-options=</span><span class="s">"jsTagOptions"</span><span class="nt">&gt;</span><span class="nt">&lt;/js-tag&gt;</span>\n  Number of tags: {{tags.getNumberOfTags()}}\n<span class="nt">&lt;/div&gt;</span>\n                  </code>\n                </pre>\n        <span class="example-lang">\n         Javascript\n        </span>\n        <pre>                  <code class="javascript"><span class="nx">demoApp</span><span class="p">.</span><span class="nx">controller</span><span class="p">(</span><span class="s1">\'MoreControlController\'</span><span class="p">,</span> <span class="p">[</span><span class="s1">\'$scope\'</span><span class="p">,</span> <span class="s1">\'JSTagsCollection\'</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">$scope</span><span class="p">,</span> <span class="nx">JSTagsCollection</span><span class="p">)</span> <span class="p">{</span>\n  <span class="c1">// Build JSTagsCollection</span>\n  <span class="nx">$scope</span><span class="p">.</span><span class="nx">tags</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">JSTagsCollection</span><span class="p">([</span><span class="s2">"jsTag"</span><span class="p">,</span> <span class="s2">"angularJS"</span><span class="p">]);</span>\n\n  <span class="c1">// Export jsTags options, inlcuding our own tags object</span>\n  <span class="nx">$scope</span><span class="p">.</span><span class="nx">jsTagOptions</span> <span class="o">=</span> <span class="p">{</span>\n    <span class="s2">"tags"</span><span class="o">:</span> <span class="nx">$scope</span><span class="p">.</span><span class="nx">tags</span>\n  <span class="p">};</span>\n<span class="p">}]);</span>\n                  </code>\n                </pre>\n       </div>\n      </div>\n     </div>\n     <h3>\n      Twitter\'s typeahead\n     </h3>\n     Here is an advanced example how to use twitter\'s typeahead together with jsTag.\n     <br/>\n     <ol>\n      <li>\n       Add references to\n       <a href="https://github.com/Siyfion/angular-typeahead">\n        angular-typeahead\n       </a>\n       .\n      </li>\n      <li>\n       Add references to\n       <a href="http://twitter.github.io/typeahead.js/">\n        twitter\'s typeahead\n       </a>\n       .\n      </li>\n      <li>\n       Add angular-typeahead as a dependency to your app. My app is named "demoApp", so it looks like this:\n       <br/>\n       <code class="js">\n        <span class="nx">\n         angular\n        </span>\n        <span class="p">\n         .\n        </span>\n        <span class="nx">\n         module\n        </span>\n        <span class="p">\n         (\n        </span>\n        <span class="s1">\n         \'demoApp\'\n        </span>\n        <span class="p">\n         , [\n        </span>\n        <span class="s1">\n         \'siyfion.sfTypeahead\'\n        </span>\n        ,\n        <span class="s1">\n         \'jsTag\'\n        </span>\n        <span class="p">\n         ]);\n        </span>\n       </code>\n      </li>\n     </ol>\n     <div class="bs-example" id="typeaheadDemo">\n      <div class="ng-scope ng-binding" ng-controller="TypeaheadController">\n       <js-tag class="ng-scope" js-tag-mode="typeahead" js-tag-options="jsTagOptions">\n        <div class="jt-editor" ng-click="inputService.focusInput()">\n         <!-- ngRepeat: tag in tagsCollection.tags | toArray:orderBy:\'id\' -->\n         <span class="ng-scope" ng-repeat="tag in tagsCollection.tags | toArray:orderBy:\'id\'" ng-switch="tagsCollection.isTagEdited(tag)">\n          <!-- ngSwitchWhen: false -->\n          <span class="jt-tag active-false" ng-switch-when="false">\n           <span class="value" ng-click="tagsInputService.tagClicked(tag)" ng-dblclick="tagsInputService.tagDblClicked(tag)">\n            <!-- ngIf: options.valueTemplate -->\n            <!-- ngIf: !options.valueTemplate -->\n            <span class="ng-binding ng-scope" ng-if="!options.valueTemplate">\n             jsTag\n            </span>\n            <!-- end ngIf: !options.valueTemplate -->\n           </span>\n           <span class="remove-button ng-binding" ng-click="tagsCollection.removeTag(tag.id)">\n            \xc3\x97\n           </span>\n          </span>\n          <!-- end ngSwitchWhen: -->\n          <!-- ngSwitchWhen: true -->\n         </span>\n         <!-- end ngRepeat: tag in tagsCollection.tags | toArray:orderBy:\'id\' -->\n         <span class="ng-scope" ng-repeat="tag in tagsCollection.tags | toArray:orderBy:\'id\'" ng-switch="tagsCollection.isTagEdited(tag)">\n          <!-- ngSwitchWhen: false -->\n          <span class="jt-tag active-false" ng-switch-when="false">\n           <span class="value" ng-click="tagsInputService.tagClicked(tag)" ng-dblclick="tagsInputService.tagDblClicked(tag)">\n            <!-- ngIf: options.valueTemplate -->\n            <!-- ngIf: !options.valueTemplate -->\n            <span class="ng-binding ng-scope" ng-if="!options.valueTemplate">\n             angularJS\n            </span>\n            <!-- end ngIf: !options.valueTemplate -->\n           </span>\n           <span class="remove-button ng-binding" ng-click="tagsCollection.removeTag(tag.id)">\n            \xc3\x97\n           </span>\n          </span>\n          <!-- end ngSwitchWhen: -->\n          <!-- ngSwitchWhen: true -->\n         </span>\n         <!-- end ngRepeat: tag in tagsCollection.tags | toArray:orderBy:\'id\' -->\n         <span class="twitter-typeahead" style="position: relative; display: inline-block; direction: ltr;">\n          <input auto-grow="" autocomplete="off" class="jt-tag-new ng-isolate-scope ng-pristine ng-untouched ng-valid tt-input" datasets="exampleData" dir="auto" focus-me="inputService.isWaitingForInput" js-tag-typeahead="" ng-blur="inputService.onBlur(tagsCollection)" ng-hide="isThereAnEditedTag" ng-keydown="inputService.onKeydown(inputService, tagsCollection, {$event: $event})" ng-model="inputService.input" options="exampleOptions" placeholder="Input text" sf-typeahead="" spellcheck="false" style="position: relative; vertical-align: top; width: 68px;" type="text"/>\n          <span style="position: absolute; top: -10000px; left: -10000px; font-size: 14px; font-family: sans-serif; white-space: pre;">\n           Input text\n          </span>\n          <pre aria-hidden="true" style="position: absolute; visibility: hidden; white-space: pre; font-family: sans-serif; font-size: 14px; font-style: normal; font-variant: normal; font-weight: 400; word-spacing: 0px; letter-spacing: 0px; text-indent: 0px; text-rendering: auto; text-transform: none;"></pre>\n          <span class="tt-dropdown-menu" style="position: absolute; top: 100%; z-index: 100; display: none; left: 0px; right: auto;">\n           <div class="tt-dataset-1">\n           </div>\n          </span>\n         </span>\n         <input class="jt-fake-input" focus-me="isThereAnActiveTag" ng-blur="tagsInputService.onActiveTagBlur()" ng-keydown="tagsInputService.onActiveTagKeydown(inputService, {$event: $event})"/>\n        </div>\n       </js-tag>\n       Number of tags: 2\n      </div>\n      <div class="highlight">\n       <span class="example-lang">\n        Html\n       </span>\n       <pre>                <code class="html" ng-non-bindable=""><span class="nt">&lt;div</span> <span class="na">ng-controller=</span><span class="s">"TypeaheadController"</span><span class="nt">&gt;</span>\n  <span class="nt">&lt;js</span><span class="na">-tag</span> <span class="na">js-tag-mode=</span><span class="s">"typeahead"</span> <span class="na">js-tag-options=</span><span class="s">"jsTagOptions"</span><span class="nt">&gt;</span><span class="nt">&lt;/js-tag&gt;</span>\n  Number of tags: {{tags.getNumberOfTags()}}\n<span class="nt">&lt;/div&gt;</span>\n                </code>\n              </pre>\n       <span class="example-lang">\n        Javascript\n       </span>\n       <pre>                <code class="javascript"><span class="nx">demoApp</span><span class="p">.</span><span class="nx">controller</span><span class="p">(</span><span class="s1">\'TypeaheadController\'</span><span class="p">,</span> <span class="p">[</span><span class="s1">\'$scope\'</span><span class="p">,</span> <span class="s1">\'JSTagsCollection\'</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">$scope</span><span class="p">,</span> <span class="nx">JSTagsCollection</span><span class="p">)</span> <span class="p">{</span>\n  <span class="c1">// Build JSTagsCollection</span>\n  <span class="nx">$scope</span><span class="p">.</span><span class="nx">tags</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">JSTagsCollection</span><span class="p">([</span><span class="s2">"jsTag"</span><span class="p">,</span> <span class="s2">"angularJS"</span><span class="p">]);</span>\n\n  <span class="c1">// Export jsTags options, inlcuding our own tags object</span>\n  <span class="nx">$scope</span><span class="p">.</span><span class="nx">jsTagOptions</span> <span class="o">=</span> <span class="p">{</span>\n    <span class="s1">\'tags\'</span><span class="o">:</span> <span class="nx">$scope</span><span class="p">.</span><span class="nx">tags</span>\n  <span class="p">};</span>\n\n  <span class="c1">// **** Typeahead code **** //</span>\n\n  <span class="c1">// Build suggestions array</span>\n  <span class="kd">var</span> <span class="nx">suggestions</span> <span class="o">=</span> <span class="p">[</span><span class="s1">\'jsTag\'</span><span class="p">,</span> <span class="s1">\'c#\'</span><span class="p">,</span> <span class="s1">\'java\'</span><span class="p">,</span> <span class="s1">\'javascript\'</span><span class="p">,</span> <span class="s1">\'jquery\'</span><span class="p">,</span> <span class="s1">\'android\'</span> <span class="p">,</span> <span class="s1">\'php\'</span><span class="p">,</span> <span class="s1">\'c++\'</span><span class="p">,</span> <span class="s1">\'python\'</span><span class="p">,</span> <span class="s1">\'ios\'</span><span class="p">,</span> <span class="s1">\'mysql\'</span><span class="p">,</span> <span class="s1">\'iphone\'</span><span class="p">,</span> <span class="s1">\'sql\'</span><span class="p">,</span> <span class="s1">\'html\'</span><span class="p">,</span> <span class="s1">\'css\'</span><span class="p">,</span> <span class="s1">\'objective-c\'</span><span class="p">,</span> <span class="s1">\'ruby-on-rails\'</span><span class="p">,</span> <span class="s1">\'c\'</span><span class="p">,</span> <span class="s1">\'sql-server\'</span><span class="p">,</span> <span class="s1">\'ajax\'</span><span class="p">,</span> <span class="s1">\'xml\'</span><span class="p">,</span> <span class="s1">\'.net\'</span><span class="p">,</span> <span class="s1">\'ruby\'</span><span class="p">,</span> <span class="s1">\'regex\'</span><span class="p">,</span> <span class="s1">\'database\'</span><span class="p">,</span> <span class="s1">\'vb.net\'</span><span class="p">,</span> <span class="s1">\'arrays\'</span><span class="p">,</span> <span class="s1">\'eclipse\'</span><span class="p">,</span> <span class="s1">\'json\'</span><span class="p">,</span> <span class="s1">\'django\'</span><span class="p">,</span> <span class="s1">\'linux\'</span><span class="p">,</span> <span class="s1">\'xcode\'</span><span class="p">,</span> <span class="s1">\'windows\'</span><span class="p">,</span> <span class="s1">\'html5\'</span><span class="p">,</span> <span class="s1">\'winforms\'</span><span class="p">,</span> <span class="s1">\'r\'</span><span class="p">,</span> <span class="s1">\'wcf\'</span><span class="p">,</span> <span class="s1">\'visual-studio-2010\'</span><span class="p">,</span> <span class="s1">\'forms\'</span><span class="p">,</span> <span class="s1">\'performance\'</span><span class="p">,</span> <span class="s1">\'excel\'</span><span class="p">,</span> <span class="s1">\'spring\'</span><span class="p">,</span> <span class="s1">\'node.js\'</span><span class="p">,</span> <span class="s1">\'git\'</span><span class="p">,</span> <span class="s1">\'apache\'</span><span class="p">,</span> <span class="s1">\'entity-framework\'</span><span class="p">,</span> <span class="s1">\'asp.net\'</span><span class="p">,</span> <span class="s1">\'web-services\'</span><span class="p">,</span> <span class="s1">\'linq\'</span><span class="p">,</span> <span class="s1">\'perl\'</span><span class="p">,</span> <span class="s1">\'oracle\'</span><span class="p">,</span> <span class="s1">\'action-script\'</span><span class="p">,</span> <span class="s1">\'wordpress\'</span><span class="p">,</span> <span class="s1">\'delphi\'</span><span class="p">,</span> <span class="s1">\'jquery-ui\'</span><span class="p">,</span> <span class="s1">\'tsql\'</span><span class="p">,</span> <span class="s1">\'mongodb\'</span><span class="p">,</span> <span class="s1">\'neo4j\'</span><span class="p">,</span> <span class="s1">\'angularJS\'</span><span class="p">,</span> <span class="s1">\'unit-testing\'</span><span class="p">,</span> <span class="s1">\'postgresql\'</span><span class="p">,</span> <span class="s1">\'scala\'</span><span class="p">,</span> <span class="s1">\'xaml\'</span><span class="p">,</span> <span class="s1">\'http\'</span><span class="p">,</span> <span class="s1">\'validation\'</span><span class="p">,</span> <span class="s1">\'rest\'</span><span class="p">,</span> <span class="s1">\'bash\'</span><span class="p">,</span> <span class="s1">\'django\'</span><span class="p">,</span> <span class="s1">\'silverlight\'</span><span class="p">,</span> <span class="s1">\'cake-php\'</span><span class="p">,</span> <span class="s1">\'elgg\'</span><span class="p">,</span> <span class="s1">\'oracle\'</span><span class="p">,</span> <span class="s1">\'cocoa\'</span><span class="p">,</span> <span class="s1">\'swing\'</span><span class="p">,</span> <span class="s1">\'mocha\'</span><span class="p">,</span> <span class="s1">\'amazon-web-services\'</span><span class="p">];</span>\n  <span class="nx">suggestions</span> <span class="o">=</span> <span class="nx">suggestions</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">item</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="p">{</span> <span class="s2">"suggestion"</span><span class="o">:</span> <span class="nx">item</span> <span class="p">}</span> <span class="p">});</span>\n\n  <span class="c1">// Instantiate the bloodhound suggestion engine</span>\n  <span class="kd">var</span> <span class="nx">suggestions</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Bloodhound</span><span class="p">({</span>\n    <span class="nx">datumTokenizer</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">Bloodhound</span><span class="p">.</span><span class="nx">tokenizers</span><span class="p">.</span><span class="nx">whitespace</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">suggestion</span><span class="p">);</span> <span class="p">},</span>\n    <span class="nx">queryTokenizer</span><span class="o">:</span> <span class="nx">Bloodhound</span><span class="p">.</span><span class="nx">tokenizers</span><span class="p">.</span><span class="nx">whitespace</span><span class="p">,</span>\n    <span class="nx">local</span><span class="o">:</span> <span class="nx">suggestions</span>\n  <span class="p">});</span>\n\n  <span class="c1">// Initialize the bloodhound suggestion engine</span>\n  <span class="nx">suggestions</span><span class="p">.</span><span class="nx">initialize</span><span class="p">();</span>\n\n  <span class="c1">// Single dataset example</span>\n  <span class="nx">$scope</span><span class="p">.</span><span class="nx">exampleData</span> <span class="o">=</span> <span class="p">{</span>\n    <span class="nx">displayKey</span><span class="o">:</span> <span class="s1">\'suggestion\'</span><span class="p">,</span>\n    <span class="nx">source</span><span class="o">:</span> <span class="nx">suggestions</span><span class="p">.</span><span class="nx">ttAdapter</span><span class="p">()</span>\n  <span class="p">};</span>\n\n  <span class="c1">// Typeahead options object</span>\n  <span class="nx">$scope</span><span class="p">.</span><span class="nx">exampleOptions</span> <span class="o">=</span> <span class="p">{</span>\n    <span class="nx">hint</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>\n    <span class="nx">highlight</span><span class="o">:</span> <span class="kc">true</span>\n  <span class="p">};</span>\n<span class="p">}]);</span>\n                </code>\n              </pre>\n      </div>\n      <br/>\n      Disclaimer: Twitter\'s typeahead is well integrated into jsTag, but you can easily change that by modifying the template and adding a directive.\n     </div>\n     <div>\n      <h1 id="whyJSTag">\n       Why jsTag?\n      </h1>\n      <div>\n       Finally a real MVC library! Pure use of angularJS has it\'s benefits.\n       <br/>\n       <ul>\n        <li>\n         It can be tested (no unit tests yet, but it will have).\n        </li>\n        <li>\n         Working with models is great, see demo for example.\n        </li>\n        <li>\n         Maintainable code.\n        </li>\n        <li>\n         Easy to customize!\n        </li>\n       </ul>\n      </div>\n     </div>\n     <div>\n      <h1 id="about">\n       About\n      </h1>\n      <div>\n       jsTag is an open source project for editing tags (aka tokenizer) based on pure angularJS.\n       <br/>\n       The project was created by eranhirs for inner purpose.\n       <br/>\n       Any contribution to the project is more than welcome, at the project\'s\n       <a href="https://github.com/eranhirs/jsTag/tree/master" target="_blank">\n        github page\n       </a>\n       .\n       <br/>\n      </div>\n     </div>\n    </div>\n   </div>\n  </div>\n  <footer id="mainFooter">\n  </footer>\n </body>\n</html>'