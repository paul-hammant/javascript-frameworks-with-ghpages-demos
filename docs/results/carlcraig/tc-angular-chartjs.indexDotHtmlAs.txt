b'<html class="ng-scope" data-ng-app="app">\n <head>\n  <style type="text/css">\n   .mui-textfield.mui-textfield--float-label > label {-webkit-transition:all .15s ease-out;-moz-transition:all .15s ease-out;-o-transition:all .15s ease-out;transition:all .15s ease-out;}\n  </style>\n  <style type="text/css">\n   @charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}\n  </style>\n  <meta charset="utf-8"/>\n  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>\n  <meta content="width=device-width, initial-scale=1" name="viewport"/>\n  <title>\n   tc-angular-chartjs - AngularJS directives for Chart.js\n  </title>\n  <meta content="tc-angular-chartjs - AngularJS directives for Chart.js" name="description"/>\n  <link href="http://cdn.muicss.com/mui-0.7.4/css/mui.min.css" rel="stylesheet" type="text/css"/>\n  <link crossorigin="anonymous" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.6.3/css/font-awesome.min.css" integrity="sha384-T8Gy5hrqNKT+hzMclPo118YTQO6cYprQmhrYwIiQ/3axmI1hQomh7Ud2hPOy8SP1" rel="stylesheet"/>\n  <link href="css/index.css" rel="stylesheet" type="text/css"/>\n  <link href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.6.0/styles/github.min.css" rel="stylesheet"/>\n  <script async="" src="//www.google-analytics.com/analytics.js">\n  </script>\n  <script>\n   (function(i,s,o,g,r,a,m){i[\'GoogleAnalyticsObject\']=r;i[r]=i[r]||function(){\n      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n        m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n    })(window,document,\'script\',\'//www.google-analytics.com/analytics.js\',\'ga\');\n\n    ga(\'create\', \'UA-43482784-2\', \'auto\');\n    ga(\'send\', \'pageview\');\n  </script>\n </head>\n <body>\n  <header class="mui-appbar mui--z1">\n   <div class="mui-container">\n    <table width="100%">\n     <tbody>\n      <tr class="mui--appbar-height">\n       <td class="mui--text-title title">\n        tc-angular-chartjs\n       </td>\n       <td align="left">\n        <ul class="mui-list--inline mui--text-body2">\n        </ul>\n       </td>\n       <td align="right">\n        <ul class="mui-list--inline mui--text-body2">\n         <li>\n          <a href="https://github.com/carlcraig/tc-angular-chartjs" target="_blank">\n           <i class="fa fa-github">\n           </i>\n           Github\n          </a>\n         </li>\n        </ul>\n       </td>\n      </tr>\n     </tbody>\n    </table>\n   </div>\n  </header>\n  <div class="mui--text-center">\n   <div class="feature-chart ng-scope" data-ng-controller="HomeCtrl">\n    <iframe class="chartjs-hidden-iframe" style="width: 100%; display: block; border: 0px; height: 0px; margin: 0px; position: absolute; left: 0px; right: 0px; top: 0px; bottom: 0px;" tabindex="-1">\n    </iframe>\n    <canvas chart-data="data" chart-options="options" class="ng-isolate-scope" height="600" style="display: block; width: 1200px; height: 600px;" tc-chartjs-bar="" width="1200">\n    </canvas>\n   </div>\n   <br/>\n   <div class="mui--text-display3">\n    tc-angular-chartjs\n   </div>\n   <br/>\n   <div class="mui--text-headline">\n    AngularJS directives for Chart.js\n   </div>\n   <br/>\n   <p>\n    <a href="https://travis-ci.org/carlcraig/tc-angular-chartjs">\n     <img alt="Build Status" data-canonical-src="https://travis-ci.org/carlcraig/tc-angular-chartjs.svg" src="https://camo.githubusercontent.com/09856c8380643f052c47bcfea6e94c5d7a26cc68/68747470733a2f2f7472617669732d63692e6f72672f6361726c63726169672f74632d616e67756c61722d63686172746a732e737667" style="max-width:100%;"/>\n    </a>\n   </p>\n  </div>\n  <div class="mui-container">\n   <hr/>\n   <h2>\n    Installation\n   </h2>\n   <p>\n    Ensure you have\n    <a href="http://www.chartjs.org/docs/#getting-started-installation">\n     installed Chart.js\n    </a>\n   </p>\n   <h4>\n    npm\n   </h4>\n   <pre><code class="bash hljs">npm install tc-angular-chartjs --save</code></pre>\n   <h4>\n    bower\n   </h4>\n   <p>\n    Bower support has been dropped but you can still use tc-angular-chartjs with Bower using\n    <a href="https://www.npmjs.com/package/bower-npm-resolver">\n     bower-npm-resolver\n    </a>\n    .\n   </p>\n   <h4>\n    download\n   </h4>\n   <p>\n    You can download the source archive from the github\n    <a href="https://github.com/carlcraig/tc-angular-chartjs/releases">\n     releases\n    </a>\n    page.\n   </p>\n   <p>\n    Just include\n    <code>\n     dist/tc-angular-chartjs.js\n    </code>\n    into your project.\n   </p>\n   <hr/>\n   <h2>\n    Basic Usage\n   </h2>\n   <p>\n    Add\n    <code>\n     tc.chartjs\n    </code>\n    to your modules dependencies e.g.\n   </p>\n   <pre><code class="javascript hljs">angular.module( <span class="hljs-string">\'app\'</span>, [<span class="hljs-string">\'tc.chartjs\'</span>]);</code></pre>\n   <p>\n    You will then have access to the following directives:\n   </p>\n   <ul>\n    <li>\n     tc-chartjs\n    </li>\n    <li>\n     tc-chartjs-line\n    </li>\n    <li>\n     tc-chartjs-bar\n    </li>\n    <li>\n     tc-chartjs-horizontalbar\n    </li>\n    <li>\n     tc-chartjs-radar\n    </li>\n    <li>\n     tc-chartjs-polararea\n    </li>\n    <li>\n     tc-chartjs-pie\n    </li>\n    <li>\n     tc-chartjs-doughnut\n    </li>\n    <li>\n     tc-chartjs-bubble\n    </li>\n   </ul>\n   <p>\n    Just place one of these directives on a\n    <code>\n     canvas\n    </code>\n    element to create a Chart.js chart.\n   </p>\n   <p>\n    You will also want to give the chart some\n    <code>\n     data\n    </code>\n    and\n    <code>\n     options\n    </code>\n    . These can be provided via the\n    <code>\n     chart-options\n    </code>\n    and\n    <code>\n     chart-data\n    </code>\n    attributes.\n   </p>\n   <p>\n    For data structures and options please refer to\n    <a href="http://www.chartjs.org/docs/">\n     Chart.js documentation\n    </a>\n   </p>\n   <p>\n    You can also handle chart clicks via the\n    <code>\n     chart-click\n    </code>\n    attribute.\n   </p>\n   <h3>\n    Example Pie Chart\n   </h3>\n   <div class="ng-scope" data-ng-controller="DemoCtrl">\n    <iframe class="chartjs-hidden-iframe" style="width: 100%; display: block; border: 0px; height: 0px; margin: 0px; position: absolute; left: 0px; right: 0px; top: 0px; bottom: 0px;" tabindex="-1">\n    </iframe>\n    <canvas chart-click="onChartClick(event)" chart-data="myData" chart-options="myOptions" class="ng-isolate-scope" height="570" style="display: block; width: 1140px; height: 570px;" tc-chartjs-pie="" width="1140">\n    </canvas>\n   </div>\n   <pre><code class="html hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">canvas</span>\n<span class="hljs-attr">tc-chartjs-pie</span>\n<span class="hljs-attr">chart-data</span>=<span class="hljs-string">"myData"</span>\n<span class="hljs-attr">chart-options</span>=<span class="hljs-string">"myOptions"</span>\n<span class="hljs-attr">chart-click</span>=<span class="hljs-string">"onChartClick(event)"</span>\n&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span></code></pre>\n   <pre><code class="javascript hljs">$scope.myData = {\n  <span class="hljs-comment">// Chart.js data structure goes here</span>\n  <span class="hljs-comment">// e.g. Pie Chart Data Structure http://www.chartjs.org/docs/#doughnut-pie-chart-data-structure</span>\n  labels: [\n    <span class="hljs-string">"Red"</span>,\n    <span class="hljs-string">"Blue"</span>,\n    <span class="hljs-string">"Yellow"</span>\n  ],\n  datasets: [\n    {\n      data: [<span class="hljs-number">300</span>, <span class="hljs-number">50</span>, <span class="hljs-number">100</span>],\n      backgroundColor: [\n        <span class="hljs-string">"#FF6384"</span>,\n        <span class="hljs-string">"#36A2EB"</span>,\n        <span class="hljs-string">"#FFCE56"</span>\n      ],\n      hoverBackgroundColor: [\n        <span class="hljs-string">"#FF6384"</span>,\n        <span class="hljs-string">"#36A2EB"</span>,\n        <span class="hljs-string">"#FFCE56"</span>\n      ]\n    }\n  ]\n};\n\n$scope.myOptions =  {\n  <span class="hljs-comment">// Chart.js options go here</span>\n  <span class="hljs-comment">// e.g. Pie Chart Options http://www.chartjs.org/docs/#doughnut-pie-chart-chart-options</span>\n};\n\n$scope.onChartClick = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">event</span>) </span>{\n  <span class="hljs-built_in">console</span>.log(event);\n};</code></pre>\n   <p>\n    For more examples please view the\n    <code>\n     demo\n    </code>\n    folder.\n   </p>\n   <hr/>\n   <h2>\n    Using the\n    <code>\n     tc-chartjs\n    </code>\n    directive\n   </h2>\n   <p>\n    When using the\n    <code>\n     tc-chartjs\n    </code>\n    directive you will need to add an additional attribute to\nsay which type of chart should be created.\n   </p>\n   <p>\n    Just attach a\n    <code>\n     chart-type=""\n    </code>\n    attribute to the canvas element.\n   </p>\n   <pre><code class="html hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">canvas</span>\n<span class="hljs-attr">tc-chartjs</span>\n<span class="hljs-attr">chart-type</span>=<span class="hljs-string">"doughnut"</span>\n<span class="hljs-attr">chart-data</span>=<span class="hljs-string">"myData"</span>\n<span class="hljs-attr">chart-options</span>=<span class="hljs-string">"myOptions"</span>\n<span class="hljs-attr">chart-click</span>=<span class="hljs-string">"onChartClick(event)"</span>\n&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span></code></pre>\n   <p>\n    Available Types:\n   </p>\n   <ul>\n    <li>\n     line\n    </li>\n    <li>\n     bar\n    </li>\n    <li>\n     horizontalbar\n    </li>\n    <li>\n     radar\n    </li>\n    <li>\n     polararea\n    </li>\n    <li>\n     pie\n    </li>\n    <li>\n     doughnut\n    </li>\n    <li>\n     bubble\n    </li>\n   </ul>\n   <p>\n    Passing another value to chart-type than the above will try to create a chart of that type, which is useful if you have extended Chart.js with custom chart types, e.g. through plugins.\n   </p>\n   <hr/>\n   <h2>\n    Developing\n   </h2>\n   <p>\n    This library is built using\n    <code>\n     gulp\n    </code>\n    so ensure you have it installed.\n   </p>\n   <p>\n    To build the\n    <code>\n     dist\n    </code>\n    files run the following:\n    <code>\n     npm run build\n    </code>\n   </p>\n   <p>\n    To run the tests:\n    <code>\n     npm run test\n    </code>\n   </p>\n   <p>\n    To watch files and rebuild\n    <code>\n     dist\n    </code>\n    when changes are made:\n    <code>\n     npm start\n    </code>\n   </p>\n   <hr/>\n   <h2>\n    License\n   </h2>\n   <p>\n    tc-angular-chartjs is dual licensed with the Apache-2.0 or MIT license.\n   </p>\n   <p>\n    See LICENSE-APACHE-2.0 and LICENSE-MIT for more details.\n   </p>\n  </div>\n  <script src="http://cdn.muicss.com/mui-0.7.4/js/mui.min.js">\n  </script>\n  <script src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.6.0/highlight.min.js">\n  </script>\n  <script>\n   hljs.initHighlightingOnLoad();\n  </script>\n  <script src="js/vendor/Chart.min.js">\n  </script>\n  <script src="js/vendor/angular.min.js">\n  </script>\n  <script src="js/vendor/tc-angular-chartjs.min.js">\n  </script>\n  <script src="js/index.js">\n  </script>\n </body>\n</html>'