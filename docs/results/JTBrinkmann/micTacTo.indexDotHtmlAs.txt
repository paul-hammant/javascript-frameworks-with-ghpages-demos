b'<!DOCTYPE html>\n<html lang="en" xmlns="http://www.w3.org/1999/xhtml">\n <head>\n  <meta content="text/html; charset=utf-8" http-equiv="content-type"/>\n  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>\n  <title>\n   micTacTo\n  </title>\n  <style>\n   * {\n    box-sizing: border-box;\n}\n\nhtml, body {\n    height: 100%;\n}\n\nbody {\n    display: flex;\n    flex-direction: column;\n    margin: 0;\n    justify-content: center;\n    align-items: center;\n    font-family: Verdana, "Open Sans", sans-serif;\n}\n\n.header {\n    display: flex;\n    justify-content: space-between;\n    font-size: 5vh;\n    margin-bottom: 2vh;\n}\n\nh1 {\n    font-size: 10vh;\n    text-align: center;\n    margin: 0 0 2vh 0;\n}\n\n.new-game-btn {\n    font-size: 0.8em;\n}\n\n#game {\n    display: flex;\n    flex-wrap: wrap;\n    position: relative;\n    width: 70vh;\n    justify-content: space-between;\n}\n\n.field {\n    flex: 0 0 20vh;\n    height: 20vh;\n    margin-bottom: 5vh;\n    font-size: 10vh;\n}\n.field--X::after { content: "X"; }\n.field--O::after { content: "O"; }\n\n.overlay {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 14vh;\n    color: white;\n    text-shadow: 0 0 5px black, 0 0 5px black, 0 0 15px black;\n    background: rgba(255,255,255, 0.7);\n    z-index: 2;\n}\n  </style>\n  <style type="text/stylus">\n  </style>\n </head>\n <body>\n  <div id="app">\n   <h1>\n    micTacTo\n   </h1>\n   <div class="header">\n    <span class="current-player">\n     Current Player: X\n    </span>\n    <button class="new-game-btn">\n     new Game\n    </button>\n   </div>\n   <div id="game">\n    <button class="field" data-field="0">\n    </button>\n    <button class="field" data-field="1">\n    </button>\n    <button class="field" data-field="2">\n    </button>\n    <button class="field" data-field="3">\n    </button>\n    <button class="field" data-field="4">\n    </button>\n    <button class="field" data-field="5">\n    </button>\n    <button class="field" data-field="6">\n    </button>\n    <button class="field" data-field="7">\n    </button>\n    <button class="field" data-field="8">\n    </button>\n   </div>\n  </div>\n  <!-- main script -->\n  <script type="text/ls">\n   m.mount app,\ncontroller: -&gt;\n    window.ctrl = ctrl =\n        # event listeners\n        newGameClick: !-&gt;\n            # init game variables\n            ctrl.gameover = false\n            ctrl.winner = null\n            ctrl.freeFields = 9\n            ctrl.currPlayer = \\X\n            ctrl.fields = [null,null,null,null,null,null,null,null,null]\n\n        fieldClick: !-&gt;\n            # set clicked field\n            ctrl.fields[@dataset.field] = ctrl.currPlayer\n\n            # check if game is over\n            # check vertically and horizontally\n            :outerLoop for [dir, mod] in [[1, 3], [3, 1]]\n                for pos from 0 to 2\n                    pos *= dir\n                    console.log "[test]" pos, pos+1*mod, pos+2*mod\n                    if ctrl.fields[pos] and ctrl.fields[pos] == ctrl.fields[pos+1*mod] == ctrl.fields[pos+2*mod]\n                        ctrl.winner = ctrl.fields[pos]\n                        break outerLoop\n\n            # check diagonals\n            if (ctrl.fields.0 == ctrl.fields.4 == ctrl.fields.8) or (ctrl.fields.2 == ctrl.fields.4 == ctrl.fields.6)\n                # it\'s impossible that a previously found winner is overriden by an empty diagonal math,\n                # as a win necessarily causes neither diagonal to be completely empty\n                ctrl.winner = ctrl.fields.4\n\n            if ctrl.winner or --ctrl.freeFields == 0\n                ctrl.gameover = true\n                return\n\n            # change to next player\n            ctrl.currPlayer = {X: \\O, O: \\X}[ctrl.currPlayer]\n\n    ctrl.newGameClick!\n    return ctrl\n\n,view: (ctrl) -&gt; [\n    m \\h1, "micTacTo"\n    m \\.header,\n        m \\span.current-player,\n            "Current Player: ", ctrl.currPlayer\n        m \\button.new-game-btn,\n            onclick: ctrl.newGameClick\n            "new Game"\n    m \\#game,\n        if ctrl.winner\n            m \\.overlay, "#{ctrl.winner} won!"\n        else if ctrl.gameover\n            m \\.overlay, "draw!"\n        ctrl.fields.map (markedBy, i) -&gt;\n            m \\button.field,\n                "data-field": i\n                onclick: ctrl.fieldClick\n                class: if markedBy then "field--#markedBy"\n                disabled: !!markedBy\n]\n  </script>\n  <!-- libraries -->\n  <script src="https://cdnjs.cloudflare.com/ajax/libs/mithril/0.2.3/mithril.min.js">\n  </script>\n  <script src="https://cdnjs.cloudflare.com/ajax/libs/livescript/1.4.0/livescript-min.js">\n  </script>\n  <script>\n   /*compile LiveScript*/require(\'LiveScript\').go()\n  </script>\n </body>\n</html>'b'<!DOCTYPE html>\n<html lang="en" xmlns="http://www.w3.org/1999/xhtml">\n <head>\n  <meta content="text/html; charset=utf-8" http-equiv="content-type"/>\n  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>\n  <title>\n   micTacTo\n  </title>\n  <style>\n   * {\n    box-sizing: border-box;\n}\n\nhtml, body {\n    height: 100%;\n}\n\nbody {\n    display: flex;\n    flex-direction: column;\n    margin: 0;\n    justify-content: center;\n    align-items: center;\n    font-family: Verdana, "Open Sans", sans-serif;\n}\n\n.header {\n    display: flex;\n    justify-content: space-between;\n    font-size: 5vh;\n    margin-bottom: 2vh;\n}\n\nh1 {\n    font-size: 10vh;\n    text-align: center;\n    margin: 0 0 2vh 0;\n}\n\n.new-game-btn {\n    font-size: 0.8em;\n}\n\n#game {\n    display: flex;\n    flex-wrap: wrap;\n    position: relative;\n    width: 70vh;\n    justify-content: space-between;\n}\n\n.field {\n    flex: 0 0 20vh;\n    height: 20vh;\n    margin-bottom: 5vh;\n    font-size: 10vh;\n}\n.field--X::after { content: "X"; }\n.field--O::after { content: "O"; }\n\n.overlay {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 14vh;\n    color: white;\n    text-shadow: 0 0 5px black, 0 0 5px black, 0 0 15px black;\n    background: rgba(255,255,255, 0.7);\n    z-index: 2;\n}\n  </style>\n  <style type="text/stylus">\n  </style>\n </head>\n <body>\n  <div id="app">\n   <h1>\n    micTacTo\n   </h1>\n   <div class="header">\n    <span class="current-player">\n     Current Player: X\n    </span>\n    <button class="new-game-btn">\n     new Game\n    </button>\n   </div>\n   <div id="game">\n    <button class="field" data-field="0">\n    </button>\n    <button class="field" data-field="1">\n    </button>\n    <button class="field" data-field="2">\n    </button>\n    <button class="field" data-field="3">\n    </button>\n    <button class="field" data-field="4">\n    </button>\n    <button class="field" data-field="5">\n    </button>\n    <button class="field" data-field="6">\n    </button>\n    <button class="field" data-field="7">\n    </button>\n    <button class="field" data-field="8">\n    </button>\n   </div>\n  </div>\n  <!-- main script -->\n  <script type="text/ls">\n   m.mount app,\ncontroller: -&gt;\n    window.ctrl = ctrl =\n        # event listeners\n        newGameClick: !-&gt;\n            # init game variables\n            ctrl.gameover = false\n            ctrl.winner = null\n            ctrl.freeFields = 9\n            ctrl.currPlayer = \\X\n            ctrl.fields = [null,null,null,null,null,null,null,null,null]\n\n        fieldClick: !-&gt;\n            # set clicked field\n            ctrl.fields[@dataset.field] = ctrl.currPlayer\n\n            # check if game is over\n            # check vertically and horizontally\n            :outerLoop for [dir, mod] in [[1, 3], [3, 1]]\n                for pos from 0 to 2\n                    pos *= dir\n                    console.log "[test]" pos, pos+1*mod, pos+2*mod\n                    if ctrl.fields[pos] and ctrl.fields[pos] == ctrl.fields[pos+1*mod] == ctrl.fields[pos+2*mod]\n                        ctrl.winner = ctrl.fields[pos]\n                        break outerLoop\n\n            # check diagonals\n            if (ctrl.fields.0 == ctrl.fields.4 == ctrl.fields.8) or (ctrl.fields.2 == ctrl.fields.4 == ctrl.fields.6)\n                # it\'s impossible that a previously found winner is overriden by an empty diagonal math,\n                # as a win necessarily causes neither diagonal to be completely empty\n                ctrl.winner = ctrl.fields.4\n\n            if ctrl.winner or --ctrl.freeFields == 0\n                ctrl.gameover = true\n                return\n\n            # change to next player\n            ctrl.currPlayer = {X: \\O, O: \\X}[ctrl.currPlayer]\n\n    ctrl.newGameClick!\n    return ctrl\n\n,view: (ctrl) -&gt; [\n    m \\h1, "micTacTo"\n    m \\.header,\n        m \\span.current-player,\n            "Current Player: ", ctrl.currPlayer\n        m \\button.new-game-btn,\n            onclick: ctrl.newGameClick\n            "new Game"\n    m \\#game,\n        if ctrl.winner\n            m \\.overlay, "#{ctrl.winner} won!"\n        else if ctrl.gameover\n            m \\.overlay, "draw!"\n        ctrl.fields.map (markedBy, i) -&gt;\n            m \\button.field,\n                "data-field": i\n                onclick: ctrl.fieldClick\n                class: if markedBy then "field--#markedBy"\n                disabled: !!markedBy\n]\n  </script>\n  <!-- libraries -->\n  <script src="https://cdnjs.cloudflare.com/ajax/libs/mithril/0.2.3/mithril.min.js">\n  </script>\n  <script src="https://cdnjs.cloudflare.com/ajax/libs/livescript/1.4.0/livescript-min.js">\n  </script>\n  <script>\n   /*compile LiveScript*/require(\'LiveScript\').go()\n  </script>\n </body>\n</html>'