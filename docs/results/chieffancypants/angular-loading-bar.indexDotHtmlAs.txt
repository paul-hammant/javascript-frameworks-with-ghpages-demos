b'<!DOCTYPE html>\n<html xmlns="http://www.w3.org/1999/xhtml">\n <head>\n  <style type="text/css">\n   @charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide{display:none !important;}ng\\:form{display:block;}.ng-animate-block-transitions{transition:0s all!important;-webkit-transition:0s all!important;}.ng-hide-add-active,.ng-hide-remove{display:block!important;}\n  </style>\n  <title>\n   Angular Loading Bar\n  </title>\n  <!-- angular -->\n  <script async="" src="//www.google-analytics.com/analytics.js">\n  </script>\n  <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.2.20/angular.min.js">\n  </script>\n  <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.2.20/angular-animate.min.js">\n  </script>\n  <!-- loadingbar -->\n  <script src="src/loading-bar.js">\n  </script>\n  <link href="src/loading-bar.css" rel="stylesheet"/>\n  <!-- example app -->\n  <link href="https://netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css" rel="stylesheet"/>\n  <script src="app.js">\n  </script>\n  <link href="app.css" rel="stylesheet"/>\n  <link href="https://fonts.googleapis.com/css?family=Oxygen:300,400,700" rel="stylesheet" type="text/css"/>\n </head>\n <body class="ng-scope" ng-app="LoadingBarExample" ng-controller="ExampleCtrl">\n  <div class="jumbotron">\n   <h1>\n    Angular Loading Bar\n   </h1>\n   <p>\n    An automatic loading bar using angular interceptors.\n    <small>\n     It works automatically, so simply include it as a dependency and it will automatically display the progress of your\n     <code>\n      $http\n     </code>\n     requests.\n    </small>\n   </p>\n   <p>\n    <a class="btn btn-primary btn-lg" href="https://github.com/chieffancypants/angular-loading-bar/archive/master.zip">\n     <i class="glyphicon glyphicon-download">\n     </i>\n     Download\n    </a>\n    <a class="btn btn-default btn-lg" href="https://github.com/chieffancypants/angular-loading-bar">\n     <i class="glyphicon glyphicon-share">\n     </i>\n     View on GitHub\n    </a>\n   </p>\n  </div>\n  <div class="examples ng-animate ng-hide-remove ng-hide-remove-active" ng-hide="fakeIntro" style="">\n   <!-- <h4>Examples:</h4> -->\n   <div class="btn-group btn-group-justified">\n    <a class="btn btn-primary btn-lg" href="#" ng-click="start()">\n     <i class="glyphicon glyphicon-play-circle">\n     </i>\n     <span>\n      cfpLoadingBar.\n     </span>\n     start()\n    </a>\n    <a class="btn btn-primary btn-lg" href="#" ng-click="complete()">\n     <i class="glyphicon glyphicon-play-circle">\n     </i>\n     <span>\n      cfpLoadingBar.\n     </span>\n     complete()\n    </a>\n    <a class="btn btn-primary btn-lg" href="#" ng-click="fetch()">\n     <i class="glyphicon glyphicon-play-circle">\n     </i>\n     Real Example\n     <span>\n      (from reddit)\n     </span>\n    </a>\n   </div>\n  </div>\n  <!-- a little ghetto re-using `subreddit` on ng-if, but this is just an example and I don\'t want to create a directive -->\n  <!-- ngIf: !subreddit -->\n  <div class="description ng-scope ng-animate ng-hide-remove ng-hide-remove-active" ng-hide="fakeIntro" ng-if="!subreddit" style="">\n   <h4>\n    What is this?\n   </h4>\n   <p>\n    There are a few projects like this one, but none that were automatic.  They all required you to maintain state on behalf of the progress bar, setting its position manually.  This is problematic when you have multiple services all making independent XHR requests.  You simply can\'t have loosly-coupled code in this scenario.\n   </p>\n   <p>\n    This project is different.  It automates the loading bar\'s progress, by using angular\n    <code>\n     interceptors\n    </code>\n    . Multiple requests within the same time period get bundled together such that each response increments the progress bar by the appropriate amount.\n   </p>\n  </div>\n  <!-- end ngIf: !subreddit -->\n  <!-- ngIf: !subreddit -->\n  <div class="usage ng-scope ng-animate ng-hide-remove ng-hide-remove-active" ng-hide="fakeIntro" ng-if="!subreddit" style="">\n   <h4>\n    How do I use it?\n   </h4>\n   <p>\n    Install it via npm or bower\n   </p>\n   <pre>$ npm install angular-loading-bar\n$ bower install angular-loading-bar</pre>\n   <p>\n    To use, simply include it as a dependency in your app and you\'re done!\n   </p>\n   <pre>angular.module(\'myApp\', [\'angular-loading-bar\'])</pre>\n  </div>\n  <!-- end ngIf: !subreddit -->\n  <h4 class="loading-text ng-hide" ng-show="subreddit">\n   Showing a few results for:\n   <span class="ng-binding">\n    /r/...\n   </span>\n  </h4>\n  <!-- ngRepeat: post in posts -->\n  <footer class="" ng-hide="fakeIntro">\n   <iframe frameborder="0" height="30" src="http://ghbtns.com/github-btn.html?user=chieffancypants&amp;repo=angular-loading-bar&amp;type=watch&amp;count=true&amp;size=medium" width="95">\n   </iframe>\n   <iframe frameborder="0" height="30" src="http://ghbtns.com/github-btn.html?user=chieffancypants&amp;type=follow&amp;count=true&amp;size=medium" width="210">\n   </iframe>\n  </footer>\n  <script>\n   (function(i,s,o,g,r,a,m){i[\'GoogleAnalyticsObject\']=r;i[r]=i[r]||function(){\n  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n  })(window,document,\'script\',\'//www.google-analytics.com/analytics.js\',\'ga\');\n\n  ga(\'create\', \'UA-44146513-1\', \'chieffancypants.github.io\');\n  ga(\'send\', \'pageview\');\n  </script>\n </body>\n</html>'