b'<!DOCTYPE html>\n<html lang="en-us" xmlns="http://www.w3.org/1999/xhtml">\n <head>\n  <meta charset="utf-8"/>\n  <title>\n   Knockouttabs by getsetbro\n  </title>\n  <meta content="width=device-width, initial-scale=1" name="viewport"/>\n  <link charset="utf-8" href="//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.6/css/bootstrap.min.css" media="screen" rel="stylesheet" title="no title"/>\n  <link charset="utf-8" href="css.css" media="screen" rel="stylesheet" title="no title"/>\n </head>\n <body>\n  <header>\n   <div class="container">\n    <h1 class="brand">\n     app\n    </h1>\n   </div>\n  </header>\n  <hr/>\n  <section>\n   <div class="container">\n    <!-- Nav tabs -->\n    <ul class="nav nav-tabs" role="tablist">\n     <!-- <li class="active"><a><input type=radio name=wee value="all" data-bind=\'checked: typeToShow\'/>All</a></li>\n            <li class="inactv"><a><input type=radio name=wee value="roc" data-bind=\'checked: typeToShow\'/>Roc</a></li>\n            <li class="inactv"><a><input type=radio name=wee value="gas" data-bind=\'checked: typeToShow\'/>Gas</a></li> -->\n     <li class="active" data-bind="css: { active: typeToShow() === \'all\' }">\n      <a class="btn" data-bind="click: clkr">\n       all\n      </a>\n     </li>\n     <li class="inactv" data-bind="css: { active: typeToShow() === \'roc\' }">\n      <a class="btn" data-bind="click: clkr">\n       roc\n      </a>\n     </li>\n     <li class="inactv" data-bind="css: { active: typeToShow() === \'gas\' }">\n      <a class="btn" data-bind="click: clkr">\n       gas\n      </a>\n     </li>\n    </ul>\n    <!-- items -->\n    <section class="well">\n     <input data-bind="textInput: filterTxt" placeholder="Filter" type="text"/>\n     <div data-bind="template: { foreach: planetsToShow }">\n      <div class="planet roc" data-bind=\'attr: { "class": "planet " + type }, text: name\'>\n       Mercury\n      </div>\n      <div class="planet roc" data-bind=\'attr: { "class": "planet " + type }, text: name\'>\n       Venus\n      </div>\n      <div class="planet roc" data-bind=\'attr: { "class": "planet " + type }, text: name\'>\n       Earth\n      </div>\n      <div class="planet roc" data-bind=\'attr: { "class": "planet " + type }, text: name\'>\n       Mars\n      </div>\n      <div class="planet gas" data-bind=\'attr: { "class": "planet " + type }, text: name\'>\n       Jupiter\n      </div>\n      <div class="planet gas" data-bind=\'attr: { "class": "planet " + type }, text: name\'>\n       Saturn\n      </div>\n      <div class="planet gas" data-bind=\'attr: { "class": "planet " + type }, text: name\'>\n       Uranus\n      </div>\n      <div class="planet gas" data-bind=\'attr: { "class": "planet " + type }, text: name\'>\n       Neptune\n      </div>\n      <div class="planet wut" data-bind=\'attr: { "class": "planet " + type }, text: name\'>\n       Pluto\n      </div>\n     </div>\n    </section>\n   </div>\n  </section>\n  <script charset="utf-8" src="//cdnjs.cloudflare.com/ajax/libs/jquery/2.1.2/jquery.min.js">\n  </script>\n  <script charset="utf-8" src="//cdnjs.cloudflare.com/ajax/libs/knockout/3.4.0/knockout-min.js">\n  </script>\n  <!-- <script src="//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.6/js/bootstrap.min.js" charset="utf-8"></script> -->\n  <script>\n   var PlanetsModel = function() {\n        this.planets = ko.observableArray([\n            {type: "roc", name: "Mercury"},\n            {type: "roc", name: "Venus"},\n            {type: "roc", name: "Earth"},\n            {type: "roc", name: "Mars"},\n            {type: "gas", name: "Jupiter"},\n            {type: "gas", name: "Saturn"},\n            {type: "gas", name: "Uranus"},\n            {type: "gas", name: "Neptune"},\n            {type: "wut", name: "Pluto"}\n        ]);\n        this.filterTxt = ko.observable("");\n        this.typeToShow = ko.observable("all");\n        this.clkr = function(k,e) {\n            this.typeToShow(e.target.innerHTML);\n        }\n        this.planetsToShow = ko.pureComputed(function() {\n            // Represents a filtered list of planets\n            // i.e., only those matching the "typeToShow" condition\n            var desiredType = this.typeToShow();\n            var filterOn = this.filterTxt();\n\n            return ko.utils.arrayFilter(this.planets(), function(planet) {\n              if (desiredType == "all"){\n                return planet.name.indexOf(filterOn) &gt;= 0;\n              }              \n              return planet.type == desiredType &amp;&amp; planet.name.indexOf(filterOn) &gt;= 0 ;\n            });\n        }, this);\n\n    };\n\n\n    ko.applyBindings(new PlanetsModel());\n  </script>\n </body>\n</html>'b'<!DOCTYPE html>\n<html lang="en-us" xmlns="http://www.w3.org/1999/xhtml">\n <head>\n  <meta charset="utf-8"/>\n  <title>\n   Knockouttabs by getsetbro\n  </title>\n  <meta content="width=device-width, initial-scale=1" name="viewport"/>\n  <link charset="utf-8" href="//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.6/css/bootstrap.min.css" media="screen" rel="stylesheet" title="no title"/>\n  <link charset="utf-8" href="css.css" media="screen" rel="stylesheet" title="no title"/>\n </head>\n <body>\n  <header>\n   <div class="container">\n    <h1 class="brand">\n     app\n    </h1>\n   </div>\n  </header>\n  <hr/>\n  <section>\n   <div class="container">\n    <!-- Nav tabs -->\n    <ul class="nav nav-tabs" role="tablist">\n     <!-- <li class="active"><a><input type=radio name=wee value="all" data-bind=\'checked: typeToShow\'/>All</a></li>\n            <li class="inactv"><a><input type=radio name=wee value="roc" data-bind=\'checked: typeToShow\'/>Roc</a></li>\n            <li class="inactv"><a><input type=radio name=wee value="gas" data-bind=\'checked: typeToShow\'/>Gas</a></li> -->\n     <li class="active" data-bind="css: { active: typeToShow() === \'all\' }">\n      <a class="btn" data-bind="click: clkr">\n       all\n      </a>\n     </li>\n     <li class="inactv" data-bind="css: { active: typeToShow() === \'roc\' }">\n      <a class="btn" data-bind="click: clkr">\n       roc\n      </a>\n     </li>\n     <li class="inactv" data-bind="css: { active: typeToShow() === \'gas\' }">\n      <a class="btn" data-bind="click: clkr">\n       gas\n      </a>\n     </li>\n    </ul>\n    <!-- items -->\n    <section class="well">\n     <input data-bind="textInput: filterTxt" placeholder="Filter" type="text"/>\n     <div data-bind="template: { foreach: planetsToShow }">\n      <div class="planet roc" data-bind=\'attr: { "class": "planet " + type }, text: name\'>\n       Mercury\n      </div>\n      <div class="planet roc" data-bind=\'attr: { "class": "planet " + type }, text: name\'>\n       Venus\n      </div>\n      <div class="planet roc" data-bind=\'attr: { "class": "planet " + type }, text: name\'>\n       Earth\n      </div>\n      <div class="planet roc" data-bind=\'attr: { "class": "planet " + type }, text: name\'>\n       Mars\n      </div>\n      <div class="planet gas" data-bind=\'attr: { "class": "planet " + type }, text: name\'>\n       Jupiter\n      </div>\n      <div class="planet gas" data-bind=\'attr: { "class": "planet " + type }, text: name\'>\n       Saturn\n      </div>\n      <div class="planet gas" data-bind=\'attr: { "class": "planet " + type }, text: name\'>\n       Uranus\n      </div>\n      <div class="planet gas" data-bind=\'attr: { "class": "planet " + type }, text: name\'>\n       Neptune\n      </div>\n      <div class="planet wut" data-bind=\'attr: { "class": "planet " + type }, text: name\'>\n       Pluto\n      </div>\n     </div>\n    </section>\n   </div>\n  </section>\n  <script charset="utf-8" src="//cdnjs.cloudflare.com/ajax/libs/jquery/2.1.2/jquery.min.js">\n  </script>\n  <script charset="utf-8" src="//cdnjs.cloudflare.com/ajax/libs/knockout/3.4.0/knockout-min.js">\n  </script>\n  <!-- <script src="//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.6/js/bootstrap.min.js" charset="utf-8"></script> -->\n  <script>\n   var PlanetsModel = function() {\n        this.planets = ko.observableArray([\n            {type: "roc", name: "Mercury"},\n            {type: "roc", name: "Venus"},\n            {type: "roc", name: "Earth"},\n            {type: "roc", name: "Mars"},\n            {type: "gas", name: "Jupiter"},\n            {type: "gas", name: "Saturn"},\n            {type: "gas", name: "Uranus"},\n            {type: "gas", name: "Neptune"},\n            {type: "wut", name: "Pluto"}\n        ]);\n        this.filterTxt = ko.observable("");\n        this.typeToShow = ko.observable("all");\n        this.clkr = function(k,e) {\n            this.typeToShow(e.target.innerHTML);\n        }\n        this.planetsToShow = ko.pureComputed(function() {\n            // Represents a filtered list of planets\n            // i.e., only those matching the "typeToShow" condition\n            var desiredType = this.typeToShow();\n            var filterOn = this.filterTxt();\n\n            return ko.utils.arrayFilter(this.planets(), function(planet) {\n              if (desiredType == "all"){\n                return planet.name.indexOf(filterOn) &gt;= 0;\n              }              \n              return planet.type == desiredType &amp;&amp; planet.name.indexOf(filterOn) &gt;= 0 ;\n            });\n        }, this);\n\n    };\n\n\n    ko.applyBindings(new PlanetsModel());\n  </script>\n </body>\n</html>'