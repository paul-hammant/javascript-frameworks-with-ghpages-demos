b'<!DOCTYPE html>\n<html xmlns="http://www.w3.org/1999/xhtml">\n <head>\n  <title>\n   Backbone Notifications\n  </title>\n  <link href="src/backbone.notifications.css" rel="stylesheet"/>\n  <link href="src/demo.css" rel="stylesheet"/>\n  <script async="" charset="utf-8" src="https://platform.twitter.com/js/button.80ba267f37d7093ec36703643939b173.js" type="text/javascript">\n  </script>\n </head>\n <body>\n  <header>\n   <h1>\n    Backbone.Notifications\n   </h1>\n   <h2>\n    Global notification mechanism for Backbone\n   </h2>\n  </header>\n  <section id="share">\n   <iframe allowtransparency="true" class="twitter-share-button twitter-share-button-rendered twitter-tweet-button" frameborder="0" id="twitter-widget-0" scrolling="no" src="http://platform.twitter.com/widgets/tweet_button.4ca9f1d9cb5a373a2f7d0969f5b40084.en.html#dnt=false&amp;id=twitter-widget-0&amp;lang=en&amp;original_referer=http%3A%2F%2Ffatiherikli.github.io%2Fbackbone-notifications%2Findex.html&amp;size=l&amp;text=Backbone%20Notifications&amp;time=1492363202560&amp;type=share&amp;url=http%3A%2F%2Ffatiherikli.github.io%2Fbackbone-notifications%2Findex.html&amp;via=fthrkl" style="position: static; visibility: visible; width: 76px; height: 28px;" title="Twitter Tweet Button">\n   </iframe>\n  </section>\n  <section>\n   <h3>\n    Flash Notifications\n   </h3>\n   <p>\n    There are three type of the flash notifications; flash, success and error.\n   </p>\n   <ul class="examples">\n    <li>\n     <a href="#flash-example" id="flash-example">\n      Flash Notification\n     </a>\n    </li>\n    <li>\n     <a href="#success-example" id="success-example">\n      Success Notification\n     </a>\n    </li>\n    <li>\n     <a href="#error-example" id="error-example">\n      Error Notification\n     </a>\n    </li>\n   </ul>\n   <pre>notifications.trigger("flash", "hello, i\'m a flash notification.");\nnotifications.trigger("success", "registration completed successful.");\nnotifications.trigger("error", "oppss, error during initialization.");</pre>\n   <h3>\n    Loading Notification\n   </h3>\n   <p>\n    You can use this notification type for inform the user while loading something.\n   </p>\n   <ul class="examples">\n    <li>\n     <a href="#start-loader" id="start-loader">\n      Start loader\n     </a>\n    </li>\n    <li>\n     <a href="#finish-loader" id="finish-loader">\n      Finish loader\n     </a>\n    </li>\n   </ul>\n   <pre>notifications.trigger("start:loader", "Loading, please wait...");\nnotifications.trigger("finish:loader");</pre>\n   <h3>\n    Progress Bar\n   </h3>\n   <p>\n    Also there is an other notification type to show progress bar for your long running operations.\n   </p>\n   <ul class="examples">\n    <li>\n     <a href="#start-progress" id="start-progress">\n      Start progress\n     </a>\n    </li>\n    <li>\n     <a class="update-progress" data-progress="40" href="#">\n      Update to 40%\n     </a>\n    </li>\n    <li>\n     <a class="update-progress" data-progress="80" href="#">\n      Update to 80%\n     </a>\n    </li>\n    <li>\n     <a href="#finish-progress" id="finish-progress">\n      Finish progress\n     </a>\n    </li>\n   </ul>\n   <pre>notifications.trigger("start:progress", "Loading, please wait...");\nnotifications.trigger("update:progress", 50);\nnotifications.trigger("finish:progress");</pre>\n  </section>\n  <section>\n   <h3>\n    Configuration\n   </h3>\n   <p>\n    Get the source code on\n    <a href="https://github.com/fatiherikli/backbone-notifications/tree/master/src">\n     github\n    </a>\n    ,\n        and include the css and backbone.notifications.js file to your page.\n   </p>\n   <pre>&lt;link rel="stylesheet" href="backbone.notifications.js" /&gt;\n&lt;script src="backbone.notifications.js"&gt;&lt;/script&gt;</pre>\n   <p>\n    First step is the definition of notification object. You can use built-in\n        Backbone objects or create an object that extends with Backbone.Events.\n   </p>\n   <pre>var notifications = {};\n_.extend(notifications, Backbone.Events);</pre>\n   <p>\n    The second step is the configuration of Notifier view. Notifier view returns an unattached\n    DOM element. You can attach this element to the body element.\n   </p>\n   <pre>$("body").append(new Notifier({\n    model: notifications, // your notification object\n    wait: 2000 // the duration of notifications as milliseconds\n}).render(););\n</pre>\n   <p>\n    That\'s all. Now you can trigger your notification object.\n   </p>\n  </section>\n  <footer>\n   <ul id="plugins">\n    <li>\n     Global notification mechanism for Backbone.\n     <br/>\n     <a href="http://fatiherikli.github.com/backbone-notifications">\n      https://github.com/fatiherikli/backbone-notifications\n     </a>\n    </li>\n    <li>\n     An auto-complete widget built with Backbone.js.\n     <br/>\n     <a href="http://fatiherikli.github.com/backbone-autocomplete">\n      https://github.com/fatiherikli/backbone-autocomplete\n     </a>\n    </li>\n    <li>\n     Edit-in-place functionality for backbone models.\n     <br/>\n     <a href="http://fatiherikli.github.com/backbone-editinplace">\n      https://github.com/fatiherikli/backbone-editinplace\n     </a>\n    </li>\n    <li>\n     A sortable widget that uses HTML5 Drag and Drop API for your collections.\n     <a href="http://fatiherikli.github.com/backbone-sortable">\n      https://github.com/fatiherikli/backbone-sortable\n     </a>\n    </li>\n   </ul>\n  </footer>\n  <script id="twitter-wjs" src="//platform.twitter.com/widgets.js">\n  </script>\n  <script>\n   !function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");\n  </script>\n  <script src="//code.jquery.com/jquery-1.9.1.js" type="text/javascript">\n  </script>\n  <script src="//underscorejs.org/underscore-min.js" type="text/javascript">\n  </script>\n  <script src="//backbonejs.org/backbone-min.js" type="text/javascript">\n  </script>\n  <script src="src/backbone.notifications.js" type="text/javascript">\n  </script>\n  <script type="text/javascript">\n   $(function () {\n\n        var notifications = {};\n        _.extend(notifications, Backbone.Events);\n\n        new Notifier({\n            model: notifications\n        }).render().$el.appendTo("body");\n\n        $("#flash-example").click(function () {\n            notifications.trigger("flash", "Hello, i\'m a flash notification.");\n            return false;\n        });\n\n        $("#success-example").click(function () {\n            notifications.trigger("success", "Registration completed successful.");\n            return false;\n        });\n\n        $("#error-example").click(function () {\n            notifications.trigger("error", "Something\'s wrong with the world today.");\n            _.delay(notifications.trigger.bind(notifications,\n                    "error", "I don\'t know what it is.", 1800), 1000);\n            return false;\n        });\n\n        $("#start-loader").click(function () {\n            notifications.trigger("start:loader", "Loading, please wait...");\n            return false;\n        });\n\n        $("#finish-loader").click(function () {\n            notifications.trigger("finish:loader");\n            return false;\n        });\n\n        $("#start-progress").click(function () {\n            notifications.trigger("start:progress", "Loading, please wait...");\n            notifications.trigger("update:progress", 20);\n            return false;\n        });\n\n        $(".update-progress").click(function () {\n            notifications.trigger("update:progress", $(this).data("progress"));\n            return false;\n        });\n\n        $("#finish-progress").click(function () {\n            notifications.trigger("finish:progress");\n            return false;\n        });\n\n    });\n  </script>\n  <div class="notifications">\n  </div>\n </body>\n</html>'b'<!DOCTYPE html>\n<html xmlns="http://www.w3.org/1999/xhtml">\n <head>\n  <title>\n   Backbone Notifications\n  </title>\n  <link href="src/backbone.notifications.css" rel="stylesheet"/>\n  <link href="src/demo.css" rel="stylesheet"/>\n  <script async="" charset="utf-8" src="https://platform.twitter.com/js/button.80ba267f37d7093ec36703643939b173.js" type="text/javascript">\n  </script>\n </head>\n <body>\n  <header>\n   <h1>\n    Backbone.Notifications\n   </h1>\n   <h2>\n    Global notification mechanism for Backbone\n   </h2>\n  </header>\n  <section id="share">\n   <iframe allowtransparency="true" class="twitter-share-button twitter-share-button-rendered twitter-tweet-button" frameborder="0" id="twitter-widget-0" scrolling="no" src="http://platform.twitter.com/widgets/tweet_button.4ca9f1d9cb5a373a2f7d0969f5b40084.en.html#dnt=false&amp;id=twitter-widget-0&amp;lang=en&amp;original_referer=http%3A%2F%2Ffatiherikli.github.io%2Fbackbone-notifications%2Findex.html&amp;size=l&amp;text=Backbone%20Notifications&amp;time=1492571158434&amp;type=share&amp;url=http%3A%2F%2Ffatiherikli.github.io%2Fbackbone-notifications%2Findex.html&amp;via=fthrkl" style="position: static; visibility: visible; width: 76px; height: 28px;" title="Twitter Tweet Button">\n   </iframe>\n  </section>\n  <section>\n   <h3>\n    Flash Notifications\n   </h3>\n   <p>\n    There are three type of the flash notifications; flash, success and error.\n   </p>\n   <ul class="examples">\n    <li>\n     <a href="#flash-example" id="flash-example">\n      Flash Notification\n     </a>\n    </li>\n    <li>\n     <a href="#success-example" id="success-example">\n      Success Notification\n     </a>\n    </li>\n    <li>\n     <a href="#error-example" id="error-example">\n      Error Notification\n     </a>\n    </li>\n   </ul>\n   <pre>notifications.trigger("flash", "hello, i\'m a flash notification.");\nnotifications.trigger("success", "registration completed successful.");\nnotifications.trigger("error", "oppss, error during initialization.");</pre>\n   <h3>\n    Loading Notification\n   </h3>\n   <p>\n    You can use this notification type for inform the user while loading something.\n   </p>\n   <ul class="examples">\n    <li>\n     <a href="#start-loader" id="start-loader">\n      Start loader\n     </a>\n    </li>\n    <li>\n     <a href="#finish-loader" id="finish-loader">\n      Finish loader\n     </a>\n    </li>\n   </ul>\n   <pre>notifications.trigger("start:loader", "Loading, please wait...");\nnotifications.trigger("finish:loader");</pre>\n   <h3>\n    Progress Bar\n   </h3>\n   <p>\n    Also there is an other notification type to show progress bar for your long running operations.\n   </p>\n   <ul class="examples">\n    <li>\n     <a href="#start-progress" id="start-progress">\n      Start progress\n     </a>\n    </li>\n    <li>\n     <a class="update-progress" data-progress="40" href="#">\n      Update to 40%\n     </a>\n    </li>\n    <li>\n     <a class="update-progress" data-progress="80" href="#">\n      Update to 80%\n     </a>\n    </li>\n    <li>\n     <a href="#finish-progress" id="finish-progress">\n      Finish progress\n     </a>\n    </li>\n   </ul>\n   <pre>notifications.trigger("start:progress", "Loading, please wait...");\nnotifications.trigger("update:progress", 50);\nnotifications.trigger("finish:progress");</pre>\n  </section>\n  <section>\n   <h3>\n    Configuration\n   </h3>\n   <p>\n    Get the source code on\n    <a href="https://github.com/fatiherikli/backbone-notifications/tree/master/src">\n     github\n    </a>\n    ,\n        and include the css and backbone.notifications.js file to your page.\n   </p>\n   <pre>&lt;link rel="stylesheet" href="backbone.notifications.js" /&gt;\n&lt;script src="backbone.notifications.js"&gt;&lt;/script&gt;</pre>\n   <p>\n    First step is the definition of notification object. You can use built-in\n        Backbone objects or create an object that extends with Backbone.Events.\n   </p>\n   <pre>var notifications = {};\n_.extend(notifications, Backbone.Events);</pre>\n   <p>\n    The second step is the configuration of Notifier view. Notifier view returns an unattached\n    DOM element. You can attach this element to the body element.\n   </p>\n   <pre>$("body").append(new Notifier({\n    model: notifications, // your notification object\n    wait: 2000 // the duration of notifications as milliseconds\n}).render(););\n</pre>\n   <p>\n    That\'s all. Now you can trigger your notification object.\n   </p>\n  </section>\n  <footer>\n   <ul id="plugins">\n    <li>\n     Global notification mechanism for Backbone.\n     <br/>\n     <a href="http://fatiherikli.github.com/backbone-notifications">\n      https://github.com/fatiherikli/backbone-notifications\n     </a>\n    </li>\n    <li>\n     An auto-complete widget built with Backbone.js.\n     <br/>\n     <a href="http://fatiherikli.github.com/backbone-autocomplete">\n      https://github.com/fatiherikli/backbone-autocomplete\n     </a>\n    </li>\n    <li>\n     Edit-in-place functionality for backbone models.\n     <br/>\n     <a href="http://fatiherikli.github.com/backbone-editinplace">\n      https://github.com/fatiherikli/backbone-editinplace\n     </a>\n    </li>\n    <li>\n     A sortable widget that uses HTML5 Drag and Drop API for your collections.\n     <a href="http://fatiherikli.github.com/backbone-sortable">\n      https://github.com/fatiherikli/backbone-sortable\n     </a>\n    </li>\n   </ul>\n  </footer>\n  <script id="twitter-wjs" src="//platform.twitter.com/widgets.js">\n  </script>\n  <script>\n   !function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");\n  </script>\n  <script src="//code.jquery.com/jquery-1.9.1.js" type="text/javascript">\n  </script>\n  <script src="//underscorejs.org/underscore-min.js" type="text/javascript">\n  </script>\n  <script src="//backbonejs.org/backbone-min.js" type="text/javascript">\n  </script>\n  <script src="src/backbone.notifications.js" type="text/javascript">\n  </script>\n  <script type="text/javascript">\n   $(function () {\n\n        var notifications = {};\n        _.extend(notifications, Backbone.Events);\n\n        new Notifier({\n            model: notifications\n        }).render().$el.appendTo("body");\n\n        $("#flash-example").click(function () {\n            notifications.trigger("flash", "Hello, i\'m a flash notification.");\n            return false;\n        });\n\n        $("#success-example").click(function () {\n            notifications.trigger("success", "Registration completed successful.");\n            return false;\n        });\n\n        $("#error-example").click(function () {\n            notifications.trigger("error", "Something\'s wrong with the world today.");\n            _.delay(notifications.trigger.bind(notifications,\n                    "error", "I don\'t know what it is.", 1800), 1000);\n            return false;\n        });\n\n        $("#start-loader").click(function () {\n            notifications.trigger("start:loader", "Loading, please wait...");\n            return false;\n        });\n\n        $("#finish-loader").click(function () {\n            notifications.trigger("finish:loader");\n            return false;\n        });\n\n        $("#start-progress").click(function () {\n            notifications.trigger("start:progress", "Loading, please wait...");\n            notifications.trigger("update:progress", 20);\n            return false;\n        });\n\n        $(".update-progress").click(function () {\n            notifications.trigger("update:progress", $(this).data("progress"));\n            return false;\n        });\n\n        $("#finish-progress").click(function () {\n            notifications.trigger("finish:progress");\n            return false;\n        });\n\n    });\n  </script>\n  <div class="notifications">\n  </div>\n </body>\n</html>'