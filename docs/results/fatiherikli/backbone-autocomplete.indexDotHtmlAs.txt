b'<!DOCTYPE html>\n<html xmlns="http://www.w3.org/1999/xhtml">\n <head>\n  <title>\n   Backbone Widgets\n  </title>\n  <link href="media/backbone.autocomplete.css" rel="stylesheet"/>\n  <style type="text/css">\n   body {\n            margin: 0 0 120px;\n            font-family: helvetica, sans-serif;\n            font-size: 25px;\n        }\n\n        input {\n            font-size: 17px;\n            padding: 3px;\n            margin: 0;\n            outline: none;\n        }\n\n        header {\n            margin: 0;\n            border-bottom: 1px solid #e4e4e4;\n            padding: 50px 50px 20px;\n        }\n\n        header h1 {\n            color: #ff813d;\n        }\n\n        header h2 {\n            color: #565656;\n            font-size: 29px;\n            font-weight: normal;\n        }\n\n        header h1, header h2, section {\n            width: 890px;\n            margin: auto;\n        }\n\n        section {\n            overflow: hidden;\n        }\n\n        section h3 {\n            color: #424242;\n            margin: 30px 0 10px;\n        }\n\n        section h4 {\n            font-size: 20px;\n            margin: 0;\n            color: #424242;\n            padding: 0;\n        }\n\n        section p {\n            margin: 5px 0;\n            font-size: 18px;\n            color: #525252;\n        }\n\n        section form input {\n            width: 350px;\n            font-size: 20px;\n            padding: 10px;\n        }\n\n        #example, #selected {\n            float: left;\n            margin-right: 55px;\n        }\n\n        #selected {\n            display: none;\n            margin: 0;\n        }\n\n        #selected p {\n            margin: 0;\n            width: 430px;\n            padding: 10px;\n            background-color: #fafafa;\n            color: #404040;\n        }\n\n        p em {\n            background-color: #f6f2f4;\n            font-style: normal;\n            padding: 1px 4px;\n            border-radius: 1px;\n        }\n\n        pre {\n            font-size: 20px;\n            background-color: #fcfcfc;\n            padding: 10px;\n            color: #666666;\n            border: 1px solid #e8e8e8;\n            line-height: 29px;\n        }\n\n        table {\n            width: 100%;\n            font-size: 18px;\n            border: 1px solid #e8e8e8;\n        }\n\n        table th {\n            padding: 10px;\n            color: #515151;\n            font-weight: bold;\n            text-align: left;\n        }\n\n        table td {\n            padding: 10px;\n            color: #515151;\n        }\n\n        p a {\n            color: #4b4b4b;\n            font-weight: bold;\n            text-decoration: none;\n        }\n\n        #contribution p {\n            padding: 20px;\n            border: 1px solid #e9e9e9;\n        }\n  </style>\n </head>\n <body>\n  <header>\n   <h1>\n    Backbone.AutoCompleteView\n   </h1>\n   <h2>\n    An auto-complete widget built with Backbone.js\n   </h2>\n  </header>\n  <section>\n   <div id="example">\n    <h3>\n     Example\n    </h3>\n    <form action="#">\n     <input autocomplete="off" id="plugin" placeholder="Select a plugin (type backbone)" type="text"/>\n     <ul class="autocomplete" style="width: 374px;">\n     </ul>\n    </form>\n   </div>\n   <div id="selected">\n    <h3>\n     Selected Item\n    </h3>\n    <p>\n    </p>\n   </div>\n  </section>\n  <section>\n   <h3>\n    Usage\n   </h3>\n   <p>\n    Create a method that called `label` on your model.\n        That method will be used for representation of model.\n   </p>\n   <pre>var Plugin = Backbone.Model.extend({\n    label: function () {\n        return this.get("name");\n    }\n});</pre>\n   <p>\n    Create a collection for auto-completion model.\n   </p>\n   <pre>var PluginCollection = Backbone.Collection.extend({\n    model: Plugin\n});</pre>\n   <p>\n    And initialize the AutoCompleteView in your view.\n   </p>\n   <pre>new AutoCompleteView({\n    input: $("#plugin"), // your input field\n    model: plugins // your collection\n}).render();</pre>\n  </section>\n  <section>\n   <h3>\n    Configuration\n   </h3>\n   <table>\n    <tbody>\n     <tr>\n      <th>\n       Parameter\n      </th>\n      <th>\n       Type\n      </th>\n      <th>\n       Default\n      </th>\n      <th>\n       Description\n      </th>\n     </tr>\n     <tr>\n      <td>\n       className\n      </td>\n      <td>\n       string\n      </td>\n      <td>\n       autocomplete\n      </td>\n      <td>\n       The class name of popup menu.\n      </td>\n     </tr>\n     <tr>\n      <td>\n       wait\n      </td>\n      <td>\n       integer\n      </td>\n      <td>\n       300\n      </td>\n      <td>\n       The throttling value as milliseconds.\n      </td>\n     </tr>\n     <tr>\n      <td>\n       minKeywordLength\n      </td>\n      <td>\n       integer\n      </td>\n      <td>\n       2\n      </td>\n      <td>\n       Minimum keyword length.\n      </td>\n     </tr>\n     <tr>\n      <td>\n       queryParameter\n      </td>\n      <td>\n       string\n      </td>\n      <td>\n       query\n      </td>\n      <td>\n       The search parameter for back-end.\n      </td>\n     </tr>\n     <tr>\n      <td>\n       onSelect\n      </td>\n      <td>\n       function\n      </td>\n      <td>\n       no-op\n      </td>\n      <td>\n       The callback function for selected item.\n      </td>\n     </tr>\n    </tbody>\n   </table>\n  </section>\n  <section id="contribution">\n   <h3>\n    Contribution\n   </h3>\n   <p>\n    <a href="https://github.com/fatiherikli/backbone-autocomplete">\n     https://github.com/fatiherikli/backbone-autocomplete\n    </a>\n   </p>\n  </section>\n  <script src="//code.jquery.com/jquery-1.9.1.js" type="text/javascript">\n  </script>\n  <script src="//underscorejs.org/underscore-min.js" type="text/javascript">\n  </script>\n  <script src="//backbonejs.org/backbone-min.js" type="text/javascript">\n  </script>\n  <script src="media/backbone.autocomplete.js" type="text/javascript">\n  </script>\n  <script type="text/javascript">\n   $(function () {\n\n        var Plugin = Backbone.Model.extend({\n            label: function () {\n                return this.get("name");\n            }\n        });\n\n        var PluginCollection = Backbone.Collection.extend({\n            model: Plugin\n        });\n\n        var plugins = new PluginCollection([\n            {"name": "backbone-autocomplete"},\n            {"name": "backbone-memento"},\n            {"name": "backbone-validations"},\n            {"name": "backbone-chosen"},\n            {"name": "backbone-relational"},\n            {"name": "backbone-bindings"},\n            {"name": "backbone-boilerplate"},\n            {"name": "backbone-traversal"},\n            {"name": "backbone-factory"},\n            {"name": "jquery"},\n            {"name": "jquery-ui"},\n            {"name": "angular.js"},\n            {"name": "keymaster.js"}\n        ]);\n\n        new AutoCompleteView({\n            input: $("#plugin"),\n            model: plugins,\n            onSelect: function (model) {\n                $("#selected").show().find("p").html(model.label());\n            }\n        }).render();\n\n    });\n  </script>\n </body>\n</html>'b'<!DOCTYPE html>\n<html xmlns="http://www.w3.org/1999/xhtml">\n <head>\n  <title>\n   Backbone Widgets\n  </title>\n  <link href="media/backbone.autocomplete.css" rel="stylesheet"/>\n  <style type="text/css">\n   body {\n            margin: 0 0 120px;\n            font-family: helvetica, sans-serif;\n            font-size: 25px;\n        }\n\n        input {\n            font-size: 17px;\n            padding: 3px;\n            margin: 0;\n            outline: none;\n        }\n\n        header {\n            margin: 0;\n            border-bottom: 1px solid #e4e4e4;\n            padding: 50px 50px 20px;\n        }\n\n        header h1 {\n            color: #ff813d;\n        }\n\n        header h2 {\n            color: #565656;\n            font-size: 29px;\n            font-weight: normal;\n        }\n\n        header h1, header h2, section {\n            width: 890px;\n            margin: auto;\n        }\n\n        section {\n            overflow: hidden;\n        }\n\n        section h3 {\n            color: #424242;\n            margin: 30px 0 10px;\n        }\n\n        section h4 {\n            font-size: 20px;\n            margin: 0;\n            color: #424242;\n            padding: 0;\n        }\n\n        section p {\n            margin: 5px 0;\n            font-size: 18px;\n            color: #525252;\n        }\n\n        section form input {\n            width: 350px;\n            font-size: 20px;\n            padding: 10px;\n        }\n\n        #example, #selected {\n            float: left;\n            margin-right: 55px;\n        }\n\n        #selected {\n            display: none;\n            margin: 0;\n        }\n\n        #selected p {\n            margin: 0;\n            width: 430px;\n            padding: 10px;\n            background-color: #fafafa;\n            color: #404040;\n        }\n\n        p em {\n            background-color: #f6f2f4;\n            font-style: normal;\n            padding: 1px 4px;\n            border-radius: 1px;\n        }\n\n        pre {\n            font-size: 20px;\n            background-color: #fcfcfc;\n            padding: 10px;\n            color: #666666;\n            border: 1px solid #e8e8e8;\n            line-height: 29px;\n        }\n\n        table {\n            width: 100%;\n            font-size: 18px;\n            border: 1px solid #e8e8e8;\n        }\n\n        table th {\n            padding: 10px;\n            color: #515151;\n            font-weight: bold;\n            text-align: left;\n        }\n\n        table td {\n            padding: 10px;\n            color: #515151;\n        }\n\n        p a {\n            color: #4b4b4b;\n            font-weight: bold;\n            text-decoration: none;\n        }\n\n        #contribution p {\n            padding: 20px;\n            border: 1px solid #e9e9e9;\n        }\n  </style>\n </head>\n <body>\n  <header>\n   <h1>\n    Backbone.AutoCompleteView\n   </h1>\n   <h2>\n    An auto-complete widget built with Backbone.js\n   </h2>\n  </header>\n  <section>\n   <div id="example">\n    <h3>\n     Example\n    </h3>\n    <form action="#">\n     <input autocomplete="off" id="plugin" placeholder="Select a plugin (type backbone)" type="text"/>\n     <ul class="autocomplete" style="width: 374px;">\n     </ul>\n    </form>\n   </div>\n   <div id="selected">\n    <h3>\n     Selected Item\n    </h3>\n    <p>\n    </p>\n   </div>\n  </section>\n  <section>\n   <h3>\n    Usage\n   </h3>\n   <p>\n    Create a method that called `label` on your model.\n        That method will be used for representation of model.\n   </p>\n   <pre>var Plugin = Backbone.Model.extend({\n    label: function () {\n        return this.get("name");\n    }\n});</pre>\n   <p>\n    Create a collection for auto-completion model.\n   </p>\n   <pre>var PluginCollection = Backbone.Collection.extend({\n    model: Plugin\n});</pre>\n   <p>\n    And initialize the AutoCompleteView in your view.\n   </p>\n   <pre>new AutoCompleteView({\n    input: $("#plugin"), // your input field\n    model: plugins // your collection\n}).render();</pre>\n  </section>\n  <section>\n   <h3>\n    Configuration\n   </h3>\n   <table>\n    <tbody>\n     <tr>\n      <th>\n       Parameter\n      </th>\n      <th>\n       Type\n      </th>\n      <th>\n       Default\n      </th>\n      <th>\n       Description\n      </th>\n     </tr>\n     <tr>\n      <td>\n       className\n      </td>\n      <td>\n       string\n      </td>\n      <td>\n       autocomplete\n      </td>\n      <td>\n       The class name of popup menu.\n      </td>\n     </tr>\n     <tr>\n      <td>\n       wait\n      </td>\n      <td>\n       integer\n      </td>\n      <td>\n       300\n      </td>\n      <td>\n       The throttling value as milliseconds.\n      </td>\n     </tr>\n     <tr>\n      <td>\n       minKeywordLength\n      </td>\n      <td>\n       integer\n      </td>\n      <td>\n       2\n      </td>\n      <td>\n       Minimum keyword length.\n      </td>\n     </tr>\n     <tr>\n      <td>\n       queryParameter\n      </td>\n      <td>\n       string\n      </td>\n      <td>\n       query\n      </td>\n      <td>\n       The search parameter for back-end.\n      </td>\n     </tr>\n     <tr>\n      <td>\n       onSelect\n      </td>\n      <td>\n       function\n      </td>\n      <td>\n       no-op\n      </td>\n      <td>\n       The callback function for selected item.\n      </td>\n     </tr>\n    </tbody>\n   </table>\n  </section>\n  <section id="contribution">\n   <h3>\n    Contribution\n   </h3>\n   <p>\n    <a href="https://github.com/fatiherikli/backbone-autocomplete">\n     https://github.com/fatiherikli/backbone-autocomplete\n    </a>\n   </p>\n  </section>\n  <script src="//code.jquery.com/jquery-1.9.1.js" type="text/javascript">\n  </script>\n  <script src="//underscorejs.org/underscore-min.js" type="text/javascript">\n  </script>\n  <script src="//backbonejs.org/backbone-min.js" type="text/javascript">\n  </script>\n  <script src="media/backbone.autocomplete.js" type="text/javascript">\n  </script>\n  <script type="text/javascript">\n   $(function () {\n\n        var Plugin = Backbone.Model.extend({\n            label: function () {\n                return this.get("name");\n            }\n        });\n\n        var PluginCollection = Backbone.Collection.extend({\n            model: Plugin\n        });\n\n        var plugins = new PluginCollection([\n            {"name": "backbone-autocomplete"},\n            {"name": "backbone-memento"},\n            {"name": "backbone-validations"},\n            {"name": "backbone-chosen"},\n            {"name": "backbone-relational"},\n            {"name": "backbone-bindings"},\n            {"name": "backbone-boilerplate"},\n            {"name": "backbone-traversal"},\n            {"name": "backbone-factory"},\n            {"name": "jquery"},\n            {"name": "jquery-ui"},\n            {"name": "angular.js"},\n            {"name": "keymaster.js"}\n        ]);\n\n        new AutoCompleteView({\n            input: $("#plugin"),\n            model: plugins,\n            onSelect: function (model) {\n                $("#selected").show().find("p").html(model.label());\n            }\n        }).render();\n\n    });\n  </script>\n </body>\n</html>'