b'<!DOCTYPE html>\n<html xmlns="http://www.w3.org/1999/xhtml">\n <head>\n  <title>\n   Backbone Widgets\n  </title>\n  <link href="src/backbone.sortable.css" rel="stylesheet"/>\n  <style type="text/css">\n   body {\n            margin: 0 0 120px;\n            font-family: helvetica, sans-serif;\n            font-size: 25px;\n        }\n\n        input {\n            font-size: 17px;\n            padding: 3px;\n            margin: 0;\n            outline: none;\n        }\n\n        header {\n            margin: 0;\n            border-bottom: 1px solid #e4e4e4;\n            padding: 50px 50px 20px;\n        }\n\n        header h1 {\n            color: #ff813d;\n        }\n\n        header h2 {\n            color: #565656;\n            font-size: 29px;\n            font-weight: normal;\n        }\n\n        header h1, header h2, section {\n            width: 890px;\n            margin: auto;\n        }\n\n        section {\n            overflow: hidden;\n        }\n\n        section h3 {\n            color: #424242;\n            margin: 30px 0 10px;\n        }\n\n        section h4 {\n            font-size: 20px;\n            margin: 0;\n            color: #424242;\n            padding: 0;\n        }\n\n        section p {\n            margin: 5px 0;\n            font-size: 18px;\n            color: #525252;\n        }\n\n        section form input {\n            width: 350px;\n            font-size: 20px;\n            padding: 10px;\n        }\n\n        #example, #selected {\n            float: left;\n            margin-right: 55px;\n        }\n\n        #selected {\n            display: none;\n            margin: 0;\n        }\n\n        #selected p {\n            margin: 0;\n            width: 430px;\n            padding: 10px;\n            background-color: #fafafa;\n            color: #404040;\n        }\n\n        p em {\n            background-color: #f6f2f4;\n            font-style: normal;\n            padding: 1px 4px;\n            border-radius: 1px;\n        }\n\n        pre {\n            font-size: 20px;\n            background-color: #fcfcfc;\n            padding: 10px;\n            color: #666666;\n            border: 1px solid #e8e8e8;\n            line-height: 29px;\n        }\n\n        table {\n            width: 100%;\n            font-size: 18px;\n            border: 1px solid #e8e8e8;\n        }\n\n        table th {\n            padding: 10px;\n            color: #515151;\n            font-weight: bold;\n        }\n\n        table td {\n            padding: 10px;\n            color: #515151;\n        }\n\n        p a {\n            color: #4b4b4b;\n            font-weight: bold;\n            text-decoration: none;\n        }\n\n        #contribution p {\n            padding: 20px;\n            border: 1px solid #e9e9e9;\n        }\n  </style>\n </head>\n <body>\n  <header>\n   <h1>\n    Backbone.SortableView\n   </h1>\n   <h2>\n    A sortable widget that uses HTML5 Drag and Drop API\n   </h2>\n  </header>\n  <section>\n   <h3>\n    Example\n   </h3>\n   <div id="example">\n    <ul class="sortable">\n     <li draggable="true">\n      Freefall\n     </li>\n     <li draggable="true">\n      Supertwister\n     </li>\n     <li draggable="true">\n      Nimrodel/The process...\n     </li>\n     <li draggable="true">\n      Earthrise\n     </li>\n     <li draggable="true">\n      Lady Fantasy\n     </li>\n    </ul>\n   </div>\n  </section>\n  <section>\n   <h3>\n    Usage\n   </h3>\n   <p>\n    Create a model that contains ordering field\n   </p>\n   <pre>var Song = Backbone.Model.extend({\n    defaults: {\n        trackNumber: 1\n    }\n});</pre>\n   <p>\n    Define the comparator method on your collection. You can look to the official backbone documentation for detailed information about\n    <a href="http://backbonejs.org/#Collection-comparator">\n     comparator\n    </a>\n    method.\n   </p>\n   <pre>var Album = Backbone.Collection.extend({\n      model: Song,\n      comparator: function (model) {\n          return model.get("trackNumber")\n      }\n});</pre>\n   <p>\n    Here is the example collection:\n   </p>\n   <pre>var album = new Album([\n    {"trackNumber": 1, "name": "Freefall"},\n    {"trackNumber": 2, "name": "Supertwister"},\n    {"trackNumber": 3, "name": "Nimrodel/The process..."},\n    {"trackNumber": 4, "name": "Earthrise"},\n    {"trackNumber": 5, "name": "Lady Fantasy"}\n]);</pre>\n   <p>\n    And initialize the SortableView in your view.\n   </p>\n   <pre>new SortableView({\n    model: album,\n    orderField: "trackNumber",\n    itemTemplate: "&lt;%= name %&gt;"\n}).render()</pre>\n   <p>\n    The `render` method will be returned unattached DOM element.\n   </p>\n  </section>\n  <section>\n   <h3>\n    Configuration\n   </h3>\n   <table>\n    <tbody>\n     <tr>\n      <th>\n       Parameter\n      </th>\n      <th>\n       Type\n      </th>\n      <th>\n       Default\n      </th>\n      <th>\n       Description\n      </th>\n     </tr>\n     <tr>\n      <td>\n       orderField\n      </td>\n      <td>\n       string\n      </td>\n      <td>\n       order\n      </td>\n      <td>\n       The ordering field of your model.\n      </td>\n     </tr>\n     <tr>\n      <td>\n       itemTemplate\n      </td>\n      <td>\n       string\n      </td>\n      <td>\n       Empty string\n      </td>\n      <td>\n       Sortable item template.\n      </td>\n     </tr>\n     <tr>\n      <td>\n       overClass\n      </td>\n      <td>\n       string\n      </td>\n      <td>\n       over\n      </td>\n      <td>\n       The class name of the of over state of sortable items\n      </td>\n     </tr>\n    </tbody>\n   </table>\n  </section>\n  <section id="contribution">\n   <h3>\n    Contribution\n   </h3>\n   <p>\n    <a href="https://github.com/fatiherikli/backbone-sortable">\n     https://github.com/fatiherikli/backbone-sortable\n    </a>\n   </p>\n  </section>\n  <script src="//code.jquery.com/jquery-1.9.1.js" type="text/javascript">\n  </script>\n  <script src="//underscorejs.org/underscore-min.js" type="text/javascript">\n  </script>\n  <script src="//backbonejs.org/backbone-min.js" type="text/javascript">\n  </script>\n  <script src="src/backbone.sortable.js" type="text/javascript">\n  </script>\n  <script type="text/javascript">\n   $(function () {\n\n          var Song = Backbone.Model.extend();\n          var Album = Backbone.Collection.extend({\n              model: Song,\n              comparator: function (model) {\n                  return model.get("trackNumber")\n              }\n          });\n\n          var album = new Album([\n              {"trackNumber": 3, "name": "Nimrodel/The process..."},\n              {"trackNumber": 5, "name": "Lady Fantasy"},\n              {"trackNumber": 1, "name": "Freefall"},\n              {"trackNumber": 2, "name": "Supertwister"},\n              {"trackNumber": 4, "name": "Earthrise"}\n          ]);\n\n          $("#example").append(new SortableView({\n              className: "sortable",\n              model: album,\n              orderField: "trackNumber",\n              itemTemplate: "&lt;%= name %&gt;"\n          }).render().el);\n\n    });\n  </script>\n </body>\n</html>'b'<!DOCTYPE html>\n<html xmlns="http://www.w3.org/1999/xhtml">\n <head>\n  <title>\n   Backbone Widgets\n  </title>\n  <link href="src/backbone.sortable.css" rel="stylesheet"/>\n  <style type="text/css">\n   body {\n            margin: 0 0 120px;\n            font-family: helvetica, sans-serif;\n            font-size: 25px;\n        }\n\n        input {\n            font-size: 17px;\n            padding: 3px;\n            margin: 0;\n            outline: none;\n        }\n\n        header {\n            margin: 0;\n            border-bottom: 1px solid #e4e4e4;\n            padding: 50px 50px 20px;\n        }\n\n        header h1 {\n            color: #ff813d;\n        }\n\n        header h2 {\n            color: #565656;\n            font-size: 29px;\n            font-weight: normal;\n        }\n\n        header h1, header h2, section {\n            width: 890px;\n            margin: auto;\n        }\n\n        section {\n            overflow: hidden;\n        }\n\n        section h3 {\n            color: #424242;\n            margin: 30px 0 10px;\n        }\n\n        section h4 {\n            font-size: 20px;\n            margin: 0;\n            color: #424242;\n            padding: 0;\n        }\n\n        section p {\n            margin: 5px 0;\n            font-size: 18px;\n            color: #525252;\n        }\n\n        section form input {\n            width: 350px;\n            font-size: 20px;\n            padding: 10px;\n        }\n\n        #example, #selected {\n            float: left;\n            margin-right: 55px;\n        }\n\n        #selected {\n            display: none;\n            margin: 0;\n        }\n\n        #selected p {\n            margin: 0;\n            width: 430px;\n            padding: 10px;\n            background-color: #fafafa;\n            color: #404040;\n        }\n\n        p em {\n            background-color: #f6f2f4;\n            font-style: normal;\n            padding: 1px 4px;\n            border-radius: 1px;\n        }\n\n        pre {\n            font-size: 20px;\n            background-color: #fcfcfc;\n            padding: 10px;\n            color: #666666;\n            border: 1px solid #e8e8e8;\n            line-height: 29px;\n        }\n\n        table {\n            width: 100%;\n            font-size: 18px;\n            border: 1px solid #e8e8e8;\n        }\n\n        table th {\n            padding: 10px;\n            color: #515151;\n            font-weight: bold;\n        }\n\n        table td {\n            padding: 10px;\n            color: #515151;\n        }\n\n        p a {\n            color: #4b4b4b;\n            font-weight: bold;\n            text-decoration: none;\n        }\n\n        #contribution p {\n            padding: 20px;\n            border: 1px solid #e9e9e9;\n        }\n  </style>\n </head>\n <body>\n  <header>\n   <h1>\n    Backbone.SortableView\n   </h1>\n   <h2>\n    A sortable widget that uses HTML5 Drag and Drop API\n   </h2>\n  </header>\n  <section>\n   <h3>\n    Example\n   </h3>\n   <div id="example">\n    <ul class="sortable">\n     <li draggable="true">\n      Freefall\n     </li>\n     <li draggable="true">\n      Supertwister\n     </li>\n     <li draggable="true">\n      Nimrodel/The process...\n     </li>\n     <li draggable="true">\n      Earthrise\n     </li>\n     <li draggable="true">\n      Lady Fantasy\n     </li>\n    </ul>\n   </div>\n  </section>\n  <section>\n   <h3>\n    Usage\n   </h3>\n   <p>\n    Create a model that contains ordering field\n   </p>\n   <pre>var Song = Backbone.Model.extend({\n    defaults: {\n        trackNumber: 1\n    }\n});</pre>\n   <p>\n    Define the comparator method on your collection. You can look to the official backbone documentation for detailed information about\n    <a href="http://backbonejs.org/#Collection-comparator">\n     comparator\n    </a>\n    method.\n   </p>\n   <pre>var Album = Backbone.Collection.extend({\n      model: Song,\n      comparator: function (model) {\n          return model.get("trackNumber")\n      }\n});</pre>\n   <p>\n    Here is the example collection:\n   </p>\n   <pre>var album = new Album([\n    {"trackNumber": 1, "name": "Freefall"},\n    {"trackNumber": 2, "name": "Supertwister"},\n    {"trackNumber": 3, "name": "Nimrodel/The process..."},\n    {"trackNumber": 4, "name": "Earthrise"},\n    {"trackNumber": 5, "name": "Lady Fantasy"}\n]);</pre>\n   <p>\n    And initialize the SortableView in your view.\n   </p>\n   <pre>new SortableView({\n    model: album,\n    orderField: "trackNumber",\n    itemTemplate: "&lt;%= name %&gt;"\n}).render()</pre>\n   <p>\n    The `render` method will be returned unattached DOM element.\n   </p>\n  </section>\n  <section>\n   <h3>\n    Configuration\n   </h3>\n   <table>\n    <tbody>\n     <tr>\n      <th>\n       Parameter\n      </th>\n      <th>\n       Type\n      </th>\n      <th>\n       Default\n      </th>\n      <th>\n       Description\n      </th>\n     </tr>\n     <tr>\n      <td>\n       orderField\n      </td>\n      <td>\n       string\n      </td>\n      <td>\n       order\n      </td>\n      <td>\n       The ordering field of your model.\n      </td>\n     </tr>\n     <tr>\n      <td>\n       itemTemplate\n      </td>\n      <td>\n       string\n      </td>\n      <td>\n       Empty string\n      </td>\n      <td>\n       Sortable item template.\n      </td>\n     </tr>\n     <tr>\n      <td>\n       overClass\n      </td>\n      <td>\n       string\n      </td>\n      <td>\n       over\n      </td>\n      <td>\n       The class name of the of over state of sortable items\n      </td>\n     </tr>\n    </tbody>\n   </table>\n  </section>\n  <section id="contribution">\n   <h3>\n    Contribution\n   </h3>\n   <p>\n    <a href="https://github.com/fatiherikli/backbone-sortable">\n     https://github.com/fatiherikli/backbone-sortable\n    </a>\n   </p>\n  </section>\n  <script src="//code.jquery.com/jquery-1.9.1.js" type="text/javascript">\n  </script>\n  <script src="//underscorejs.org/underscore-min.js" type="text/javascript">\n  </script>\n  <script src="//backbonejs.org/backbone-min.js" type="text/javascript">\n  </script>\n  <script src="src/backbone.sortable.js" type="text/javascript">\n  </script>\n  <script type="text/javascript">\n   $(function () {\n\n          var Song = Backbone.Model.extend();\n          var Album = Backbone.Collection.extend({\n              model: Song,\n              comparator: function (model) {\n                  return model.get("trackNumber")\n              }\n          });\n\n          var album = new Album([\n              {"trackNumber": 3, "name": "Nimrodel/The process..."},\n              {"trackNumber": 5, "name": "Lady Fantasy"},\n              {"trackNumber": 1, "name": "Freefall"},\n              {"trackNumber": 2, "name": "Supertwister"},\n              {"trackNumber": 4, "name": "Earthrise"}\n          ]);\n\n          $("#example").append(new SortableView({\n              className: "sortable",\n              model: album,\n              orderField: "trackNumber",\n              itemTemplate: "&lt;%= name %&gt;"\n          }).render().el);\n\n    });\n  </script>\n </body>\n</html>'