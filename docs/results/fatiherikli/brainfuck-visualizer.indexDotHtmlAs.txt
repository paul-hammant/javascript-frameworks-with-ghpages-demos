b'<html>\n <head>\n  <title>\n   Brainfuck Visualizer\n  </title>\n  <link href="css/screen.css" rel="stylesheet"/>\n  <script src="js/lib/jquery-1.9.1.js" type="text/javascript">\n  </script>\n  <script src="js/lib/underscore-min.js" type="text/javascript">\n  </script>\n  <script src="js/lib/backbone-min.js" type="text/javascript">\n  </script>\n  <script src="js/interpreter.js" type="text/javascript">\n  </script>\n  <script src="js/views.js" type="text/javascript">\n  </script>\n  <script src="js/models.js" type="text/javascript">\n  </script>\n </head>\n <body>\n  <header>\n  </header>\n  <div id="interpreter">\n   <section class="machine">\n    <ul class="tape">\n     <li>\n      0\n     </li>\n     <li>\n      0\n     </li>\n     <li>\n      0\n     </li>\n     <li>\n      0\n     </li>\n     <li>\n      0\n     </li>\n     <li>\n      0\n     </li>\n     <li>\n      0\n     </li>\n     <li>\n      0\n     </li>\n     <li>\n      0\n     </li>\n     <li>\n      0\n     </li>\n     <li>\n      0\n     </li>\n     <li>\n      0\n     </li>\n     <li>\n      0\n     </li>\n     <li>\n      0\n     </li>\n     <li>\n      0\n     </li>\n     <li>\n      0\n     </li>\n     <li>\n      0\n     </li>\n     <li>\n      0\n     </li>\n     <li>\n      0\n     </li>\n     <li>\n      0\n     </li>\n     <li>\n      0\n     </li>\n     <li>\n      0\n     </li>\n     <li>\n      0\n     </li>\n     <li>\n      0\n     </li>\n     <li>\n      0\n     </li>\n     <li>\n      0\n     </li>\n     <li>\n      0\n     </li>\n    </ul>\n    <div class="pointer" style="margin-left: 0px;">\n     <em>\n     </em>\n    </div>\n   </section>\n   <section class="editor">\n    <div class="actions">\n     <a class="button" href="#" id="run">\n      Run\n     </a>\n     <a class="button" href="#" id="first-step">\n      Step\n     </a>\n     <a class="button hidden" href="#" id="stop">\n      Stop\n     </a>\n     <a class="button hidden" href="#" id="step">\n      Step\n     </a>\n     <a class="button hidden" href="#" id="pause">\n      Pause\n     </a>\n     <a class="button hidden" href="#" id="continue">\n      Continue\n     </a>\n     <div id="delay-box">\n      <label for="delay">\n       Delay\n      </label>\n      <input id="delay" max="300" min="30" step="30" type="range" value="100"/>\n     </div>\n     <div id="optimize-box">\n      <label for="optimize">\n       Optimize?\n      </label>\n      <input id="optimize" type="checkbox"/>\n     </div>\n     <div id="exclaim-box">\n      <label for="exclaim">\n       !\n      </label>\n      <input id="exclaim" type="checkbox"/>\n     </div>\n     <div id="input-box">\n      <label>\n       Waiting for input\n      </label>\n      <input id="input" maxlength="1" type="text"/>\n     </div>\n    </div>\n    <div id="preview" style="display: none;">\n    </div>\n    <textarea id="source">+++++ +++++             initialize counter (cell #0) to 10\n[                       use loop to set 70/100/30/10\n    &gt; +++++ ++              add  7 to cell #1\n    &gt; +++++ +++++           add 10 to cell #2\n    &gt; +++                   add  3 to cell #3\n    &gt; +                     add  1 to cell #4\n&lt;&lt;&lt;&lt; -                  decrement counter (cell #0)\n]\n&gt; ++ .                  print \'H\'\n&gt; + .                   print \'e\'\n+++++ ++ .              print \'l\'\n.                       print \'l\'\n+++ .                   print \'o\'\n&gt; ++ .                  print \' \'\n&lt;&lt; +++++ +++++ +++++ .  print \'W\'\n&gt; .                     print \'o\'\n+++ .                   print \'r\'\n----- - .               print \'l\'\n----- --- .             print \'d\'\n&gt; + .                   print \'!\'\n&gt; .                     print \'\\n\'</textarea>\n    <h3>\n     Output\n    </h3>\n    <pre id="output"></pre>\n   </section>\n  </div>\n  <section id="info">\n   <h3>\n    Quick Reference\n   </h3>\n   <table>\n    <tbody>\n     <tr>\n      <td style="text-align:center">\n       <code>\n        &gt;\n       </code>\n      </td>\n      <td>\n       increment the data pointer (to point to the next cell to the right).\n      </td>\n     </tr>\n     <tr>\n      <td style="text-align:center">\n       <code>\n        &lt;\n       </code>\n      </td>\n      <td>\n       decrement the data pointer (to point to the next cell to the left).\n      </td>\n     </tr>\n     <tr>\n      <td style="text-align:center">\n       <code>\n        +\n       </code>\n      </td>\n      <td>\n       increment (increase by one) the byte at the data pointer.\n      </td>\n     </tr>\n     <tr>\n      <td style="text-align:center">\n       <code>\n        -\n       </code>\n      </td>\n      <td>\n       decrement (decrease by one) the byte at the data pointer.\n      </td>\n     </tr>\n     <tr>\n      <td style="text-align:center">\n       <code>\n        .\n       </code>\n      </td>\n      <td>\n       output the byte at the data pointer.\n      </td>\n     </tr>\n     <tr>\n      <td style="text-align:center">\n       <code>\n        ,\n       </code>\n      </td>\n      <td>\n       accept one byte of input, storing its value in the byte at the data pointer.\n      </td>\n     </tr>\n     <tr>\n      <td style="text-align:center">\n       <code>\n        [\n       </code>\n      </td>\n      <td>\n       if the byte at the data pointer is zero, then instead of moving the\n       <a class="mw-redirect" href="/wiki/Program_Counter" title="Program Counter">\n        instruction pointer\n       </a>\n       forward to the next command,\n       <a href="/wiki/Branch_(computer_science)" title="Branch (computer science)">\n        jump\n       </a>\n       it\n       <i>\n        forward\n       </i>\n       to the command after the\n       <i>\n        matching\n       </i>\n       <code>\n        ]\n       </code>\n       command.\n      </td>\n     </tr>\n     <tr>\n      <td style="text-align:center">\n       <code>\n        ]\n       </code>\n      </td>\n      <td>\n       if the byte at the data pointer is nonzero, then instead of moving the instruction pointer forward to the next command, jump it\n       <i>\n        back\n       </i>\n       to the command after the\n       <i>\n        matching\n       </i>\n       <code>\n        [\n       </code>\n       command.\n      </td>\n     </tr>\n     <tr>\n      <td style="text-align:center">\n       <code>\n        !\n       </code>\n      </td>\n      <td>\n       if the exclaim box is checked, allows the interpreter to use all characters to the right of the\n       <code>\n        !\n       </code>\n       as program input.\n      </td>\n     </tr>\n    </tbody>\n   </table>\n   <p>\n    <a href="http://en.wikipedia.org/wiki/Brainfuck">\n     http://en.wikipedia.org/wiki/Brainfuck\n    </a>\n   </p>\n  </section>\n  <script type="text/javascript">\n   $(function () {\n            var cells = _(27).times($.noop);\n            var tape = new Tape(cells);\n            var pointer = new Pointer();\n            new InterpreterView({\n                editor: $("#source"),\n                tape: tape,\n                pointer: pointer\n            }).render();\n        });\n  </script>\n  <a href="https://github.com/fatiherikli/brainfuck-visualizer/">\n   <img alt="Fork me on GitHub" src="https://s3.amazonaws.com/github/ribbons/forkme_right_gray_6d6d6d.png" style="position: absolute; top: 0; right: 0; border: 0;"/>\n  </a>\n </body>\n</html>'