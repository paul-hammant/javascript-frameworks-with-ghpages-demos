b'<html xmlns="http://www.w3.org/1999/xhtml">\n <head>\n  <title>\n   Mithril.animate\n  </title>\n  <script src="https://raw.githack.com/jsguy/mithril.animate/master/examples/mithril.js">\n  </script>\n  <script src="https://raw.githack.com/jsguy/mithril.animate/master/dist/mithril.animate.min.js">\n  </script>\n  <script src="https://raw.githack.com/jsguy/mithril.animate/master/examples/all.example.js">\n  </script>\n  <!--\n\t<script src="../../mithril.animate/examples/mithril.js"></script>\n\t<script src="../../mithril.bindings/dist/mithril.bindings.js"></script>\n\t<script src="../../mithril.animate/src/mithril.animate.js"></script>\n\t<script src="../../mithril.animate/src/mithril.animate.bindings.js"></script>\n\t<script src="../../mithril.animate/examples/all.example.js"></script>\n-->\n  <link href="css/style.css" rel="stylesheet" type="text/css"/>\n  <link href="css/swingacat.css" rel="stylesheet" type="text/css"/>\n  <!-- Hotjar Tracking Code for http://jsguy.com -->\n  <script>\n   (function(h,o,t,j,a,r){\n\t        h.hj=h.hj||function(){(h.hj.q=h.hj.q||[]).push(arguments)};\n\t        h._hjSettings={hjid:274942,hjsv:5};\n\t        a=o.getElementsByTagName(\'head\')[0];\n\t        r=o.createElement(\'script\');r.async=1;\n\t        r.src=t+h._hjSettings.hjid+j+h._hjSettings.hjsv;\n\t        a.appendChild(r);\n\t    })(window,document,\'//static.hotjar.com/c/hotjar-\',\'.js?sv=\');\n  </script>\n  <script async="" src="//static.hotjar.com/c/hotjar-274942.js?sv=5">\n  </script>\n  <script async="" src="https://script.hotjar.com/modules-bb08c120eee706b71c7f44e04a38ee7b.js">\n  </script>\n  <style type="text/css">\n   iframe#_hjRemoteVarsFrame {display: none !important; width: 1px !important; height: 1px !important; opacity: 0 !important; pointer-events: none !important;}\n  </style>\n </head>\n <body>\n  <div id="promo">\n   <div id="promoText">\n    <div>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      D\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      E\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      C\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      L\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      A\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      R\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      A\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      T\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      I\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      V\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      E\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      L\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      Y\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      B\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      I\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      N\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      D\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      A\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      N\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      I\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      M\n     </span>\n     <span>\n      A\n     </span>\n     <span>\n      T\n     </span>\n     <span>\n      I\n     </span>\n     <span>\n      O\n     </span>\n     <span>\n      N\n     </span>\n     <span>\n      S\n     </span>\n    </div>\n   </div>\n  </div>\n  <script>\n   //\tA basic animation binder\n\tvar aniPromo = function(prop, delay){\n\t\treturn function(el){\n\t\t\tsetTimeout(function(){\n\t\t\t\tvar value = prop()? 1: 0;\n\t\t\t\tm.animateProperties(el, {\n\t\t\t\t\tscale: (value * 10) + 1,\n\t\t\t\t\topacity: 1-value,\n\t\t\t\t\tduration: "0.25s"\n\t\t\t\t});\n\t\t\t}, delay * 100);\n\t\t};\n\t};\n\t//\tBasic animation component\n\tvar promoApp = {\n\t\tmodel: function() {\n\t\t\tthis.text = m.p("DECLARATIVELY BIND ANIMATIONS");\n\t\t\tthis.ani = m.p(0);\n\t\t},\n\t\tcontroller: function() {\n\t\t\tvar self = this;\n\t\t\tself.model = new promoApp.model();\n\t\t\t//\tTODO: rewrite this to be a custom dynamic keyframe animation\n\t\t\tsetTimeout(function(){\n\t\t\t\tself.model.ani(1);\n\t\t\t\tm.redraw();\n\t\t\t}, 5000);\n\n\t\t\tsetTimeout(function(){\n\t\t\t\t//self.model.text("m(\\"div\\", { config: ani.fade(o.myProperty) })");\n\n\t\t\t\tself.model.text("m.e(\\"div\\", { opacity: o.myProperty })");\n\n\t\t\t\tself.model.ani(0);\n\t\t\t\tm.redraw();\n\t\t\t}, 9000);\n\n\t\t\tsetTimeout(function(){\n\t\t\t\tself.model.ani(1);\n\t\t\t\tm.redraw();\n\t\t\t}, 15000);\n\n\t\t\tsetTimeout(function(){\n\t\t\t\tself.model.text("Mithril.animate - fast, smooth, easy!");\n\t\t\t\tself.model.ani(0);\n\t\t\t\tm.redraw();\n\t\t\t}, 19000);\n\t\t},\n\t\tview: function(c) {\n\t\t\tvar o = c.model;\n\t\t\treturn m("div", [\n\t\t\t\to.text().split("").map(function(t, i){\n\t\t\t\t\tt = (t == " ")? "&amp;nbsp;": t;\n\t\t\t\t\treturn m("span", {config: aniPromo(o.ani, i)}, m.trust(t));\n\t\t\t\t})\n\t\t\t]);\n\t\t}\n\t};\t\n\t//initialize\n\tm.module(document.getElementById(\'promoText\'), promoApp);\n  </script>\n  <header>\n   <div id="headerContainer">\n    <span id="logo">\n    </span>\n    <span id="nav">\n     <a href="https://github.com/jsguy/mithril.animate/">\n      GITHUB\n     </a>\n     <a href="https://github.com/jsguy/mithril.animate/issues">\n      COMMUNITY\n     </a>\n    </span>\n   </div>\n  </header>\n  <div class="cf" id="container">\n   <div class="cf box even">\n    <div class="content">\n     <h1>\n      What is Mithril.animate?\n     </h1>\n     <p>\n      A tiny library that allows you to declaratively bind animations to your mithril elements via model properties. They work in all\n      <a href="http://caniuse.com/#feat=transforms2d" target="_blank">\n       modern browsers\n      </a>\n      , and have the ability to fall back to using jQuery.animate (optional). The intention is to allow you to create\n      <a href="http://www.google.com/design/spec/animation/responsive-interaction.html" target="_blank">\n       neat UI animations\n      </a>\n      that react to your model properties, however don\'t expect to be able to make a floating 3D periodic table, (at least not out of the box)..\n     </p>\n    </div>\n   </div>\n   <div class="cf box odd">\n    <div class="content">\n     <h2>\n      <a href="#Getting_started" name="Getting_started">\n       Getting started\n      </a>\n     </h2>\n     <p>\n     </p>\n     <ol>\n      <li>\n       Install\n       <a href="http://lhorie.github.io/mithril/installation.html" target="_blank">\n        Mithril\n       </a>\n      </li>\n      <li>\n       Include a copy of\n       <a href="https://raw.githack.com/jsguy/mithril.animate/master/dist/mithril.animate.min.js" target="_blank">\n        mithril.animate.min.js\n       </a>\n      </li>\n     </ol>\n     <p>\n     </p>\n     <p>\n      You\'re now ready to start animating!\n     </p>\n    </div>\n   </div>\n   <div class="cf box even">\n    <div class="content">\n     <h2>\n      <a href="#Using_it" name="Using_it">\n       Using it\n      </a>\n     </h2>\n     <p>\n      To use an animation, you can bind a property to control it:\n     </p>\n     <p>\n     </p>\n     <pre class=" language-javascript"><code class=" language-javascript">m<span class="token punctuation">.</span><span class="token function">e<span class="token punctuation">(</span></span><span class="token string">"div"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> opacity<span class="token punctuation">:</span> o<span class="token punctuation">.</span>ani <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">"I can fade away"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n     <p>\n     </p>\n     <p>\n      Where "o.ani" is a property on your model - simply toggle between 0 and 1 to fade in and out!\n     </p>\n     <p>\n      You can also bind events to animate, for example:\n     </p>\n     <p>\n     </p>\n     <pre class=" language-javascript"><code class=" language-javascript">m<span class="token punctuation">.</span><span class="token function">e<span class="token punctuation">(</span></span><span class="token string">"div"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> onclick<span class="token punctuation">:</span> m<span class="token punctuation">.</span><span class="token function">trigger<span class="token punctuation">(</span></span><span class="token string">\'opacity\'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"I also fade away"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n     <p>\n     </p>\n     <p>\n      Where "0" is the value you want opacity to become when you click.\n     </p>\n     <p>\n      <b>\n       Note:\n      </b>\n      the recommended approach is to bind to a property - as this makes it easy to react to the state of your data. For example if the user performs an action to delete an item, it makes sense to fade the opacity of the item to 0.\n     </p>\n     <h3>\n      <a href="#Trigger_syntax_-_transition_animation" name="Trigger_syntax_-_transition_animation">\n       Trigger syntax - transition animation\n      </a>\n     </h3>\n     <p>\n      Transition animations can be triggered with a value or property, options and a callback.\n     </p>\n     <div data-syntaxify="#triggerSyntaxTransition" data-syntaxify-language="javascript">\n      <pre class="syntaxifyCode language-javascript"><code class=" language-javascript">m<span class="token punctuation">.</span><span class="token function">trigger<span class="token punctuation">(</span></span>NAME<span class="token punctuation">,</span> <span class="token punctuation">[</span>VALUE<span class="token operator">/</span>PROP<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>OPTIONS<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>CALLBACK<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n     </div>\n     <script id="triggerSyntaxTransition" type="text">\n      m.trigger(NAME, [VALUE/PROP], [OPTIONS], [CALLBACK]);\n     </script>\n     <p>\n      Where:\n     </p>\n     <ul>\n      <li>\n       <b>\n        NAME\n       </b>\n       - the name of the animation\n      </li>\n      <li>\n       <b>\n        VALUE/PROP\n       </b>\n       - an optional value or model property you want to pass to the animation being triggered\n      </li>\n      <li>\n       <b>\n        OPTIONS\n       </b>\n       - an optional object containing one or more options\n      </li>\n      <li>\n       <b>\n        CALLBACK\n       </b>\n       - a function that will be run when the animation is complete\n      </li>\n     </ul>\n     <p>\n     </p>\n     <h3>\n      <a href="#Trigger_syntax_-_keyframe_animation" name="Trigger_syntax_-_keyframe_animation">\n       Trigger syntax - keyframe animation\n      </a>\n     </h3>\n     <p>\n      Keyframe animations only take a name and options, as they are much more static.\n     </p>\n     <div data-syntaxify="#triggerSyntaxKeyframe" data-syntaxify-language="javascript">\n      <pre class="syntaxifyCode language-javascript"><code class=" language-javascript">m<span class="token punctuation">.</span><span class="token function">triggerKF<span class="token punctuation">(</span></span>NAME<span class="token punctuation">,</span> <span class="token punctuation">[</span>OPTIONS<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n     </div>\n     <script id="triggerSyntaxKeyframe" type="text">\n      m.triggerKF(NAME, [OPTIONS]);\n     </script>\n     <p>\n      Where:\n     </p>\n     <ul>\n      <li>\n       <b>\n        NAME\n       </b>\n       - the name of the animation\n      </li>\n      <li>\n       <b>\n        OPTIONS\n       </b>\n       - an optional object containing one or more options\n      </li>\n     </ul>\n     <p>\n     </p>\n     <h3>\n      <a href="#Property_animations" name="Property_animations">\n       Property animations\n      </a>\n     </h3>\n     <p>\n      There are bindings included for all\n      <a href="http://www.w3.org/TR/css3-transitions/#animatable-properties" target="_blank">\n       standard animatable properties\n      </a>\n      : backgroundColor, backgroundPosition, borderBottomColor, borderBottomWidth, borderLeftColor, borderLeftWidth, borderRightColor, borderRightWidth, borderSpacing, borderTopColor, borderTopWidth, bottom, clip, color, fontSize, fontWeight, height, left, letterSpacing, lineHeight, marginBottom, marginLeft, marginRight, marginTop, maxHeight, maxWidth, minHeight, minWidth, opacity, outlineColor, outlineWidth, paddingBottom, paddingLeft, paddingRight, paddingTop, right, textIndent, textShadow, top, verticalAlign, visibility, width, wordSpacing, zIndex\n     </p>\n     <h3>\n      <a href="#CSS3_animations" name="CSS3_animations">\n       CSS3 animations\n      </a>\n     </h3>\n     <p>\n      You can also animate using the following CSS3 animation bindings:\n     </p>\n     <p>\n      <table class="reference">\n       <tbody>\n        <tr>\n         <th>\n          Binding\n         </th>\n         <th>\n          Description\n         </th>\n        </tr>\n        <tr>\n         <td>\n          translate(\n          <i>\n           x, y\n          </i>\n          )\n         </td>\n         <td>\n          Move element x across, y down\n         </td>\n        </tr>\n        <tr>\n         <td>\n          translatex(\n          <i>\n           x\n          </i>\n          )\n         </td>\n         <td>\n          Moving element x across\n         </td>\n        </tr>\n        <tr>\n         <td>\n          translatey(\n          <i>\n           y\n          </i>\n          )\n         </td>\n         <td>\n          Moving element y down\n         </td>\n        </tr>\n        <tr>\n         <td>\n          scale(\n          <i>\n           x, y\n          </i>\n          )\n         </td>\n         <td>\n          Changing the elements width by x and height by y\n         </td>\n        </tr>\n        <tr>\n         <td>\n          scalex(\n          <i>\n           x\n          </i>\n          )\n         </td>\n         <td>\n          Change the elements width by x\n         </td>\n        </tr>\n        <tr>\n         <td>\n          scaley(\n          <i>\n           y\n          </i>\n          )\n         </td>\n         <td>\n          Change the elements width by y\n         </td>\n        </tr>\n        <tr>\n         <td>\n          rotate(\n          <i>\n           angle\n          </i>\n          )\n         </td>\n         <td>\n          Rotate the element by angle (\'deg\' or \'rad\')\n         </td>\n        </tr>\n        <tr>\n         <td>\n          skew(\n          <i>\n           x-angle, y-angle\n          </i>\n          )\n         </td>\n         <td>\n          Skew the element across by x-angle and down by y-angle (\'deg\' or \'rad\')\n         </td>\n        </tr>\n        <tr>\n         <td>\n          skewx(\n          <i>\n           x-angle\n          </i>\n          )\n         </td>\n         <td>\n          Skew the element across by x-angle (\'deg\' or \'rad\')\n         </td>\n        </tr>\n        <tr>\n         <td>\n          skewy(\n          <i>\n           y-angle\n          </i>\n          )\n         </td>\n         <td>\n          Skew the element down by y-angle (\'deg\' or \'rad\')\n         </td>\n        </tr>\n       </tbody>\n      </table>\n     </p>\n     <h3>\n      <a href="#Timing_function" name="Timing_function">\n       Timing function\n      </a>\n     </h3>\n     <p>\n      You are able to specify a timing function to direct how your animation is run, default is \'ease\'\n     </p>\n     <p>\n      <table class="reference">\n       <tbody>\n        <tr>\n         <th>\n          Function\n         </th>\n         <th>\n          Description\n         </th>\n        </tr>\n        <tr>\n         <td>\n          ease\n         </td>\n         <td>\n          Slow start, then fast, then end slow again (equivalent to cubic-bezier(0.25,0.1,0.25,1))\n         </td>\n        </tr>\n        <tr>\n         <td>\n          linear\n         </td>\n         <td>\n          Same speed from start to end (equivalent to cubic-bezier(0,0,1,1))\n         </td>\n        </tr>\n        <tr>\n         <td>\n          ease-in\n         </td>\n         <td>\n          Slow start (equivalent to cubic-bezier(0.42,0,1,1))\n         </td>\n        </tr>\n        <tr>\n         <td>\n          ease-out\n         </td>\n         <td>\n          Slow end (equivalent to cubic-bezier(0,0,0.58,1))\n         </td>\n        </tr>\n        <tr>\n         <td>\n          ease-in-out\n         </td>\n         <td>\n          Slow start and end (equivalent to cubic-bezier(0.42,0,0.58,1))\n         </td>\n        </tr>\n        <tr>\n         <td>\n          cubic-bezier(\n          <i>\n           n\n          </i>\n          ,\n          <i>\n           n\n          </i>\n          ,\n          <i>\n           n\n          </i>\n          ,\n          <i>\n           n\n          </i>\n          )\n         </td>\n         <td>\n          Define your own values in the cubic-bezier function. Possible values are numeric values from 0 to 1\n         </td>\n        </tr>\n       </tbody>\n      </table>\n     </p>\n     <h2>\n      <a href="#Custom_animations" name="Custom_animations">\n       Custom animations\n      </a>\n     </h2>\n     <p>\n      You can add custom animations that can animate multiple properties on your element all at once.\n     </p>\n     <h3>\n      <a href="#Binding_syntax" name="Binding_syntax">\n       Binding syntax\n      </a>\n     </h3>\n     <div data-syntaxify="#bindingSyntax" data-syntaxify-language="javascript">\n      <pre class="syntaxifyCode language-javascript"><code class=" language-javascript">m<span class="token punctuation">.</span><span class="token function">addAnimation<span class="token punctuation">(</span></span>NAME<span class="token punctuation">,</span> FN<span class="token punctuation">,</span> <span class="token punctuation">[</span>OPTIONS<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n     </div>\n     <script id="bindingSyntax" type="text">\n      m.addAnimation(NAME, FN, [OPTIONS]);\n     </script>\n     <p>\n      Where:\n     </p>\n     <ul>\n      <li>\n       <b>\n        NAME\n       </b>\n       - the name of your binding as you refer to it in the view (must be unique)\n      </li>\n      <li>\n       <b>\n        FN\n       </b>\n       - A function that takes the mithril property that is bound to the animation and returns the properties and values to be animated\n      </li>\n      <li>\n       <b>\n        OPTIONS\n       </b>\n       - an optional object containing one or more options.\n      </li>\n     </ul>\n     <p>\n     </p>\n     <p>\n      <a href="#optionsRefernce" name="optionsReference">\n      </a>\n      <table class="reference">\n       <tbody>\n        <tr>\n         <th>\n          Option\n         </th>\n         <th>\n          Description\n         </th>\n        </tr>\n        <tr>\n         <td>\n          property\n         </td>\n         <td>\n          What properties to animate, default is "all"\n         </td>\n        </tr>\n        <tr>\n         <td>\n          timingFunction\n         </td>\n         <td>\n          Which timing function to use - one of the\n          <a href="#Timing_function">\n           listed functions\n          </a>\n          , default is "ease"\n         </td>\n        </tr>\n        <tr>\n         <td>\n          delay\n         </td>\n         <td>\n          If you want a delay before the animation runs, default is "0"\n         </td>\n        </tr>\n        <tr>\n         <td>\n          duration\n         </td>\n         <td>\n          How long the duration of the animation is - default is "400ms", you can specify it in seconds, using the postfix: "s", or in milliseconds, using the postfix: "ms" (default, if no postfix is specified)\n         </td>\n        </tr>\n       </tbody>\n      </table>\n     </p>\n     <p>\n      Here is an example to rotate and fade the opacity in one go, with a default duration of 2000ms and a linear timing function:\n     </p>\n     <div data-syntaxify="#customBinding" data-syntaxify-language="javascript">\n      <pre class="syntaxifyCode language-javascript"><code class=" language-javascript">m<span class="token punctuation">.</span><span class="token function">addAnimation<span class="token punctuation">(</span></span><span class="token string">"rotateColor"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>prop<span class="token punctuation">)</span><span class="token punctuation">{</span>\n\t<span class="token keyword">var</span> value <span class="token operator">=</span> <span class="token function">prop<span class="token punctuation">(</span></span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token number">1</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>\n\t<span class="token keyword">return</span> <span class="token punctuation">{</span>\n\t<span class="token comment" spellcheck="true">\t//opacity: 1-value,\n</span>\t\tcolor<span class="token punctuation">:</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token operator">?</span> <span class="token string">\'#0d0\'</span><span class="token punctuation">:</span> <span class="token string">\'#000\'</span><span class="token punctuation">,</span>\n\t\trotate<span class="token punctuation">:</span> <span class="token punctuation">(</span>value <span class="token operator">*</span> <span class="token operator">-</span><span class="token number">360</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"deg"</span>\n\t<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n\tduration<span class="token punctuation">:</span> <span class="token number">2000</span><span class="token punctuation">,</span>\n\ttimingFunction<span class="token punctuation">:</span> <span class="token string">\'linear\'</span> \n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n     </div>\n     <script id="customBinding">\n      m.addAnimation("rotateColor", function(prop){\n\tvar value = prop()? 1: 0;\n\treturn {\n\t\t//opacity: 1-value,\n\t\tcolor: (value)? \'#0d0\': \'#000\',\n\t\trotate: (value * -360) + "deg"\n\t};\n}, {\n\tduration: 2000,\n\ttimingFunction: \'linear\' \n});\n     </script>\n     <h2>\n      <a href="#Custom_keyframe_animations" name="Custom_keyframe_animations">\n       Custom keyframe animations\n      </a>\n     </h2>\n     <p>\n      You can add custom keyframe animations that can animate multiple properties on your element all at once, in several steps. Keyframe animations are static, and so do not have a function or a proprty.\n     </p>\n     <h3>\n      <a href="#Binding_keyframe_syntax" name="Binding_keyframe_syntax">\n       Binding keyframe syntax\n      </a>\n     </h3>\n     <div data-syntaxify="#bindingKeyframeSyntax" data-syntaxify-language="javascript">\n      <pre class="syntaxifyCode language-javascript"><code class=" language-javascript">m<span class="token punctuation">.</span><span class="token function">addKFAnimation<span class="token punctuation">(</span></span>NAME<span class="token punctuation">,</span> OBJ<span class="token punctuation">,</span> <span class="token punctuation">[</span>OPTIONS<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n     </div>\n     <script id="bindingKeyframeSyntax" type="text">\n      m.addKFAnimation(NAME, OBJ, [OPTIONS]);\n     </script>\n     <p>\n      Where:\n     </p>\n     <ul>\n      <li>\n       <b>\n        NAME\n       </b>\n       - the name of your binding as you refer to it in the view (must be unique)\n      </li>\n      <li>\n       <b>\n        OBJ\n       </b>\n       - An object with percentages as keys and values are properties with their respective values to be animated\n      </li>\n      <li>\n       <b>\n        OPTIONS\n       </b>\n       - an optional object containing one or more options, see\n       <a href="#optionsReference">\n        table above\n       </a>\n       for details.\n      </li>\n     </ul>\n     <p>\n     </p>\n     <p>\n      Here is an example to make a box "floop" around a little:\n     </p>\n     <div data-syntaxify="#customKFBinding" data-syntaxify-language="javascript">\n      <pre class="syntaxifyCode language-javascript"><code class=" language-javascript">m<span class="token punctuation">.</span><span class="token function">addKFAnimation<span class="token punctuation">(</span></span><span class="token string">"floopy"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n\t<span class="token string">\'0%\'</span><span class="token punctuation">:</span> \t<span class="token punctuation">{</span> left<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> top<span class="token punctuation">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t<span class="token string">\'25%\'</span><span class="token punctuation">:</span> \t<span class="token punctuation">{</span> left<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> top<span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">,</span> rotate<span class="token punctuation">:</span> <span class="token string">"720deg"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t<span class="token string">\'50%\'</span><span class="token punctuation">:</span> \t<span class="token punctuation">{</span> left<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span> top<span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span> rotatey<span class="token punctuation">:</span> <span class="token string">"180deg"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t<span class="token string">\'75%\'</span><span class="token punctuation">:</span> \t<span class="token punctuation">{</span> left<span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span> top<span class="token punctuation">:</span> <span class="token number">75</span><span class="token punctuation">,</span> scale<span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">,</span> rotatex<span class="token punctuation">:</span> <span class="token string">"180deg"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t<span class="token string">\'100%\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span> left<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> top<span class="token punctuation">:</span> <span class="token number">0</span> <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n\tduration<span class="token punctuation">:</span> <span class="token number">2000</span> \n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n     </div>\n     <script id="customKFBinding">\n      m.addKFAnimation("floopy", {\n\t\'0%\': \t{ left: 0, top: 0 },\n\t\'25%\': \t{ left: 100, top: 40, rotate: "720deg" },\n\t\'50%\': \t{ left: 200, top: 300, rotatey: "180deg" },\n\t\'75%\': \t{ left: 300, top: 75, scale: 6, rotatex: "180deg" },\n\t\'100%\': { left: 0, top: 0 }\n}, {\n\tduration: 2000 \n});\n     </script>\n    </div>\n   </div>\n   <div class="cf box odd">\n    <div class="content">\n     <h2>\n      <a href="#Examples" name="Examples">\n       Examples\n      </a>\n     </h2>\n     <h3>\n      <a href="#Using_a_binding" name="Using_a_binding">\n       Using a binding\n      </a>\n     </h3>\n     <p>\n      Here we will try our new "rotateColor" binding - click on the box again to see the animation in reverse - this is a nice example of why using a property is a good idea.\n     </p>\n     <p>\n     </p>\n     <div id="app1">\n      <div class="rBox" style="transition-timing-function: ease; transition-duration: 400ms; transition-property: all; color: rgb(0, 0, 0); transform: rotate(0deg);">\n       Click me!\n      </div>\n     </div>\n     <script id="example1Code">\n      var app1 = {\n\tmodel: function() {\n\t\tthis.myProperty = m.p(0);\n\t},\n\tcontroller: function() {\n\t\tthis.model = new app1.model();\n\t},\n\tview: function(c) {\n\t\tvar o = c.model;\n\t\treturn m.e("div.rBox", { toggle: o.myProperty, rotateColor: o.myProperty }, "Click me!");\n\t}\n};\n//initialize\nm.module(document.getElementById(\'app1\'), app1);\n     </script>\n     <p>\n     </p>\n     <p>\n     </p>\n     <div data-syntaxify="#example1Code" data-syntaxify-language="javascript">\n      <pre class="syntaxifyCode language-javascript"><code class=" language-javascript"><span class="token keyword">var</span> app1 <span class="token operator">=</span> <span class="token punctuation">{</span>\n\tmodel<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t<span class="token keyword">this</span><span class="token punctuation">.</span>myProperty <span class="token operator">=</span> m<span class="token punctuation">.</span><span class="token function">p<span class="token punctuation">(</span></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span><span class="token punctuation">,</span>\n\tcontroller<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t<span class="token keyword">this</span><span class="token punctuation">.</span>model <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">app1<span class="token punctuation">.</span>model</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span><span class="token punctuation">,</span>\n\tview<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t<span class="token keyword">var</span> o <span class="token operator">=</span> c<span class="token punctuation">.</span>model<span class="token punctuation">;</span>\n\t\t<span class="token keyword">return</span> m<span class="token punctuation">.</span><span class="token function">e<span class="token punctuation">(</span></span><span class="token string">"div.rBox"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> toggle<span class="token punctuation">:</span> o<span class="token punctuation">.</span>myProperty<span class="token punctuation">,</span> rotateColor<span class="token punctuation">:</span> o<span class="token punctuation">.</span>myProperty <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">"Click me!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">\n//initialize\n</span>m<span class="token punctuation">.</span><span class="token function">module<span class="token punctuation">(</span></span>document<span class="token punctuation">.</span><span class="token function">getElementById<span class="token punctuation">(</span></span><span class="token string">\'app1\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> app1<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n     </div>\n     <p>\n     </p>\n     <h3>\n      <a href="#Using_a_keyframe_binding" name="Using_a_keyframe_binding">\n       Using a keyframe binding\n      </a>\n     </h3>\n     <p>\n      Here we will create a custom keyframe binding - this example\n      <a href="css/swingacat.css" target="_blank">\n       uses a little CSS\n      </a>\n      as well.\n      <br/>\n      <br/>\n      Click the cat.\n      <br/>\n      Go on, you know you want to...\n     </p>\n     <p>\n     </p>\n     <div id="app2">\n      <div class="catBox">\n       <div class="catBoxFace1">\n       </div>\n       <div class="catBoxFace2">\n       </div>\n      </div>\n     </div>\n     <script id="example2Code">\n      //\tJust enough room to...\nm.addKFAnimation("swingACat", {\n\t\'0%\': { rotatex: "0", rotatey: "0" },\n\t\'100%\': { rotatex: "360deg", rotatey: "360deg" }\n});\n\nvar app2 = {\n\tcontroller: function() {},\n\tview: function(c) {\n\t\treturn [\n\t\t\tm.e("div.catBox", {\n\t\t\t\tonclick: m.triggerKF(\'swingACat\', { duration: 5000 })\n\t\t\t}, [\n\t\t\t\tm.e("div.catBoxFace1"), m.e("div.catBoxFace2")\n\t\t\t])\n\t\t];\n\t}\n};\n\n//initialize\nm.module(document.getElementById(\'app2\'), app2);\n     </script>\n     <p>\n     </p>\n     <p>\n     </p>\n     <div data-syntaxify="#example2Code" data-syntaxify-language="javascript">\n      <pre class="syntaxifyCode language-javascript"><code class=" language-javascript"><span class="token comment" spellcheck="true">//\tJust enough room to...\n</span>m<span class="token punctuation">.</span><span class="token function">addKFAnimation<span class="token punctuation">(</span></span><span class="token string">"swingACat"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n\t<span class="token string">\'0%\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span> rotatex<span class="token punctuation">:</span> <span class="token string">"0"</span><span class="token punctuation">,</span> rotatey<span class="token punctuation">:</span> <span class="token string">"0"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t<span class="token string">\'100%\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span> rotatex<span class="token punctuation">:</span> <span class="token string">"360deg"</span><span class="token punctuation">,</span> rotatey<span class="token punctuation">:</span> <span class="token string">"360deg"</span> <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">var</span> app2 <span class="token operator">=</span> <span class="token punctuation">{</span>\n\tcontroller<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n\tview<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t<span class="token keyword">return</span> <span class="token punctuation">[</span>\n\t\t\tm<span class="token punctuation">.</span><span class="token function">e<span class="token punctuation">(</span></span><span class="token string">"div.catBox"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n\t\t\t\tonclick<span class="token punctuation">:</span> m<span class="token punctuation">.</span><span class="token function">triggerKF<span class="token punctuation">(</span></span><span class="token string">\'swingACat\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> duration<span class="token punctuation">:</span> <span class="token number">5000</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\t\t\t<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>\n\t\t\t\tm<span class="token punctuation">.</span><span class="token function">e<span class="token punctuation">(</span></span><span class="token string">"div.catBoxFace1"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> m<span class="token punctuation">.</span><span class="token function">e<span class="token punctuation">(</span></span><span class="token string">"div.catBoxFace2"</span><span class="token punctuation">)</span>\n\t\t\t<span class="token punctuation">]</span><span class="token punctuation">)</span>\n\t\t<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token comment" spellcheck="true">\n//initialize\n</span>m<span class="token punctuation">.</span><span class="token function">module<span class="token punctuation">(</span></span>document<span class="token punctuation">.</span><span class="token function">getElementById<span class="token punctuation">(</span></span><span class="token string">\'app2\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> app2<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n     </div>\n     <p>\n     </p>\n     <h3>\n      <a href="#Extended_examples" name="Extended_examples">\n       Extended examples\n      </a>\n     </h3>\n     <p>\n      Hover over each box to see the animation in action\n     </p>\n     <div id="testapp">\n      <h2>\n       Single animation\n      </h2>\n      <div class="exampleBox">\n       <h3>\n        Opacity\n       </h3>\n       <div class="eBox" style="transition-timing-function: ease; transition-duration: 400ms; transition-property: all;">\n       </div>\n      </div>\n      <div class="exampleBox">\n       <h3>\n        Scale\n       </h3>\n       <div class="eBox" style="transition-timing-function: ease; transition-duration: 400ms; transition-property: all;">\n       </div>\n      </div>\n      <div class="exampleBox">\n       <h3>\n        Rotate\n       </h3>\n       <div class="eBox" style="transition-timing-function: ease; transition-duration: 400ms; transition-property: all;">\n       </div>\n      </div>\n      <div class="exampleBox">\n       <h3>\n        Skew\n       </h3>\n       <div class="eBox" style="transition-timing-function: ease; transition-duration: 400ms; transition-property: all; transform: skew(0deg, 0deg);">\n       </div>\n      </div>\n      <div class="exampleBox">\n       <h3>\n        translateX\n       </h3>\n       <div class="eBox" style="transition-timing-function: ease; transition-duration: 400ms; transition-property: all;">\n       </div>\n      </div>\n      <h2>\n       Multiple animation\n      </h2>\n      <div class="exampleBox">\n       <h3>\n        Opacity scale\n       </h3>\n       <div class="eBox" style="transition-timing-function: ease; transition-duration: 400ms; transition-property: all;">\n       </div>\n      </div>\n      <div class="exampleBox">\n       <h3>\n        Opacity up\n       </h3>\n       <div class="eBox" style="transition-timing-function: ease; transition-duration: 400ms; transition-property: all; transform: translateY(0px); opacity: 1;">\n       </div>\n      </div>\n      <div class="exampleBox">\n       <h3>\n        Opacity down\n       </h3>\n       <div class="eBox" style="transition-timing-function: ease; transition-duration: 400ms; transition-property: all; transform: translateY(0px); opacity: 1;">\n       </div>\n      </div>\n      <h2>\n       Custom animation\n      </h2>\n      <div class="exampleBox">\n       <h3>\n        Material menu\n       </h3>\n       <a href="http://www.google.com/design/spec/animation/delightful-details.html" target="_blank">\n        Based on this\n       </a>\n       <div class="boxSurround">\n        <div class="eBox icon" style="transition-timing-function: ease; transition-duration: 400ms; transition-property: all; opacity: 1; transform: rotate(-180deg);">\n        </div>\n        <div class="eBox alt1 icon" style="transition-timing-function: ease; transition-duration: 400ms; transition-property: all; opacity: 0; transform: rotate(0deg);">\n        </div>\n       </div>\n      </div>\n     </div>\n     <h2>\n      <a href="#Source" name="Source">\n       Source\n      </a>\n     </h2>\n     <a href="https://raw.githack.com/jsguy/mithril.animate/master/examples/all.example.js" target="_blank">\n      Click here for the source for these examples\n     </a>\n    </div>\n   </div>\n   <div class="cf box even">\n    <div class="content">\n     <h2>\n      <a href="#FAQ" name="FAQ">\n       FAQ\n      </a>\n     </h2>\n     <div class="faqItem">\n      <h3>\n       Browser support\n      </h3>\n      <p>\n       The animations work in all\n       <a href="http://caniuse.com/#feat=transforms2d" target="_blank">\n        modern browsers\n       </a>\n       .\n\t\t\t\t\tMithril.animate degrades older browsers by not applying transforms (rotate, scale, etc) while still applying standard CSS (opacity, margin, etc) without any animation.\n      </p>\n      <p class="smallNote">\n       Note, if you need to support older browsers, you can add\n       <a href="http://jquery.com">\n        jQuery\n       </a>\n       and we will use jquery.animate where possible, ie: opacity, margin, padding, etc...\n      </p>\n     </div>\n    </div>\n   </div>\n   <script>\n    //initialize\n\t\tm.module(document.getElementById(\'testapp\'), allExample);\n   </script>\n  </div>\n  <footer>\n   <div id="footerContainer">\n    Copyright \xc2\xa9 2014\n    <a href="http://jsguy.com">\n     jsguy\n    </a>\n   </div>\n  </footer>\n  <!-- Just using jQuery for syntax highlighting - not needed for mithril.animate! -->\n  <link href="../libs/jquery.syntaxify/prism.min.css" rel="stylesheet" type="text/css"/>\n  <script src="../libs/jquery-1.9.1.js">\n  </script>\n  <script src="../libs/jquery.syntaxify/prism.min.js" type="text/javascript">\n  </script>\n  <script src="../libs/jquery.syntaxify/jquery.syntaxify.js">\n  </script>\n  <iframe id="_hjRemoteVarsFrame" name="_hjRemoteVarsFrame" src="https://vars.hotjar.com/rcj-99d43ead6bdf30da8ed5ffcb4f17100c.html" style="display: none !important; width: 1px !important; height: 1px !important; opacity: 0 !important; pointer-events: none !important;" title="_hjRemoteVarsFrame">\n  </iframe>\n  <div id="ads">\n  </div>\n </body>\n</html>'b'<html xmlns="http://www.w3.org/1999/xhtml">\n <head>\n  <title>\n   Mithril.animate\n  </title>\n  <script src="https://raw.githack.com/jsguy/mithril.animate/master/examples/mithril.js">\n  </script>\n  <script src="https://raw.githack.com/jsguy/mithril.animate/master/dist/mithril.animate.min.js">\n  </script>\n  <script src="https://raw.githack.com/jsguy/mithril.animate/master/examples/all.example.js">\n  </script>\n  <!--\n\t<script src="../../mithril.animate/examples/mithril.js"></script>\n\t<script src="../../mithril.bindings/dist/mithril.bindings.js"></script>\n\t<script src="../../mithril.animate/src/mithril.animate.js"></script>\n\t<script src="../../mithril.animate/src/mithril.animate.bindings.js"></script>\n\t<script src="../../mithril.animate/examples/all.example.js"></script>\n-->\n  <link href="css/style.css" rel="stylesheet" type="text/css"/>\n  <link href="css/swingacat.css" rel="stylesheet" type="text/css"/>\n  <!-- Hotjar Tracking Code for http://jsguy.com -->\n  <script>\n   (function(h,o,t,j,a,r){\n\t        h.hj=h.hj||function(){(h.hj.q=h.hj.q||[]).push(arguments)};\n\t        h._hjSettings={hjid:274942,hjsv:5};\n\t        a=o.getElementsByTagName(\'head\')[0];\n\t        r=o.createElement(\'script\');r.async=1;\n\t        r.src=t+h._hjSettings.hjid+j+h._hjSettings.hjsv;\n\t        a.appendChild(r);\n\t    })(window,document,\'//static.hotjar.com/c/hotjar-\',\'.js?sv=\');\n  </script>\n  <script async="" src="//static.hotjar.com/c/hotjar-274942.js?sv=5">\n  </script>\n  <script async="" src="https://script.hotjar.com/modules-fa2b48a238bb646d8cc1b2e82176a64f.js">\n  </script>\n  <style type="text/css">\n   iframe#_hjRemoteVarsFrame {display: none !important; width: 1px !important; height: 1px !important; opacity: 0 !important; pointer-events: none !important;}\n  </style>\n </head>\n <body>\n  <div id="promo">\n   <div id="promoText">\n    <div>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      D\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      E\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      C\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      L\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      A\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      R\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      A\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      T\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      I\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      V\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      E\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      L\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      Y\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      B\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      I\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      N\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      D\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      A\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      N\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      I\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      M\n     </span>\n     <span style="transition-timing-function: ease; transition-duration: 250ms; transition-property: all; transform: scale(1); opacity: 1;">\n      A\n     </span>\n     <span>\n      T\n     </span>\n     <span>\n      I\n     </span>\n     <span>\n      O\n     </span>\n     <span>\n      N\n     </span>\n     <span>\n      S\n     </span>\n    </div>\n   </div>\n  </div>\n  <script>\n   //\tA basic animation binder\n\tvar aniPromo = function(prop, delay){\n\t\treturn function(el){\n\t\t\tsetTimeout(function(){\n\t\t\t\tvar value = prop()? 1: 0;\n\t\t\t\tm.animateProperties(el, {\n\t\t\t\t\tscale: (value * 10) + 1,\n\t\t\t\t\topacity: 1-value,\n\t\t\t\t\tduration: "0.25s"\n\t\t\t\t});\n\t\t\t}, delay * 100);\n\t\t};\n\t};\n\t//\tBasic animation component\n\tvar promoApp = {\n\t\tmodel: function() {\n\t\t\tthis.text = m.p("DECLARATIVELY BIND ANIMATIONS");\n\t\t\tthis.ani = m.p(0);\n\t\t},\n\t\tcontroller: function() {\n\t\t\tvar self = this;\n\t\t\tself.model = new promoApp.model();\n\t\t\t//\tTODO: rewrite this to be a custom dynamic keyframe animation\n\t\t\tsetTimeout(function(){\n\t\t\t\tself.model.ani(1);\n\t\t\t\tm.redraw();\n\t\t\t}, 5000);\n\n\t\t\tsetTimeout(function(){\n\t\t\t\t//self.model.text("m(\\"div\\", { config: ani.fade(o.myProperty) })");\n\n\t\t\t\tself.model.text("m.e(\\"div\\", { opacity: o.myProperty })");\n\n\t\t\t\tself.model.ani(0);\n\t\t\t\tm.redraw();\n\t\t\t}, 9000);\n\n\t\t\tsetTimeout(function(){\n\t\t\t\tself.model.ani(1);\n\t\t\t\tm.redraw();\n\t\t\t}, 15000);\n\n\t\t\tsetTimeout(function(){\n\t\t\t\tself.model.text("Mithril.animate - fast, smooth, easy!");\n\t\t\t\tself.model.ani(0);\n\t\t\t\tm.redraw();\n\t\t\t}, 19000);\n\t\t},\n\t\tview: function(c) {\n\t\t\tvar o = c.model;\n\t\t\treturn m("div", [\n\t\t\t\to.text().split("").map(function(t, i){\n\t\t\t\t\tt = (t == " ")? "&amp;nbsp;": t;\n\t\t\t\t\treturn m("span", {config: aniPromo(o.ani, i)}, m.trust(t));\n\t\t\t\t})\n\t\t\t]);\n\t\t}\n\t};\t\n\t//initialize\n\tm.module(document.getElementById(\'promoText\'), promoApp);\n  </script>\n  <header>\n   <div id="headerContainer">\n    <span id="logo">\n    </span>\n    <span id="nav">\n     <a href="https://github.com/jsguy/mithril.animate/">\n      GITHUB\n     </a>\n     <a href="https://github.com/jsguy/mithril.animate/issues">\n      COMMUNITY\n     </a>\n    </span>\n   </div>\n  </header>\n  <div class="cf" id="container">\n   <div class="cf box even">\n    <div class="content">\n     <h1>\n      What is Mithril.animate?\n     </h1>\n     <p>\n      A tiny library that allows you to declaratively bind animations to your mithril elements via model properties. They work in all\n      <a href="http://caniuse.com/#feat=transforms2d" target="_blank">\n       modern browsers\n      </a>\n      , and have the ability to fall back to using jQuery.animate (optional). The intention is to allow you to create\n      <a href="http://www.google.com/design/spec/animation/responsive-interaction.html" target="_blank">\n       neat UI animations\n      </a>\n      that react to your model properties, however don\'t expect to be able to make a floating 3D periodic table, (at least not out of the box)..\n     </p>\n    </div>\n   </div>\n   <div class="cf box odd">\n    <div class="content">\n     <h2>\n      <a href="#Getting_started" name="Getting_started">\n       Getting started\n      </a>\n     </h2>\n     <p>\n     </p>\n     <ol>\n      <li>\n       Install\n       <a href="http://lhorie.github.io/mithril/installation.html" target="_blank">\n        Mithril\n       </a>\n      </li>\n      <li>\n       Include a copy of\n       <a href="https://raw.githack.com/jsguy/mithril.animate/master/dist/mithril.animate.min.js" target="_blank">\n        mithril.animate.min.js\n       </a>\n      </li>\n     </ol>\n     <p>\n     </p>\n     <p>\n      You\'re now ready to start animating!\n     </p>\n    </div>\n   </div>\n   <div class="cf box even">\n    <div class="content">\n     <h2>\n      <a href="#Using_it" name="Using_it">\n       Using it\n      </a>\n     </h2>\n     <p>\n      To use an animation, you can bind a property to control it:\n     </p>\n     <p>\n     </p>\n     <pre class=" language-javascript"><code class=" language-javascript">m<span class="token punctuation">.</span><span class="token function">e<span class="token punctuation">(</span></span><span class="token string">"div"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> opacity<span class="token punctuation">:</span> o<span class="token punctuation">.</span>ani <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">"I can fade away"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n     <p>\n     </p>\n     <p>\n      Where "o.ani" is a property on your model - simply toggle between 0 and 1 to fade in and out!\n     </p>\n     <p>\n      You can also bind events to animate, for example:\n     </p>\n     <p>\n     </p>\n     <pre class=" language-javascript"><code class=" language-javascript">m<span class="token punctuation">.</span><span class="token function">e<span class="token punctuation">(</span></span><span class="token string">"div"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> onclick<span class="token punctuation">:</span> m<span class="token punctuation">.</span><span class="token function">trigger<span class="token punctuation">(</span></span><span class="token string">\'opacity\'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"I also fade away"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n     <p>\n     </p>\n     <p>\n      Where "0" is the value you want opacity to become when you click.\n     </p>\n     <p>\n      <b>\n       Note:\n      </b>\n      the recommended approach is to bind to a property - as this makes it easy to react to the state of your data. For example if the user performs an action to delete an item, it makes sense to fade the opacity of the item to 0.\n     </p>\n     <h3>\n      <a href="#Trigger_syntax_-_transition_animation" name="Trigger_syntax_-_transition_animation">\n       Trigger syntax - transition animation\n      </a>\n     </h3>\n     <p>\n      Transition animations can be triggered with a value or property, options and a callback.\n     </p>\n     <div data-syntaxify="#triggerSyntaxTransition" data-syntaxify-language="javascript">\n      <pre class="syntaxifyCode language-javascript"><code class=" language-javascript">m<span class="token punctuation">.</span><span class="token function">trigger<span class="token punctuation">(</span></span>NAME<span class="token punctuation">,</span> <span class="token punctuation">[</span>VALUE<span class="token operator">/</span>PROP<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>OPTIONS<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>CALLBACK<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n     </div>\n     <script id="triggerSyntaxTransition" type="text">\n      m.trigger(NAME, [VALUE/PROP], [OPTIONS], [CALLBACK]);\n     </script>\n     <p>\n      Where:\n     </p>\n     <ul>\n      <li>\n       <b>\n        NAME\n       </b>\n       - the name of the animation\n      </li>\n      <li>\n       <b>\n        VALUE/PROP\n       </b>\n       - an optional value or model property you want to pass to the animation being triggered\n      </li>\n      <li>\n       <b>\n        OPTIONS\n       </b>\n       - an optional object containing one or more options\n      </li>\n      <li>\n       <b>\n        CALLBACK\n       </b>\n       - a function that will be run when the animation is complete\n      </li>\n     </ul>\n     <p>\n     </p>\n     <h3>\n      <a href="#Trigger_syntax_-_keyframe_animation" name="Trigger_syntax_-_keyframe_animation">\n       Trigger syntax - keyframe animation\n      </a>\n     </h3>\n     <p>\n      Keyframe animations only take a name and options, as they are much more static.\n     </p>\n     <div data-syntaxify="#triggerSyntaxKeyframe" data-syntaxify-language="javascript">\n      <pre class="syntaxifyCode language-javascript"><code class=" language-javascript">m<span class="token punctuation">.</span><span class="token function">triggerKF<span class="token punctuation">(</span></span>NAME<span class="token punctuation">,</span> <span class="token punctuation">[</span>OPTIONS<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n     </div>\n     <script id="triggerSyntaxKeyframe" type="text">\n      m.triggerKF(NAME, [OPTIONS]);\n     </script>\n     <p>\n      Where:\n     </p>\n     <ul>\n      <li>\n       <b>\n        NAME\n       </b>\n       - the name of the animation\n      </li>\n      <li>\n       <b>\n        OPTIONS\n       </b>\n       - an optional object containing one or more options\n      </li>\n     </ul>\n     <p>\n     </p>\n     <h3>\n      <a href="#Property_animations" name="Property_animations">\n       Property animations\n      </a>\n     </h3>\n     <p>\n      There are bindings included for all\n      <a href="http://www.w3.org/TR/css3-transitions/#animatable-properties" target="_blank">\n       standard animatable properties\n      </a>\n      : backgroundColor, backgroundPosition, borderBottomColor, borderBottomWidth, borderLeftColor, borderLeftWidth, borderRightColor, borderRightWidth, borderSpacing, borderTopColor, borderTopWidth, bottom, clip, color, fontSize, fontWeight, height, left, letterSpacing, lineHeight, marginBottom, marginLeft, marginRight, marginTop, maxHeight, maxWidth, minHeight, minWidth, opacity, outlineColor, outlineWidth, paddingBottom, paddingLeft, paddingRight, paddingTop, right, textIndent, textShadow, top, verticalAlign, visibility, width, wordSpacing, zIndex\n     </p>\n     <h3>\n      <a href="#CSS3_animations" name="CSS3_animations">\n       CSS3 animations\n      </a>\n     </h3>\n     <p>\n      You can also animate using the following CSS3 animation bindings:\n     </p>\n     <p>\n      <table class="reference">\n       <tbody>\n        <tr>\n         <th>\n          Binding\n         </th>\n         <th>\n          Description\n         </th>\n        </tr>\n        <tr>\n         <td>\n          translate(\n          <i>\n           x, y\n          </i>\n          )\n         </td>\n         <td>\n          Move element x across, y down\n         </td>\n        </tr>\n        <tr>\n         <td>\n          translatex(\n          <i>\n           x\n          </i>\n          )\n         </td>\n         <td>\n          Moving element x across\n         </td>\n        </tr>\n        <tr>\n         <td>\n          translatey(\n          <i>\n           y\n          </i>\n          )\n         </td>\n         <td>\n          Moving element y down\n         </td>\n        </tr>\n        <tr>\n         <td>\n          scale(\n          <i>\n           x, y\n          </i>\n          )\n         </td>\n         <td>\n          Changing the elements width by x and height by y\n         </td>\n        </tr>\n        <tr>\n         <td>\n          scalex(\n          <i>\n           x\n          </i>\n          )\n         </td>\n         <td>\n          Change the elements width by x\n         </td>\n        </tr>\n        <tr>\n         <td>\n          scaley(\n          <i>\n           y\n          </i>\n          )\n         </td>\n         <td>\n          Change the elements width by y\n         </td>\n        </tr>\n        <tr>\n         <td>\n          rotate(\n          <i>\n           angle\n          </i>\n          )\n         </td>\n         <td>\n          Rotate the element by angle (\'deg\' or \'rad\')\n         </td>\n        </tr>\n        <tr>\n         <td>\n          skew(\n          <i>\n           x-angle, y-angle\n          </i>\n          )\n         </td>\n         <td>\n          Skew the element across by x-angle and down by y-angle (\'deg\' or \'rad\')\n         </td>\n        </tr>\n        <tr>\n         <td>\n          skewx(\n          <i>\n           x-angle\n          </i>\n          )\n         </td>\n         <td>\n          Skew the element across by x-angle (\'deg\' or \'rad\')\n         </td>\n        </tr>\n        <tr>\n         <td>\n          skewy(\n          <i>\n           y-angle\n          </i>\n          )\n         </td>\n         <td>\n          Skew the element down by y-angle (\'deg\' or \'rad\')\n         </td>\n        </tr>\n       </tbody>\n      </table>\n     </p>\n     <h3>\n      <a href="#Timing_function" name="Timing_function">\n       Timing function\n      </a>\n     </h3>\n     <p>\n      You are able to specify a timing function to direct how your animation is run, default is \'ease\'\n     </p>\n     <p>\n      <table class="reference">\n       <tbody>\n        <tr>\n         <th>\n          Function\n         </th>\n         <th>\n          Description\n         </th>\n        </tr>\n        <tr>\n         <td>\n          ease\n         </td>\n         <td>\n          Slow start, then fast, then end slow again (equivalent to cubic-bezier(0.25,0.1,0.25,1))\n         </td>\n        </tr>\n        <tr>\n         <td>\n          linear\n         </td>\n         <td>\n          Same speed from start to end (equivalent to cubic-bezier(0,0,1,1))\n         </td>\n        </tr>\n        <tr>\n         <td>\n          ease-in\n         </td>\n         <td>\n          Slow start (equivalent to cubic-bezier(0.42,0,1,1))\n         </td>\n        </tr>\n        <tr>\n         <td>\n          ease-out\n         </td>\n         <td>\n          Slow end (equivalent to cubic-bezier(0,0,0.58,1))\n         </td>\n        </tr>\n        <tr>\n         <td>\n          ease-in-out\n         </td>\n         <td>\n          Slow start and end (equivalent to cubic-bezier(0.42,0,0.58,1))\n         </td>\n        </tr>\n        <tr>\n         <td>\n          cubic-bezier(\n          <i>\n           n\n          </i>\n          ,\n          <i>\n           n\n          </i>\n          ,\n          <i>\n           n\n          </i>\n          ,\n          <i>\n           n\n          </i>\n          )\n         </td>\n         <td>\n          Define your own values in the cubic-bezier function. Possible values are numeric values from 0 to 1\n         </td>\n        </tr>\n       </tbody>\n      </table>\n     </p>\n     <h2>\n      <a href="#Custom_animations" name="Custom_animations">\n       Custom animations\n      </a>\n     </h2>\n     <p>\n      You can add custom animations that can animate multiple properties on your element all at once.\n     </p>\n     <h3>\n      <a href="#Binding_syntax" name="Binding_syntax">\n       Binding syntax\n      </a>\n     </h3>\n     <div data-syntaxify="#bindingSyntax" data-syntaxify-language="javascript">\n      <pre class="syntaxifyCode language-javascript"><code class=" language-javascript">m<span class="token punctuation">.</span><span class="token function">addAnimation<span class="token punctuation">(</span></span>NAME<span class="token punctuation">,</span> FN<span class="token punctuation">,</span> <span class="token punctuation">[</span>OPTIONS<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n     </div>\n     <script id="bindingSyntax" type="text">\n      m.addAnimation(NAME, FN, [OPTIONS]);\n     </script>\n     <p>\n      Where:\n     </p>\n     <ul>\n      <li>\n       <b>\n        NAME\n       </b>\n       - the name of your binding as you refer to it in the view (must be unique)\n      </li>\n      <li>\n       <b>\n        FN\n       </b>\n       - A function that takes the mithril property that is bound to the animation and returns the properties and values to be animated\n      </li>\n      <li>\n       <b>\n        OPTIONS\n       </b>\n       - an optional object containing one or more options.\n      </li>\n     </ul>\n     <p>\n     </p>\n     <p>\n      <a href="#optionsRefernce" name="optionsReference">\n      </a>\n      <table class="reference">\n       <tbody>\n        <tr>\n         <th>\n          Option\n         </th>\n         <th>\n          Description\n         </th>\n        </tr>\n        <tr>\n         <td>\n          property\n         </td>\n         <td>\n          What properties to animate, default is "all"\n         </td>\n        </tr>\n        <tr>\n         <td>\n          timingFunction\n         </td>\n         <td>\n          Which timing function to use - one of the\n          <a href="#Timing_function">\n           listed functions\n          </a>\n          , default is "ease"\n         </td>\n        </tr>\n        <tr>\n         <td>\n          delay\n         </td>\n         <td>\n          If you want a delay before the animation runs, default is "0"\n         </td>\n        </tr>\n        <tr>\n         <td>\n          duration\n         </td>\n         <td>\n          How long the duration of the animation is - default is "400ms", you can specify it in seconds, using the postfix: "s", or in milliseconds, using the postfix: "ms" (default, if no postfix is specified)\n         </td>\n        </tr>\n       </tbody>\n      </table>\n     </p>\n     <p>\n      Here is an example to rotate and fade the opacity in one go, with a default duration of 2000ms and a linear timing function:\n     </p>\n     <div data-syntaxify="#customBinding" data-syntaxify-language="javascript">\n      <pre class="syntaxifyCode language-javascript"><code class=" language-javascript">m<span class="token punctuation">.</span><span class="token function">addAnimation<span class="token punctuation">(</span></span><span class="token string">"rotateColor"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>prop<span class="token punctuation">)</span><span class="token punctuation">{</span>\n\t<span class="token keyword">var</span> value <span class="token operator">=</span> <span class="token function">prop<span class="token punctuation">(</span></span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token number">1</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>\n\t<span class="token keyword">return</span> <span class="token punctuation">{</span>\n\t<span class="token comment" spellcheck="true">\t//opacity: 1-value,\n</span>\t\tcolor<span class="token punctuation">:</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token operator">?</span> <span class="token string">\'#0d0\'</span><span class="token punctuation">:</span> <span class="token string">\'#000\'</span><span class="token punctuation">,</span>\n\t\trotate<span class="token punctuation">:</span> <span class="token punctuation">(</span>value <span class="token operator">*</span> <span class="token operator">-</span><span class="token number">360</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"deg"</span>\n\t<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n\tduration<span class="token punctuation">:</span> <span class="token number">2000</span><span class="token punctuation">,</span>\n\ttimingFunction<span class="token punctuation">:</span> <span class="token string">\'linear\'</span> \n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n     </div>\n     <script id="customBinding">\n      m.addAnimation("rotateColor", function(prop){\n\tvar value = prop()? 1: 0;\n\treturn {\n\t\t//opacity: 1-value,\n\t\tcolor: (value)? \'#0d0\': \'#000\',\n\t\trotate: (value * -360) + "deg"\n\t};\n}, {\n\tduration: 2000,\n\ttimingFunction: \'linear\' \n});\n     </script>\n     <h2>\n      <a href="#Custom_keyframe_animations" name="Custom_keyframe_animations">\n       Custom keyframe animations\n      </a>\n     </h2>\n     <p>\n      You can add custom keyframe animations that can animate multiple properties on your element all at once, in several steps. Keyframe animations are static, and so do not have a function or a proprty.\n     </p>\n     <h3>\n      <a href="#Binding_keyframe_syntax" name="Binding_keyframe_syntax">\n       Binding keyframe syntax\n      </a>\n     </h3>\n     <div data-syntaxify="#bindingKeyframeSyntax" data-syntaxify-language="javascript">\n      <pre class="syntaxifyCode language-javascript"><code class=" language-javascript">m<span class="token punctuation">.</span><span class="token function">addKFAnimation<span class="token punctuation">(</span></span>NAME<span class="token punctuation">,</span> OBJ<span class="token punctuation">,</span> <span class="token punctuation">[</span>OPTIONS<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n     </div>\n     <script id="bindingKeyframeSyntax" type="text">\n      m.addKFAnimation(NAME, OBJ, [OPTIONS]);\n     </script>\n     <p>\n      Where:\n     </p>\n     <ul>\n      <li>\n       <b>\n        NAME\n       </b>\n       - the name of your binding as you refer to it in the view (must be unique)\n      </li>\n      <li>\n       <b>\n        OBJ\n       </b>\n       - An object with percentages as keys and values are properties with their respective values to be animated\n      </li>\n      <li>\n       <b>\n        OPTIONS\n       </b>\n       - an optional object containing one or more options, see\n       <a href="#optionsReference">\n        table above\n       </a>\n       for details.\n      </li>\n     </ul>\n     <p>\n     </p>\n     <p>\n      Here is an example to make a box "floop" around a little:\n     </p>\n     <div data-syntaxify="#customKFBinding" data-syntaxify-language="javascript">\n      <pre class="syntaxifyCode language-javascript"><code class=" language-javascript">m<span class="token punctuation">.</span><span class="token function">addKFAnimation<span class="token punctuation">(</span></span><span class="token string">"floopy"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n\t<span class="token string">\'0%\'</span><span class="token punctuation">:</span> \t<span class="token punctuation">{</span> left<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> top<span class="token punctuation">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t<span class="token string">\'25%\'</span><span class="token punctuation">:</span> \t<span class="token punctuation">{</span> left<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> top<span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">,</span> rotate<span class="token punctuation">:</span> <span class="token string">"720deg"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t<span class="token string">\'50%\'</span><span class="token punctuation">:</span> \t<span class="token punctuation">{</span> left<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span> top<span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span> rotatey<span class="token punctuation">:</span> <span class="token string">"180deg"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t<span class="token string">\'75%\'</span><span class="token punctuation">:</span> \t<span class="token punctuation">{</span> left<span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span> top<span class="token punctuation">:</span> <span class="token number">75</span><span class="token punctuation">,</span> scale<span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">,</span> rotatex<span class="token punctuation">:</span> <span class="token string">"180deg"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t<span class="token string">\'100%\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span> left<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> top<span class="token punctuation">:</span> <span class="token number">0</span> <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n\tduration<span class="token punctuation">:</span> <span class="token number">2000</span> \n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n     </div>\n     <script id="customKFBinding">\n      m.addKFAnimation("floopy", {\n\t\'0%\': \t{ left: 0, top: 0 },\n\t\'25%\': \t{ left: 100, top: 40, rotate: "720deg" },\n\t\'50%\': \t{ left: 200, top: 300, rotatey: "180deg" },\n\t\'75%\': \t{ left: 300, top: 75, scale: 6, rotatex: "180deg" },\n\t\'100%\': { left: 0, top: 0 }\n}, {\n\tduration: 2000 \n});\n     </script>\n    </div>\n   </div>\n   <div class="cf box odd">\n    <div class="content">\n     <h2>\n      <a href="#Examples" name="Examples">\n       Examples\n      </a>\n     </h2>\n     <h3>\n      <a href="#Using_a_binding" name="Using_a_binding">\n       Using a binding\n      </a>\n     </h3>\n     <p>\n      Here we will try our new "rotateColor" binding - click on the box again to see the animation in reverse - this is a nice example of why using a property is a good idea.\n     </p>\n     <p>\n     </p>\n     <div id="app1">\n      <div class="rBox" style="transition-timing-function: ease; transition-duration: 400ms; transition-property: all; color: rgb(0, 0, 0); transform: rotate(0deg);">\n       Click me!\n      </div>\n     </div>\n     <script id="example1Code">\n      var app1 = {\n\tmodel: function() {\n\t\tthis.myProperty = m.p(0);\n\t},\n\tcontroller: function() {\n\t\tthis.model = new app1.model();\n\t},\n\tview: function(c) {\n\t\tvar o = c.model;\n\t\treturn m.e("div.rBox", { toggle: o.myProperty, rotateColor: o.myProperty }, "Click me!");\n\t}\n};\n//initialize\nm.module(document.getElementById(\'app1\'), app1);\n     </script>\n     <p>\n     </p>\n     <p>\n     </p>\n     <div data-syntaxify="#example1Code" data-syntaxify-language="javascript">\n      <pre class="syntaxifyCode language-javascript"><code class=" language-javascript"><span class="token keyword">var</span> app1 <span class="token operator">=</span> <span class="token punctuation">{</span>\n\tmodel<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t<span class="token keyword">this</span><span class="token punctuation">.</span>myProperty <span class="token operator">=</span> m<span class="token punctuation">.</span><span class="token function">p<span class="token punctuation">(</span></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span><span class="token punctuation">,</span>\n\tcontroller<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t<span class="token keyword">this</span><span class="token punctuation">.</span>model <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">app1<span class="token punctuation">.</span>model</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span><span class="token punctuation">,</span>\n\tview<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t<span class="token keyword">var</span> o <span class="token operator">=</span> c<span class="token punctuation">.</span>model<span class="token punctuation">;</span>\n\t\t<span class="token keyword">return</span> m<span class="token punctuation">.</span><span class="token function">e<span class="token punctuation">(</span></span><span class="token string">"div.rBox"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> toggle<span class="token punctuation">:</span> o<span class="token punctuation">.</span>myProperty<span class="token punctuation">,</span> rotateColor<span class="token punctuation">:</span> o<span class="token punctuation">.</span>myProperty <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">"Click me!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">\n//initialize\n</span>m<span class="token punctuation">.</span><span class="token function">module<span class="token punctuation">(</span></span>document<span class="token punctuation">.</span><span class="token function">getElementById<span class="token punctuation">(</span></span><span class="token string">\'app1\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> app1<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n     </div>\n     <p>\n     </p>\n     <h3>\n      <a href="#Using_a_keyframe_binding" name="Using_a_keyframe_binding">\n       Using a keyframe binding\n      </a>\n     </h3>\n     <p>\n      Here we will create a custom keyframe binding - this example\n      <a href="css/swingacat.css" target="_blank">\n       uses a little CSS\n      </a>\n      as well.\n      <br/>\n      <br/>\n      Click the cat.\n      <br/>\n      Go on, you know you want to...\n     </p>\n     <p>\n     </p>\n     <div id="app2">\n      <div class="catBox">\n       <div class="catBoxFace1">\n       </div>\n       <div class="catBoxFace2">\n       </div>\n      </div>\n     </div>\n     <script id="example2Code">\n      //\tJust enough room to...\nm.addKFAnimation("swingACat", {\n\t\'0%\': { rotatex: "0", rotatey: "0" },\n\t\'100%\': { rotatex: "360deg", rotatey: "360deg" }\n});\n\nvar app2 = {\n\tcontroller: function() {},\n\tview: function(c) {\n\t\treturn [\n\t\t\tm.e("div.catBox", {\n\t\t\t\tonclick: m.triggerKF(\'swingACat\', { duration: 5000 })\n\t\t\t}, [\n\t\t\t\tm.e("div.catBoxFace1"), m.e("div.catBoxFace2")\n\t\t\t])\n\t\t];\n\t}\n};\n\n//initialize\nm.module(document.getElementById(\'app2\'), app2);\n     </script>\n     <p>\n     </p>\n     <p>\n     </p>\n     <div data-syntaxify="#example2Code" data-syntaxify-language="javascript">\n      <pre class="syntaxifyCode language-javascript"><code class=" language-javascript"><span class="token comment" spellcheck="true">//\tJust enough room to...\n</span>m<span class="token punctuation">.</span><span class="token function">addKFAnimation<span class="token punctuation">(</span></span><span class="token string">"swingACat"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n\t<span class="token string">\'0%\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span> rotatex<span class="token punctuation">:</span> <span class="token string">"0"</span><span class="token punctuation">,</span> rotatey<span class="token punctuation">:</span> <span class="token string">"0"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t<span class="token string">\'100%\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span> rotatex<span class="token punctuation">:</span> <span class="token string">"360deg"</span><span class="token punctuation">,</span> rotatey<span class="token punctuation">:</span> <span class="token string">"360deg"</span> <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">var</span> app2 <span class="token operator">=</span> <span class="token punctuation">{</span>\n\tcontroller<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n\tview<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t<span class="token keyword">return</span> <span class="token punctuation">[</span>\n\t\t\tm<span class="token punctuation">.</span><span class="token function">e<span class="token punctuation">(</span></span><span class="token string">"div.catBox"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n\t\t\t\tonclick<span class="token punctuation">:</span> m<span class="token punctuation">.</span><span class="token function">triggerKF<span class="token punctuation">(</span></span><span class="token string">\'swingACat\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> duration<span class="token punctuation">:</span> <span class="token number">5000</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\t\t\t<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>\n\t\t\t\tm<span class="token punctuation">.</span><span class="token function">e<span class="token punctuation">(</span></span><span class="token string">"div.catBoxFace1"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> m<span class="token punctuation">.</span><span class="token function">e<span class="token punctuation">(</span></span><span class="token string">"div.catBoxFace2"</span><span class="token punctuation">)</span>\n\t\t\t<span class="token punctuation">]</span><span class="token punctuation">)</span>\n\t\t<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token comment" spellcheck="true">\n//initialize\n</span>m<span class="token punctuation">.</span><span class="token function">module<span class="token punctuation">(</span></span>document<span class="token punctuation">.</span><span class="token function">getElementById<span class="token punctuation">(</span></span><span class="token string">\'app2\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> app2<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n     </div>\n     <p>\n     </p>\n     <h3>\n      <a href="#Extended_examples" name="Extended_examples">\n       Extended examples\n      </a>\n     </h3>\n     <p>\n      Hover over each box to see the animation in action\n     </p>\n     <div id="testapp">\n      <h2>\n       Single animation\n      </h2>\n      <div class="exampleBox">\n       <h3>\n        Opacity\n       </h3>\n       <div class="eBox" style="transition-timing-function: ease; transition-duration: 400ms; transition-property: all;">\n       </div>\n      </div>\n      <div class="exampleBox">\n       <h3>\n        Scale\n       </h3>\n       <div class="eBox" style="transition-timing-function: ease; transition-duration: 400ms; transition-property: all;">\n       </div>\n      </div>\n      <div class="exampleBox">\n       <h3>\n        Rotate\n       </h3>\n       <div class="eBox" style="transition-timing-function: ease; transition-duration: 400ms; transition-property: all;">\n       </div>\n      </div>\n      <div class="exampleBox">\n       <h3>\n        Skew\n       </h3>\n       <div class="eBox" style="transition-timing-function: ease; transition-duration: 400ms; transition-property: all; transform: skew(0deg, 0deg);">\n       </div>\n      </div>\n      <div class="exampleBox">\n       <h3>\n        translateX\n       </h3>\n       <div class="eBox" style="transition-timing-function: ease; transition-duration: 400ms; transition-property: all;">\n       </div>\n      </div>\n      <h2>\n       Multiple animation\n      </h2>\n      <div class="exampleBox">\n       <h3>\n        Opacity scale\n       </h3>\n       <div class="eBox" style="transition-timing-function: ease; transition-duration: 400ms; transition-property: all;">\n       </div>\n      </div>\n      <div class="exampleBox">\n       <h3>\n        Opacity up\n       </h3>\n       <div class="eBox" style="transition-timing-function: ease; transition-duration: 400ms; transition-property: all; transform: translateY(0px); opacity: 1;">\n       </div>\n      </div>\n      <div class="exampleBox">\n       <h3>\n        Opacity down\n       </h3>\n       <div class="eBox" style="transition-timing-function: ease; transition-duration: 400ms; transition-property: all; transform: translateY(0px); opacity: 1;">\n       </div>\n      </div>\n      <h2>\n       Custom animation\n      </h2>\n      <div class="exampleBox">\n       <h3>\n        Material menu\n       </h3>\n       <a href="http://www.google.com/design/spec/animation/delightful-details.html" target="_blank">\n        Based on this\n       </a>\n       <div class="boxSurround">\n        <div class="eBox icon" style="transition-timing-function: ease; transition-duration: 400ms; transition-property: all; opacity: 1; transform: rotate(-180deg);">\n        </div>\n        <div class="eBox alt1 icon" style="transition-timing-function: ease; transition-duration: 400ms; transition-property: all; opacity: 0; transform: rotate(0deg);">\n        </div>\n       </div>\n      </div>\n     </div>\n     <h2>\n      <a href="#Source" name="Source">\n       Source\n      </a>\n     </h2>\n     <a href="https://raw.githack.com/jsguy/mithril.animate/master/examples/all.example.js" target="_blank">\n      Click here for the source for these examples\n     </a>\n    </div>\n   </div>\n   <div class="cf box even">\n    <div class="content">\n     <h2>\n      <a href="#FAQ" name="FAQ">\n       FAQ\n      </a>\n     </h2>\n     <div class="faqItem">\n      <h3>\n       Browser support\n      </h3>\n      <p>\n       The animations work in all\n       <a href="http://caniuse.com/#feat=transforms2d" target="_blank">\n        modern browsers\n       </a>\n       .\n\t\t\t\t\tMithril.animate degrades older browsers by not applying transforms (rotate, scale, etc) while still applying standard CSS (opacity, margin, etc) without any animation.\n      </p>\n      <p class="smallNote">\n       Note, if you need to support older browsers, you can add\n       <a href="http://jquery.com">\n        jQuery\n       </a>\n       and we will use jquery.animate where possible, ie: opacity, margin, padding, etc...\n      </p>\n     </div>\n    </div>\n   </div>\n   <script>\n    //initialize\n\t\tm.module(document.getElementById(\'testapp\'), allExample);\n   </script>\n  </div>\n  <footer>\n   <div id="footerContainer">\n    Copyright \xc2\xa9 2014\n    <a href="http://jsguy.com">\n     jsguy\n    </a>\n   </div>\n  </footer>\n  <!-- Just using jQuery for syntax highlighting - not needed for mithril.animate! -->\n  <link href="../libs/jquery.syntaxify/prism.min.css" rel="stylesheet" type="text/css"/>\n  <script src="../libs/jquery-1.9.1.js">\n  </script>\n  <script src="../libs/jquery.syntaxify/prism.min.js" type="text/javascript">\n  </script>\n  <script src="../libs/jquery.syntaxify/jquery.syntaxify.js">\n  </script>\n  <iframe id="_hjRemoteVarsFrame" name="_hjRemoteVarsFrame" src="https://vars.hotjar.com/rcj-99d43ead6bdf30da8ed5ffcb4f17100c.html" style="display: none !important; width: 1px !important; height: 1px !important; opacity: 0 !important; pointer-events: none !important;" title="_hjRemoteVarsFrame">\n  </iframe>\n  <div id="ads">\n  </div>\n </body>\n</html>'