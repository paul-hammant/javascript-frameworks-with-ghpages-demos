b'<html>\n <head>\n  <title>\n   Backbone Simple FormView Example\n  </title>\n  <link href="http://netdna.bootstrapcdn.com/twitter-bootstrap/2.3.2/css/bootstrap-combined.min.css" rel="stylesheet"/>\n  <style>\n   #wrapper { margin: 10%; }\n\t\t.form-field-row { float: left; width: 50%; min-width: 430px; }\n\t\t.clear { clear: both; }\n\t\tinput[type="text"] { height: 30px; }\n\t\t.output { display: inline-block; }\n  </style>\n </head>\n <body style="">\n  <div id="wrapper">\n   <form class="form-horizontal">\n    <div data-fields="">\n     <div class="form-field-firstName control-group form-field" data-field="">\n      <label class="control-label" for="field-input-firstName">\n       First Name\n      </label>\n      <div class="controls" data-input="">\n       <input id="field-input-firstName" name="field-input-firstName" type="text"/>\n      </div>\n      <div class="controls">\n       <div class="text-error" data-error="">\n       </div>\n      </div>\n     </div>\n     <div class="form-field-lastName control-group form-field" data-field="">\n      <label class="control-label" for="field-input-lastName">\n       Last Name\n      </label>\n      <div class="controls" data-input="">\n       <input id="field-input-lastName" name="field-input-lastName" type="text"/>\n      </div>\n      <div class="controls">\n       <div class="text-error" data-error="">\n       </div>\n      </div>\n     </div>\n     <div class="form-field-bio control-group form-field" data-field="">\n      <label class="control-label" for="field-input-bio">\n       Biography\n      </label>\n      <div class="controls" data-input="">\n       <textarea id="field-input-bio" name="field-input-bio" placeholder="Type here to add a bio."></textarea>\n      </div>\n      <div class="controls">\n       <div class="text-error" data-error="">\n       </div>\n      </div>\n     </div>\n     <div class="form-field-gender control-group form-field" data-field="">\n      <label class="control-label" for="field-input-gender">\n       Gender\n      </label>\n      <div class="controls" data-input="">\n       <label class="radio">\n        <input id="field-input-gender-0" name="field-input-gender" type="radio" value="M"/>\n        Male\n       </label>\n       <label class="radio">\n        <input id="field-input-gender-1" name="field-input-gender" type="radio" value="F"/>\n        Female\n       </label>\n      </div>\n      <div class="controls">\n       <div class="text-error" data-error="">\n       </div>\n      </div>\n     </div>\n     <div class="form-field-status control-group form-field" data-field="">\n      <label class="control-label" for="field-input-status">\n       User Status\n      </label>\n      <div class="controls" data-input="">\n       <select id="field-input-status" name="field-input-status">\n        <option value="">\n         Select status...\n        </option>\n        <option value="REG">\n         Registered\n        </option>\n        <option value="PEN">\n         Pending\n        </option>\n        <option value="SUS">\n         Suspended\n        </option>\n        <option value="CLO">\n         Closed\n        </option>\n       </select>\n      </div>\n      <div class="controls">\n       <div class="text-error" data-error="">\n       </div>\n      </div>\n     </div>\n    </div>\n   </form>\n  </div>\n  <script src="http://cdnjs.cloudflare.com/ajax/libs/jquery/2.0.3/jquery.min.js" type="text/javascript">\n  </script>\n  <script src="http://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.5.1/underscore-min.js" type="text/javascript">\n  </script>\n  <script src="http://cdnjs.cloudflare.com/ajax/libs/backbone.js/1.1.0/backbone-min.js" type="text/javascript">\n  </script>\n  <!-- load BaseView -->\n  <script src="../backbone-baseview.js" type="text/javascript">\n  </script>\n  <!-- load FormView -->\n  <script src="../backbone-formview.js" type="text/javascript">\n  </script>\n  <script id="form-template" type="text/template">\n   <div data-fields=""></div>\n\t\t<div class="form-actions clear">\n\t\t\t<button class="btn submit">Save changes</button>\n\t\t\t<div class="output"></div>\n\t\t</div>\n  </script>\n  <script type="text/javascript">\n   // First create a test model\n\t\tvar person = new Backbone.Model({\n\t\t\t\tfirstName: \'John\',\n\t\t\t\tlastName: \'Doe\',\n\t\t\t\tstatus: \'REG\'\n\t\t\t});\n\t\t// Create a backbone form. For many\n\t\t// cases, extending the FormView isn\'t\n\t\t// nessecary and just passing options \n\t\t// works fine.\n\t\tvar form = new Backbone.FormView({\n\t\t\tmodel: person,\n\t\t\ttemplateSrc: $(\'#form-template\').html(),\n\t\t\t// schema is used to describe the fields\n\t\t\tschema: {\n\t\t\t\t// first name is a simple text input with\n\t\t\t\t// a label \'First Name\'. It will automatically\n\t\t\t\t// be assigned the model attribute firstName\n\t\t\t\t// (which we could override with fieldName option)\n\t\t\t\tfirstName: {\n\t\t\t\t\ttype: \'Text\',\n\t\t\t\t\toptions: { label: \'First Name\' }\n\t\t\t\t},\n\t\t\t\tlastName: {\n\t\t\t\t\ttype: \'Text\',\n\t\t\t\t\toptions : { label: \'Last Name\' }\n\t\t\t\t},\n\t\t\t\t// bio is a textarea, which is a text input\n\t\t\t\t// with the elementType option \'textarea\'\n\t\t\t\tbio: {\n\t\t\t\t\ttype: \'Text\',\n\t\t\t\t\toptions: {\n\t\t\t\t\t\telementType: \'textarea\',\n\t\t\t\t\t\tlabel: \'Biography\',\n\t\t\t\t\t\tplaceholder: \'Type here to add a bio.\'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t// A list of radio buttons, created from the\n\t\t\t\t// possibleVals option. The key is what get\'s\n\t\t\t\t// set on the model, and the value is what\n\t\t\t\t// is displayed to the user.\n\t\t\t\tgender: {\n\t\t\t\t\ttype: \'RadioList\',\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tlabel: \'Gender\',\n\t\t\t\t\t\tpossibleVals: {\n\t\t\t\t\t\t\t\'M\' : \'Male\',\n\t\t\t\t\t\t\t\'F\' : \'Female\'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t// Select type works like RadioList,\n\t\t\t\t// but obviously uses a select element\n\t\t\t\t// instead of radio buttons, and has some\n\t\t\t\t// different options\n\t\t\t\tstatus: {\n\t\t\t\t\ttype: \'Select\',\n\t\t\t\t\toptions: { \n\t\t\t\t\t\tlabel: \'User Status\',\n\t\t\t\t\t\tplaceholder: \'Select status...\',\n\t\t\t\t\t\tpossibleVals: {\n\t\t\t\t\t\t\t\'REG\' : \'Registered\',\n\t\t\t\t\t\t\t\'PEN\' : \'Pending\',\n\t\t\t\t\t\t\t\'SUS\' : \'Suspended\',\n\t\t\t\t\t\t\t\'CLO\' : \'Closed\'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tevents: {\n\t\t\t\t// The FormView does not presume how to handle submissions,\n\t\t\t\t// That\'s up to the user to set up a template and handle click events.\n\t\t\t\t// In a real world situation, this could be used to save the model and\n\t\t\t\t// display messages to the user about the save status.\n\t\t\t\t\'click .submit\' : function (e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tvar output = \'You submitted a model. Here it is, stringified : \' + JSON.stringify(this.model.toJSON());\n\t\t\t\t\tthis.$(\'.output\').html(output);\n\t\t\t\t}\n\t\t\t}\n\t\t}).render();\n\t\t$(\'#wrapper\').html(form.$el);\n  </script>\n </body>\n</html>'