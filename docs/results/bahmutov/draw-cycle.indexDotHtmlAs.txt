b'<!DOCTYPE html>\n<html xmlns="http://www.w3.org/1999/xhtml">\n <head>\n  <title>\n   Draw Cycle\n  </title>\n  <style>\n   body {\n    margin: none;\n    padding: none;\n    background-color: white;\n  }\n  #app {\n    margin: 0 50px;\n    width: 300px;\n    height: 300px;\n    border: 1px solid black;\n    transform: translateY(60px);\n  }\n  svg {\n    z-index: -1;\n  }\n  #controls {\n    width: 250px;\n    margin: 0 auto;\n  }\n  #counter {\n    margin-left: 200px;\n  }\n  button {\n    padding: 20px;\n    font-size: large;\n    margin: 20px;\n    display: block;\n  }\n  #info {\n    position: relative;\n    top: 350px;\n  }\n  </style>\n  <script src="node_modules/es6-promise/dist/es6-promise.js">\n  </script>\n  <script src="node_modules/rx/dist/rx.all.js">\n  </script>\n  <script src="node_modules/@cycle/core/dist/cycle.js">\n  </script>\n  <script src="node_modules/@cycle/dom/dist/cycle-dom.js">\n  </script>\n  <script src="https://cdnjs.cloudflare.com/ajax/libs/raphael/2.1.4/raphael-min.js">\n  </script>\n  <script src="connection.js">\n  </script>\n  <script src="vdom-to-html.js">\n  </script>\n </head>\n <body>\n  <a class="github-corner" href="http://github.com/bahmutov/draw-cycle">\n   <svg height="80" style="fill:#70B7FD; color:#fff; position: absolute; top: 0; z-index: 1; border: 0; right: 0;" viewbox="0 0 250 250" width="80" xmlns="http://www.w3.org/2000/svg">\n    <path d="M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z">\n    </path>\n    <path class="octo-arm" d="M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2" fill="currentColor" style="transform-origin: 130px 106px;">\n    </path>\n    <path class="octo-body" d="M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z" fill="currentColor">\n    </path>\n   </svg>\n  </a>\n  <style>\n   .github-corner:hover .octo-arm{animation:octocat-wave 560ms ease-in-out}@keyframes octocat-wave{0%,100%{transform:rotate(0)}20%,60%{transform:rotate(-25deg)}40%,80%{transform:rotate(10deg)}}@media (max-width:500px){.github-corner:hover .octo-arm{animation:none}.github-corner .octo-arm{animation:octocat-wave 560ms ease-in-out}}\n  </style>\n  <h2>\n   Draw Cycle\n  </h2>\n  <p>\n   Simple\n   <a href="http://cycle.js.org/">\n    Cycle.js\n   </a>\n   program visualized.\n  Click on "Increment" or "Decrement" buttons.\n  </p>\n  <div id="app">\n   <div>\n    <button id="minus">\n     Decrement\n    </button>\n    <button id="plus">\n     Increment\n    </button>\n    <p id="counter">\n     Counter: 0\n    </p>\n   </div>\n  </div>\n  <div id="info">\n   <p>\n    The example is taken from "Explicit dataflow" section of the website, and\n    copied below\n   </p>\n   <p>\n    <code>\n    </code>\n   </p>\n   <pre><code>function main(sources) {\n    const decrement$ = sources.DOM\n      .select(\'.decrement\').events(\'click\').map(ev =&gt; -1);\n\n    const increment$ = sources.DOM\n      .select(\'.increment\').events(\'click\').map(ev =&gt; +1);\n\n    const action$ = Observable.merge(decrement$, increment$);\n    const count$ = action$.startWith(0).scan((x,y) =&gt; x+y);\n\n    const vtree$ = count$.map(count =&gt;\n      div([\n        button(\'.decrement\', \'Decrement\'),\n        button(\'.increment\', \'Increment\'),\n        p(\'Counter: \' + count)\n      ])\n    );\n    return { DOM: vtree$ };\n  }</code></pre>\n   <p>\n   </p>\n  </div>\n  <script>\n   function main(sources) {\n      // intent\n      const decrement$ = sources.DOM\n        .select(\'#minus\').events(\'click\')\n        .flatMap(function (ev) {\n          return Rx.Observable.fromPromise(\n            drawing.moveEvent(drawing.c1, \'event\', ev)\n          )\n        })\n        .map(function (ev) { return -1 })\n        .flatMap(function (x) {\n          return Rx.Observable.fromPromise(\n            drawing.moveEvent(drawing.c3, x, x)\n          )\n        });\n\n      const increment$ = sources.DOM\n        .select(\'#plus\').events(\'click\')\n        .flatMap(function (ev) {\n          return Rx.Observable.fromPromise(\n            drawing.moveEvent(drawing.c2, \'event\', ev)\n          )\n        })\n        .map(function (ev) { return +1 })\n        .flatMap(function (x) {\n          return Rx.Observable.fromPromise(\n            drawing.moveEvent(drawing.c4, x, x)\n          )\n        });\n\n      const action$ = Rx.Observable.merge(decrement$, increment$)\n        .flatMap(function (x) {\n          return Rx.Observable.fromPromise(\n            drawing.moveEvent(drawing.c5, x, x)\n          )\n        });\n\n      // model\n      const count$ = action$.startWith(0)\n        .scan(function (x,y) { return x+y })\n        .tap(function (x) { drawing.setValue(x) })\n        .flatMap(function (x) {\n          return Rx.Observable.fromPromise(\n            drawing.moveEvent(drawing.c6, x, x)\n          )\n        });\n\n      // view\n      const vtree$ = count$.map(function (count) {\n        return CycleDOM.div([\n          CycleDOM.button(\'#minus\', \'Decrement\'),\n          CycleDOM.button(\'#plus\', \'Increment\'),\n          CycleDOM.p(\'#counter\', \'Counter: \' + count)\n        ])\n      }).flatMap(function (x) {\n        return Rx.Observable.fromPromise(\n          drawing.moveEvent(drawing.c7, \'VDom\', x, vdomToHtml(x))\n        )\n      });\n      return { DOM: vtree$ };\n    }\n\n    Cycle.run(main, { DOM: CycleDOM.makeDOMDriver(\'#app\') });\n\n    var drawing = {\n      setValue: function () {},\n      moveEvent: function (_, label, x) {\n        return Promise.resolve(x)\n      }\n    }\n\n    setTimeout(function () {\n      // drawing code\n      var w = window,\n      d = document,\n      e = d.documentElement,\n      g = d.getElementsByTagName(\'body\')[0],\n      x = w.innerWidth || e.clientWidth || g.clientWidth,\n      y = w.innerHeight|| e.clientHeight|| g.clientHeight;\n\n      if (y &lt; 700) {\n        y = 700\n      }\n\n      // Creates canvas 320 \xc3\x97 200 at 10, 50\n      var paper = Raphael(0, 0, x, y);\n\n      function moveEvent(conn, labelText, value, bottomText) {\n        var n = conn.line.getTotalLength()\n        var pos = conn.line.getPointAtLength(0)\n        var radius = typeof labelText === \'string\' ? 20 : 20\n        var circle = paper.circle(pos.x, pos.y, radius);\n        circle.attr({\n          cx: pos.x,\n          cy: pos.y,\n          fill: \'#fff\',\n          stroke: \'#000\'\n        })\n\n        var label = paper.text()\n        label.attr({\n          text: labelText,\n          \'font-size\': \'12px\'\n        })\n\n        var bottomLabel;\n        if (bottomText) {\n          bottomLabel = paper.text()\n          bottomLabel.attr({\n            text: bottomText,\n            \'font-size\': \'12px\',\n            \'font-family\': \'monospace\',\n            \'white-space\': \'pre\',\n            \'text-anchor\': \'end\'\n          })\n        }\n\n        var counter = 0;\n        return new Promise(function (resolve) {\n          var interval;\n          function animate() {\n            if (n &lt; counter) {\n              clearInterval(interval);\n              circle.remove();\n              label.remove();\n              if (bottomLabel) {\n                bottomLabel.remove()\n              }\n              resolve(value);\n              return;\n            }\n            var pos = conn.line.getPointAtLength(counter);\n            circle.attr({\n              cx: pos.x,\n              cy: pos.y\n            })\n            label.attr({\n              x: pos.x,\n              y: pos.y\n            })\n            if (bottomLabel) {\n              bottomLabel.attr({\n                x: pos.x - 50,\n                y: pos.y + 60\n              })\n            }\n            counter += 1;\n          }\n          interval = setInterval(animate, 10);\n        })\n      }\n      drawing.moveEvent = moveEvent;\n\n      var decClicks = paper.rect(400, 150, 100, 50)\n      decClicks.attr(\'fill\', \'#ffe\')\n      decClicks.attr(\'stroke\', \'#f00\')\n      var decClicksText = paper.text(450, 175)\n      decClicksText.attr({ text: \'map\\nev =&gt; -1\', \'font-size\': \'12px\' })\n      var decrementsText = paper.text(550, 160)\n      decrementsText.attr({ text: \'decrements$\', \'font-size\': \'15px\' })\n\n      var incClicks = paper.rect(400, 250, 100, 50)\n      incClicks.attr(\'fill\', \'#ffe\')\n      incClicks.attr(\'stroke\', \'#f00\')\n      var incClicksText = paper.text(450, 275)\n      incClicksText.attr({ text: \'map\\nev =&gt; +1\', \'font-size\': \'15px\' })\n      var incrementsText = paper.text(550, 285)\n      incrementsText.attr({ text: \'increments$\', \'font-size\': \'15px\' })\n\n      var actions = paper.rect(600, 200, 100, 50)\n      actions.attr(\'fill\', \'#ffe\')\n      actions.attr(\'stroke\', \'#f00\')\n      var actionsText = paper.text(650, 225)\n      actionsText.attr({ text: \'merge\', \'font-size\': \'15px\' })\n      var actions$Text = paper.text(690, 260)\n      actions$Text.attr({ text: \'actions$\', \'font-size\': \'15px\' })\n\n      // paper.connection(circle, circle2, \'#00f\')\n      // animating movement along path is based on\n      // http://jsfiddle.net/gyeSf/17/\n      drawing.c1 = paper.connection(document.querySelector(\'#minus\'), decClicks, \'#333\')\n      drawing.c2 = paper.connection(document.querySelector(\'#plus\'), incClicks, \'#333\')\n\n      drawing.c3 = paper.connection(decClicks, actions, \'#333\')\n      drawing.c4 = paper.connection(incClicks, actions, \'#333\')\n\n      // model\n      var scan = paper.rect(550, 400, 100, 50)\n      scan.attr(\'fill\', \'#ffe\')\n      scan.attr(\'stroke\', \'#0f0\')\n      var scanText = paper.text(600, 425)\n      scanText.attr({ text: \'scan\\n(x,y) =&gt; x+y\', \'font-size\': \'15px\' })\n\n      var valueText = paper.text(680, 420)\n      valueText.attr({ text: \'value\\n0\', \'font-size\': \'15px\' })\n      drawing.setValue = function (value) {\n        valueText.attr(\'text\', \'value\\n\' + value)\n      }\n\n      var count$Text = paper.text(520, 410)\n      count$Text.attr({ text: \'count$\', \'font-size\': \'15px\' })\n\n      drawing.c5 = paper.connection(actions, scan, \'#333\')\n\n      // view\n      var vtree = paper.rect(360, 550, 340, 150)\n      vtree.attr(\'fill\', \'#ffe\')\n      vtree.attr(\'stroke\', \'#00f\')\n      var vtreeText = paper.text(370, 625)\n      vtreeText.attr({\n        text: \'map\\n\' +\n          \'count =&gt; div([\\n\' +\n          \'  button(\\\'#minus\\\', \\\'Decrement\\\'),\\n\' +\n          \'  button(\\\'#plus\\\', \\\'Increment\\\'),\\n\' +\n          \'  p(\\\'#counter\\\', \\\'Counter: \\\' + count)\\n\' +\n          \'])\',\n        \'font-size\': \'15px\',\n        \'font-family\': \'monospace\',\n        \'white-space\': \'pre\',\n        \'text-anchor\': \'start\'\n      })\n      var vtree$Text = paper.text(330, 635)\n      vtree$Text.attr({ text: \'vtree$\', \'font-size\': \'15px\' })\n\n      drawing.c6 = paper.connection(scan, vtree, \'#333\')\n      drawing.c7 = paper.connection(vtree, document.querySelector(\'#app\'), \'#333\')\n\n      // Intent / Model / View blocks\n      var intentBlock = paper.rect(380, 120, 350, 200)\n      intentBlock.attr({\n        stroke: \'#f00\'\n      });\n      var intentText = paper.text(700, 130)\n      intentText.attr({\n        text: \'Intent\',\n        \'font-size\': \'15px\',\n        fill: \'#f00\',\n        stroke: \'none\'\n      })\n\n      var modelBlock = paper.rect(380, 330, 350, 170)\n      modelBlock.attr({\n        stroke: \'#0f0\'\n      });\n      var modelText = paper.text(700, 340)\n      modelText.attr({\n        text: \'Model\',\n        \'font-size\': \'15px\',\n        fill: \'#0f0\',\n        stroke: \'none\'\n      })\n\n      var viewText = paper.text(670, 560)\n      viewText.attr({\n        text: \'View\',\n        \'font-size\': \'15px\',\n        fill: \'#00f\',\n        stroke: \'none\'\n      })\n\n    }, 1000);\n  </script>\n  <svg height="715" style="overflow: hidden; position: absolute; left: 0px; top: 0px;" version="1.1" width="1050" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n   <desc style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n    Created with Rapha\xc3\xabl 2.1.2\n   </desc>\n   <defs style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n   </defs>\n   <rect fill="#ffffee" height="50" rx="0" ry="0" stroke="#ff0000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" width="100" x="400" y="150">\n   </rect>\n   <text fill="#000000" font-family=\'"Arial"\' font-size="12px" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 12px;" text-anchor="middle" x="450" y="175">\n    <tspan dy="-3.1953125" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n     map\n    </tspan>\n    <tspan dy="14.399999999999999" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" x="450">\n     ev =&gt; -1\n    </tspan>\n   </text>\n   <text fill="#000000" font-family=\'"Arial"\' font-size="15px" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 15px;" text-anchor="middle" x="550" y="160">\n    <tspan dy="5.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n     decrements$\n    </tspan>\n   </text>\n   <rect fill="#ffffee" height="50" rx="0" ry="0" stroke="#ff0000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" width="100" x="400" y="250">\n   </rect>\n   <text fill="#000000" font-family=\'"Arial"\' font-size="15px" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 15px;" text-anchor="middle" x="450" y="275">\n    <tspan dy="-3.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n     map\n    </tspan>\n    <tspan dy="18" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" x="450">\n     ev =&gt; +1\n    </tspan>\n   </text>\n   <text fill="#000000" font-family=\'"Arial"\' font-size="15px" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 15px;" text-anchor="middle" x="550" y="285">\n    <tspan dy="5.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n     increments$\n    </tspan>\n   </text>\n   <rect fill="#ffffee" height="50" rx="0" ry="0" stroke="#ff0000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" width="100" x="600" y="200">\n   </rect>\n   <text fill="#000000" font-family=\'"Arial"\' font-size="15px" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 15px;" text-anchor="middle" x="650" y="225">\n    <tspan dy="5.421875" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n     merge\n    </tspan>\n   </text>\n   <text fill="#000000" font-family=\'"Arial"\' font-size="15px" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 15px;" text-anchor="middle" x="690" y="260">\n    <tspan dy="5.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n     actions$\n    </tspan>\n   </text>\n   <path d="M217.563,213.313C308.281,213.313,308.281,175,399,175" fill="none" stroke="#333333" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n   </path>\n   <path d="M209.531,294.313C304.266,294.313,304.266,275,399,275" fill="none" stroke="#333333" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n   </path>\n   <path d="M501,175C550,175,550,225,599,225" fill="none" stroke="#333333" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n   </path>\n   <path d="M501,275C550,275,550,225,599,225" fill="none" stroke="#333333" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n   </path>\n   <rect fill="#ffffee" height="50" rx="0" ry="0" stroke="#00ff00" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" width="100" x="550" y="400">\n   </rect>\n   <text fill="#000000" font-family=\'"Arial"\' font-size="15px" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 15px;" text-anchor="middle" x="600" y="425">\n    <tspan dy="-3.578125" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n     scan\n    </tspan>\n    <tspan dy="18" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" x="600">\n     (x,y) =&gt; x+y\n    </tspan>\n   </text>\n   <text fill="#000000" font-family=\'"Arial"\' font-size="15px" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 15px;" text-anchor="middle" x="680" y="420">\n    <tspan dy="-3.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n     value\n    </tspan>\n    <tspan dy="18" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" x="680">\n     0\n    </tspan>\n   </text>\n   <text fill="#000000" font-family=\'"Arial"\' font-size="15px" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 15px;" text-anchor="middle" x="520" y="410">\n    <tspan dy="5.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n     count$\n    </tspan>\n   </text>\n   <path d="M650,251C650,325,600,325,600,399" fill="none" stroke="#333333" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n   </path>\n   <rect fill="#ffffee" height="150" rx="0" ry="0" stroke="#0000ff" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" width="340" x="360" y="550">\n   </rect>\n   <text fill="#000000" font-family="monospace" font-size="15px" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: start; font-family: monospace; font-size: 15px;" text-anchor="start" x="370" y="625">\n    <tspan dy="-40.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n     map\n    </tspan>\n    <tspan dy="18" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" x="370">\n     count =&gt; div([\n    </tspan>\n    <tspan dy="18" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" x="370">\n     button(\'#minus\', \'Decrement\'),\n    </tspan>\n    <tspan dy="18" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" x="370">\n     button(\'#plus\', \'Increment\'),\n    </tspan>\n    <tspan dy="18" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" x="370">\n     p(\'#counter\', \'Counter: \' + count)\n    </tspan>\n    <tspan dy="18" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" x="370">\n     ])\n    </tspan>\n   </text>\n   <text fill="#000000" font-family=\'"Arial"\' font-size="15px" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 15px;" text-anchor="middle" x="330" y="635">\n    <tspan dy="5.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n     vtree$\n    </tspan>\n   </text>\n   <path d="M549,425C539,425,530,487,530,549" fill="none" stroke="#333333" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n   </path>\n   <path d="M359,625C284,625,209,544.906,209,464.813" fill="none" stroke="#333333" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n   </path>\n   <rect fill="none" height="200" rx="0" ry="0" stroke="#ff0000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" width="350" x="380" y="120">\n   </rect>\n   <text fill="#ff0000" font-family=\'"Arial"\' font-size="15px" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 15px;" text-anchor="middle" x="700" y="130">\n    <tspan dy="5.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n     Intent\n    </tspan>\n   </text>\n   <rect fill="none" height="170" rx="0" ry="0" stroke="#00ff00" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" width="350" x="380" y="330">\n   </rect>\n   <text fill="#00ff00" font-family=\'"Arial"\' font-size="15px" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 15px;" text-anchor="middle" x="700" y="340">\n    <tspan dy="5.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n     Model\n    </tspan>\n   </text>\n   <text fill="#0000ff" font-family=\'"Arial"\' font-size="15px" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 15px;" text-anchor="middle" x="670" y="560">\n    <tspan dy="5.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n     View\n    </tspan>\n   </text>\n  </svg>\n </body>\n</html>'b'<!DOCTYPE html>\n<html xmlns="http://www.w3.org/1999/xhtml">\n <head>\n  <title>\n   Draw Cycle\n  </title>\n  <style>\n   body {\n    margin: none;\n    padding: none;\n    background-color: white;\n  }\n  #app {\n    margin: 0 50px;\n    width: 300px;\n    height: 300px;\n    border: 1px solid black;\n    transform: translateY(60px);\n  }\n  svg {\n    z-index: -1;\n  }\n  #controls {\n    width: 250px;\n    margin: 0 auto;\n  }\n  #counter {\n    margin-left: 200px;\n  }\n  button {\n    padding: 20px;\n    font-size: large;\n    margin: 20px;\n    display: block;\n  }\n  #info {\n    position: relative;\n    top: 350px;\n  }\n  </style>\n  <script src="node_modules/es6-promise/dist/es6-promise.js">\n  </script>\n  <script src="node_modules/rx/dist/rx.all.js">\n  </script>\n  <script src="node_modules/@cycle/core/dist/cycle.js">\n  </script>\n  <script src="node_modules/@cycle/dom/dist/cycle-dom.js">\n  </script>\n  <script src="https://cdnjs.cloudflare.com/ajax/libs/raphael/2.1.4/raphael-min.js">\n  </script>\n  <script src="connection.js">\n  </script>\n  <script src="vdom-to-html.js">\n  </script>\n </head>\n <body>\n  <a class="github-corner" href="http://github.com/bahmutov/draw-cycle">\n   <svg height="80" style="fill:#70B7FD; color:#fff; position: absolute; top: 0; z-index: 1; border: 0; right: 0;" viewbox="0 0 250 250" width="80" xmlns="http://www.w3.org/2000/svg">\n    <path d="M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z">\n    </path>\n    <path class="octo-arm" d="M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2" fill="currentColor" style="transform-origin: 130px 106px;">\n    </path>\n    <path class="octo-body" d="M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z" fill="currentColor">\n    </path>\n   </svg>\n  </a>\n  <style>\n   .github-corner:hover .octo-arm{animation:octocat-wave 560ms ease-in-out}@keyframes octocat-wave{0%,100%{transform:rotate(0)}20%,60%{transform:rotate(-25deg)}40%,80%{transform:rotate(10deg)}}@media (max-width:500px){.github-corner:hover .octo-arm{animation:none}.github-corner .octo-arm{animation:octocat-wave 560ms ease-in-out}}\n  </style>\n  <h2>\n   Draw Cycle\n  </h2>\n  <p>\n   Simple\n   <a href="http://cycle.js.org/">\n    Cycle.js\n   </a>\n   program visualized.\n  Click on "Increment" or "Decrement" buttons.\n  </p>\n  <div id="app">\n   <div>\n    <button id="minus">\n     Decrement\n    </button>\n    <button id="plus">\n     Increment\n    </button>\n    <p id="counter">\n     Counter: 0\n    </p>\n   </div>\n  </div>\n  <div id="info">\n   <p>\n    The example is taken from "Explicit dataflow" section of the website, and\n    copied below\n   </p>\n   <p>\n    <code>\n    </code>\n   </p>\n   <pre><code>function main(sources) {\n    const decrement$ = sources.DOM\n      .select(\'.decrement\').events(\'click\').map(ev =&gt; -1);\n\n    const increment$ = sources.DOM\n      .select(\'.increment\').events(\'click\').map(ev =&gt; +1);\n\n    const action$ = Observable.merge(decrement$, increment$);\n    const count$ = action$.startWith(0).scan((x,y) =&gt; x+y);\n\n    const vtree$ = count$.map(count =&gt;\n      div([\n        button(\'.decrement\', \'Decrement\'),\n        button(\'.increment\', \'Increment\'),\n        p(\'Counter: \' + count)\n      ])\n    );\n    return { DOM: vtree$ };\n  }</code></pre>\n   <p>\n   </p>\n  </div>\n  <script>\n   function main(sources) {\n      // intent\n      const decrement$ = sources.DOM\n        .select(\'#minus\').events(\'click\')\n        .flatMap(function (ev) {\n          return Rx.Observable.fromPromise(\n            drawing.moveEvent(drawing.c1, \'event\', ev)\n          )\n        })\n        .map(function (ev) { return -1 })\n        .flatMap(function (x) {\n          return Rx.Observable.fromPromise(\n            drawing.moveEvent(drawing.c3, x, x)\n          )\n        });\n\n      const increment$ = sources.DOM\n        .select(\'#plus\').events(\'click\')\n        .flatMap(function (ev) {\n          return Rx.Observable.fromPromise(\n            drawing.moveEvent(drawing.c2, \'event\', ev)\n          )\n        })\n        .map(function (ev) { return +1 })\n        .flatMap(function (x) {\n          return Rx.Observable.fromPromise(\n            drawing.moveEvent(drawing.c4, x, x)\n          )\n        });\n\n      const action$ = Rx.Observable.merge(decrement$, increment$)\n        .flatMap(function (x) {\n          return Rx.Observable.fromPromise(\n            drawing.moveEvent(drawing.c5, x, x)\n          )\n        });\n\n      // model\n      const count$ = action$.startWith(0)\n        .scan(function (x,y) { return x+y })\n        .tap(function (x) { drawing.setValue(x) })\n        .flatMap(function (x) {\n          return Rx.Observable.fromPromise(\n            drawing.moveEvent(drawing.c6, x, x)\n          )\n        });\n\n      // view\n      const vtree$ = count$.map(function (count) {\n        return CycleDOM.div([\n          CycleDOM.button(\'#minus\', \'Decrement\'),\n          CycleDOM.button(\'#plus\', \'Increment\'),\n          CycleDOM.p(\'#counter\', \'Counter: \' + count)\n        ])\n      }).flatMap(function (x) {\n        return Rx.Observable.fromPromise(\n          drawing.moveEvent(drawing.c7, \'VDom\', x, vdomToHtml(x))\n        )\n      });\n      return { DOM: vtree$ };\n    }\n\n    Cycle.run(main, { DOM: CycleDOM.makeDOMDriver(\'#app\') });\n\n    var drawing = {\n      setValue: function () {},\n      moveEvent: function (_, label, x) {\n        return Promise.resolve(x)\n      }\n    }\n\n    setTimeout(function () {\n      // drawing code\n      var w = window,\n      d = document,\n      e = d.documentElement,\n      g = d.getElementsByTagName(\'body\')[0],\n      x = w.innerWidth || e.clientWidth || g.clientWidth,\n      y = w.innerHeight|| e.clientHeight|| g.clientHeight;\n\n      if (y &lt; 700) {\n        y = 700\n      }\n\n      // Creates canvas 320 \xc3\x97 200 at 10, 50\n      var paper = Raphael(0, 0, x, y);\n\n      function moveEvent(conn, labelText, value, bottomText) {\n        var n = conn.line.getTotalLength()\n        var pos = conn.line.getPointAtLength(0)\n        var radius = typeof labelText === \'string\' ? 20 : 20\n        var circle = paper.circle(pos.x, pos.y, radius);\n        circle.attr({\n          cx: pos.x,\n          cy: pos.y,\n          fill: \'#fff\',\n          stroke: \'#000\'\n        })\n\n        var label = paper.text()\n        label.attr({\n          text: labelText,\n          \'font-size\': \'12px\'\n        })\n\n        var bottomLabel;\n        if (bottomText) {\n          bottomLabel = paper.text()\n          bottomLabel.attr({\n            text: bottomText,\n            \'font-size\': \'12px\',\n            \'font-family\': \'monospace\',\n            \'white-space\': \'pre\',\n            \'text-anchor\': \'end\'\n          })\n        }\n\n        var counter = 0;\n        return new Promise(function (resolve) {\n          var interval;\n          function animate() {\n            if (n &lt; counter) {\n              clearInterval(interval);\n              circle.remove();\n              label.remove();\n              if (bottomLabel) {\n                bottomLabel.remove()\n              }\n              resolve(value);\n              return;\n            }\n            var pos = conn.line.getPointAtLength(counter);\n            circle.attr({\n              cx: pos.x,\n              cy: pos.y\n            })\n            label.attr({\n              x: pos.x,\n              y: pos.y\n            })\n            if (bottomLabel) {\n              bottomLabel.attr({\n                x: pos.x - 50,\n                y: pos.y + 60\n              })\n            }\n            counter += 1;\n          }\n          interval = setInterval(animate, 10);\n        })\n      }\n      drawing.moveEvent = moveEvent;\n\n      var decClicks = paper.rect(400, 150, 100, 50)\n      decClicks.attr(\'fill\', \'#ffe\')\n      decClicks.attr(\'stroke\', \'#f00\')\n      var decClicksText = paper.text(450, 175)\n      decClicksText.attr({ text: \'map\\nev =&gt; -1\', \'font-size\': \'12px\' })\n      var decrementsText = paper.text(550, 160)\n      decrementsText.attr({ text: \'decrements$\', \'font-size\': \'15px\' })\n\n      var incClicks = paper.rect(400, 250, 100, 50)\n      incClicks.attr(\'fill\', \'#ffe\')\n      incClicks.attr(\'stroke\', \'#f00\')\n      var incClicksText = paper.text(450, 275)\n      incClicksText.attr({ text: \'map\\nev =&gt; +1\', \'font-size\': \'15px\' })\n      var incrementsText = paper.text(550, 285)\n      incrementsText.attr({ text: \'increments$\', \'font-size\': \'15px\' })\n\n      var actions = paper.rect(600, 200, 100, 50)\n      actions.attr(\'fill\', \'#ffe\')\n      actions.attr(\'stroke\', \'#f00\')\n      var actionsText = paper.text(650, 225)\n      actionsText.attr({ text: \'merge\', \'font-size\': \'15px\' })\n      var actions$Text = paper.text(690, 260)\n      actions$Text.attr({ text: \'actions$\', \'font-size\': \'15px\' })\n\n      // paper.connection(circle, circle2, \'#00f\')\n      // animating movement along path is based on\n      // http://jsfiddle.net/gyeSf/17/\n      drawing.c1 = paper.connection(document.querySelector(\'#minus\'), decClicks, \'#333\')\n      drawing.c2 = paper.connection(document.querySelector(\'#plus\'), incClicks, \'#333\')\n\n      drawing.c3 = paper.connection(decClicks, actions, \'#333\')\n      drawing.c4 = paper.connection(incClicks, actions, \'#333\')\n\n      // model\n      var scan = paper.rect(550, 400, 100, 50)\n      scan.attr(\'fill\', \'#ffe\')\n      scan.attr(\'stroke\', \'#0f0\')\n      var scanText = paper.text(600, 425)\n      scanText.attr({ text: \'scan\\n(x,y) =&gt; x+y\', \'font-size\': \'15px\' })\n\n      var valueText = paper.text(680, 420)\n      valueText.attr({ text: \'value\\n0\', \'font-size\': \'15px\' })\n      drawing.setValue = function (value) {\n        valueText.attr(\'text\', \'value\\n\' + value)\n      }\n\n      var count$Text = paper.text(520, 410)\n      count$Text.attr({ text: \'count$\', \'font-size\': \'15px\' })\n\n      drawing.c5 = paper.connection(actions, scan, \'#333\')\n\n      // view\n      var vtree = paper.rect(360, 550, 340, 150)\n      vtree.attr(\'fill\', \'#ffe\')\n      vtree.attr(\'stroke\', \'#00f\')\n      var vtreeText = paper.text(370, 625)\n      vtreeText.attr({\n        text: \'map\\n\' +\n          \'count =&gt; div([\\n\' +\n          \'  button(\\\'#minus\\\', \\\'Decrement\\\'),\\n\' +\n          \'  button(\\\'#plus\\\', \\\'Increment\\\'),\\n\' +\n          \'  p(\\\'#counter\\\', \\\'Counter: \\\' + count)\\n\' +\n          \'])\',\n        \'font-size\': \'15px\',\n        \'font-family\': \'monospace\',\n        \'white-space\': \'pre\',\n        \'text-anchor\': \'start\'\n      })\n      var vtree$Text = paper.text(330, 635)\n      vtree$Text.attr({ text: \'vtree$\', \'font-size\': \'15px\' })\n\n      drawing.c6 = paper.connection(scan, vtree, \'#333\')\n      drawing.c7 = paper.connection(vtree, document.querySelector(\'#app\'), \'#333\')\n\n      // Intent / Model / View blocks\n      var intentBlock = paper.rect(380, 120, 350, 200)\n      intentBlock.attr({\n        stroke: \'#f00\'\n      });\n      var intentText = paper.text(700, 130)\n      intentText.attr({\n        text: \'Intent\',\n        \'font-size\': \'15px\',\n        fill: \'#f00\',\n        stroke: \'none\'\n      })\n\n      var modelBlock = paper.rect(380, 330, 350, 170)\n      modelBlock.attr({\n        stroke: \'#0f0\'\n      });\n      var modelText = paper.text(700, 340)\n      modelText.attr({\n        text: \'Model\',\n        \'font-size\': \'15px\',\n        fill: \'#0f0\',\n        stroke: \'none\'\n      })\n\n      var viewText = paper.text(670, 560)\n      viewText.attr({\n        text: \'View\',\n        \'font-size\': \'15px\',\n        fill: \'#00f\',\n        stroke: \'none\'\n      })\n\n    }, 1000);\n  </script>\n  <svg height="715" style="overflow: hidden; position: absolute; left: 0px; top: 0px;" version="1.1" width="1050" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n   <desc style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n    Created with Rapha\xc3\xabl 2.1.2\n   </desc>\n   <defs style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n   </defs>\n   <rect fill="#ffffee" height="50" rx="0" ry="0" stroke="#ff0000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" width="100" x="400" y="150">\n   </rect>\n   <text fill="#000000" font-family=\'"Arial"\' font-size="12px" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 12px;" text-anchor="middle" x="450" y="175">\n    <tspan dy="-3.1953125" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n     map\n    </tspan>\n    <tspan dy="14.399999999999999" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" x="450">\n     ev =&gt; -1\n    </tspan>\n   </text>\n   <text fill="#000000" font-family=\'"Arial"\' font-size="15px" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 15px;" text-anchor="middle" x="550" y="160">\n    <tspan dy="5.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n     decrements$\n    </tspan>\n   </text>\n   <rect fill="#ffffee" height="50" rx="0" ry="0" stroke="#ff0000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" width="100" x="400" y="250">\n   </rect>\n   <text fill="#000000" font-family=\'"Arial"\' font-size="15px" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 15px;" text-anchor="middle" x="450" y="275">\n    <tspan dy="-3.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n     map\n    </tspan>\n    <tspan dy="18" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" x="450">\n     ev =&gt; +1\n    </tspan>\n   </text>\n   <text fill="#000000" font-family=\'"Arial"\' font-size="15px" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 15px;" text-anchor="middle" x="550" y="285">\n    <tspan dy="5.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n     increments$\n    </tspan>\n   </text>\n   <rect fill="#ffffee" height="50" rx="0" ry="0" stroke="#ff0000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" width="100" x="600" y="200">\n   </rect>\n   <text fill="#000000" font-family=\'"Arial"\' font-size="15px" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 15px;" text-anchor="middle" x="650" y="225">\n    <tspan dy="5.421875" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n     merge\n    </tspan>\n   </text>\n   <text fill="#000000" font-family=\'"Arial"\' font-size="15px" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 15px;" text-anchor="middle" x="690" y="260">\n    <tspan dy="5.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n     actions$\n    </tspan>\n   </text>\n   <path d="M217.563,213.313C308.281,213.313,308.281,175,399,175" fill="none" stroke="#333333" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n   </path>\n   <path d="M209.531,294.313C304.266,294.313,304.266,275,399,275" fill="none" stroke="#333333" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n   </path>\n   <path d="M501,175C550,175,550,225,599,225" fill="none" stroke="#333333" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n   </path>\n   <path d="M501,275C550,275,550,225,599,225" fill="none" stroke="#333333" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n   </path>\n   <rect fill="#ffffee" height="50" rx="0" ry="0" stroke="#00ff00" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" width="100" x="550" y="400">\n   </rect>\n   <text fill="#000000" font-family=\'"Arial"\' font-size="15px" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 15px;" text-anchor="middle" x="600" y="425">\n    <tspan dy="-3.578125" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n     scan\n    </tspan>\n    <tspan dy="18" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" x="600">\n     (x,y) =&gt; x+y\n    </tspan>\n   </text>\n   <text fill="#000000" font-family=\'"Arial"\' font-size="15px" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 15px;" text-anchor="middle" x="680" y="420">\n    <tspan dy="-3.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n     value\n    </tspan>\n    <tspan dy="18" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" x="680">\n     0\n    </tspan>\n   </text>\n   <text fill="#000000" font-family=\'"Arial"\' font-size="15px" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 15px;" text-anchor="middle" x="520" y="410">\n    <tspan dy="5.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n     count$\n    </tspan>\n   </text>\n   <path d="M650,251C650,325,600,325,600,399" fill="none" stroke="#333333" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n   </path>\n   <rect fill="#ffffee" height="150" rx="0" ry="0" stroke="#0000ff" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" width="340" x="360" y="550">\n   </rect>\n   <text fill="#000000" font-family="monospace" font-size="15px" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: start; font-family: monospace; font-size: 15px;" text-anchor="start" x="370" y="625">\n    <tspan dy="-40.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n     map\n    </tspan>\n    <tspan dy="18" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" x="370">\n     count =&gt; div([\n    </tspan>\n    <tspan dy="18" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" x="370">\n     button(\'#minus\', \'Decrement\'),\n    </tspan>\n    <tspan dy="18" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" x="370">\n     button(\'#plus\', \'Increment\'),\n    </tspan>\n    <tspan dy="18" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" x="370">\n     p(\'#counter\', \'Counter: \' + count)\n    </tspan>\n    <tspan dy="18" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" x="370">\n     ])\n    </tspan>\n   </text>\n   <text fill="#000000" font-family=\'"Arial"\' font-size="15px" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 15px;" text-anchor="middle" x="330" y="635">\n    <tspan dy="5.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n     vtree$\n    </tspan>\n   </text>\n   <path d="M549,425C539,425,530,487,530,549" fill="none" stroke="#333333" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n   </path>\n   <path d="M359,625C284,625,209,544.906,209,464.813" fill="none" stroke="#333333" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n   </path>\n   <rect fill="none" height="200" rx="0" ry="0" stroke="#ff0000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" width="350" x="380" y="120">\n   </rect>\n   <text fill="#ff0000" font-family=\'"Arial"\' font-size="15px" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 15px;" text-anchor="middle" x="700" y="130">\n    <tspan dy="5.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n     Intent\n    </tspan>\n   </text>\n   <rect fill="none" height="170" rx="0" ry="0" stroke="#00ff00" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" width="350" x="380" y="330">\n   </rect>\n   <text fill="#00ff00" font-family=\'"Arial"\' font-size="15px" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 15px;" text-anchor="middle" x="700" y="340">\n    <tspan dy="5.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n     Model\n    </tspan>\n   </text>\n   <text fill="#0000ff" font-family=\'"Arial"\' font-size="15px" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-family: Arial; font-size: 15px;" text-anchor="middle" x="670" y="560">\n    <tspan dy="5.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">\n     View\n    </tspan>\n   </text>\n  </svg>\n </body>\n</html>'