b'<html lang="en-GB">\n <head>\n  <meta charset="utf-8"/>\n  <title>\n   Ractive.js slidehorizontal transition plugin\n  </title>\n  <link href="http://fonts.googleapis.com/css?family=Voltaire" rel="stylesheet" type="text/css"/>\n  <link href="demo/main.css" rel="stylesheet"/>\n  <style type="text/css">\n   #demo span {\n\t\t\tdisplay: inline-block;\n\t\t\tvertical-align: top;\n\t\t}\n\t\t#demo button {\n\t\t\tvertical-align: top;\n\t\t}\n  </style>\n </head>\n <body class="transforms-enabled">\n  <a class="forkme" href="https://github.com/zenflow/ractive-transitions-slidehorizontal">\n   Fork me on GitHub\n  </a>\n  <header>\n   <h1>\n    Ractive.js slidehorizontal transition plugin\n   </h1>\n   <p class="strap">\n    <span class="download">\n     download:\n     <a href="https://raw.github.com/zenflow/ractive-transitions-slidehorizontal/master/ractive-transitions-slidehorizontal.js">\n      ractive-transitions-slidehorizontal.js\n     </a>\n    </span>\n    <span class="more-plugins">\n     more plugins at\n     <a href="http://docs.ractivejs.org/latest/plugins">\n      docs.ractivejs.org/latest/plugins\n     </a>\n    </span>\n   </p>\n  </header>\n  <main>\n   <p>\n    A horizontal slide transition seems as useful as a vertical one...\n   </p>\n   <div class="clearfix" id="demo">\n    <span>\n     Elements\n    </span>\n    <span>\n     can\n    </span>\n    <span>\n     be\n    </span>\n    <span>\n     horizontally\n    </span>\n    <span>\n     slidden\n    </span>\n    <span>\n     in\n    </span>\n    <span>\n     in\n    </span>\n    <span>\n     a\n    </span>\n    <span>\n     variety\n    </span>\n    <span>\n     of\n    </span>\n    <span>\n     creative\n    </span>\n    <span style="height: 24px; width: 34.8594px; border-left-width: 0px; border-right-width: 0px; padding-left: 0px; padding-right: 0px; margin-left: 0px; margin-right: 0px; overflow: hidden; transition-property: width; transition-timing-function: ease-in-out; transition-duration: 0.6s;">\n     ways\n    </span>\n   </div>\n   <pre class="prettyprint lang-html prettyprinted" id="demo-template-view" style=""><span class="pln">{{#words:i}}\n  </span><span class="tag">&lt;span</span><span class="pln"> </span><span class="atn">intro-outro</span><span class="pun">=</span><span class="atv">\'slideh:{ delay:{{ i*200 }}, duration: 600 }\'</span><span class="pln"> </span><span class="tag">&gt;</span><span class="pln">\n    {{this}}&amp;nbsp;\n  </span><span class="tag">&lt;/span&gt;</span><span class="pln">\n{{/words}}\n{{#showButton}}\n  </span><span class="tag">&lt;button</span><span class="pln"> </span><span class="atn">intro-outro</span><span class="pun">=</span><span class="atv">\'slideh\'</span><span class="pln"> </span><span class="atn">on-click</span><span class="pun">=</span><span class="atv">\'again\'</span><span class="tag">&gt;</span><span class="pln">Show me again!</span><span class="tag">&lt;/button&gt;</span><span class="pln">\n{{/showButton}}</span></pre>\n   <pre class="prettyprint lang-js prettyprinted" id="demo-code-view" style=""><span class="kwd">var</span><span class="pln"> render </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pln"> </span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n  ractive </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Ractive</span><span class="pun">({</span><span class="pln">\n    el</span><span class="pun">:</span><span class="pln"> </span><span class="str">\'demo\'</span><span class="pun">,</span><span class="pln">\n    template</span><span class="pun">:</span><span class="pln"> </span><span class="str">\'#demo-template\'</span><span class="pln">\n  </span><span class="pun">});</span><span class="pln">\n\n  </span><span class="com">// Add some words, then show the reset button</span><span class="pln">\n  ractive</span><span class="pun">.</span><span class="kwd">set</span><span class="pun">(</span><span class="str">\'words\'</span><span class="pun">,</span><span class="pln"> </span><span class="str">\'Elements can be horizontally slidden in in a variety of creative ways\'</span><span class="pun">.</span><span class="pln">split</span><span class="pun">(</span><span class="pln"> </span><span class="str">\' \'</span><span class="pln"> </span><span class="pun">))</span><span class="pln">\n    </span><span class="pun">.</span><span class="pln">then</span><span class="pun">(</span><span class="kwd">function</span><span class="pln"> </span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n      ractive</span><span class="pun">.</span><span class="kwd">set</span><span class="pun">(</span><span class="pln"> </span><span class="str">\'showButton\'</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">true</span><span class="pln"> </span><span class="pun">);</span><span class="pln">\n    </span><span class="pun">});</span><span class="pln">\n\n  ractive</span><span class="pun">.</span><span class="pln">on</span><span class="pun">(</span><span class="pln"> </span><span class="str">\'again\'</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">function</span><span class="pln"> </span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">\n    </span><span class="com">// Teardown, then re-render once fadeouts are complete</span><span class="pln">\n    ractive</span><span class="pun">.</span><span class="pln">teardown</span><span class="pun">().</span><span class="pln">then</span><span class="pun">(</span><span class="pln"> render </span><span class="pun">);</span><span class="pln">\n  </span><span class="pun">});</span><span class="pln">\n</span><span class="pun">};</span><span class="pln">\n\nrender</span><span class="pun">();</span></pre>\n  </main>\n  <footer>\n   <p>\n    Copyright \xc2\xa9 2015 Matthew Francis Brunetti. Licensed MIT\n   </p>\n  </footer>\n  <!-- Demo template -->\n  <script async="" src="//www.google-analytics.com/analytics.js">\n  </script>\n  <script id="demo-template" type="text/ractive">\n   {{#words:i}}\n\t\t\t<span intro-outro=\'slideh:{ delay:{{ i*200 }}, duration: 600 }\' >\n\t\t\t\t{{this}}&nbsp;\n\t\t\t</span>\n\t\t{{/words}}\n\t\t{{#showButton}}\n\t\t\t<button intro-outro=\'slideh\' on-click=\'again\'>Show me again!</button>\n\t\t{{/showButton}}\n  </script>\n  <script src="https://cdnjs.cloudflare.com/ajax/libs/ractive/0.7.3/ractive-legacy.min.js">\n  </script>\n  <script src="ractive-transitions-slidehorizontal.js">\n  </script>\n  <!-- Demo code -->\n  <script id="demo-code">\n   var render = function () {\n\t\t\tractive = new Ractive({\n\t\t\t\tel: \'demo\',\n\t\t\t\ttemplate: \'#demo-template\'\n\t\t\t});\n\n\t\t\t// Add some words, then show the reset button\n\t\t\tractive.set(\'words\', \'Elements can be horizontally slidden in in a variety of creative ways\'.split( \' \' ))\n\t\t\t\t.then(function () {\n\t\t\t\t\tractive.set( \'showButton\', true );\n\t\t\t\t});\n\n\t\t\tractive.on( \'again\', function () {\n\t\t\t\t// Teardown, then re-render once fadeouts are complete\n\t\t\t\tractive.teardown().then( render );\n\t\t\t});\n\t\t};\n\n\t\trender();\n  </script>\n  <script src="demo/prettify.js">\n  </script>\n  <script src="demo/demo.js">\n  </script>\n  <script>\n   (function(i,s,o,g,r,a,m){i[\'GoogleAnalyticsObject\']=r;i[r]=i[r]||function(){\n\t\t\t(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n\t\t\t\tm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n\t\t})(window,document,\'script\',\'//www.google-analytics.com/analytics.js\',\'ga\');\n\n\t\tga(\'create\', \'UA-62288007-1\', \'auto\');\n\t\tga(\'send\', \'pageview\');\n  </script>\n </body>\n</html>'