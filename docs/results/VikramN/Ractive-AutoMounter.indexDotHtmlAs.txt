b'<html>\n <head>\n  <meta charset="utf-8"/>\n  <script src="ractive.min.js">\n  </script>\n  <script src="automounter.js">\n  </script>\n  <style>\n   @import url(http://fonts.googleapis.com/css?family=Roboto+Condensed);\n    \n            body{\n                font-family: \'Roboto Condensed\', sans-serif;\n                width: 90%;\n                margin: 10px auto;\n                font-size: 16px;\n                margin-top: 30px;\n            }\n    \n            a {\n                text-decoration: none;\n                color: #ff604c;\n            }\n            \n            input {\n                font-size: 16px;\n                padding: 5px;\n            }\n            \n            .col {\n                width: 40%;\n                display: inline-block;\n                vertical-align: top;\n                margin-left: 50px;\n            }\n  </style>\n  <style>\n   div[auto-mount] { display : none }\n            .tagContainer { display: inline; }\n            .tagInputContainer { display: inline; }\n            .tag { border: 1px solid #B8B9BA; border-radius: 5px; background-color: transparent; padding: 5px 5px 5px 10px; margin: 2px; display: inline-block; }.tagInput1 { outline: none; border: 0px; height: 20px; margin: 2px; }\n            .tagInput { outline: none; border: 0px; border-bottom: 1px solid #6DAFF3; margin: 5px; display: inline;  }\n            .deleteTag { border: 0; border-radius: 21px; color: #ff604c; padding: 0px 4px 1px 4px; text-decoration: none; outline: none; cursor: pointer; background-color: transparent; font-weight: bold; }\n            .deleteTag:hover { color: red; }\n            .deleteTag:before { content: \'\xe2\x9c\x96\'; }\n  </style>\n </head>\n <body>\n  <!--Sample Twitter Component-->\n  <script id="myimg" type="text/ractive">\n   <div style="border:1px solid #ddd; padding: 5px; margin: 5px; display: inline-block">\n                <div style="font-size: 20px; font-weight:bold">@{{name}}</div>\n                <hr>\n                <img src={{src}} style="height: 60px" >\n                <hr>\n                <div>\n                    <a href="https://twitter.com/{{name}}">Follow Me</a>\n                </div>\n            \n            </div>\n  </script>\n  <script>\n   var MyImg = Ractive.extend({\n                template: \'#myimg\'                \n            });\n  </script>\n  <!--Ractag Component-->\n  <script id="ractag" type="text/ractive">\n   <div>\n                {{#if flip}}\n                    <div>\n                        <div class="tagInputContainer">\n                            <input class="tagInput" type="text" on-keyup="onkey" on-blur="onblur" value={{tag}}>\n                        </div>\n                    </div>\n                    <div class="tagContainer" >\n                        {{#tags:i}}\n                        <div class="tag">\n                            <span>{{ this }}</span>\n                            <button style="display:inline;" class="deleteTag" on-click="remove" data-index={{i}}></button>\n                        </div>\n                        {{/tags}}\n                    </div>\n                {{ else }}\n                    <div class="tagContainer" >\n                        {{#tags:i}}\n                        <div class="tag">\n                            <span>{{ this }}</span>\n                            <button style="display:inline;" class="deleteTag" on-click="remove" data-index={{i}}></button>\n                        </div>\n                        {{/tags}}\n                    </div>\n                    <div class="tagInputContainer" >\n                        <input class="tagInput" type="text" on-keyup="onkey" on-blur="onblur" value={{tag}}>\n                    </div>\n                {{/if}}\n            </div>\n  </script>\n  <!--Ractag.js-->\n  <script>\n   var RacTag = Ractive.extend({\n                template: \'#ractag\',\n                oninit: function() {\n                    var me = this;\n                    var t = me.get();\n                    \n                    if(!t.tags) me.set(\'tags\', []);\n                    var breaks = t.breaks && t.breaks.length > 0 ? t.breaks : [\',\',\' \'];\n                    var tagRegex = new RegExp(\'[\' + breaks.join(\'\') + \']\');\n                    \n                    var addTag = function(tag){\n                        var tags = tag.split(tagRegex);                        \n                        tags.forEach(function(x){\n                            if(x && x !== \'\') {\n                                var x2 = t.onTag? t.onTag(x) : x;\n                                if(x2 && x2 !== \'\') {\n                                    t.tags.push(x2);    \n                                }    \n                            }                            \n                        });\n                    };\n                    \n                    var hasDelim = function(txt) {                        \n                        for(var i =0; i < breaks.length; i++){\n                            if(txt.indexOf(breaks[i]) !== -1){\n                                return true;\n                            }\n                        }\n            \n                        return false;\n                    };\n                    \n                    this.on(\'onkey\', function(ev){\n                        var e = ev.original;\n                        if(e.keyCode === 13){\n                            if(e.preventDefault) { e.preventDefault(); }\n                            addTag(t.tag);\n                            me.set(\'tag\', \'\');\n                            return false;\n                        }\n                        \n                        if(t.tag.length > 1 && hasDelim(t.tag)){\n                            addTag(t.tag);\n                            me.set(\'tag\', \'\');\n                        }\n                    });\n                    \n                    this.on(\'onblur\', function(e){\n                        addTag(t.tag);\n                        me.set(\'tag\', \'\');\n                    })\n                    \n                    this.on(\'remove\', function(e){\n                        var ix = parseInt(e.node.attributes[\'data-index\'].value);\n                        var tag = t.tags[ix];\n                        if(t.onRemove? t.onRemove(ix, tag) : true) { \n                            t.tags.splice(ix, 1);\n                        }                        \n                    });\n                }\n            });\n  </script>\n  <h1>\n   RactiveJS Auto-Mounter\n  </h1>\n  <a href="https://github.com/VikramN/Ractive-AutoMounter">\n   Source\n  </a>\n  <h3>\n   How To\n  </h3>\n  Suppose you have a Ractive component defined as\n  <pre>var &lt;component-id&gt; = Ractive.extend({ ... })\n        </pre>\n  You would creat an instance as\n  <pre>var &lt;js-variable-name&gt; = new &lt;component-id&gt;({\n    el : \'#&lt;mount-element-id&gt;\'\n})\n        </pre>\n  With auto-mounter you can avoid all javascript and do -\n  <pre>&lt;div id="&lt;mount-element-id&gt;" auto-mount="&lt;component-id&gt;" var-name="&lt;js-variable-name&gt;" var-parent="&lt;js-var-parent&gt;"&gt;\n    &lt;data type="&lt;js or json&gt;"&gt;        \n        {\n            \n        }\n        \n\n    &lt;/data&gt;\n&lt;/div&gt;\n\nJust call AutoMounter.mount() after loading all components\n        </pre>\n  <h1>\n   Examples\n  </h1>\n  <hr/>\n  <h1>\n   Follow some people on Twitter\n  </h1>\n  <div style="display: inline-block">\n   <div auto-mount="MyImg" id="img1" style="display: inline-block" var-name="img1" var-parent="my_imgs">\n    <data>\n     {\n                        "name" : "TheVikO_o",\n                        "src" : "https://pbs.twimg.com/profile_images/1900664193/FF_bigger.png"\n                    }\n    </data>\n   </div>\n   <div auto-mount="MyImg" id="img2" style="display: inline-block" var-name="img2" var-parent="my_imgs">\n    <data>\n     {\n                        "name" : "RactiveJS",\n                        "src" : "https://pbs.twimg.com/profile_images/615964160623448064/93gDces4_400x400.png"\n                    }\n    </data>\n   </div>\n   <div auto-mount="MyImg" id="img3" style="display: inline-block" var-name="img3" var-parent="my_imgs">\n    <data>\n     {\n                        "name" : "trutriciahelfer",\n                        "src" : "https://pbs.twimg.com/profile_images/555486552327868417/k2vL8F1q_400x400.png"\n                    }\n    </data>\n   </div>\n  </div>\n  <h3>\n   Code\n  </h3>\n  <pre>&lt;div id="img1" auto-mount="MyImg" var-name="img3" var-parent="my_imgs"&gt;\n    &lt;data type="json"&gt;\n        {\n            "name" : "trutriciahelfer",\n            "src" : "https://pbs.twimg.com/profile_images/555486552327868417/k2vL8F1q_400x400.png"\n        }\n    &lt;/data&gt;\n&lt;/div&gt;          \n        </pre>\n  <h1>\n   RacTag Example\n  </h1>\n  <p>\n   Tag component sample. Append "Tag:" to user\'s tags using events registered with data object\n  </p>\n  <p>\n   <a href="https://github.com/VikramN/RacTag">\n    RacTag on Github\n   </a>\n   <br/>\n   <br/>\n  </p>\n  <div auto-mount="RacTag" id="tag1" var-name="tagger" var-parent="my_comps">\n   <data type="js">\n    {\n                tags : [\'Enter\', \'Some\', \'Tags\'],\n                onTag : function(e) {\n                    console.log("Added =&gt; " + e);\n                    return e;\n                }\n             }\n   </data>\n  </div>\n  <h3>\n   Code\n  </h3>\n  <pre>&lt;div id="tag1" auto-mount="RacTag" var-name="tagger" var-parent="my_comps"&gt;\n    &lt;data type="js"&gt;\n     {\n        tags : [\'Enter\', \'Some\', \'Tags\'],\n        onTag : function(e) {\n            console.log("Added =&gt; " + e);\n            return e;\n        }\n     }\n    &lt;/data&gt;\n&lt;/div&gt;            \n        </pre>\n  <script>\n   my_comps = {};            \n            my_imgs = {};\n            \n            AutoMounter.mount();\n  </script>\n  <a href="https://github.com/VikramN/Ractive-AutoMounter">\n   <img alt="Fork me on GitHub" data-canonical-src="https://s3.amazonaws.com/github/ribbons/forkme_right_orange_ff7600.png" src="https://camo.githubusercontent.com/652c5b9acfaddf3a9c326fa6bde407b87f7be0f4/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f6f72616e67655f6666373630302e706e67" style="position: absolute; top: 0; right: 0; border: 0;"/>\n  </a>\n </body>\n</html>'