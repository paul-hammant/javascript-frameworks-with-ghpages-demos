b'<html>\n <head>\n  <style type="text/css">\n   @charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide{display:none !important;}ng\\:form{display:block;}.ng-animate-block-transitions{transition:0s all!important;-webkit-transition:0s all!important;}.ng-hide-add-active,.ng-hide-remove{display:block!important;}\n  </style>\n  <meta charset="utf-8"/>\n  <meta content="chrome=1" http-equiv="X-UA-Compatible"/>\n  <title>\n   ngToast - Angular provider for toast notifications\n  </title>\n  <!-- bower:css -->\n  <link href="bower_components/bootstrap/dist/css/bootstrap.css" rel="stylesheet"/>\n  <link href="bower_components/ngtoast/dist/ngToast.min.css" rel="stylesheet"/>\n  <link href="bower_components/ngtoast/dist/ngToast-animations.min.css" rel="stylesheet"/>\n  <!-- endbower -->\n  <link href="stylesheets/styles.css" rel="stylesheet"/>\n  <link href="stylesheets/pygment_trac.css" rel="stylesheet"/>\n  <link href="http://cdnjs.cloudflare.com/ajax/libs/rainbow/1.2.0/themes/solarized-dark.css" rel="stylesheet"/>\n  <meta content="width=device-width, initial-scale=1, user-scalable=no" name="viewport"/>\n  <!--[if lt IE 9]>\n    <script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script>\n    <![endif]-->\n  <script async="" src="//www.google-analytics.com/analytics.js">\n  </script>\n  <script>\n   (function(i,s,o,g,r,a,m){i[\'GoogleAnalyticsObject\']=r;i[r]=i[r]||function(){\n      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n      })(window,document,\'script\',\'//www.google-analytics.com/analytics.js\',\'ga\');\n\n      ga(\'create\', \'UA-52651489-1\', \'auto\');\n      ga(\'send\', \'pageview\');\n  </script>\n </head>\n <body class="ng-scope" ng-app="ngToastApp" ng-controller="MainController">\n  <a class="fork-badge" href="https://github.com/tameraydin/ngToast">\n   <img alt="Fork me on GitHub" data-canonical-src="https://s3.amazonaws.com/github/ribbons/forkme_left_darkblue_121621.png" src="https://camo.githubusercontent.com/567c3a48d796e2fc06ea80409cc9dd82bf714434/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f6c6566745f6461726b626c75655f3132313632312e706e67" style="position: fixed; top: 0; left: 0; border: 0;"/>\n  </a>\n  <div class="ng-toast ng-toast--right ng-toast--top ng-toast--animate-fade">\n   <ul class="ng-toast__list">\n    <!-- ngRepeat: message in messages -->\n    <li class="ng-toast__message" count="message.count" data-message-id="971" message="message" ng-mouseenter="onMouseEnter()" ng-mouseleave="onMouseLeave()" ng-repeat="message in messages" style="">\n     <div class="alert alert-success alert-dismissible" ng-class="{\'alert-dismissible\': message.dismissButton}">\n      <!-- ngIf: message.dismissButton -->\n      <button class="close ng-scope ng-binding" ng-bind-html="message.dismissButtonHtml" ng-click="!message.dismissOnClick &amp;&amp; dismiss()" ng-if="message.dismissButton" type="button">\n       \xc3\x97\n      </button>\n      <!-- end ngIf: message.dismissButton -->\n      <!-- ngIf: count -->\n      <!-- ngIf: !message.compileContent -->\n      <span class="ng-scope" ng-if="!message.compileContent" ng-transclude="">\n       <span class="ng-scope ng-binding" ng-bind-html="message.content">\n        <strong>\n         ngToast\n        </strong>\n        : a simple Angular provider for toast notifications!\n       </span>\n      </span>\n      <!-- end ngIf: !message.compileContent -->\n     </div>\n    </li>\n    <!-- end ngRepeat: message in messages -->\n   </ul>\n  </div>\n  <div class="wrapper">\n   <header>\n    <h1>\n     ngToast\n    </h1>\n    <p>\n     Angular provider for toast notifications\n    </p>\n    <p class="view">\n     <a href="https://github.com/tameraydin/ngToast">\n      View the Project on GitHub\n      <small>\n       tameraydin/ngToast\n      </small>\n     </a>\n    </p>\n    <ul>\n     <li>\n      <a href="https://github.com/tameraydin/ngToast/zipball/master">\n       Download\n       <strong>\n        ZIP File\n       </strong>\n      </a>\n     </li>\n     <li>\n      <a href="https://github.com/tameraydin/ngToast/tarball/master">\n       Download\n       <strong>\n        TAR Ball\n       </strong>\n      </a>\n     </li>\n     <li>\n      <a href="https://github.com/tameraydin/ngToast">\n       View On\n       <strong>\n        GitHub\n       </strong>\n      </a>\n     </li>\n    </ul>\n   </header>\n   <section>\n    <h2>\n     <a class="anchor" href="#ngtoast" name="ngtoast">\n      <span class="octicon octicon-link">\n      </span>\n     </a>\n     ngToast\n    </h2>\n    <p>\n     ngToast is a simple Angular provider for toast notifications.\n    </p>\n    <h2>\n     <a class="anchor" href="#demo" name="demo">\n      <span class="octicon octicon-link">\n      </span>\n     </a>\n     Demo\n    </h2>\n    <p>\n     <a class="btn btn-primary" href="#" ng-click="showSample()">\n      Create a sample toast\n     </a>\n    </p>\n    <h2>\n     <a class="anchor" href="#usage" name="usage">\n      <span class="octicon octicon-link">\n      </span>\n     </a>\n     Usage\n    </h2>\n    <p>\n     Download ngToast manually or install it through NPM / Bower:\n    </p>\n    <pre><code>bower install ngtoast --production\n# or\nnpm install ng-toast --production\n</code></pre>\n    <p>\n     Include ngToast resource files along with the built-in\n     <a href="http://docs.angularjs.org/api/ngAnimate">\n      ngAnimate\n     </a>\n     &amp;\n     <a href="http://docs.angularjs.org/api/ngSanitize">\n      ngSanitize\n     </a>\n     modules and the\n     <a href="http://getbootstrap.com/" target="_blank">\n      Bootstrap CSS\n     </a>\n     (only the Alerts component is used as style base, so you don\'t have to include complete CSS):\n    </p>\n    <pre><code class="rainbow" data-language="html"><span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">link</span></span> <span class="support attribute">rel</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">stylesheet</span><span class="string quote">"</span> <span class="support attribute">href</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">bootstrap.min.css</span><span class="string quote">"</span><span class="support tag close">&gt;</span>\n<span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">link</span></span> <span class="support attribute">rel</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">stylesheet</span><span class="string quote">"</span> <span class="support attribute">href</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">ngToast.min.css</span><span class="string quote">"</span><span class="support tag close">&gt;</span>\n\n<span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">script</span></span> <span class="support attribute">src</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">angular-animate.min.js</span><span class="string quote">"</span><span class="support tag close">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">script</span></span><span class="support tag close">&gt;</span>\n<span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">script</span></span> <span class="support attribute">src</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">angular-sanitize.min.js</span><span class="string quote">"</span><span class="support tag close">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">script</span></span><span class="support tag close">&gt;</span>\n<span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">script</span></span> <span class="support attribute">src</span><span class="support operator">=</span><span class="string quote">"</span><span class="string value">ngToast.min.js</span><span class="string quote">"</span><span class="support tag close">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">script</span></span><span class="support tag close">&gt;</span>\n</code></pre>\n    <p>\n     Include ngToast as a dependency in your app module:\n    </p>\n    <pre><code class="rainbow" data-language="javascript"><span class="keyword">var</span> app <span class="keyword operator">=</span> angular.<span class="function call">module</span>(<span class="string">\'myApp\'</span>, [<span class="string">\'ngToast\'</span>]);\n</code></pre>\n    <p>\n     Place\n     <code>\n      toast\n     </code>\n     (or\n     <code>\n      ng-toast\n     </code>\n     , if you are using a version lower than 1.2.1) element into your HTML:\n    </p>\n    <pre><code class="rainbow" data-language="html"><span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">body</span></span><span class="support tag close">&gt;</span>\n  <span class="support tag"><span class="support tag">&lt;</span><span class="support tag-name">toast</span></span><span class="support tag close">&gt;</span><span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">toast</span></span><span class="support tag close">&gt;</span>\n  ...\n<span class="support tag"><span class="support tag">&lt;</span><span class="support tag special">/</span><span class="support tag-name">body</span></span><span class="support tag close">&gt;</span>\n</code></pre>\n    <p>\n     Inject ngToast provider in your controller:\n    </p>\n    <pre><code class="rainbow" data-language="javascript">app.<span class="function call">controller</span>($scope, ngToast) {...};\n</code></pre>\n    <p>\n     Please check out\n     <a href="https://github.com/tameraydin/ngToast">\n      Github page\n     </a>\n     to see how to use ngToast with\n     <a href="https://github.com/tameraydin/ngToast#animations">\n      animations\n     </a>\n     .\n    </p>\n    <h2>\n     <a class="anchor" href="#api" name="api">\n      <span class="octicon octicon-link">\n      </span>\n     </a>\n     API\n    </h2>\n    <pre><code class="rainbow" data-language="javascript"><span class="comment">// create a simple toast:</span>\nngToast.<span class="function call">create</span>(<span class="string">\'a toast message...\'</span>);\n\n<span class="comment">// create a toast with settings:</span>\nngToast.<span class="function call">create</span>({\n  className: <span class="string">\'warning\'</span>,\n  content: <span class="string">\'&lt;a href="#" class=""&gt;a message&lt;/a&gt;\'</span>\n});\n\n<span class="comment">// or just use "success", "info", "warning" or "danger" shortcut methods:</span>\n<span class="keyword">var</span> myToastMsg <span class="keyword operator">=</span> ngToast.<span class="function call">warning</span>({\n  content: <span class="string">\'&lt;a href="#" class=""&gt;a message&lt;/a&gt;\'</span>\n});\n\n<span class="comment">// to clear a toast:</span>\nngToast.<span class="function call">dismiss</span>(myToastMsg);\n\n<span class="comment">// clear all toasts:</span>\nngToast.<span class="function call">dismiss</span>();\n</code></pre>\n    <h2>\n     <a class="anchor" href="#settings" name="settings">\n      <span class="octicon octicon-link">\n      </span>\n     </a>\n     Settings\n    </h2>\n    <table>\n     <tbody>\n      <tr>\n       <th>\n        Property\n       </th>\n       <th>\n        Default\n       </th>\n       <th>\n        Description\n       </th>\n      </tr>\n      <tr>\n       <td>\n        <strong>\n         content\n        </strong>\n       </td>\n       <td>\n        \'\'\n       </td>\n       <td>\n        Content of the toast message as string (HTML is supported).\n        <em>\n         (string)\n        </em>\n       </td>\n      </tr>\n      <tr>\n       <td>\n        <strong>\n         className\n        </strong>\n       </td>\n       <td>\n        \'success\'\n       </td>\n       <td>\n        Class name to be added on toast message with \'alert-\' prefix. See\n        <a href="http://getbootstrap.com/components/#alerts" target="_blank">\n         Bootstrap Alerts\n        </a>\n        for possible options.\n        <em>\n         (string)\n        </em>\n       </td>\n      </tr>\n      <tr>\n       <td>\n        <strong>\n         dismissOnTimeout\n        </strong>\n       </td>\n       <td>\n        true\n       </td>\n       <td>\n        Allows toast messages to be removed automatically after a specified time.\n        <em>\n         (boolean)\n        </em>\n       </td>\n      </tr>\n      <tr>\n       <td>\n        <strong>\n         timeout\n        </strong>\n       </td>\n       <td>\n        4000\n       </td>\n       <td>\n        Wait time for removal of created toast message.\n        <em>\n         (number)\n        </em>\n       </td>\n      </tr>\n      <tr>\n       <td>\n        <strong>\n         dismissButton\n        </strong>\n       </td>\n       <td>\n        false\n       </td>\n       <td>\n        Appends specified close button on toast message.\n        <em>\n         (boolean)\n        </em>\n       </td>\n      </tr>\n      <tr>\n       <td>\n        <strong>\n         dismissButtonHtml\n        </strong>\n       </td>\n       <td>\n        \'&amp;times;\'\n       </td>\n       <td>\n        HTML of close button to append.\n        <em>\n         (string)\n        </em>\n       </td>\n      </tr>\n      <tr>\n       <td>\n        <strong>\n         dismissOnClick\n        </strong>\n       </td>\n       <td>\n        true\n       </td>\n       <td>\n        Allows toasts messages to be removed on mouse click.\n        <em>\n         (boolean)\n        </em>\n       </td>\n      </tr>\n      <tr>\n       <td>\n        <strong>\n         onDismiss\n        </strong>\n       </td>\n       <td>\n        null\n       </td>\n       <td>\n        A callback that will be triggered whenever a toast message is dismissed. Context of the function will be the message object.\n        <em>\n         (function)\n        </em>\n       </td>\n      </tr>\n      <tr>\n       <td>\n        <strong>\n         compileContent\n        </strong>\n       </td>\n       <td>\n        false\n       </td>\n       <td>\n        Re-compiles the toast message content within parent (or given) scope. Needs to be used with\n        <a href="https://docs.angularjs.org/api/ng/service/$sce#trustAsHtml" target="_blank">\n         trusted HTML\n        </a>\n        content. See\n        <a href="https://github.com/tameraydin/ngToast/issues/14#issuecomment-67718318" target="_blank">\n         here\n        </a>\n        for more information.\n        <em>\n         (boolean|object)\n        </em>\n       </td>\n      </tr>\n      <tr>\n       <td>\n        <strong>\n         animation*\n        </strong>\n       </td>\n       <td>\n        \'\'\n       </td>\n       <td>\n        Built-in animation type for toast messages: \'slide\' or \'fade\'\n        <em>\n         (string)\n        </em>\n       </td>\n      </tr>\n      <tr>\n       <td>\n        <strong>\n         additionalClasses*\n        </strong>\n       </td>\n       <td>\n        \'\'\n       </td>\n       <td>\n        Additional class name(s) to add toast messages.\n        <em>\n         (string)\n        </em>\n       </td>\n      </tr>\n      <tr>\n       <td>\n        <strong>\n         horizontalPosition*\n        </strong>\n       </td>\n       <td>\n        \'right\'\n       </td>\n       <td>\n        Horizontal position of toast messages: \'right\', \'left\' or \'center\'\n        <em>\n         (string)\n        </em>\n       </td>\n      </tr>\n      <tr>\n       <td>\n        <strong>\n         verticalPosition*\n        </strong>\n       </td>\n       <td>\n        \'top\'\n       </td>\n       <td>\n        Vertical position of toast messages: \'top\' or \'bottom\'\n        <em>\n         (string)\n        </em>\n       </td>\n      </tr>\n      <tr>\n       <td>\n        <strong>\n         maxNumber*\n        </strong>\n       </td>\n       <td>\n        0\n       </td>\n       <td>\n        Maximum number of toast messages to display. (0 = no limit)\n        <em>\n         (number)\n        </em>\n       </td>\n      </tr>\n      <tr>\n       <td>\n        <strong>\n         combineDuplications*\n        </strong>\n       </td>\n       <td>\n        false\n       </td>\n       <td>\n        If enabled, toast messages with the same content &amp; type will be merged and the count number will be displayed at the beginning of message.\n        <em>\n         (boolean)\n        </em>\n       </td>\n      </tr>\n      <tr>\n       <td>\n        <strong>\n         newestOnTop*\n        </strong>\n       </td>\n       <td>\n        true\n       </td>\n       <td>\n        Adds newly created toast messages on top of old ones.\n        <em>\n         (boolean)\n        </em>\n       </td>\n      </tr>\n     </tbody>\n    </table>\n    <small class="note">\n     <strong>\n      *\n     </strong>\n     Available only at\n     <a href="https://github.com/tameraydin/ngToast/issues/10#issuecomment-64061276" target="_blank">\n      configuration level\n     </a>\n     . Rest of setting properties can be overwritten at individual toast message.\n    </small>\n    <h2>\n     <a class="anchor" href="#license" name="license">\n      <span class="octicon octicon-link">\n      </span>\n     </a>\n     License\n    </h2>\n    <p>\n     MIT\n     <a href="http://tameraydin.mit-license.org/">\n      http://tameraydin.mit-license.org/\n     </a>\n    </p>\n   </section>\n   <footer>\n    <p>\n     This project is maintained by\n     <a href="http://tamerayd.in">\n      Tamer Aydin\n     </a>\n    </p>\n    <p>\n     <small>\n      Hosted on GitHub Pages \xe2\x80\x94 Theme by\n      <a href="https://github.com/orderedlist">\n       orderedlist\n      </a>\n     </small>\n    </p>\n   </footer>\n  </div>\n  <script src="javascripts/scale.fix.js">\n  </script>\n  <!-- bower:js -->\n  <script src="bower_components/jquery/dist/jquery.js">\n  </script>\n  <script src="bower_components/angular/angular.js">\n  </script>\n  <script src="bower_components/bootstrap/dist/js/bootstrap.js">\n  </script>\n  <script src="bower_components/angular-animate/angular-animate.js">\n  </script>\n  <script src="bower_components/angular-sanitize/angular-sanitize.js">\n  </script>\n  <script src="bower_components/ngtoast/dist/ngToast.min.js">\n  </script>\n  <!-- endbower -->\n  <script src="http://cdnjs.cloudflare.com/ajax/libs/rainbow/1.2.0/js/rainbow.min.js">\n  </script>\n  <script src="http://cdnjs.cloudflare.com/ajax/libs/rainbow/1.1.8/js/language/generic.min.js">\n  </script>\n  <script src="http://cdnjs.cloudflare.com/ajax/libs/rainbow/1.1.8/js/language/html.js">\n  </script>\n  <script src="http://cdnjs.cloudflare.com/ajax/libs/rainbow/1.1.8/js/language/javascript.js">\n  </script>\n  <script src="http://cdnjs.cloudflare.com/ajax/libs/rainbow/1.1.8/js/language/css.js">\n  </script>\n  <script src="javascripts/app.js">\n  </script>\n </body>\n</html>'